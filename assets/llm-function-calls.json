[
  {
    "name": "shoppings_customers_deposits_charges_post",
    "method": "post",
    "path": "/shoppings/customers/deposits/charges",
    "description": "Create a new deposit charge application.\n\nCreate a new {@link IShoppingDepositCharge deposit charge application}.\n\nBy the way, this function does not mean completion the deposit charge, but\nmeans just {@link IShoppingCustomer customer} is applying the deposit charge.\nThe deposit charge be completed only when customer\n{@link IShoppingDepositChargePublish.publish pay} the deposit charge.",
    "parameters": {
      "type": "object",
      "properties": {
        "body": {
          "type": "object",
          "properties": {
            "value": {
              "type": "number"
            }
          },
          "required": [
            "value"
          ]
        }
      },
      "additionalProperties": false,
      "required": [
        "body"
      ]
    },
    "output": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "customer": {
          "description": "Customer information, but not a person but a connection basis.\n\n`IShoppingCustomer` is an entity that literally embodies the information of\nthose who participated in the market as customers. By the way, the\n`IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\neven if the same person connects to the shopping mall multiple, multiple\nrecords are created in `IShoppingCustomer`.\n\nThe first purpose of this is to track the customer's inflow path in detail,\nand it is for cases where the same person enters as a non-member,\n{@link IShoppingCartCommodity puts items in the shopping cart} in advance,\nand only authenticates their {@link IShoppingCitizen real name} or\nregisters/logs in at the moment of {@link IShoppingOrderPublish payment}.\nIt is the second. Lastly, it is to accurately track the activities that\na person performs at the shopping mall in various ways like below.\n\n- Same person comes from an {@link IShoppingExternalUser external service}\n- Same person creates multiple accounts\n- Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n- Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n\nTherefore, `IShoppingCustomer` can have multiple records with the same\n{@link IShoppingCitizen}, {@link IShoppingMember}, and\n{@link IShoppingExternalUser}. Additionally, if a customer signs up for\nmembership after verifying their real name or signs up for our service after\nbeing a user of an external service, all related records are changed at once.\nTherefore, identification and tracking of customers can be done very\nsystematically.",
          "type": "object",
          "properties": {
            "type": {
              "title": "Discriminant for the type of customer",
              "description": "Discriminant for the type of customer.",
              "const": "customer"
            },
            "member": {
              "title": "Membership information",
              "description": "Membership information.\n\nIf the customer has joined as a member.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "object",
                  "properties": {
                    "citizen": {
                      "title": "Citizen information",
                      "description": "Citizen information.\n\nOnly when has verified as a citizen, with mobile number and real name.\n\nFor reference, if the member has signed up as a seller or administrator,\nthis citizen information must be.",
                      "oneOf": [
                        {
                          "type": "null"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "title": "Primary Key",
                              "description": "Primary Key.",
                              "type": "string",
                              "format": "uuid"
                            },
                            "created_at": {
                              "title": "Creation time of record",
                              "description": "Creation time of record.",
                              "type": "string",
                              "format": "date-time"
                            },
                            "mobile": {
                              "title": "Mobile number",
                              "description": "Mobile number.",
                              "x-wrtn-payment-order-mobile": true,
                              "type": "string",
                              "pattern": "^[0-9]*$"
                            },
                            "name": {
                              "title": "Real name, or equivalent nickname",
                              "description": "Real name, or equivalent nickname.",
                              "x-wrtn-payment-order-citizen": true,
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "created_at",
                            "mobile",
                            "name"
                          ],
                          "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile} input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                        }
                      ]
                    },
                    "seller": {
                      "title": "Seller information",
                      "description": "Seller information.\n\nIf the member also signed up as a seller.",
                      "oneOf": [
                        {
                          "type": "null"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "title": "Primary Key",
                              "description": "Primary Key.",
                              "type": "string",
                              "format": "uuid"
                            },
                            "created_at": {
                              "title": "Creation tmie of record",
                              "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up.",
                              "type": "string",
                              "format": "date-time"
                            }
                          },
                          "required": [
                            "id",
                            "created_at"
                          ],
                          "description": "Seller information.\n\n`IShoppingSeller` is an entity that embodies a person who registers\n{@link IShoppingSale sales} to operate selling activities, with\n{@link IShoppingMember membership} joining.\n\nFor reference, unlike {@link IShoppingCustomer customers} which can\nparticipate even without membership joining, seller must join membership\nto operate sales. Also, seller must do the\n{@link IShoppingCitizen real-name and mobile authentication}, too."
                        }
                      ]
                    },
                    "administrator": {
                      "title": "Administrator information",
                      "description": "Administrator information.\n\nIf the member also signed up as an administrator.",
                      "oneOf": [
                        {
                          "type": "null"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "title": "Primary Key",
                              "description": "Primary Key.",
                              "type": "string",
                              "format": "uuid"
                            },
                            "created_at": {
                              "title": "Creation time of record",
                              "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up.",
                              "type": "string",
                              "format": "date-time"
                            }
                          },
                          "required": [
                            "id",
                            "created_at"
                          ],
                          "description": "Administrator account.\n\n`IShoppingAdministrator` is an entity that embodies a person who manages\nthe shopping mall system, with {@link IShoppingMember membership} joining.\n\nFor reference, unlike {@link IShoppingCustomer customers} which can participate\neven without membership joining, administrator must join membership to operate\nmanagements. Also, administrator must perform the\n{@link IShoppingCitizen real-name and mobile authentication}, too."
                        }
                      ]
                    },
                    "id": {
                      "title": "Primary Key",
                      "description": "Primary Key.",
                      "type": "string",
                      "format": "uuid"
                    },
                    "nickname": {
                      "title": "Nickname that uniquely identifies the member",
                      "description": "Nickname that uniquely identifies the member.",
                      "type": "string"
                    },
                    "emails": {
                      "title": "List of emails",
                      "description": "List of emails.",
                      "type": "array",
                      "items": {
                        "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "title": "Primary Key",
                            "description": "Primary Key.",
                            "type": "string",
                            "format": "uuid"
                          },
                          "value": {
                            "title": "Email address value",
                            "description": "Email address value.",
                            "type": "string",
                            "format": "email"
                          },
                          "created_at": {
                            "title": "Creation time of record",
                            "description": "Creation time of record.",
                            "type": "string",
                            "format": "date-time"
                          }
                        },
                        "required": [
                          "id",
                          "value",
                          "created_at"
                        ]
                      }
                    },
                    "created_at": {
                      "title": "Creation time of record",
                      "description": "Creation time of record.\n\nAnother words, the time when the member has signed up.",
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "required": [
                    "citizen",
                    "seller",
                    "administrator",
                    "id",
                    "nickname",
                    "emails",
                    "created_at"
                  ],
                  "description": "Member Account.\n\n`IShoppingMember` is an entity that symbolizes the case when a\n{@link IShoppingCustomer} signs up as a member of this shopping mall\nsystem.\n\nIf a `IShoppingMember` has seller or administrator property. it means that\nthe {@link IShoppingCustomer} has acting as a {@link IShoppingSeller seller}\nor {@link IShoppingAdministrator administrator} at the same time."
                }
              ]
            },
            "citizen": {
              "title": "Citizen information",
              "description": "Citizen information.\n\nIf the customer has verified his real name and mobile number.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "Primary Key",
                      "description": "Primary Key.",
                      "type": "string",
                      "format": "uuid"
                    },
                    "created_at": {
                      "title": "Creation time of record",
                      "description": "Creation time of record.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "mobile": {
                      "title": "Mobile number",
                      "description": "Mobile number.",
                      "x-wrtn-payment-order-mobile": true,
                      "type": "string",
                      "pattern": "^[0-9]*$"
                    },
                    "name": {
                      "title": "Real name, or equivalent nickname",
                      "description": "Real name, or equivalent nickname.",
                      "x-wrtn-payment-order-citizen": true,
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "created_at",
                    "mobile",
                    "name"
                  ],
                  "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile} input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                }
              ]
            },
            "id": {
              "title": "Primary Key",
              "description": "Primary Key.",
              "type": "string",
              "format": "uuid"
            },
            "channel": {
              "title": "Belonged channel",
              "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future.",
              "type": "object",
              "properties": {
                "id": {
                  "title": "Primary Key",
                  "description": "Primary Key.",
                  "type": "string",
                  "format": "uuid"
                },
                "created_at": {
                  "title": "Creation time of record",
                  "description": "Creation time of record.",
                  "type": "string",
                  "format": "date-time"
                },
                "code": {
                  "title": "Identifier code",
                  "description": "Identifier code.",
                  "type": "string"
                },
                "name": {
                  "title": "Name of the channel",
                  "description": "Name of the channel.",
                  "type": "string"
                }
              },
              "required": [
                "id",
                "created_at",
                "code",
                "name"
              ]
            },
            "external_user": {
              "title": "External user information",
              "description": "External user information.\n\nWhen the customer has come frome an external service.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "Primary Key",
                      "description": "Primary Key.",
                      "type": "string",
                      "format": "uuid"
                    },
                    "citizen": {
                      "title": "Citizen activation info",
                      "description": "Citizen activation info.",
                      "oneOf": [
                        {
                          "type": "null"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "title": "Primary Key",
                              "description": "Primary Key.",
                              "type": "string",
                              "format": "uuid"
                            },
                            "created_at": {
                              "title": "Creation time of record",
                              "description": "Creation time of record.",
                              "type": "string",
                              "format": "date-time"
                            },
                            "mobile": {
                              "title": "Mobile number",
                              "description": "Mobile number.",
                              "x-wrtn-payment-order-mobile": true,
                              "type": "string",
                              "pattern": "^[0-9]*$"
                            },
                            "name": {
                              "title": "Real name, or equivalent nickname",
                              "description": "Real name, or equivalent nickname.",
                              "x-wrtn-payment-order-citizen": true,
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "created_at",
                            "mobile",
                            "name"
                          ],
                          "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile} input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                        }
                      ]
                    },
                    "created_at": {
                      "title": "Creation time of record",
                      "description": "Creation time of record.\n\nAnother word, first time when the external user connected.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "uid": {
                      "title": "Identifier key of external user from the external system",
                      "description": "Identifier key of external user from the external system.",
                      "type": "string"
                    },
                    "application": {
                      "title": "Identifier code of the external service",
                      "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code} in common.",
                      "type": "string"
                    },
                    "nickname": {
                      "title": "Nickname of external user in the external system",
                      "description": "Nickname of external user in the external system.",
                      "type": "string"
                    },
                    "data": {
                      "description": "Additional information about external user from the external\nsystem."
                    }
                  },
                  "required": [
                    "id",
                    "citizen",
                    "created_at",
                    "uid",
                    "application",
                    "nickname",
                    "data"
                  ],
                  "description": "External user information.\n\n`IShoppingExternalUser` is an entity dsigned for when this system needs\nto connect with external services and welcome their users as\n{@link IShoppingCustomer customers} of this service.\n\nFor reference, customers who connect from an external service must have\nthis record, and the external service user is identified through the two\nattributes {@link application} and {@link uid}. If a customer connected\nfrom an external service completes\n{@link IShoppingCitizen real-name authentication} from this service, each\ntime the external service user reconnects to this service and issues a\nnew customer authentication token, real-name authentication begins with\ncompleted.\n\nAnd {@link password} is the password issued to the user by the external\nservice system (the so-called permanent user authentication token), and\nis never the actual user password. However, for customers who entered the\nsame application and uid as the current external system user, this is to\ndetermine whether to view this as a correct external system user or a\nviolation.\n\nIn addition, additional information received from external services can\nbe recorded in the data field in JSON format."
                }
              ]
            },
            "href": {
              "title": "Connection address",
              "description": "Connection address.\n\nSame with {@link window.location.href} of client.",
              "type": "string",
              "format": "uri"
            },
            "referrer": {
              "title": "Referrer address",
              "description": "Referrer address.\n\nSame with {@link window.document.referrer} of client.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "uri"
                },
                {
                  "type": "string",
                  "maxLength": 0
                }
              ]
            },
            "ip": {
              "title": "Connection IP Address",
              "description": "Connection IP Address.",
              "oneOf": [
                {
                  "type": "string",
                  "format": "ipv4"
                },
                {
                  "type": "string",
                  "format": "ipv6"
                }
              ]
            },
            "created_at": {
              "title": "Creation time of the connection record",
              "description": "Creation time of the connection record.",
              "type": "string",
              "format": "date-time"
            }
          },
          "required": [
            "type",
            "member",
            "citizen",
            "id",
            "channel",
            "external_user",
            "href",
            "referrer",
            "ip",
            "created_at"
          ]
        },
        "publish": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time"
                },
                "paid_at": {
                  "oneOf": [
                    {
                      "type": "null"
                    },
                    {
                      "type": "string",
                      "format": "date-time"
                    }
                  ]
                },
                "cancelled_at": {
                  "oneOf": [
                    {
                      "type": "null"
                    },
                    {
                      "type": "string",
                      "format": "date-time"
                    }
                  ]
                }
              },
              "required": [
                "id",
                "created_at",
                "paid_at",
                "cancelled_at"
              ]
            }
          ]
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "value": {
          "type": "number"
        }
      },
      "required": [
        "id",
        "customer",
        "publish",
        "created_at",
        "value"
      ]
    },
    "success": true,
    "arguments": {
      "type": {
        "host": "http://127.0.0.1:37001",
        "headers": {
          "Authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0YWJsZSI6InNob3BwaW5nX2N1c3RvbWVycyIsImlkIjoiMjVlYzg3ZjctODE1ZC00YjU3LTk1NzYtYzk1Mzk4NGJjMjhmIiwicmVhZG9ubHkiOmZhbHNlLCJleHBpcmVkX2F0IjoiMjAyNC0xMi0xM1QwOTo0MjoxMi41MzlaIiwicmVmcmVzaGFibGVfdW50aWwiOiIyMDI0LTEyLTI3VDA2OjQyOjEyLjUzOVoiLCJpYXQiOjE3MzQwNzIxMzJ9.zWZrU-d1bSW-MawmSo2RYRPk_73xtR_PxfFUrEpDJkc"
        }
      },
      "properties": {
        "value": 200000
      }
    },
    "value": {
      "id": "1e87fbea-3db0-4365-913c-56d8dfae1407",
      "customer": {
        "type": "customer",
        "member": {
          "citizen": {
            "id": "552ac832-7852-48ae-9919-95e07bb53c4a",
            "created_at": "2024-12-13T06:42:12.562Z",
            "mobile": "01011387079",
            "name": "agijp mgqjxv"
          },
          "seller": null,
          "administrator": null,
          "id": "91711abe-14a6-4b3e-8a09-b86f1eaef7a5",
          "nickname": "yequwvg czzid",
          "emails": [
            {
              "id": "65eeceda-1a74-424c-96c0-713855c89cb2",
              "value": "5fiouhttyq7e170v@nestia.io",
              "created_at": "2024-12-13T06:42:12.624Z"
            }
          ],
          "created_at": "2024-12-13T06:42:12.624Z"
        },
        "citizen": {
          "id": "552ac832-7852-48ae-9919-95e07bb53c4a",
          "created_at": "2024-12-13T06:42:12.562Z",
          "mobile": "01011387079",
          "name": "agijp mgqjxv"
        },
        "id": "25ec87f7-815d-4b57-9576-c953984bc28f",
        "channel": {
          "id": "2323f4bd-21ad-45b7-ae3b-cadd84dcc935",
          "created_at": "2024-12-13T06:42:10.908Z",
          "code": "samchon",
          "name": "Samchon Shopping Mall"
        },
        "external_user": null,
        "href": "http://127.0.0.1/TestAutomation",
        "referrer": "http://127.0.0.1/NodeJS",
        "ip": "127.0.0.1",
        "created_at": "2024-12-13T06:42:12.535Z"
      },
      "publish": null,
      "created_at": "2024-12-13T06:42:12.807Z",
      "value": 200000
    }
  },
  {
    "name": "shoppings_customers_deposits_charges_publish_postByChargeid",
    "method": "post",
    "path": "/shoppings/customers/deposits/charges/{chargeId}/publish",
    "description": "Publish a charge.\n\n{@link IShoppingDepositChargePublish Publish} a\n{@link IShoppingDepositCharge charge} that has been applied by the\n{@link IShoppingCustomer} with payment information gotten from the\npayment vendor system.\n\nAlso, the payment time can be different with the publish time. For example,\nif the payment method is manual bank account transfer, then the payment\nwould be delayed until the customer actually transfer the money. In that\ncase, {@link IShoppingDepositChargePublish.paid_at} would be `null` value,\nso that you have to check it after calling this publish function.",
    "parameters": {
      "type": "object",
      "properties": {
        "chargeId": {
          "description": " Target charge's {@link IShoppingDepositCharge.id }",
          "type": "string",
          "format": "uuid"
        },
        "body": {
          "type": "object",
          "properties": {
            "vendor": {
              "type": "string"
            },
            "uid": {
              "type": "string"
            }
          },
          "required": [
            "vendor",
            "uid"
          ]
        }
      },
      "additionalProperties": false,
      "required": [
        "chargeId",
        "body"
      ]
    },
    "output": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "paid_at": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "type": "string",
              "format": "date-time"
            }
          ]
        },
        "cancelled_at": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "type": "string",
              "format": "date-time"
            }
          ]
        }
      },
      "required": [
        "id",
        "created_at",
        "paid_at",
        "cancelled_at"
      ]
    },
    "success": true,
    "arguments": {
      "type": {
        "host": "http://127.0.0.1:37001",
        "headers": {
          "Authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0YWJsZSI6InNob3BwaW5nX2N1c3RvbWVycyIsImlkIjoiMjVlYzg3ZjctODE1ZC00YjU3LTk1NzYtYzk1Mzk4NGJjMjhmIiwicmVhZG9ubHkiOmZhbHNlLCJleHBpcmVkX2F0IjoiMjAyNC0xMi0xM1QwOTo0MjoxMi41MzlaIiwicmVmcmVzaGFibGVfdW50aWwiOiIyMDI0LTEyLTI3VDA2OjQyOjEyLjUzOVoiLCJpYXQiOjE3MzQwNzIxMzJ9.zWZrU-d1bSW-MawmSo2RYRPk_73xtR_PxfFUrEpDJkc"
        }
      },
      "properties": "1e87fbea-3db0-4365-913c-56d8dfae1407",
      "additionalProperties": {
        "vendor": "Shinhan Bank",
        "uid": "8689e222-6a2f-4659-8179-1e4a9a104cb5"
      }
    },
    "value": {
      "id": "0de776ad-7cd8-4701-b374-2f9bc137bfa1",
      "created_at": "2024-12-13T06:42:12.822Z",
      "paid_at": "2024-12-13T06:42:12.822Z",
      "cancelled_at": null
    }
  },
  {
    "name": "shoppings_customers_sales_patch",
    "method": "patch",
    "path": "/shoppings/customers/sales",
    "description": "List up every summarized sales.\n\nList up every {@link IShoppingSale.ISummary summarized sales}.\n\nAs you can see, returned sales are summarized, not detailed. If you want\nto get the detailed information of a sale, use {@link at} function for\neach sale.\n\nFor reference, if you're a {@link IShoppingSeller seller}, you can only\naccess to the your own {@link IShoppingSale sale}s. Otherwise you're a\n{@link IShoppingCustomer customer}, you can see only the operating\nsales in the market. You can't see the unopened, closed, or suspended\nsales.\n\nBy the way, if you want, you can limit the result by configuring\n{@link IShoppingSale.IRequest.search search condition} in the request\nbody. Also, it is possible to customize sequence order of records by\nconfiguring {@link IShoppingSale.IRequest.sort sort condition}.",
    "parameters": {
      "type": "object",
      "properties": {
        "body": {
          "description": "Request of summarized sales with pagination and searching/sorting options.\n\n------------------------------\n\nDescription of the current {@link IShoppingSale.IRequest} type:\n\n> Request of summarized sales with pagination and searching/sorting options.\n\n------------------------------\n\nDescription of the parent {@link IShoppingSale} type:\n\n> Seller sales products.\n> \n> `IShoppingSale` is an entity that embodies \"product sales\" (sales)\n> information registered by the {@link ISoppingSeller seller}. And the main\n> information of the sale is recorded in the sub {@link IShoppingSaleSnapshot},\n> not in the main `IShoppingSale`. When a seller changes a previously registered\n> item, the existing `IShoppingSale` record is not changed, but a new\n> {@link IShoppingSaleSnapshot snapshot} record be created.\n> \n> This is to preserve the {@link IShoppingCustomer customer}'s\n> {@link IShoppingOrder purchase history} flawlessly after the customer\n> purchases a specific item, even if the seller changes the components or\n> price of the item. It is also intended to support sellers in so-called A/B\n> testing, which involves changing components or prices and measuring the\n> performance in each case.",
          "type": "object",
          "properties": {
            "search": {
              "title": "Search conditions",
              "description": "Search conditions.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "object",
                  "properties": {
                    "show_paused": {
                      "oneOf": [
                        {
                          "type": "null"
                        },
                        {
                          "type": "boolean"
                        }
                      ]
                    },
                    "show_suspended": {
                      "oneOf": [
                        {
                          "type": "null"
                        },
                        {
                          "const": "only"
                        },
                        {
                          "type": "boolean"
                        }
                      ]
                    },
                    "title": {
                      "oneOf": [
                        {
                          "type": "null"
                        },
                        {
                          "type": "string"
                        }
                      ]
                    },
                    "content": {
                      "oneOf": [
                        {
                          "type": "null"
                        },
                        {
                          "type": "string"
                        }
                      ]
                    },
                    "title_or_content": {
                      "oneOf": [
                        {
                          "type": "null"
                        },
                        {
                          "type": "string"
                        }
                      ]
                    },
                    "price": {
                      "oneOf": [
                        {
                          "type": "null"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "minimum": {
                              "oneOf": [
                                {
                                  "type": "null"
                                },
                                {
                                  "type": "number"
                                }
                              ]
                            },
                            "maximum": {
                              "oneOf": [
                                {
                                  "type": "null"
                                },
                                {
                                  "type": "number"
                                }
                              ]
                            }
                          },
                          "required": [
                            "minimum",
                            "maximum"
                          ],
                          "description": "Description of the current {@link IShoppingPrice} type:\n\n> Shopping price interface."
                        }
                      ]
                    },
                    "review": {
                      "oneOf": [
                        {
                          "type": "null"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "score": {
                              "oneOf": [
                                {
                                  "type": "null"
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "minimum": {
                                      "oneOf": [
                                        {
                                          "type": "null"
                                        },
                                        {
                                          "type": "number",
                                          "minimum": 0,
                                          "maximum": 100
                                        }
                                      ]
                                    },
                                    "maximum": {
                                      "oneOf": [
                                        {
                                          "type": "null"
                                        },
                                        {
                                          "type": "number",
                                          "minimum": 0,
                                          "maximum": 100
                                        }
                                      ]
                                    }
                                  },
                                  "required": [
                                    "minimum",
                                    "maximum"
                                  ],
                                  "description": "Description of the current {@link IShoppingSaleReview} type:\n\n> Reviews for sale snapshots.\n> \n> `IShoppingSaleReview` is a subtype entity of {@link IShoppingSaleInquiry},\n> and is used when a {@link IShoppingCustomer customer} purchases a\n> {@link IShoppingSale sale} ({@link IShoppingSaleSnapshot snapshot} at the time)\n> registered by the {@link IShoppingSeller seller} as a product and leaves a\n> review and rating for it.\n> \n> For reference, `IShoppingSaleReview` and\n> {@link IShoppingOrderGod shopping_order_goods} have a logarithmic relationship\n> of N: 1, but this does not mean that customers can continue to write reviews\n> for the same product indefinitely. Wouldn't there be restrictions, such as\n> if you write a review once, you can write an additional review a month later?"
                                }
                              ]
                            },
                            "count": {
                              "oneOf": [
                                {
                                  "type": "null"
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "minimum": {
                                      "oneOf": [
                                        {
                                          "type": "null"
                                        },
                                        {
                                          "type": "integer"
                                        }
                                      ]
                                    },
                                    "maximum": {
                                      "oneOf": [
                                        {
                                          "type": "null"
                                        },
                                        {
                                          "type": "integer"
                                        }
                                      ]
                                    }
                                  },
                                  "required": [
                                    "minimum",
                                    "maximum"
                                  ],
                                  "description": "Description of the current {@link IShoppingSaleReview} type:\n\n> Reviews for sale snapshots.\n> \n> `IShoppingSaleReview` is a subtype entity of {@link IShoppingSaleInquiry},\n> and is used when a {@link IShoppingCustomer customer} purchases a\n> {@link IShoppingSale sale} ({@link IShoppingSaleSnapshot snapshot} at the time)\n> registered by the {@link IShoppingSeller seller} as a product and leaves a\n> review and rating for it.\n> \n> For reference, `IShoppingSaleReview` and\n> {@link IShoppingOrderGod shopping_order_goods} have a logarithmic relationship\n> of N: 1, but this does not mean that customers can continue to write reviews\n> for the same product indefinitely. Wouldn't there be restrictions, such as\n> if you write a review once, you can write an additional review a month later?"
                                }
                              ]
                            }
                          },
                          "required": [
                            "score",
                            "count"
                          ],
                          "description": "Description of the current {@link IShoppingSaleReview} type:\n\n> Reviews for sale snapshots.\n> \n> `IShoppingSaleReview` is a subtype entity of {@link IShoppingSaleInquiry},\n> and is used when a {@link IShoppingCustomer customer} purchases a\n> {@link IShoppingSale sale} ({@link IShoppingSaleSnapshot snapshot} at the time)\n> registered by the {@link IShoppingSeller seller} as a product and leaves a\n> review and rating for it.\n> \n> For reference, `IShoppingSaleReview` and\n> {@link IShoppingOrderGod shopping_order_goods} have a logarithmic relationship\n> of N: 1, but this does not mean that customers can continue to write reviews\n> for the same product indefinitely. Wouldn't there be restrictions, such as\n> if you write a review once, you can write an additional review a month later?"
                        }
                      ]
                    },
                    "section_codes": {
                      "oneOf": [
                        {
                          "type": "null"
                        },
                        {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      ]
                    },
                    "channel_codes": {
                      "oneOf": [
                        {
                          "type": "null"
                        },
                        {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      ]
                    },
                    "channel_category_ids": {
                      "oneOf": [
                        {
                          "type": "null"
                        },
                        {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      ]
                    },
                    "tags": {
                      "oneOf": [
                        {
                          "type": "null"
                        },
                        {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      ]
                    },
                    "seller": {
                      "oneOf": [
                        {
                          "type": "null"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "oneOf": [
                                {
                                  "type": "null"
                                },
                                {
                                  "type": "string",
                                  "format": "uuid"
                                }
                              ]
                            },
                            "mobile": {
                              "oneOf": [
                                {
                                  "type": "null"
                                },
                                {
                                  "type": "string",
                                  "pattern": "^[0-9]*$"
                                }
                              ]
                            },
                            "name": {
                              "oneOf": [
                                {
                                  "type": "null"
                                },
                                {
                                  "type": "string"
                                }
                              ]
                            },
                            "email": {
                              "oneOf": [
                                {
                                  "type": "null"
                                },
                                {
                                  "type": "string",
                                  "format": "email"
                                }
                              ]
                            },
                            "nickname": {
                              "oneOf": [
                                {
                                  "type": "null"
                                },
                                {
                                  "type": "string"
                                }
                              ]
                            }
                          },
                          "required": [
                            "id",
                            "mobile",
                            "name",
                            "email",
                            "nickname"
                          ],
                          "description": "Description of the current {@link IShoppingSeller} type:\n\n> Seller information.\n> \n> `IShoppingSeller` is an entity that embodies a person who registers\n> {@link IShoppingSale sales} to operate selling activities, with\n> {@link IShoppingMember membership} joining.\n> \n> For reference, unlike {@link IShoppingCustomer customers} which can\n> participate even without membership joining, seller must join membership\n> to operate sales. Also, seller must do the\n> {@link IShoppingCitizen real-name and mobile authentication}, too."
                        }
                      ]
                    }
                  },
                  "required": [
                    "show_paused",
                    "show_suspended",
                    "title",
                    "content",
                    "title_or_content",
                    "price",
                    "review",
                    "section_codes",
                    "channel_codes",
                    "channel_category_ids",
                    "tags",
                    "seller"
                  ],
                  "description": "Description of the current {@link IShoppingSale.IRequest} type:\n\n> Request of summarized sales with pagination and searching/sorting options.\n\n------------------------------\n\nDescription of the parent {@link IShoppingSale} type:\n\n> Seller sales products.\n> \n> `IShoppingSale` is an entity that embodies \"product sales\" (sales)\n> information registered by the {@link ISoppingSeller seller}. And the main\n> information of the sale is recorded in the sub {@link IShoppingSaleSnapshot},\n> not in the main `IShoppingSale`. When a seller changes a previously registered\n> item, the existing `IShoppingSale` record is not changed, but a new\n> {@link IShoppingSaleSnapshot snapshot} record be created.\n> \n> This is to preserve the {@link IShoppingCustomer customer}'s\n> {@link IShoppingOrder purchase history} flawlessly after the customer\n> purchases a specific item, even if the seller changes the components or\n> price of the item. It is also intended to support sellers in so-called A/B\n> testing, which involves changing components or prices and measuring the\n> performance in each case."
                }
              ]
            },
            "sort": {
              "title": "Sorting conditions",
              "description": "Sorting conditions.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "const": "-seller.created_at"
                      },
                      {
                        "const": "-seller.goods.payments.real"
                      },
                      {
                        "const": "-seller.goods.publish_count"
                      },
                      {
                        "const": "-seller.reviews.average"
                      },
                      {
                        "const": "-seller.reviews.count"
                      },
                      {
                        "const": "-goods.publish_count"
                      },
                      {
                        "const": "-goods.payments.real"
                      },
                      {
                        "const": "-reviews.average"
                      },
                      {
                        "const": "-reviews.count"
                      },
                      {
                        "const": "-sale.created_at"
                      },
                      {
                        "const": "-sale.updated_at"
                      },
                      {
                        "const": "-sale.opened_at"
                      },
                      {
                        "const": "-sale.closed_at"
                      },
                      {
                        "const": "-sale.content.title"
                      },
                      {
                        "const": "-sale.price_range.lowest.real"
                      },
                      {
                        "const": "-sale.price_range.highest.real"
                      },
                      {
                        "const": "+seller.created_at"
                      },
                      {
                        "const": "+seller.goods.payments.real"
                      },
                      {
                        "const": "+seller.goods.publish_count"
                      },
                      {
                        "const": "+seller.reviews.average"
                      },
                      {
                        "const": "+seller.reviews.count"
                      },
                      {
                        "const": "+goods.publish_count"
                      },
                      {
                        "const": "+goods.payments.real"
                      },
                      {
                        "const": "+reviews.average"
                      },
                      {
                        "const": "+reviews.count"
                      },
                      {
                        "const": "+sale.created_at"
                      },
                      {
                        "const": "+sale.updated_at"
                      },
                      {
                        "const": "+sale.opened_at"
                      },
                      {
                        "const": "+sale.closed_at"
                      },
                      {
                        "const": "+sale.content.title"
                      },
                      {
                        "const": "+sale.price_range.lowest.real"
                      },
                      {
                        "const": "+sale.price_range.highest.real"
                      }
                    ]
                  }
                }
              ]
            },
            "page": {
              "title": "Page number",
              "description": "Page number.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "limit": {
              "title": "Limitation of records per a page",
              "description": "Limitation of records per a page.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "required": [
            "search",
            "sort",
            "page",
            "limit"
          ]
        }
      },
      "additionalProperties": false,
      "required": [
        "body"
      ],
      "$defs": {
        "IShoppingChannelCategory.IInvert": {
          "description": "Invert category information with parent category.",
          "type": "object",
          "properties": {
            "parent": {
              "title": "Parent category info with recursive structure",
              "description": "Parent category info with recursive structure.\n\nIf no parent exists, then be `null`.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "$ref": "#/$defs/IShoppingChannelCategory.IInvert"
                }
              ]
            },
            "id": {
              "title": "Primary Key",
              "description": "Primary Key.",
              "type": "string",
              "format": "uuid"
            },
            "code": {
              "title": "Identifier code of the category",
              "description": "Identifier code of the category.\n\nThe code must be unique in the channel.",
              "type": "string"
            },
            "parent_id": {
              "title": "Parent category's ID",
              "description": "Parent category's ID.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "name": {
              "title": "Representative name of the category",
              "description": "Representative name of the category.\n\nThe name must be unique within the parent category. If no parent exists,\nthen the name must be unique within the channel between no parent\ncategories.",
              "type": "string"
            },
            "created_at": {
              "title": "Creation time of record",
              "description": "Creation time of record.",
              "type": "string",
              "format": "date-time"
            }
          },
          "required": [
            "parent",
            "id",
            "code",
            "parent_id",
            "name",
            "created_at"
          ]
        }
      }
    },
    "output": {
      "description": "A page.\n\nCollection of records with pagination indformation.\n\n------------------------------\n\nDescription of the current {@link IPageIShoppingSale.ISummary} type:\n\n> A page.\n> \n> Collection of records with pagination indformation.",
      "type": "object",
      "properties": {
        "pagination": {
          "title": "Page information",
          "description": "Page information.\n\n------------------------------\n\nDescription of the current {@link IPage.IPagination} type:\n\n> Page information.",
          "type": "object",
          "properties": {
            "current": {
              "title": "Current page number",
              "description": "Current page number.",
              "type": "integer"
            },
            "limit": {
              "title": "Limitation of records per a page",
              "description": "Limitation of records per a page.",
              "type": "integer"
            },
            "records": {
              "title": "Total records in the database",
              "description": "Total records in the database.",
              "type": "integer"
            },
            "pages": {
              "title": "Total pages",
              "description": "Total pages.\n\nEqual to {@link records} / {@link limit} with ceiling.",
              "type": "integer"
            }
          },
          "required": [
            "current",
            "limit",
            "records",
            "pages"
          ]
        },
        "data": {
          "title": "List of records",
          "description": "List of records.",
          "type": "array",
          "items": {
            "description": "Summarized information of sale.\n\nThis summarized information being used for pagination.\n\n------------------------------\n\nDescription of the current {@link IShoppingSale.ISummary} type:\n\n> Summarized information of sale.\n> \n> This summarized information being used for pagination.\n\n------------------------------\n\nDescription of the parent {@link IShoppingSale} type:\n\n> Seller sales products.\n> \n> `IShoppingSale` is an entity that embodies \"product sales\" (sales)\n> information registered by the {@link ISoppingSeller seller}. And the main\n> information of the sale is recorded in the sub {@link IShoppingSaleSnapshot},\n> not in the main `IShoppingSale`. When a seller changes a previously registered\n> item, the existing `IShoppingSale` record is not changed, but a new\n> {@link IShoppingSaleSnapshot snapshot} record be created.\n> \n> This is to preserve the {@link IShoppingCustomer customer}'s\n> {@link IShoppingOrder purchase history} flawlessly after the customer\n> purchases a specific item, even if the seller changes the components or\n> price of the item. It is also intended to support sellers in so-called A/B\n> testing, which involves changing components or prices and measuring the\n> performance in each case.",
            "type": "object",
            "properties": {
              "section": {
                "title": "Belonged section",
                "description": "Section information.\n\n`IShoppingSection` is a concept that refers to the spatial information of\nthe market.\n\nIf we compare the section mentioned here to the offline market, it means a\nspatially separated area within the store, such as the \"fruit corner\" or\n\"butcher corner\". Therefore, in the {@link IShoppingSale sale} entity, it is\nnot possible to classify multiple sections simultaneously, but only one section\ncan be classified.\n\nBy the way, if your shopping mall system requires only one section, then just\nuse only one. This concept is designed to be expandable in the future.",
                "type": "object",
                "properties": {
                  "id": {
                    "title": "Primary Key",
                    "description": "Primary Key.",
                    "type": "string",
                    "format": "uuid"
                  },
                  "code": {
                    "title": "Identifier code",
                    "description": "Identifier code.",
                    "type": "string"
                  },
                  "name": {
                    "title": "Representative name of the section",
                    "description": "Representative name of the section.",
                    "type": "string"
                  },
                  "created_at": {
                    "title": "Creation time of record",
                    "description": "Creation time of record.",
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "required": [
                  "id",
                  "code",
                  "name",
                  "created_at"
                ]
              },
              "seller": {
                "title": "Seller who has registered the sale",
                "description": "Invert information starting from seller info.\n\nInstead of accessing to the seller information from the\n{@link IShoppingCustomer.member} -> {@link IShoppingMember.seller},\n`IShoppingSeller.IInvert` starts from the seller information\nand access to the customer, member and {@link IShoppingCitizen citizen}\ninformation inversely.\n\n------------------------------\n\nDescription of the current {@link IShoppingSeller.IInvert} type:\n\n> Invert information starting from seller info.\n> \n> Instead of accessing to the seller information from the\n> {@link IShoppingCustomer.member} -> {@link IShoppingMember.seller},\n> `IShoppingSeller.IInvert` starts from the seller information\n> and access to the customer, member and {@link IShoppingCitizen citizen}\n> information inversely.\n\n------------------------------\n\nDescription of the parent {@link IShoppingSeller} type:\n\n> Seller information.\n> \n> `IShoppingSeller` is an entity that embodies a person who registers\n> {@link IShoppingSale sales} to operate selling activities, with\n> {@link IShoppingMember membership} joining.\n> \n> For reference, unlike {@link IShoppingCustomer customers} which can\n> participate even without membership joining, seller must join membership\n> to operate sales. Also, seller must do the\n> {@link IShoppingCitizen real-name and mobile authentication}, too.",
                "type": "object",
                "properties": {
                  "type": {
                    "title": "Discriminant for the type of customer",
                    "description": "Discriminant for the type of customer.",
                    "const": "seller"
                  },
                  "member": {
                    "title": "Membership joining information",
                    "description": "Invert information of member.\n\nThis invert member information has been designed to be used for another\ninvert information of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert}\n- {@link IShoppingAdministrator.IInvert}\n\n------------------------------\n\nDescription of the current {@link IShoppingMember.IInvert} type:\n\n> Invert information of member.\n> \n> This invert member information has been designed to be used for another\n> invert information of sellers and administrators like below.\n> \n> - {@link IShoppingSeller.IInvert}\n> - {@link IShoppingAdministrator.IInvert}\n\n------------------------------\n\nDescription of the parent {@link IShoppingMember} type:\n\n> Member Account.\n> \n> `IShoppingMember` is an entity that symbolizes the case when a\n> {@link IShoppingCustomer} signs up as a member of this shopping mall\n> system.\n> \n> If a `IShoppingMember` has seller or administrator property. it means that\n> the {@link IShoppingCustomer} has acting as a {@link IShoppingSeller seller}\n> or {@link IShoppingAdministrator administrator} at the same time.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "title": "Primary Key",
                        "description": "Primary Key.",
                        "type": "string",
                        "format": "uuid"
                      },
                      "nickname": {
                        "title": "Nickname that uniquely identifies the member",
                        "description": "Nickname that uniquely identifies the member.",
                        "type": "string"
                      },
                      "emails": {
                        "title": "List of emails",
                        "description": "List of emails.",
                        "type": "array",
                        "items": {
                          "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one.",
                          "type": "object",
                          "properties": {
                            "id": {
                              "title": "Primary Key",
                              "description": "Primary Key.",
                              "type": "string",
                              "format": "uuid"
                            },
                            "value": {
                              "title": "Email address value",
                              "description": "Email address value.",
                              "type": "string",
                              "format": "email"
                            },
                            "created_at": {
                              "title": "Creation time of record",
                              "description": "Creation time of record.",
                              "type": "string",
                              "format": "date-time"
                            }
                          },
                          "required": [
                            "id",
                            "value",
                            "created_at"
                          ]
                        }
                      },
                      "created_at": {
                        "title": "Creation time of record",
                        "description": "Creation time of record.\n\nAnother words, the time when the member has signed up.",
                        "type": "string",
                        "format": "date-time"
                      }
                    },
                    "required": [
                      "id",
                      "nickname",
                      "emails",
                      "created_at"
                    ]
                  },
                  "customer": {
                    "title": "Customer, the connection information",
                    "description": "Inverted customer informatino.\n\nThis inverted customer information has been designed to be used for\nanother invert information of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert}\n- {@link IShoppingAdministrator.IInvert}\n\n------------------------------\n\nDescription of the current {@link IShoppingCustomer.IInvert} type:\n\n> Inverted customer informatino.\n> \n> This inverted customer information has been designed to be used for\n> another invert information of sellers and administrators like below.\n> \n> - {@link IShoppingSeller.IInvert}\n> - {@link IShoppingAdministrator.IInvert}\n\n------------------------------\n\nDescription of the parent {@link IShoppingCustomer} type:\n\n> Customer information, but not a person but a connection basis.\n> \n> `IShoppingCustomer` is an entity that literally embodies the information of\n> those who participated in the market as customers. By the way, the\n> `IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\n> even if the same person connects to the shopping mall multiple, multiple\n> records are created in `IShoppingCustomer`.\n> \n> The first purpose of this is to track the customer's inflow path in detail,\n> and it is for cases where the same person enters as a non-member,\n> {@link IShoppingCartCommodity puts items in the shopping cart} in advance,\n> and only authenticates their {@link IShoppingCitizen real name} or\n> registers/logs in at the moment of {@link IShoppingOrderPublish payment}.\n> It is the second. Lastly, it is to accurately track the activities that\n> a person performs at the shopping mall in various ways like below.\n> \n> - Same person comes from an {@link IShoppingExternalUser external service}\n> - Same person creates multiple accounts\n> - Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n> - Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n> \n> Therefore, `IShoppingCustomer` can have multiple records with the same\n> {@link IShoppingCitizen}, {@link IShoppingMember}, and\n> {@link IShoppingExternalUser}. Additionally, if a customer signs up for\n> membership after verifying their real name or signs up for our service after\n> being a user of an external service, all related records are changed at once.\n> Therefore, identification and tracking of customers can be done very\n> systematically.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "title": "Primary Key",
                        "description": "Primary Key.",
                        "type": "string",
                        "format": "uuid"
                      },
                      "channel": {
                        "title": "Belonged channel",
                        "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "title": "Primary Key",
                            "description": "Primary Key.",
                            "type": "string",
                            "format": "uuid"
                          },
                          "created_at": {
                            "title": "Creation time of record",
                            "description": "Creation time of record.",
                            "type": "string",
                            "format": "date-time"
                          },
                          "code": {
                            "title": "Identifier code",
                            "description": "Identifier code.",
                            "type": "string"
                          },
                          "name": {
                            "title": "Name of the channel",
                            "description": "Name of the channel.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "created_at",
                          "code",
                          "name"
                        ]
                      },
                      "external_user": {
                        "title": "External user information",
                        "description": "External user information.\n\nWhen the customer has come frome an external service.",
                        "oneOf": [
                          {
                            "type": "null"
                          },
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "title": "Primary Key",
                                "description": "Primary Key.",
                                "type": "string",
                                "format": "uuid"
                              },
                              "citizen": {
                                "title": "Citizen activation info",
                                "description": "Citizen activation info.",
                                "oneOf": [
                                  {
                                    "type": "null"
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "title": "Primary Key",
                                        "description": "Primary Key.",
                                        "type": "string",
                                        "format": "uuid"
                                      },
                                      "created_at": {
                                        "title": "Creation time of record",
                                        "description": "Creation time of record.",
                                        "type": "string",
                                        "format": "date-time"
                                      },
                                      "mobile": {
                                        "title": "Mobile number",
                                        "description": "Mobile number.",
                                        "x-wrtn-payment-order-mobile": true,
                                        "type": "string",
                                        "pattern": "^[0-9]*$"
                                      },
                                      "name": {
                                        "title": "Real name, or equivalent nickname",
                                        "description": "Real name, or equivalent nickname.",
                                        "x-wrtn-payment-order-citizen": true,
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "created_at",
                                      "mobile",
                                      "name"
                                    ],
                                    "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile} input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                                  }
                                ]
                              },
                              "created_at": {
                                "title": "Creation time of record",
                                "description": "Creation time of record.\n\nAnother word, first time when the external user connected.",
                                "type": "string",
                                "format": "date-time"
                              },
                              "uid": {
                                "title": "Identifier key of external user from the external system",
                                "description": "Identifier key of external user from the external system.",
                                "type": "string"
                              },
                              "application": {
                                "title": "Identifier code of the external service",
                                "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code} in common.",
                                "type": "string"
                              },
                              "nickname": {
                                "title": "Nickname of external user in the external system",
                                "description": "Nickname of external user in the external system.",
                                "type": "string"
                              },
                              "data": {
                                "description": "Additional information about external user from the external\nsystem."
                              }
                            },
                            "required": [
                              "id",
                              "citizen",
                              "created_at",
                              "uid",
                              "application",
                              "nickname",
                              "data"
                            ],
                            "description": "External user information.\n\n`IShoppingExternalUser` is an entity dsigned for when this system needs\nto connect with external services and welcome their users as\n{@link IShoppingCustomer customers} of this service.\n\nFor reference, customers who connect from an external service must have\nthis record, and the external service user is identified through the two\nattributes {@link application} and {@link uid}. If a customer connected\nfrom an external service completes\n{@link IShoppingCitizen real-name authentication} from this service, each\ntime the external service user reconnects to this service and issues a\nnew customer authentication token, real-name authentication begins with\ncompleted.\n\nAnd {@link password} is the password issued to the user by the external\nservice system (the so-called permanent user authentication token), and\nis never the actual user password. However, for customers who entered the\nsame application and uid as the current external system user, this is to\ndetermine whether to view this as a correct external system user or a\nviolation.\n\nIn addition, additional information received from external services can\nbe recorded in the data field in JSON format."
                          }
                        ]
                      },
                      "href": {
                        "title": "Connection address",
                        "description": "Connection address.\n\nSame with {@link window.location.href} of client.",
                        "type": "string",
                        "format": "uri"
                      },
                      "referrer": {
                        "title": "Referrer address",
                        "description": "Referrer address.\n\nSame with {@link window.document.referrer} of client.",
                        "oneOf": [
                          {
                            "type": "null"
                          },
                          {
                            "type": "string",
                            "format": "uri"
                          },
                          {
                            "type": "string",
                            "maxLength": 0
                          }
                        ]
                      },
                      "ip": {
                        "title": "Connection IP Address",
                        "description": "Connection IP Address.",
                        "oneOf": [
                          {
                            "type": "string",
                            "format": "ipv4"
                          },
                          {
                            "type": "string",
                            "format": "ipv6"
                          }
                        ]
                      },
                      "created_at": {
                        "title": "Creation time of the connection record",
                        "description": "Creation time of the connection record.",
                        "type": "string",
                        "format": "date-time"
                      }
                    },
                    "required": [
                      "id",
                      "channel",
                      "external_user",
                      "href",
                      "referrer",
                      "ip",
                      "created_at"
                    ]
                  },
                  "citizen": {
                    "title": "Real-name and mobile number authentication information",
                    "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile} input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "title": "Primary Key",
                        "description": "Primary Key.",
                        "type": "string",
                        "format": "uuid"
                      },
                      "created_at": {
                        "title": "Creation time of record",
                        "description": "Creation time of record.",
                        "type": "string",
                        "format": "date-time"
                      },
                      "mobile": {
                        "title": "Mobile number",
                        "description": "Mobile number.",
                        "x-wrtn-payment-order-mobile": true,
                        "type": "string",
                        "pattern": "^[0-9]*$"
                      },
                      "name": {
                        "title": "Real name, or equivalent nickname",
                        "description": "Real name, or equivalent nickname.",
                        "x-wrtn-payment-order-citizen": true,
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "mobile",
                      "name"
                    ]
                  },
                  "id": {
                    "title": "Primary Key",
                    "description": "Primary Key.",
                    "type": "string",
                    "format": "uuid"
                  },
                  "created_at": {
                    "title": "Creation tmie of record",
                    "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up.",
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "required": [
                  "type",
                  "member",
                  "customer",
                  "citizen",
                  "id",
                  "created_at"
                ]
              },
              "price_range": {
                "title": "Price range of the unit",
                "type": "object",
                "properties": {
                  "lowest": {
                    "description": "Shopping price interface.",
                    "type": "object",
                    "properties": {
                      "nominal": {
                        "title": "Nominal price",
                        "description": "Nominal price.\n\nThis is not {@link real real price} to pay, but just a nominal price to show.\nIf this value is greater than the {@link real real price}, it would be shown\nlike {@link IShoppingSeller seller} is giving a discount.",
                        "type": "number",
                        "minimum": 0
                      },
                      "real": {
                        "title": "Real price to pay",
                        "description": "Real price to pay.",
                        "type": "number",
                        "minimum": 0
                      }
                    },
                    "required": [
                      "nominal",
                      "real"
                    ]
                  },
                  "highest": {
                    "description": "Shopping price interface.",
                    "type": "object",
                    "properties": {
                      "nominal": {
                        "title": "Nominal price",
                        "description": "Nominal price.\n\nThis is not {@link real real price} to pay, but just a nominal price to show.\nIf this value is greater than the {@link real real price}, it would be shown\nlike {@link IShoppingSeller seller} is giving a discount.",
                        "type": "number",
                        "minimum": 0
                      },
                      "real": {
                        "title": "Real price to pay",
                        "description": "Real price to pay.",
                        "type": "number",
                        "minimum": 0
                      }
                    },
                    "required": [
                      "nominal",
                      "real"
                    ]
                  }
                },
                "required": [
                  "lowest",
                  "highest"
                ]
              },
              "id": {
                "title": "Primary Key of Sale",
                "description": "Primary Key of Sale.",
                "type": "string",
                "format": "uuid"
              },
              "snapshot_id": {
                "title": "Primary Key of Snapshot",
                "description": "Primary Key of Snapshot.",
                "type": "string",
                "format": "uuid"
              },
              "latest": {
                "title": "Whether the snapshot is the latest one or not",
                "description": "Whether the snapshot is the latest one or not.",
                "type": "boolean"
              },
              "content": {
                "title": "Description and image content describing the sale",
                "description": "Description of the current {@link IShoppingSaleContent} type:\n\n> Content information of sale snapshot.\n> \n> `IShoppingSaleContent` is an entity embodies the description contents\n> of {@link IShoppingSale}.",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "title": {
                    "type": "string"
                  },
                  "thumbnails": {
                    "type": "array",
                    "items": {
                      "description": "Attachment File.\n\nEvery attachment files that are managed in current system.\n\nFor reference, it is possible to omit one of file {@link name}\nor {@link extension} like `.gitignore` or `README` case, but not\npossible to omit both of them.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "title": "Primary Key",
                          "description": "Primary Key.",
                          "type": "string",
                          "format": "uuid"
                        },
                        "created_at": {
                          "title": "Creation time of attachment file",
                          "description": "Creation time of attachment file.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "name": {
                          "title": "File name, except extension",
                          "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string.",
                          "type": "string",
                          "maxLength": 255
                        },
                        "extension": {
                          "title": "Extension",
                          "description": "Extension.\n\nPossible to omit like `README` case.",
                          "oneOf": [
                            {
                              "type": "null"
                            },
                            {
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 8
                            }
                          ]
                        },
                        "url": {
                          "title": "URL path of the real file",
                          "description": "URL path of the real file.",
                          "type": "string",
                          "format": "uri",
                          "contentMediaType": "image/*"
                        }
                      },
                      "required": [
                        "id",
                        "created_at",
                        "name",
                        "extension",
                        "url"
                      ]
                    }
                  }
                },
                "required": [
                  "id",
                  "title",
                  "thumbnails"
                ]
              },
              "channels": {
                "title": "List of channels and categories",
                "description": "List of channels and categories.\n\nWhich channels and categories the sale is registered to.",
                "type": "array",
                "items": {
                  "description": "Target channel (and categories) of sale to sell.\n\n`IShoppingSaleChannel` is an entity that expresses through which\n{@link IShoppingChannel channel} a listing {@link IShoppingSale} is sold.\n\nAlso, if {@link IShoppingChannelCategory categories} are specified, it also\nmeans that the sale be sold. Otherwise, none of the categories of the channel\nbeing specified, it means that every categories of the channel is listing the\ntarget sale.",
                  "type": "object",
                  "properties": {
                    "categories": {
                      "title": "List of categories of the channel listing the sale",
                      "description": "List of categories of the channel listing the sale.\n\nIf empty, it means all categories of the channel is listing the sale.",
                      "type": "array",
                      "items": {
                        "$ref": "#/$defs/IShoppingChannelCategory.IInvert"
                      }
                    },
                    "id": {
                      "title": "Primary Key",
                      "description": "Primary Key.",
                      "type": "string",
                      "format": "uuid"
                    },
                    "created_at": {
                      "title": "Creation time of record",
                      "description": "Creation time of record.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "code": {
                      "title": "Identifier code",
                      "description": "Identifier code.",
                      "type": "string"
                    },
                    "name": {
                      "title": "Name of the channel",
                      "description": "Name of the channel.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "categories",
                    "id",
                    "created_at",
                    "code",
                    "name"
                  ]
                },
                "minItems": 1
              },
              "tags": {
                "title": "List of search tags",
                "description": "List of search tags.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "units": {
                "title": "List of units",
                "description": "List of units.\n\nRecords about individual product composition information that are sold\nin the sale. Each {@link IShoppingSaleUnit unit} record has configurable\n{@link IShoppingSaleUnitOption options},\n{@link IShoppingSaleUnitOptionCandidate candidate} values for each\noption, and {@link IShoppingSaleUnitStock final stocks} determined by\nselecting every candidate values of each option.",
                "type": "array",
                "items": {
                  "description": "Description of the current {@link IShoppingSaleUnit} type:\n\n> Product composition information handled in the sale.\n> \n> `IShoppingSaleUnit` is an entity that embodies the \"individual product\"\n> information handled in the {@link IShoppingSale sale}.\n> \n> For reference, the reason why `IShoppingSaleUnit` is separated from\n> {@link IShoppingSaleSnapshot} by an algebraic relationship of 1: N is because\n> there are some cases where multiple products are sold in one listing. This is\n> the case with so-called \"bundled products\".\n> \n> - Bundle from regular product (Mackbook Set)\n>   - Main Body\n>   - Keyboard\n>   - Mouse\n>   - Apple Care (Free A/S Voucher)\n> \n> And again, `IShoppingSaleUnit` does not in itself refer to the\n> {@link IShoppingSaleUnitStock final stock} that the\n> {@link IShoppingCustomer customer} will {@link IShoppingOrder purchase}.\n> The final stock can be found only after selecting all given\n> {@link IShoppingSaleUnitOption options} and their\n> {@link IShoppingSaleUnitOptionCandidate candidate values}.\n> \n> For example, even if you buy a Macbook, the final stocks are determined only\n> after selecting all the options (CPU / RAM / SSD), etc.",
                  "type": "object",
                  "properties": {
                    "price_range": {
                      "type": "object",
                      "properties": {
                        "lowest": {
                          "description": "Shopping price interface.",
                          "type": "object",
                          "properties": {
                            "nominal": {
                              "title": "Nominal price",
                              "description": "Nominal price.\n\nThis is not {@link real real price} to pay, but just a nominal price to show.\nIf this value is greater than the {@link real real price}, it would be shown\nlike {@link IShoppingSeller seller} is giving a discount.",
                              "type": "number",
                              "minimum": 0
                            },
                            "real": {
                              "title": "Real price to pay",
                              "description": "Real price to pay.",
                              "type": "number",
                              "minimum": 0
                            }
                          },
                          "required": [
                            "nominal",
                            "real"
                          ]
                        },
                        "highest": {
                          "description": "Shopping price interface.",
                          "type": "object",
                          "properties": {
                            "nominal": {
                              "title": "Nominal price",
                              "description": "Nominal price.\n\nThis is not {@link real real price} to pay, but just a nominal price to show.\nIf this value is greater than the {@link real real price}, it would be shown\nlike {@link IShoppingSeller seller} is giving a discount.",
                              "type": "number",
                              "minimum": 0
                            },
                            "real": {
                              "title": "Real price to pay",
                              "description": "Real price to pay.",
                              "type": "number",
                              "minimum": 0
                            }
                          },
                          "required": [
                            "nominal",
                            "real"
                          ]
                        }
                      },
                      "required": [
                        "lowest",
                        "highest"
                      ]
                    },
                    "id": {
                      "title": "Primary Key",
                      "description": "Primary Key.",
                      "type": "string",
                      "format": "uuid"
                    },
                    "name": {
                      "title": "Representative name of the unit",
                      "description": "Representative name of the unit.",
                      "type": "string"
                    },
                    "primary": {
                      "title": "Whether the unit is primary or not",
                      "description": "Whether the unit is primary or not.\n\nJust a labeling value.",
                      "type": "boolean"
                    },
                    "required": {
                      "title": "Whether the unit is required or not",
                      "description": "Whether the unit is required or not.\n\nWhen the unit is required, the customer must select the unit. If do not\nselect, customer can't buy it.\n\nFor example, if there's a sale \"Macbook Set\" and one of the unit is the\n\"Main Body\", is it possible to buy the \"Macbook Set\" without the\n\"Main Body\" unit? This property is for that case.",
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "price_range",
                    "id",
                    "name",
                    "primary",
                    "required"
                  ]
                },
                "minItems": 1
              },
              "created_at": {
                "title": "Creation time of the record",
                "description": "Creation time of the record.\n\nNote that, this property is different with {@link opened_at},\nwhich means the timepoint of the sale is opened.",
                "type": "string",
                "format": "date-time"
              },
              "updated_at": {
                "title": "Last updated time of the record",
                "description": "Last updated time of the record.\n\nIn another words, creation time of the last snapshot.",
                "type": "string",
                "format": "date-time"
              },
              "paused_at": {
                "title": "Paused time of the sale",
                "description": "Paused time of the sale.\n\nThe sale is paused by the seller, for some reason.\n\n{@link IShoppingCustomer Customers} can still see the sale on the\nboth list and detail pages, but the sale has a warning label\n\"The sale is paused by the seller\".",
                "oneOf": [
                  {
                    "type": "null"
                  },
                  {
                    "type": "string",
                    "format": "date-time"
                  }
                ]
              },
              "suspended_at": {
                "title": "Suspended time of the sale",
                "description": "Suspended time of the sale.\n\nThe sale is suspended by the seller, for some reason.\n\n{@link IShoppingCustomer Customers} cannot see the sale on the\nboth list and detail pages. It is almost same with soft delettion,\nbut there's a little bit difference that the owner\n{@link IShoppingSeller seller} can still see the sale and resume it.\n\nOf course, the {@link IShoppingCustomer customers} who have\nalready purchased the sale can still see the sale on the\n{@link IShoppingOrder order} page.",
                "oneOf": [
                  {
                    "type": "null"
                  },
                  {
                    "type": "string",
                    "format": "date-time"
                  }
                ]
              },
              "opened_at": {
                "title": "Opening time of the sale",
                "description": "Opening time of the sale.",
                "oneOf": [
                  {
                    "type": "null"
                  },
                  {
                    "type": "string",
                    "format": "date-time"
                  }
                ]
              },
              "closed_at": {
                "title": "Closing time of the sale",
                "description": "Closing time of the sale.\n\nIf this value is `null`, the sale be continued forever.",
                "oneOf": [
                  {
                    "type": "null"
                  },
                  {
                    "type": "string",
                    "format": "date-time"
                  }
                ]
              }
            },
            "required": [
              "section",
              "seller",
              "price_range",
              "id",
              "snapshot_id",
              "latest",
              "content",
              "channels",
              "tags",
              "units",
              "created_at",
              "updated_at",
              "paused_at",
              "suspended_at",
              "opened_at",
              "closed_at"
            ]
          }
        }
      },
      "required": [
        "pagination",
        "data"
      ]
    },
    "success": true,
    "arguments": {
      "type": {
        "host": "http://127.0.0.1:37001",
        "headers": {
          "Authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0YWJsZSI6InNob3BwaW5nX2N1c3RvbWVycyIsImlkIjoiMjVlYzg3ZjctODE1ZC00YjU3LTk1NzYtYzk1Mzk4NGJjMjhmIiwicmVhZG9ubHkiOmZhbHNlLCJleHBpcmVkX2F0IjoiMjAyNC0xMi0xM1QwOTo0MjoxMi41MzlaIiwicmVmcmVzaGFibGVfdW50aWwiOiIyMDI0LTEyLTI3VDA2OjQyOjEyLjUzOVoiLCJpYXQiOjE3MzQwNzIxMzJ9.zWZrU-d1bSW-MawmSo2RYRPk_73xtR_PxfFUrEpDJkc"
        }
      },
      "properties": {
        "limit": 100
      }
    },
    "value": {
      "pagination": {
        "current": 1,
        "limit": 100,
        "records": 10,
        "pages": 1
      },
      "data": [
        {
          "section": {
            "id": "a01c572c-3199-4929-ac67-ba7c31b2c808",
            "code": "general",
            "name": "General",
            "created_at": "2024-12-13T06:42:11.124Z"
          },
          "seller": {
            "type": "seller",
            "member": {
              "id": "a853492c-70b4-487f-9648-0f6109a0ad69",
              "nickname": "Robot",
              "emails": [
                {
                  "id": "81ea73c4-b41e-4022-9384-d51d3215797e",
                  "value": "robot@nestia.io",
                  "created_at": "2024-12-13T06:42:11.227Z"
                }
              ],
              "created_at": "2024-12-13T06:42:11.227Z"
            },
            "customer": {
              "id": "aeb8583b-8bd9-4d29-adea-78779b405046",
              "channel": {
                "id": "2323f4bd-21ad-45b7-ae3b-cadd84dcc935",
                "created_at": "2024-12-13T06:42:10.908Z",
                "code": "samchon",
                "name": "Samchon Shopping Mall"
              },
              "external_user": null,
              "href": "http://127.0.0.1/TestAutomation",
              "referrer": "http://127.0.0.1/NodeJS",
              "ip": "127.0.0.1",
              "created_at": "2024-12-13T06:42:11.258Z"
            },
            "citizen": {
              "id": "43aedfea-6b2c-4c18-9f69-60373c9580dd",
              "created_at": "2024-12-13T06:42:11.157Z",
              "mobile": "01012345678",
              "name": "Robot"
            },
            "id": "addccb32-ac48-460e-9624-d9809da19d99",
            "created_at": "2024-12-13T06:42:11.241Z"
          },
          "price_range": {
            "lowest": {
              "nominal": 40000,
              "real": 35000
            },
            "highest": {
              "nominal": 150000,
              "real": 136000
            }
          },
          "id": "ef43459e-edb6-4b2c-bce5-c74cc815a4f4",
          "snapshot_id": "e13727ff-a31b-4460-ab6f-72e1dd3e1e2c",
          "latest": true,
          "content": {
            "id": "f2a6a47e-f72c-44b6-88ac-27ebbfa1eed0",
            "title": "Stanley Tumbler Collection",
            "thumbnails": [
              {
                "id": "c47319f2-bd60-49f5-8703-773a593e0775",
                "created_at": "2024-12-13T06:42:12.111Z",
                "name": "stanley-tumbler-collection-thumbnail",
                "extension": "jpeg",
                "url": "https://serpapi.com/searches/673d71322c566d56d9c20ceb/images/ce9a07f2aa831dbec8bb1c287299706e24a52a8e0c119fa162041805038957a7.jpeg"
              }
            ]
          },
          "channels": [
            {
              "categories": [
                {
                  "parent": null,
                  "id": "19f9099e-3a2f-4894-a2c7-36d8c2d7d9d7",
                  "code": "accessories",
                  "parent_id": null,
                  "name": "Accessories",
                  "created_at": "2024-12-13T06:42:11.060Z"
                },
                {
                  "parent": null,
                  "id": "e82fb84b-d443-441b-a140-9f45bd73e0ca",
                  "code": "others",
                  "parent_id": null,
                  "name": "Others",
                  "created_at": "2024-12-13T06:42:11.116Z"
                }
              ],
              "id": "2323f4bd-21ad-45b7-ae3b-cadd84dcc935",
              "created_at": "2024-12-13T06:42:10.908Z",
              "code": "samchon",
              "name": "Samchon Shopping Mall"
            }
          ],
          "tags": [
            "Stanley",
            "Tumbler",
            "Drinkware",
            "Eco-Friendly"
          ],
          "units": [
            {
              "price_range": {
                "lowest": {
                  "nominal": 40000,
                  "real": 35000
                },
                "highest": {
                  "nominal": 60000,
                  "real": 54000
                }
              },
              "id": "496ed199-3bf8-4de6-a38e-faf9267de621",
              "name": "Classic Tumbler",
              "primary": true,
              "required": true
            },
            {
              "price_range": {
                "lowest": {
                  "nominal": 70000,
                  "real": 64000
                },
                "highest": {
                  "nominal": 70000,
                  "real": 64000
                }
              },
              "id": "36a2127c-9ed2-4adb-a116-1de93f7fb1ce",
              "name": "Adventure Quencher Tumbler",
              "primary": false,
              "required": false
            },
            {
              "price_range": {
                "lowest": {
                  "nominal": 20000,
                  "real": 18000
                },
                "highest": {
                  "nominal": 20000,
                  "real": 18000
                }
              },
              "id": "6aa653da-6ec2-4c9f-83a1-3e63958ef0d8",
              "name": "Accessories Set",
              "primary": false,
              "required": false
            }
          ],
          "created_at": "2024-12-13T06:42:12.111Z",
          "updated_at": "2024-12-13T06:42:12.111Z",
          "paused_at": null,
          "suspended_at": null,
          "opened_at": "2024-12-13T06:42:12.108Z",
          "closed_at": null
        },
        {
          "section": {
            "id": "a01c572c-3199-4929-ac67-ba7c31b2c808",
            "code": "general",
            "name": "General",
            "created_at": "2024-12-13T06:42:11.124Z"
          },
          "seller": {
            "type": "seller",
            "member": {
              "id": "a853492c-70b4-487f-9648-0f6109a0ad69",
              "nickname": "Robot",
              "emails": [
                {
                  "id": "81ea73c4-b41e-4022-9384-d51d3215797e",
                  "value": "robot@nestia.io",
                  "created_at": "2024-12-13T06:42:11.227Z"
                }
              ],
              "created_at": "2024-12-13T06:42:11.227Z"
            },
            "customer": {
              "id": "aeb8583b-8bd9-4d29-adea-78779b405046",
              "channel": {
                "id": "2323f4bd-21ad-45b7-ae3b-cadd84dcc935",
                "created_at": "2024-12-13T06:42:10.908Z",
                "code": "samchon",
                "name": "Samchon Shopping Mall"
              },
              "external_user": null,
              "href": "http://127.0.0.1/TestAutomation",
              "referrer": "http://127.0.0.1/NodeJS",
              "ip": "127.0.0.1",
              "created_at": "2024-12-13T06:42:11.258Z"
            },
            "citizen": {
              "id": "43aedfea-6b2c-4c18-9f69-60373c9580dd",
              "created_at": "2024-12-13T06:42:11.157Z",
              "mobile": "01012345678",
              "name": "Robot"
            },
            "id": "addccb32-ac48-460e-9624-d9809da19d99",
            "created_at": "2024-12-13T06:42:11.241Z"
          },
          "price_range": {
            "lowest": {
              "nominal": 400000,
              "real": 359000
            },
            "highest": {
              "nominal": 750000,
              "real": 677000
            }
          },
          "id": "f07cd7c0-796e-4375-808d-306c8b5308b9",
          "snapshot_id": "276525be-06b7-4825-8043-b214bcfab569",
          "latest": true,
          "content": {
            "id": "94d3ff1b-4182-47cc-9925-d17fab268b3a",
            "title": "Galaxy Watch 7",
            "thumbnails": [
              {
                "id": "b3abd2fe-684b-4d16-9b34-158b64638776",
                "created_at": "2024-12-13T06:42:12.077Z",
                "name": "galaxy-watch-7-thumbnail",
                "extension": "png",
                "url": "https://images.samsung.com/kdp/goods/2024/07/07/597615f6-b6f9-4ae4-a93d-cbba6bdde2c6.png?$944_550_PNG$"
              }
            ]
          },
          "channels": [
            {
              "categories": [
                {
                  "parent": {
                    "parent": null,
                    "id": "9b9b36f4-4e50-48ff-ac05-ee8588be0dbe",
                    "code": "electronics",
                    "parent_id": null,
                    "name": "Electronics",
                    "created_at": "2024-12-13T06:42:10.919Z"
                  },
                  "id": "c4dc7fff-d42d-46cf-b859-07542951c742",
                  "code": "smart_watches",
                  "parent_id": "9b9b36f4-4e50-48ff-ac05-ee8588be0dbe",
                  "name": "Smart Watches",
                  "created_at": "2024-12-13T06:42:10.998Z"
                }
              ],
              "id": "2323f4bd-21ad-45b7-ae3b-cadd84dcc935",
              "created_at": "2024-12-13T06:42:10.908Z",
              "code": "samchon",
              "name": "Samchon Shopping Mall"
            }
          ],
          "tags": [],
          "units": [
            {
              "price_range": {
                "lowest": {
                  "nominal": 100000,
                  "real": 89000
                },
                "highest": {
                  "nominal": 100000,
                  "real": 89000
                }
              },
              "id": "fe3591f7-5017-415c-b4ae-0c29f229732f",
              "name": "Warranty Program",
              "primary": false,
              "required": false
            },
            {
              "price_range": {
                "lowest": {
                  "nominal": 50000,
                  "real": 39000
                },
                "highest": {
                  "nominal": 50000,
                  "real": 39000
                }
              },
              "id": "d27e1fe7-a6ce-40b7-9633-90b7ede021db",
              "name": "Replacement Strap",
              "primary": false,
              "required": false
            },
            {
              "price_range": {
                "lowest": {
                  "nominal": 400000,
                  "real": 359000
                },
                "highest": {
                  "nominal": 600000,
                  "real": 549000
                }
              },
              "id": "de7ccd41-ea86-4f20-85ac-9d9088b4fbf8",
              "name": "Galaxy Watch 7",
              "primary": true,
              "required": true
            }
          ],
          "created_at": "2024-12-13T06:42:12.077Z",
          "updated_at": "2024-12-13T06:42:12.077Z",
          "paused_at": null,
          "suspended_at": null,
          "opened_at": "2024-12-13T06:42:12.073Z",
          "closed_at": null
        },
        {
          "section": {
            "id": "a01c572c-3199-4929-ac67-ba7c31b2c808",
            "code": "general",
            "name": "General",
            "created_at": "2024-12-13T06:42:11.124Z"
          },
          "seller": {
            "type": "seller",
            "member": {
              "id": "a853492c-70b4-487f-9648-0f6109a0ad69",
              "nickname": "Robot",
              "emails": [
                {
                  "id": "81ea73c4-b41e-4022-9384-d51d3215797e",
                  "value": "robot@nestia.io",
                  "created_at": "2024-12-13T06:42:11.227Z"
                }
              ],
              "created_at": "2024-12-13T06:42:11.227Z"
            },
            "customer": {
              "id": "aeb8583b-8bd9-4d29-adea-78779b405046",
              "channel": {
                "id": "2323f4bd-21ad-45b7-ae3b-cadd84dcc935",
                "created_at": "2024-12-13T06:42:10.908Z",
                "code": "samchon",
                "name": "Samchon Shopping Mall"
              },
              "external_user": null,
              "href": "http://127.0.0.1/TestAutomation",
              "referrer": "http://127.0.0.1/NodeJS",
              "ip": "127.0.0.1",
              "created_at": "2024-12-13T06:42:11.258Z"
            },
            "citizen": {
              "id": "43aedfea-6b2c-4c18-9f69-60373c9580dd",
              "created_at": "2024-12-13T06:42:11.157Z",
              "mobile": "01012345678",
              "name": "Robot"
            },
            "id": "addccb32-ac48-460e-9624-d9809da19d99",
            "created_at": "2024-12-13T06:42:11.241Z"
          },
          "price_range": {
            "lowest": {
              "nominal": 1000000,
              "real": 899000
            },
            "highest": {
              "nominal": 2300000,
              "real": 2157000
            }
          },
          "id": "764a4766-bf23-4948-971f-3e4376e4acea",
          "snapshot_id": "d8f60386-d66b-473a-8dcd-077195f340ec",
          "latest": true,
          "content": {
            "id": "43ea833c-9928-4292-a21d-1a25f526b8d1",
            "title": "Surface Pro 9",
            "thumbnails": [
              {
                "id": "34d99ede-c3cf-49cd-804a-537a365e6e73",
                "created_at": "2024-12-13T06:42:12.032Z",
                "name": "microsoft-surface-pro-9-thumbnail-3",
                "extension": "jpeg",
                "url": "https://serpapi.com/searches/673d3a37e45f3316ecd8ab3e/images/1be25e6e2b1fb7505946d975aac683f8826bcb8c509672de4a5f8c71f149fdef.jpeg"
              },
              {
                "id": "3cd4f391-7435-4ec4-a7d9-3c9b491b954b",
                "created_at": "2024-12-13T06:42:12.032Z",
                "name": "microsoft-surface-pro-9-thumbnail-2",
                "extension": "jpeg",
                "url": "https://serpapi.com/searches/673d3a37e45f3316ecd8ab3e/images/1be25e6e2b1fb750d6c1bc749467f5aba0340886f4f4943fe72302c5e658b15a.jpeg"
              },
              {
                "id": "48d1d69c-0f32-4fbd-8e86-0462cfbac2dc",
                "created_at": "2024-12-13T06:42:12.032Z",
                "name": "microsoft-surface-pro-9-thumbnail-1",
                "extension": "jpeg",
                "url": "https://serpapi.com/searches/673d3a37e45f3316ecd8ab3e/images/1be25e6e2b1fb7509f1af89c326cb41749301b94375eb5680b9bddcdf88fabcb.jpeg"
              }
            ]
          },
          "channels": [
            {
              "categories": [
                {
                  "parent": {
                    "parent": null,
                    "id": "9b9b36f4-4e50-48ff-ac05-ee8588be0dbe",
                    "code": "electronics",
                    "parent_id": null,
                    "name": "Electronics",
                    "created_at": "2024-12-13T06:42:10.919Z"
                  },
                  "id": "ab794f96-49c0-4318-9ac8-91318b188e6c",
                  "code": "laptops",
                  "parent_id": "9b9b36f4-4e50-48ff-ac05-ee8588be0dbe",
                  "name": "Laptops",
                  "created_at": "2024-12-13T06:42:10.940Z"
                },
                {
                  "parent": {
                    "parent": {
                      "parent": null,
                      "id": "9b9b36f4-4e50-48ff-ac05-ee8588be0dbe",
                      "code": "electronics",
                      "parent_id": null,
                      "name": "Electronics",
                      "created_at": "2024-12-13T06:42:10.919Z"
                    },
                    "id": "ab794f96-49c0-4318-9ac8-91318b188e6c",
                    "code": "laptops",
                    "parent_id": "9b9b36f4-4e50-48ff-ac05-ee8588be0dbe",
                    "name": "Laptops",
                    "created_at": "2024-12-13T06:42:10.940Z"
                  },
                  "id": "867673bf-1004-4a70-b6aa-c037cf2efdd3",
                  "code": "2_in_1_laptops",
                  "parent_id": "ab794f96-49c0-4318-9ac8-91318b188e6c",
                  "name": "2 in 1 Laptops",
                  "created_at": "2024-12-13T06:42:10.956Z"
                }
              ],
              "id": "2323f4bd-21ad-45b7-ae3b-cadd84dcc935",
              "created_at": "2024-12-13T06:42:10.908Z",
              "code": "samchon",
              "name": "Samchon Shopping Mall"
            }
          ],
          "tags": [],
          "units": [
            {
              "price_range": {
                "lowest": {
                  "nominal": 100000,
                  "real": 89000
                },
                "highest": {
                  "nominal": 100000,
                  "real": 89000
                }
              },
              "id": "75da78c5-3a7c-4e66-9e55-4e8b152a2574",
              "name": "Warranty Program",
              "primary": false,
              "required": false
            },
            {
              "price_range": {
                "lowest": {
                  "nominal": 200000,
                  "real": 169000
                },
                "highest": {
                  "nominal": 200000,
                  "real": 169000
                }
              },
              "id": "1cf0d48d-dc9e-4447-a29e-5b7151415148",
              "name": "Magnetic Keyboard",
              "primary": false,
              "required": false
            },
            {
              "price_range": {
                "lowest": {
                  "nominal": 1000000,
                  "real": 899000
                },
                "highest": {
                  "nominal": 2000000,
                  "real": 1899000
                }
              },
              "id": "2115bdbf-6b28-49f2-9203-4772b272d704",
              "name": "Surface Pro 9 Entity",
              "primary": true,
              "required": true
            }
          ],
          "created_at": "2024-12-13T06:42:12.032Z",
          "updated_at": "2024-12-13T06:42:12.032Z",
          "paused_at": null,
          "suspended_at": null,
          "opened_at": "2024-12-13T06:42:12.030Z",
          "closed_at": null
        },
        {
          "section": {
            "id": "a01c572c-3199-4929-ac67-ba7c31b2c808",
            "code": "general",
            "name": "General",
            "created_at": "2024-12-13T06:42:11.124Z"
          },
          "seller": {
            "type": "seller",
            "member": {
              "id": "a853492c-70b4-487f-9648-0f6109a0ad69",
              "nickname": "Robot",
              "emails": [
                {
                  "id": "81ea73c4-b41e-4022-9384-d51d3215797e",
                  "value": "robot@nestia.io",
                  "created_at": "2024-12-13T06:42:11.227Z"
                }
              ],
              "created_at": "2024-12-13T06:42:11.227Z"
            },
            "customer": {
              "id": "aeb8583b-8bd9-4d29-adea-78779b405046",
              "channel": {
                "id": "2323f4bd-21ad-45b7-ae3b-cadd84dcc935",
                "created_at": "2024-12-13T06:42:10.908Z",
                "code": "samchon",
                "name": "Samchon Shopping Mall"
              },
              "external_user": null,
              "href": "http://127.0.0.1/TestAutomation",
              "referrer": "http://127.0.0.1/NodeJS",
              "ip": "127.0.0.1",
              "created_at": "2024-12-13T06:42:11.258Z"
            },
            "citizen": {
              "id": "43aedfea-6b2c-4c18-9f69-60373c9580dd",
              "created_at": "2024-12-13T06:42:11.157Z",
              "mobile": "01012345678",
              "name": "Robot"
            },
            "id": "addccb32-ac48-460e-9624-d9809da19d99",
            "created_at": "2024-12-13T06:42:11.241Z"
          },
          "price_range": {
            "lowest": {
              "nominal": 7200000,
              "real": 6899000
            },
            "highest": {
              "nominal": 12400000,
              "real": 11898000
            }
          },
          "id": "601228f3-1314-4fbe-b460-918250e9ffa1",
          "snapshot_id": "fe375776-9933-4d97-a0c8-8d46aca01bd1",
          "latest": true,
          "content": {
            "id": "c4566bf9-2544-492d-88d7-0e769e9614f2",
            "title": "Leica M6 (2022 Reissue): The Return of a Legend",
            "thumbnails": [
              {
                "id": "62203ee2-c174-430c-aa79-a936d752a3ca",
                "created_at": "2024-12-13T06:42:12.008Z",
                "name": "leica-m6-thumbnail-2",
                "extension": "webp",
                "url": "https://leica-camera.com/sites/default/files/styles/r_media_fullscreen/public/2022-09/leica_m6_packaging_ambient_3840x2160.jpg.webp?itok=lig4kkiB"
              },
              {
                "id": "ae058b66-9388-442d-bdc8-934aae2f0686",
                "created_at": "2024-12-13T06:42:12.008Z",
                "name": "leica-m6-thumbnail-1",
                "extension": "png",
                "url": "https://leica-camera.com/sites/default/files/styles/r_media_medium_desktop_4_3/public/pm-84724-10557_leica_m6_black_front_1.png?itok=SpVHc0cq"
              }
            ]
          },
          "channels": [
            {
              "categories": [
                {
                  "parent": {
                    "parent": null,
                    "id": "9b9b36f4-4e50-48ff-ac05-ee8588be0dbe",
                    "code": "electronics",
                    "parent_id": null,
                    "name": "Electronics",
                    "created_at": "2024-12-13T06:42:10.919Z"
                  },
                  "id": "c2c9da5a-7d89-40f6-9021-0255073b87eb",
                  "code": "cameras",
                  "parent_id": "9b9b36f4-4e50-48ff-ac05-ee8588be0dbe",
                  "name": "Cameras",
                  "created_at": "2024-12-13T06:42:11.008Z"
                }
              ],
              "id": "2323f4bd-21ad-45b7-ae3b-cadd84dcc935",
              "created_at": "2024-12-13T06:42:10.908Z",
              "code": "samchon",
              "name": "Samchon Shopping Mall"
            }
          ],
          "tags": [
            "Leica M6",
            "Film Camera",
            "Photography",
            "Analog",
            "Camera Reissue",
            "Classic Design",
            "Collector's Item",
            "Camera Lens"
          ],
          "units": [
            {
              "price_range": {
                "lowest": {
                  "nominal": 7200000,
                  "real": 6899000
                },
                "highest": {
                  "nominal": 7200000,
                  "real": 6899000
                }
              },
              "id": "2e54e102-92d8-4f15-8f35-5ab43b0217e1",
              "name": "Leica M6 Body (2022 Reissue)",
              "primary": true,
              "required": true
            },
            {
              "price_range": {
                "lowest": {
                  "nominal": 5200000,
                  "real": 4999000
                },
                "highest": {
                  "nominal": 5200000,
                  "real": 4999000
                }
              },
              "id": "b46d4dd3-162c-4eb2-9968-dffa70910631",
              "name": "50mm Summilux Lens",
              "primary": false,
              "required": false
            }
          ],
          "created_at": "2024-12-13T06:42:12.008Z",
          "updated_at": "2024-12-13T06:42:12.008Z",
          "paused_at": null,
          "suspended_at": null,
          "opened_at": "2024-12-13T06:42:12.005Z",
          "closed_at": null
        },
        {
          "section": {
            "id": "a01c572c-3199-4929-ac67-ba7c31b2c808",
            "code": "general",
            "name": "General",
            "created_at": "2024-12-13T06:42:11.124Z"
          },
          "seller": {
            "type": "seller",
            "member": {
              "id": "a853492c-70b4-487f-9648-0f6109a0ad69",
              "nickname": "Robot",
              "emails": [
                {
                  "id": "81ea73c4-b41e-4022-9384-d51d3215797e",
                  "value": "robot@nestia.io",
                  "created_at": "2024-12-13T06:42:11.227Z"
                }
              ],
              "created_at": "2024-12-13T06:42:11.227Z"
            },
            "customer": {
              "id": "aeb8583b-8bd9-4d29-adea-78779b405046",
              "channel": {
                "id": "2323f4bd-21ad-45b7-ae3b-cadd84dcc935",
                "created_at": "2024-12-13T06:42:10.908Z",
                "code": "samchon",
                "name": "Samchon Shopping Mall"
              },
              "external_user": null,
              "href": "http://127.0.0.1/TestAutomation",
              "referrer": "http://127.0.0.1/NodeJS",
              "ip": "127.0.0.1",
              "created_at": "2024-12-13T06:42:11.258Z"
            },
            "citizen": {
              "id": "43aedfea-6b2c-4c18-9f69-60373c9580dd",
              "created_at": "2024-12-13T06:42:11.157Z",
              "mobile": "01012345678",
              "name": "Robot"
            },
            "id": "addccb32-ac48-460e-9624-d9809da19d99",
            "created_at": "2024-12-13T06:42:11.241Z"
          },
          "price_range": {
            "lowest": {
              "nominal": 1000000,
              "real": 899000
            },
            "highest": {
              "nominal": 2300000,
              "real": 2157000
            }
          },
          "id": "5f90b25f-5eaa-4042-bce1-e3853d5e688e",
          "snapshot_id": "dc3e0459-6a40-4c52-b786-3a9b1eb4235d",
          "latest": true,
          "content": {
            "id": "ed429afc-1f72-4f38-8708-2b202229084d",
            "title": "Surface Pro 9",
            "thumbnails": [
              {
                "id": "b9b3cec5-5deb-485b-bdf7-5d4586db9552",
                "created_at": "2024-12-13T06:42:11.959Z",
                "name": "microsoft-surface-pro-9-thumbnail-3",
                "extension": "jpeg",
                "url": "https://serpapi.com/searches/673d3a37e45f3316ecd8ab3e/images/1be25e6e2b1fb7505946d975aac683f8826bcb8c509672de4a5f8c71f149fdef.jpeg"
              },
              {
                "id": "06ed2cda-4bf7-4f12-83b3-d5a6fd8ea139",
                "created_at": "2024-12-13T06:42:11.959Z",
                "name": "microsoft-surface-pro-9-thumbnail-2",
                "extension": "jpeg",
                "url": "https://serpapi.com/searches/673d3a37e45f3316ecd8ab3e/images/1be25e6e2b1fb750d6c1bc749467f5aba0340886f4f4943fe72302c5e658b15a.jpeg"
              },
              {
                "id": "022fb001-8847-4094-86de-0b6e7aee2674",
                "created_at": "2024-12-13T06:42:11.959Z",
                "name": "microsoft-surface-pro-9-thumbnail-1",
                "extension": "jpeg",
                "url": "https://serpapi.com/searches/673d3a37e45f3316ecd8ab3e/images/1be25e6e2b1fb7509f1af89c326cb41749301b94375eb5680b9bddcdf88fabcb.jpeg"
              }
            ]
          },
          "channels": [
            {
              "categories": [
                {
                  "parent": {
                    "parent": null,
                    "id": "9b9b36f4-4e50-48ff-ac05-ee8588be0dbe",
                    "code": "electronics",
                    "parent_id": null,
                    "name": "Electronics",
                    "created_at": "2024-12-13T06:42:10.919Z"
                  },
                  "id": "4f0d0e15-1210-481f-87d7-551315be79d0",
                  "code": "desktops",
                  "parent_id": "9b9b36f4-4e50-48ff-ac05-ee8588be0dbe",
                  "name": "Desktops",
                  "created_at": "2024-12-13T06:42:10.935Z"
                },
                {
                  "parent": {
                    "parent": {
                      "parent": null,
                      "id": "9b9b36f4-4e50-48ff-ac05-ee8588be0dbe",
                      "code": "electronics",
                      "parent_id": null,
                      "name": "Electronics",
                      "created_at": "2024-12-13T06:42:10.919Z"
                    },
                    "id": "ab794f96-49c0-4318-9ac8-91318b188e6c",
                    "code": "laptops",
                    "parent_id": "9b9b36f4-4e50-48ff-ac05-ee8588be0dbe",
                    "name": "Laptops",
                    "created_at": "2024-12-13T06:42:10.940Z"
                  },
                  "id": "867673bf-1004-4a70-b6aa-c037cf2efdd3",
                  "code": "2_in_1_laptops",
                  "parent_id": "ab794f96-49c0-4318-9ac8-91318b188e6c",
                  "name": "2 in 1 Laptops",
                  "created_at": "2024-12-13T06:42:10.956Z"
                },
                {
                  "parent": {
                    "parent": {
                      "parent": null,
                      "id": "9b9b36f4-4e50-48ff-ac05-ee8588be0dbe",
                      "code": "electronics",
                      "parent_id": null,
                      "name": "Electronics",
                      "created_at": "2024-12-13T06:42:10.919Z"
                    },
                    "id": "f2619ad6-40ec-4d9c-93b8-e720c56edffc",
                    "code": "tablets",
                    "parent_id": "9b9b36f4-4e50-48ff-ac05-ee8588be0dbe",
                    "name": "Tablets",
                    "created_at": "2024-12-13T06:42:10.959Z"
                  },
                  "id": "ef627ebb-f26b-4412-b370-e086ca4a8b7a",
                  "code": "windows_tablets",
                  "parent_id": "f2619ad6-40ec-4d9c-93b8-e720c56edffc",
                  "name": "Windows Tablets",
                  "created_at": "2024-12-13T06:42:10.970Z"
                }
              ],
              "id": "2323f4bd-21ad-45b7-ae3b-cadd84dcc935",
              "created_at": "2024-12-13T06:42:10.908Z",
              "code": "samchon",
              "name": "Samchon Shopping Mall"
            }
          ],
          "tags": [
            "tablet",
            "2-in-1",
            "surface",
            "microsoft"
          ],
          "units": [
            {
              "price_range": {
                "lowest": {
                  "nominal": 1000000,
                  "real": 899000
                },
                "highest": {
                  "nominal": 2000000,
                  "real": 1899000
                }
              },
              "id": "6b97dacb-98c4-42e3-b1e6-ba3a9dcebe2d",
              "name": "Surface Pro 9 Entity",
              "primary": true,
              "required": true
            },
            {
              "price_range": {
                "lowest": {
                  "nominal": 100000,
                  "real": 89000
                },
                "highest": {
                  "nominal": 100000,
                  "real": 89000
                }
              },
              "id": "74651b84-5e35-4498-bf62-3c227b206e1a",
              "name": "Warranty Program",
              "primary": false,
              "required": false
            },
            {
              "price_range": {
                "lowest": {
                  "nominal": 200000,
                  "real": 169000
                },
                "highest": {
                  "nominal": 200000,
                  "real": 169000
                }
              },
              "id": "af19cde6-8e27-466e-803c-f5c3d33e8c29",
              "name": "Magnetic Keyboard",
              "primary": false,
              "required": false
            }
          ],
          "created_at": "2024-12-13T06:42:11.959Z",
          "updated_at": "2024-12-13T06:42:11.959Z",
          "paused_at": null,
          "suspended_at": null,
          "opened_at": "2024-12-13T06:42:11.956Z",
          "closed_at": null
        },
        {
          "section": {
            "id": "a01c572c-3199-4929-ac67-ba7c31b2c808",
            "code": "general",
            "name": "General",
            "created_at": "2024-12-13T06:42:11.124Z"
          },
          "seller": {
            "type": "seller",
            "member": {
              "id": "a853492c-70b4-487f-9648-0f6109a0ad69",
              "nickname": "Robot",
              "emails": [
                {
                  "id": "81ea73c4-b41e-4022-9384-d51d3215797e",
                  "value": "robot@nestia.io",
                  "created_at": "2024-12-13T06:42:11.227Z"
                }
              ],
              "created_at": "2024-12-13T06:42:11.227Z"
            },
            "customer": {
              "id": "aeb8583b-8bd9-4d29-adea-78779b405046",
              "channel": {
                "id": "2323f4bd-21ad-45b7-ae3b-cadd84dcc935",
                "created_at": "2024-12-13T06:42:10.908Z",
                "code": "samchon",
                "name": "Samchon Shopping Mall"
              },
              "external_user": null,
              "href": "http://127.0.0.1/TestAutomation",
              "referrer": "http://127.0.0.1/NodeJS",
              "ip": "127.0.0.1",
              "created_at": "2024-12-13T06:42:11.258Z"
            },
            "citizen": {
              "id": "43aedfea-6b2c-4c18-9f69-60373c9580dd",
              "created_at": "2024-12-13T06:42:11.157Z",
              "mobile": "01012345678",
              "name": "Robot"
            },
            "id": "addccb32-ac48-460e-9624-d9809da19d99",
            "created_at": "2024-12-13T06:42:11.241Z"
          },
          "price_range": {
            "lowest": {
              "nominal": 1200000,
              "real": 1099000
            },
            "highest": {
              "nominal": 1950000,
              "real": 1727000
            }
          },
          "id": "4b4146fd-029a-428b-a7d6-ed49beaf8eb9",
          "snapshot_id": "04649db6-eee4-49ae-98e1-d976d2e39f58",
          "latest": true,
          "content": {
            "id": "4af973b4-fd6c-4ac7-83ab-fbbe3503e639",
            "title": "Herman Miller Chair",
            "thumbnails": [
              {
                "id": "0ad0ddfc-c04a-40c7-b38e-4428e2269e78",
                "created_at": "2024-12-13T06:42:11.917Z",
                "name": "herman-miller-chair-thumbnail",
                "extension": "png",
                "url": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTRaJWHEnwGGg-8rHni_2hN8HKUSkEBdU3X4w&s"
              }
            ]
          },
          "channels": [
            {
              "categories": [
                {
                  "parent": null,
                  "id": "0fa5a268-71f3-45e6-931b-ecdd9d873a8b",
                  "code": "furnitures",
                  "parent_id": null,
                  "name": "Furnitures",
                  "created_at": "2024-12-13T06:42:11.027Z"
                }
              ],
              "id": "2323f4bd-21ad-45b7-ae3b-cadd84dcc935",
              "created_at": "2024-12-13T06:42:10.908Z",
              "code": "samchon",
              "name": "Samchon Shopping Mall"
            }
          ],
          "tags": [
            "Herman Miller",
            "Ergonomic Chair",
            "Office Furniture",
            "Comfortable Seating"
          ],
          "units": [
            {
              "price_range": {
                "lowest": {
                  "nominal": 1200000,
                  "real": 1099000
                },
                "highest": {
                  "nominal": 1800000,
                  "real": 1599000
                }
              },
              "id": "1663a743-635d-4a17-8774-50c1e0956f64",
              "name": "Herman Miller Chair",
              "primary": true,
              "required": true
            },
            {
              "price_range": {
                "lowest": {
                  "nominal": 100000,
                  "real": 89000
                },
                "highest": {
                  "nominal": 100000,
                  "real": 89000
                }
              },
              "id": "b0425da5-bd61-4410-9e39-091b4ba21e02",
              "name": "Warranty Program",
              "primary": false,
              "required": false
            },
            {
              "price_range": {
                "lowest": {
                  "nominal": 50000,
                  "real": 39000
                },
                "highest": {
                  "nominal": 50000,
                  "real": 39000
                }
              },
              "id": "af7ae893-8e31-4516-98a1-dcb74cccd406",
              "name": "Replacement Cushion",
              "primary": false,
              "required": false
            }
          ],
          "created_at": "2024-12-13T06:42:11.917Z",
          "updated_at": "2024-12-13T06:42:11.917Z",
          "paused_at": null,
          "suspended_at": null,
          "opened_at": "2024-12-13T06:42:11.913Z",
          "closed_at": null
        },
        {
          "section": {
            "id": "a01c572c-3199-4929-ac67-ba7c31b2c808",
            "code": "general",
            "name": "General",
            "created_at": "2024-12-13T06:42:11.124Z"
          },
          "seller": {
            "type": "seller",
            "member": {
              "id": "a853492c-70b4-487f-9648-0f6109a0ad69",
              "nickname": "Robot",
              "emails": [
                {
                  "id": "81ea73c4-b41e-4022-9384-d51d3215797e",
                  "value": "robot@nestia.io",
                  "created_at": "2024-12-13T06:42:11.227Z"
                }
              ],
              "created_at": "2024-12-13T06:42:11.227Z"
            },
            "customer": {
              "id": "aeb8583b-8bd9-4d29-adea-78779b405046",
              "channel": {
                "id": "2323f4bd-21ad-45b7-ae3b-cadd84dcc935",
                "created_at": "2024-12-13T06:42:10.908Z",
                "code": "samchon",
                "name": "Samchon Shopping Mall"
              },
              "external_user": null,
              "href": "http://127.0.0.1/TestAutomation",
              "referrer": "http://127.0.0.1/NodeJS",
              "ip": "127.0.0.1",
              "created_at": "2024-12-13T06:42:11.258Z"
            },
            "citizen": {
              "id": "43aedfea-6b2c-4c18-9f69-60373c9580dd",
              "created_at": "2024-12-13T06:42:11.157Z",
              "mobile": "01012345678",
              "name": "Robot"
            },
            "id": "addccb32-ac48-460e-9624-d9809da19d99",
            "created_at": "2024-12-13T06:42:11.241Z"
          },
          "price_range": {
            "lowest": {
              "nominal": 220000,
              "real": 198000
            },
            "highest": {
              "nominal": 260000,
              "real": 198000
            }
          },
          "id": "b19b9fac-170f-4a41-962a-847c30b3ebf1",
          "snapshot_id": "f102cc5e-35a6-4580-9e24-320294de2772",
          "latest": true,
          "content": {
            "id": "2ea3d3c0-1d83-41a7-8231-6bc16229b460",
            "title": "Drawfit Women Soft Cashmere Oversized Half Coat",
            "thumbnails": [
              {
                "id": "ce0f721f-f60f-454f-b896-e26cf8feb25d",
                "created_at": "2024-12-13T06:42:11.861Z",
                "name": "drawfit-women-soft-cashmere-oversized-half-coat-thumbnail-3",
                "extension": "jpg",
                "url": "https://image.msscdn.net/thumbnails/images/goods_img/20230912/3552513/3552513_17276848899638_big.jpg?w=1200"
              },
              {
                "id": "3a33adb6-4811-4b06-adb4-fcf706dd875f",
                "created_at": "2024-12-13T06:42:11.861Z",
                "name": "drawfit-women-soft-cashmere-oversized-half-coat-thumbnail-2",
                "extension": "jpg",
                "url": "https://image.msscdn.net/thumbnails/images/goods_img/20230912/3552514/3552514_17276848381488_big.jpg?w=1200"
              },
              {
                "id": "3fd63d20-5800-4c99-8d2a-8e392d533307",
                "created_at": "2024-12-13T06:42:11.861Z",
                "name": "drawfit-women-soft-cashmere-oversized-half-coat-thumbnail-1",
                "extension": "jpg",
                "url": "https://image.msscdn.net/thumbnails/images/goods_img/20240927/4472993/4472993_17274236009691_big.jpg?w=1200"
              }
            ]
          },
          "channels": [
            {
              "categories": [
                {
                  "parent": null,
                  "id": "19f9099e-3a2f-4894-a2c7-36d8c2d7d9d7",
                  "code": "accessories",
                  "parent_id": null,
                  "name": "Accessories",
                  "created_at": "2024-12-13T06:42:11.060Z"
                },
                {
                  "parent": null,
                  "id": "69139ee2-6b29-4af8-9220-b1dc4802f554",
                  "code": "clothes",
                  "parent_id": null,
                  "name": "Clothes",
                  "created_at": "2024-12-13T06:42:11.103Z"
                }
              ],
              "id": "2323f4bd-21ad-45b7-ae3b-cadd84dcc935",
              "created_at": "2024-12-13T06:42:10.908Z",
              "code": "samchon",
              "name": "Samchon Shopping Mall"
            }
          ],
          "tags": [
            "Drawfit",
            "Women",
            "Soft Cashmere",
            "Oversized Half Coat",
            "Winter"
          ],
          "units": [
            {
              "price_range": {
                "lowest": {
                  "nominal": 220000,
                  "real": 198000
                },
                "highest": {
                  "nominal": 260000,
                  "real": 198000
                }
              },
              "id": "64d2e843-de67-499a-b02c-ee9f612b1299",
              "name": "Drawfit Women Soft Cashmere Oversized Half Coat",
              "primary": true,
              "required": true
            }
          ],
          "created_at": "2024-12-13T06:42:11.861Z",
          "updated_at": "2024-12-13T06:42:11.861Z",
          "paused_at": null,
          "suspended_at": null,
          "opened_at": "2024-12-13T06:42:11.857Z",
          "closed_at": null
        },
        {
          "section": {
            "id": "a01c572c-3199-4929-ac67-ba7c31b2c808",
            "code": "general",
            "name": "General",
            "created_at": "2024-12-13T06:42:11.124Z"
          },
          "seller": {
            "type": "seller",
            "member": {
              "id": "a853492c-70b4-487f-9648-0f6109a0ad69",
              "nickname": "Robot",
              "emails": [
                {
                  "id": "81ea73c4-b41e-4022-9384-d51d3215797e",
                  "value": "robot@nestia.io",
                  "created_at": "2024-12-13T06:42:11.227Z"
                }
              ],
              "created_at": "2024-12-13T06:42:11.227Z"
            },
            "customer": {
              "id": "aeb8583b-8bd9-4d29-adea-78779b405046",
              "channel": {
                "id": "2323f4bd-21ad-45b7-ae3b-cadd84dcc935",
                "created_at": "2024-12-13T06:42:10.908Z",
                "code": "samchon",
                "name": "Samchon Shopping Mall"
              },
              "external_user": null,
              "href": "http://127.0.0.1/TestAutomation",
              "referrer": "http://127.0.0.1/NodeJS",
              "ip": "127.0.0.1",
              "created_at": "2024-12-13T06:42:11.258Z"
            },
            "citizen": {
              "id": "43aedfea-6b2c-4c18-9f69-60373c9580dd",
              "created_at": "2024-12-13T06:42:11.157Z",
              "mobile": "01012345678",
              "name": "Robot"
            },
            "id": "addccb32-ac48-460e-9624-d9809da19d99",
            "created_at": "2024-12-13T06:42:11.241Z"
          },
          "price_range": {
            "lowest": {
              "nominal": 2990000,
              "real": 2990000
            },
            "highest": {
              "nominal": 3990000,
              "real": 3990000
            }
          },
          "id": "62b6e0fa-0638-4d6d-bf30-b8273a2b2fdc",
          "snapshot_id": "6e85dd6b-0ac0-415e-8905-08cc6987e1be",
          "latest": true,
          "content": {
            "id": "1fc24768-5829-4006-bd8e-5ed1364c479c",
            "title": "Apple Vision Air",
            "thumbnails": [
              {
                "id": "9b9a32c8-a7c9-41f1-b39f-beae7b3b1590",
                "created_at": "2024-12-13T06:42:11.813Z",
                "name": "apple-vision-pro-thumbnail",
                "extension": "png",
                "url": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTdIP_qI0xBL04d0DRIw7tIU9y0cLcwfIqi7g&s"
              }
            ]
          },
          "channels": [
            {
              "categories": [
                {
                  "parent": null,
                  "id": "9b9b36f4-4e50-48ff-ac05-ee8588be0dbe",
                  "code": "electronics",
                  "parent_id": null,
                  "name": "Electronics",
                  "created_at": "2024-12-13T06:42:10.919Z"
                },
                {
                  "parent": {
                    "parent": null,
                    "id": "9b9b36f4-4e50-48ff-ac05-ee8588be0dbe",
                    "code": "electronics",
                    "parent_id": null,
                    "name": "Electronics",
                    "created_at": "2024-12-13T06:42:10.919Z"
                  },
                  "id": "74e35773-478b-405a-97d8-0234c1fef755",
                  "code": "smart_glasses",
                  "parent_id": "9b9b36f4-4e50-48ff-ac05-ee8588be0dbe",
                  "name": "Smart Glasses",
                  "created_at": "2024-12-13T06:42:11.001Z"
                }
              ],
              "id": "2323f4bd-21ad-45b7-ae3b-cadd84dcc935",
              "created_at": "2024-12-13T06:42:10.908Z",
              "code": "samchon",
              "name": "Samchon Shopping Mall"
            }
          ],
          "tags": [
            "Apple",
            "Vision Air",
            "augmented reality",
            "smart glasses",
            "technology"
          ],
          "units": [
            {
              "price_range": {
                "lowest": {
                  "nominal": 2990000,
                  "real": 2990000
                },
                "highest": {
                  "nominal": 3990000,
                  "real": 3990000
                }
              },
              "id": "e60a9645-8c75-441f-8055-3dd2cb4836d2",
              "name": "Apple Vision Air",
              "primary": true,
              "required": true
            }
          ],
          "created_at": "2024-12-13T06:42:11.813Z",
          "updated_at": "2024-12-13T06:42:11.813Z",
          "paused_at": null,
          "suspended_at": null,
          "opened_at": "2024-12-13T06:42:11.808Z",
          "closed_at": null
        },
        {
          "section": {
            "id": "a01c572c-3199-4929-ac67-ba7c31b2c808",
            "code": "general",
            "name": "General",
            "created_at": "2024-12-13T06:42:11.124Z"
          },
          "seller": {
            "type": "seller",
            "member": {
              "id": "a853492c-70b4-487f-9648-0f6109a0ad69",
              "nickname": "Robot",
              "emails": [
                {
                  "id": "81ea73c4-b41e-4022-9384-d51d3215797e",
                  "value": "robot@nestia.io",
                  "created_at": "2024-12-13T06:42:11.227Z"
                }
              ],
              "created_at": "2024-12-13T06:42:11.227Z"
            },
            "customer": {
              "id": "aeb8583b-8bd9-4d29-adea-78779b405046",
              "channel": {
                "id": "2323f4bd-21ad-45b7-ae3b-cadd84dcc935",
                "created_at": "2024-12-13T06:42:10.908Z",
                "code": "samchon",
                "name": "Samchon Shopping Mall"
              },
              "external_user": null,
              "href": "http://127.0.0.1/TestAutomation",
              "referrer": "http://127.0.0.1/NodeJS",
              "ip": "127.0.0.1",
              "created_at": "2024-12-13T06:42:11.258Z"
            },
            "citizen": {
              "id": "43aedfea-6b2c-4c18-9f69-60373c9580dd",
              "created_at": "2024-12-13T06:42:11.157Z",
              "mobile": "01012345678",
              "name": "Robot"
            },
            "id": "addccb32-ac48-460e-9624-d9809da19d99",
            "created_at": "2024-12-13T06:42:11.241Z"
          },
          "price_range": {
            "lowest": {
              "nominal": 2000000,
              "real": 1800000
            },
            "highest": {
              "nominal": 4450000,
              "real": 3993000
            }
          },
          "id": "6b0c6399-17f6-420e-a693-c453c8fd155d",
          "snapshot_id": "fae10058-fb6b-4a87-bbc9-4e1cf1746a5d",
          "latest": true,
          "content": {
            "id": "5cb7834c-6867-4553-bdea-072d986a9435",
            "title": "Apple MacBook Pro",
            "thumbnails": [
              {
                "id": "cbb4e2a3-19bc-47d9-941e-5394fe49540a",
                "created_at": "2024-12-13T06:42:11.584Z",
                "name": "apple-macbook-pro-thumbnail",
                "extension": "png",
                "url": "https://store.storeimages.cdn-apple.com/8756/as-images.apple.com/is/mbp14-spaceblack-gallery1-202410?wid=4000&hei=3074&fmt=jpeg&qlt=90&.v=1729264981617"
              }
            ]
          },
          "channels": [
            {
              "categories": [
                {
                  "parent": null,
                  "id": "9b9b36f4-4e50-48ff-ac05-ee8588be0dbe",
                  "code": "electronics",
                  "parent_id": null,
                  "name": "Electronics",
                  "created_at": "2024-12-13T06:42:10.919Z"
                },
                {
                  "parent": {
                    "parent": {
                      "parent": null,
                      "id": "9b9b36f4-4e50-48ff-ac05-ee8588be0dbe",
                      "code": "electronics",
                      "parent_id": null,
                      "name": "Electronics",
                      "created_at": "2024-12-13T06:42:10.919Z"
                    },
                    "id": "ab794f96-49c0-4318-9ac8-91318b188e6c",
                    "code": "laptops",
                    "parent_id": "9b9b36f4-4e50-48ff-ac05-ee8588be0dbe",
                    "name": "Laptops",
                    "created_at": "2024-12-13T06:42:10.940Z"
                  },
                  "id": "183f6097-70dd-4333-8dc4-f0c0cf43fa69",
                  "code": "macbooks",
                  "parent_id": "ab794f96-49c0-4318-9ac8-91318b188e6c",
                  "name": "MacBooks",
                  "created_at": "2024-12-13T06:42:10.948Z"
                }
              ],
              "id": "2323f4bd-21ad-45b7-ae3b-cadd84dcc935",
              "created_at": "2024-12-13T06:42:10.908Z",
              "code": "samchon",
              "name": "Samchon Shopping Mall"
            }
          ],
          "tags": [],
          "units": [
            {
              "price_range": {
                "lowest": {
                  "nominal": 2000000,
                  "real": 1800000
                },
                "highest": {
                  "nominal": 4150000,
                  "real": 3735000
                }
              },
              "id": "bf0794e6-1c99-4a7d-be11-5e6a5bf690b0",
              "name": "MacBook M3 Pro 14inch Entity",
              "primary": false,
              "required": true
            },
            {
              "price_range": {
                "lowest": {
                  "nominal": 100000,
                  "real": 89000
                },
                "highest": {
                  "nominal": 100000,
                  "real": 89000
                }
              },
              "id": "aeb2a291-ec9e-4527-b3cd-d6d686676a58",
              "name": "Warranty Program",
              "primary": false,
              "required": false
            },
            {
              "price_range": {
                "lowest": {
                  "nominal": 200000,
                  "real": 169000
                },
                "highest": {
                  "nominal": 200000,
                  "real": 169000
                }
              },
              "id": "54eb903a-eb2e-4d60-9ddc-786a47999dda",
              "name": "Magnetic Keyboard",
              "primary": false,
              "required": false
            }
          ],
          "created_at": "2024-12-13T06:42:11.585Z",
          "updated_at": "2024-12-13T06:42:11.585Z",
          "paused_at": null,
          "suspended_at": null,
          "opened_at": "2024-12-13T06:42:11.580Z",
          "closed_at": null
        },
        {
          "section": {
            "id": "a01c572c-3199-4929-ac67-ba7c31b2c808",
            "code": "general",
            "name": "General",
            "created_at": "2024-12-13T06:42:11.124Z"
          },
          "seller": {
            "type": "seller",
            "member": {
              "id": "a853492c-70b4-487f-9648-0f6109a0ad69",
              "nickname": "Robot",
              "emails": [
                {
                  "id": "81ea73c4-b41e-4022-9384-d51d3215797e",
                  "value": "robot@nestia.io",
                  "created_at": "2024-12-13T06:42:11.227Z"
                }
              ],
              "created_at": "2024-12-13T06:42:11.227Z"
            },
            "customer": {
              "id": "aeb8583b-8bd9-4d29-adea-78779b405046",
              "channel": {
                "id": "2323f4bd-21ad-45b7-ae3b-cadd84dcc935",
                "created_at": "2024-12-13T06:42:10.908Z",
                "code": "samchon",
                "name": "Samchon Shopping Mall"
              },
              "external_user": null,
              "href": "http://127.0.0.1/TestAutomation",
              "referrer": "http://127.0.0.1/NodeJS",
              "ip": "127.0.0.1",
              "created_at": "2024-12-13T06:42:11.258Z"
            },
            "citizen": {
              "id": "43aedfea-6b2c-4c18-9f69-60373c9580dd",
              "created_at": "2024-12-13T06:42:11.157Z",
              "mobile": "01012345678",
              "name": "Robot"
            },
            "id": "addccb32-ac48-460e-9624-d9809da19d99",
            "created_at": "2024-12-13T06:42:11.241Z"
          },
          "price_range": {
            "lowest": {
              "nominal": 2000000,
              "real": 1800000
            },
            "highest": {
              "nominal": 4450000,
              "real": 3993000
            }
          },
          "id": "2338cfa2-6e52-46e9-9d0c-a706425962e9",
          "snapshot_id": "bab8605c-d6a6-41e5-b3c8-0e7caf4b3fe0",
          "latest": true,
          "content": {
            "id": "32765e09-6001-4cdb-9db2-af3a9c018a17",
            "title": "Apple MacBook Pro",
            "thumbnails": [
              {
                "id": "fb222d61-315f-45c7-a276-ca7524452863",
                "created_at": "2024-12-13T06:42:11.345Z",
                "name": "apple-iphone-thumbnail",
                "extension": "jpeg",
                "url": "https://store.storeimages.cdn-apple.com/8756/as-images.apple.com/is/mbp14-spaceblack-gallery1-202410?wid=4000&hei=3074&fmt=jpeg&qlt=90&.v=1729264981617"
              }
            ]
          },
          "channels": [
            {
              "categories": [
                {
                  "parent": null,
                  "id": "9b9b36f4-4e50-48ff-ac05-ee8588be0dbe",
                  "code": "electronics",
                  "parent_id": null,
                  "name": "Electronics",
                  "created_at": "2024-12-13T06:42:10.919Z"
                },
                {
                  "parent": {
                    "parent": null,
                    "id": "9b9b36f4-4e50-48ff-ac05-ee8588be0dbe",
                    "code": "electronics",
                    "parent_id": null,
                    "name": "Electronics",
                    "created_at": "2024-12-13T06:42:10.919Z"
                  },
                  "id": "ab794f96-49c0-4318-9ac8-91318b188e6c",
                  "code": "laptops",
                  "parent_id": "9b9b36f4-4e50-48ff-ac05-ee8588be0dbe",
                  "name": "Laptops",
                  "created_at": "2024-12-13T06:42:10.940Z"
                },
                {
                  "parent": {
                    "parent": {
                      "parent": null,
                      "id": "9b9b36f4-4e50-48ff-ac05-ee8588be0dbe",
                      "code": "electronics",
                      "parent_id": null,
                      "name": "Electronics",
                      "created_at": "2024-12-13T06:42:10.919Z"
                    },
                    "id": "ab794f96-49c0-4318-9ac8-91318b188e6c",
                    "code": "laptops",
                    "parent_id": "9b9b36f4-4e50-48ff-ac05-ee8588be0dbe",
                    "name": "Laptops",
                    "created_at": "2024-12-13T06:42:10.940Z"
                  },
                  "id": "183f6097-70dd-4333-8dc4-f0c0cf43fa69",
                  "code": "macbooks",
                  "parent_id": "ab794f96-49c0-4318-9ac8-91318b188e6c",
                  "name": "MacBooks",
                  "created_at": "2024-12-13T06:42:10.948Z"
                }
              ],
              "id": "2323f4bd-21ad-45b7-ae3b-cadd84dcc935",
              "created_at": "2024-12-13T06:42:10.908Z",
              "code": "samchon",
              "name": "Samchon Shopping Mall"
            }
          ],
          "tags": [
            "macbook",
            "apple",
            "laptop",
            "electronics",
            "professional"
          ],
          "units": [
            {
              "price_range": {
                "lowest": {
                  "nominal": 2000000,
                  "real": 1800000
                },
                "highest": {
                  "nominal": 4150000,
                  "real": 3735000
                }
              },
              "id": "f6825138-1e94-42ef-90b2-f27d1ea5581c",
              "name": "MacBook M3 Pro 14inch Entity",
              "primary": true,
              "required": true
            },
            {
              "price_range": {
                "lowest": {
                  "nominal": 100000,
                  "real": 89000
                },
                "highest": {
                  "nominal": 100000,
                  "real": 89000
                }
              },
              "id": "461232cc-bd5b-48b8-a693-f2888ebb9266",
              "name": "Warranty Program",
              "primary": false,
              "required": false
            },
            {
              "price_range": {
                "lowest": {
                  "nominal": 200000,
                  "real": 169000
                },
                "highest": {
                  "nominal": 200000,
                  "real": 169000
                }
              },
              "id": "f6ea807d-484f-4a37-be51-92cbb9fdc119",
              "name": "Magnetic Keyboard",
              "primary": false,
              "required": false
            }
          ],
          "created_at": "2024-12-13T06:42:11.347Z",
          "updated_at": "2024-12-13T06:42:11.346Z",
          "paused_at": null,
          "suspended_at": null,
          "opened_at": "2024-12-13T06:42:11.340Z",
          "closed_at": null
        }
      ]
    }
  },
  {
    "name": "shoppings_customers_sales_getById",
    "method": "get",
    "path": "/shoppings/customers/sales/{id}",
    "description": "Get a sale info.\n\nGet a {@link IShoppingSale sale} with detailed information.\n\nIf you're a {@link IShoppingSeller seller}, you can only access to the\nyour own {@link IShoppingSale sale}. Otherwise you're a\n{@link IShoppingCustomer customer}, you can access to only the operating\nsales in the market. You can't access to the unopened, closed, or suspended\nsales.",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "description": " Target sale's {@link IShoppingSale.id }",
          "type": "string",
          "format": "uuid"
        }
      },
      "additionalProperties": false,
      "required": [
        "id"
      ],
      "$defs": {
        "IShoppingChannelCategory.IInvert": {
          "description": "Invert category information with parent category.",
          "type": "object",
          "properties": {
            "parent": {
              "title": "Parent category info with recursive structure",
              "description": "Parent category info with recursive structure.\n\nIf no parent exists, then be `null`.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "$ref": "#/$defs/IShoppingChannelCategory.IInvert"
                }
              ]
            },
            "id": {
              "title": "Primary Key",
              "description": "Primary Key.",
              "type": "string",
              "format": "uuid"
            },
            "code": {
              "title": "Identifier code of the category",
              "description": "Identifier code of the category.\n\nThe code must be unique in the channel.",
              "type": "string"
            },
            "parent_id": {
              "title": "Parent category's ID",
              "description": "Parent category's ID.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "name": {
              "title": "Representative name of the category",
              "description": "Representative name of the category.\n\nThe name must be unique within the parent category. If no parent exists,\nthen the name must be unique within the channel between no parent\ncategories.",
              "type": "string"
            },
            "created_at": {
              "title": "Creation time of record",
              "description": "Creation time of record.",
              "type": "string",
              "format": "date-time"
            }
          },
          "required": [
            "parent",
            "id",
            "code",
            "parent_id",
            "name",
            "created_at"
          ]
        }
      }
    },
    "output": {
      "description": "Seller sales products.\n\n`IShoppingSale` is an entity that embodies \"product sales\" (sales)\ninformation registered by the {@link ISoppingSeller seller}. And the main\ninformation of the sale is recorded in the sub {@link IShoppingSaleSnapshot},\nnot in the main `IShoppingSale`. When a seller changes a previously registered\nitem, the existing `IShoppingSale` record is not changed, but a new\n{@link IShoppingSaleSnapshot snapshot} record be created.\n\nThis is to preserve the {@link IShoppingCustomer customer}'s\n{@link IShoppingOrder purchase history} flawlessly after the customer\npurchases a specific item, even if the seller changes the components or\nprice of the item. It is also intended to support sellers in so-called A/B\ntesting, which involves changing components or prices and measuring the\nperformance in each case.",
      "type": "object",
      "properties": {
        "section": {
          "title": "Belonged section",
          "description": "Section information.\n\n`IShoppingSection` is a concept that refers to the spatial information of\nthe market.\n\nIf we compare the section mentioned here to the offline market, it means a\nspatially separated area within the store, such as the \"fruit corner\" or\n\"butcher corner\". Therefore, in the {@link IShoppingSale sale} entity, it is\nnot possible to classify multiple sections simultaneously, but only one section\ncan be classified.\n\nBy the way, if your shopping mall system requires only one section, then just\nuse only one. This concept is designed to be expandable in the future.",
          "type": "object",
          "properties": {
            "id": {
              "title": "Primary Key",
              "description": "Primary Key.",
              "type": "string",
              "format": "uuid"
            },
            "code": {
              "title": "Identifier code",
              "description": "Identifier code.",
              "type": "string"
            },
            "name": {
              "title": "Representative name of the section",
              "description": "Representative name of the section.",
              "type": "string"
            },
            "created_at": {
              "title": "Creation time of record",
              "description": "Creation time of record.",
              "type": "string",
              "format": "date-time"
            }
          },
          "required": [
            "id",
            "code",
            "name",
            "created_at"
          ]
        },
        "seller": {
          "title": "Seller who has registered the sale",
          "description": "Invert information starting from seller info.\n\nInstead of accessing to the seller information from the\n{@link IShoppingCustomer.member} -> {@link IShoppingMember.seller},\n`IShoppingSeller.IInvert` starts from the seller information\nand access to the customer, member and {@link IShoppingCitizen citizen}\ninformation inversely.\n\n------------------------------\n\nDescription of the current {@link IShoppingSeller.IInvert} type:\n\n> Invert information starting from seller info.\n> \n> Instead of accessing to the seller information from the\n> {@link IShoppingCustomer.member} -> {@link IShoppingMember.seller},\n> `IShoppingSeller.IInvert` starts from the seller information\n> and access to the customer, member and {@link IShoppingCitizen citizen}\n> information inversely.\n\n------------------------------\n\nDescription of the parent {@link IShoppingSeller} type:\n\n> Seller information.\n> \n> `IShoppingSeller` is an entity that embodies a person who registers\n> {@link IShoppingSale sales} to operate selling activities, with\n> {@link IShoppingMember membership} joining.\n> \n> For reference, unlike {@link IShoppingCustomer customers} which can\n> participate even without membership joining, seller must join membership\n> to operate sales. Also, seller must do the\n> {@link IShoppingCitizen real-name and mobile authentication}, too.",
          "type": "object",
          "properties": {
            "type": {
              "title": "Discriminant for the type of customer",
              "description": "Discriminant for the type of customer.",
              "const": "seller"
            },
            "member": {
              "title": "Membership joining information",
              "description": "Invert information of member.\n\nThis invert member information has been designed to be used for another\ninvert information of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert}\n- {@link IShoppingAdministrator.IInvert}\n\n------------------------------\n\nDescription of the current {@link IShoppingMember.IInvert} type:\n\n> Invert information of member.\n> \n> This invert member information has been designed to be used for another\n> invert information of sellers and administrators like below.\n> \n> - {@link IShoppingSeller.IInvert}\n> - {@link IShoppingAdministrator.IInvert}\n\n------------------------------\n\nDescription of the parent {@link IShoppingMember} type:\n\n> Member Account.\n> \n> `IShoppingMember` is an entity that symbolizes the case when a\n> {@link IShoppingCustomer} signs up as a member of this shopping mall\n> system.\n> \n> If a `IShoppingMember` has seller or administrator property. it means that\n> the {@link IShoppingCustomer} has acting as a {@link IShoppingSeller seller}\n> or {@link IShoppingAdministrator administrator} at the same time.",
              "type": "object",
              "properties": {
                "id": {
                  "title": "Primary Key",
                  "description": "Primary Key.",
                  "type": "string",
                  "format": "uuid"
                },
                "nickname": {
                  "title": "Nickname that uniquely identifies the member",
                  "description": "Nickname that uniquely identifies the member.",
                  "type": "string"
                },
                "emails": {
                  "title": "List of emails",
                  "description": "List of emails.",
                  "type": "array",
                  "items": {
                    "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "title": "Primary Key",
                        "description": "Primary Key.",
                        "type": "string",
                        "format": "uuid"
                      },
                      "value": {
                        "title": "Email address value",
                        "description": "Email address value.",
                        "type": "string",
                        "format": "email"
                      },
                      "created_at": {
                        "title": "Creation time of record",
                        "description": "Creation time of record.",
                        "type": "string",
                        "format": "date-time"
                      }
                    },
                    "required": [
                      "id",
                      "value",
                      "created_at"
                    ]
                  }
                },
                "created_at": {
                  "title": "Creation time of record",
                  "description": "Creation time of record.\n\nAnother words, the time when the member has signed up.",
                  "type": "string",
                  "format": "date-time"
                }
              },
              "required": [
                "id",
                "nickname",
                "emails",
                "created_at"
              ]
            },
            "customer": {
              "title": "Customer, the connection information",
              "description": "Inverted customer informatino.\n\nThis inverted customer information has been designed to be used for\nanother invert information of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert}\n- {@link IShoppingAdministrator.IInvert}\n\n------------------------------\n\nDescription of the current {@link IShoppingCustomer.IInvert} type:\n\n> Inverted customer informatino.\n> \n> This inverted customer information has been designed to be used for\n> another invert information of sellers and administrators like below.\n> \n> - {@link IShoppingSeller.IInvert}\n> - {@link IShoppingAdministrator.IInvert}\n\n------------------------------\n\nDescription of the parent {@link IShoppingCustomer} type:\n\n> Customer information, but not a person but a connection basis.\n> \n> `IShoppingCustomer` is an entity that literally embodies the information of\n> those who participated in the market as customers. By the way, the\n> `IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\n> even if the same person connects to the shopping mall multiple, multiple\n> records are created in `IShoppingCustomer`.\n> \n> The first purpose of this is to track the customer's inflow path in detail,\n> and it is for cases where the same person enters as a non-member,\n> {@link IShoppingCartCommodity puts items in the shopping cart} in advance,\n> and only authenticates their {@link IShoppingCitizen real name} or\n> registers/logs in at the moment of {@link IShoppingOrderPublish payment}.\n> It is the second. Lastly, it is to accurately track the activities that\n> a person performs at the shopping mall in various ways like below.\n> \n> - Same person comes from an {@link IShoppingExternalUser external service}\n> - Same person creates multiple accounts\n> - Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n> - Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n> \n> Therefore, `IShoppingCustomer` can have multiple records with the same\n> {@link IShoppingCitizen}, {@link IShoppingMember}, and\n> {@link IShoppingExternalUser}. Additionally, if a customer signs up for\n> membership after verifying their real name or signs up for our service after\n> being a user of an external service, all related records are changed at once.\n> Therefore, identification and tracking of customers can be done very\n> systematically.",
              "type": "object",
              "properties": {
                "id": {
                  "title": "Primary Key",
                  "description": "Primary Key.",
                  "type": "string",
                  "format": "uuid"
                },
                "channel": {
                  "title": "Belonged channel",
                  "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "Primary Key",
                      "description": "Primary Key.",
                      "type": "string",
                      "format": "uuid"
                    },
                    "created_at": {
                      "title": "Creation time of record",
                      "description": "Creation time of record.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "code": {
                      "title": "Identifier code",
                      "description": "Identifier code.",
                      "type": "string"
                    },
                    "name": {
                      "title": "Name of the channel",
                      "description": "Name of the channel.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "created_at",
                    "code",
                    "name"
                  ]
                },
                "external_user": {
                  "title": "External user information",
                  "description": "External user information.\n\nWhen the customer has come frome an external service.",
                  "oneOf": [
                    {
                      "type": "null"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "title": "Primary Key",
                          "description": "Primary Key.",
                          "type": "string",
                          "format": "uuid"
                        },
                        "citizen": {
                          "title": "Citizen activation info",
                          "description": "Citizen activation info.",
                          "oneOf": [
                            {
                              "type": "null"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "title": "Primary Key",
                                  "description": "Primary Key.",
                                  "type": "string",
                                  "format": "uuid"
                                },
                                "created_at": {
                                  "title": "Creation time of record",
                                  "description": "Creation time of record.",
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "mobile": {
                                  "title": "Mobile number",
                                  "description": "Mobile number.",
                                  "x-wrtn-payment-order-mobile": true,
                                  "type": "string",
                                  "pattern": "^[0-9]*$"
                                },
                                "name": {
                                  "title": "Real name, or equivalent nickname",
                                  "description": "Real name, or equivalent nickname.",
                                  "x-wrtn-payment-order-citizen": true,
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "created_at",
                                "mobile",
                                "name"
                              ],
                              "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile} input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                            }
                          ]
                        },
                        "created_at": {
                          "title": "Creation time of record",
                          "description": "Creation time of record.\n\nAnother word, first time when the external user connected.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "uid": {
                          "title": "Identifier key of external user from the external system",
                          "description": "Identifier key of external user from the external system.",
                          "type": "string"
                        },
                        "application": {
                          "title": "Identifier code of the external service",
                          "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code} in common.",
                          "type": "string"
                        },
                        "nickname": {
                          "title": "Nickname of external user in the external system",
                          "description": "Nickname of external user in the external system.",
                          "type": "string"
                        },
                        "data": {
                          "description": "Additional information about external user from the external\nsystem."
                        }
                      },
                      "required": [
                        "id",
                        "citizen",
                        "created_at",
                        "uid",
                        "application",
                        "nickname",
                        "data"
                      ],
                      "description": "External user information.\n\n`IShoppingExternalUser` is an entity dsigned for when this system needs\nto connect with external services and welcome their users as\n{@link IShoppingCustomer customers} of this service.\n\nFor reference, customers who connect from an external service must have\nthis record, and the external service user is identified through the two\nattributes {@link application} and {@link uid}. If a customer connected\nfrom an external service completes\n{@link IShoppingCitizen real-name authentication} from this service, each\ntime the external service user reconnects to this service and issues a\nnew customer authentication token, real-name authentication begins with\ncompleted.\n\nAnd {@link password} is the password issued to the user by the external\nservice system (the so-called permanent user authentication token), and\nis never the actual user password. However, for customers who entered the\nsame application and uid as the current external system user, this is to\ndetermine whether to view this as a correct external system user or a\nviolation.\n\nIn addition, additional information received from external services can\nbe recorded in the data field in JSON format."
                    }
                  ]
                },
                "href": {
                  "title": "Connection address",
                  "description": "Connection address.\n\nSame with {@link window.location.href} of client.",
                  "type": "string",
                  "format": "uri"
                },
                "referrer": {
                  "title": "Referrer address",
                  "description": "Referrer address.\n\nSame with {@link window.document.referrer} of client.",
                  "oneOf": [
                    {
                      "type": "null"
                    },
                    {
                      "type": "string",
                      "format": "uri"
                    },
                    {
                      "type": "string",
                      "maxLength": 0
                    }
                  ]
                },
                "ip": {
                  "title": "Connection IP Address",
                  "description": "Connection IP Address.",
                  "oneOf": [
                    {
                      "type": "string",
                      "format": "ipv4"
                    },
                    {
                      "type": "string",
                      "format": "ipv6"
                    }
                  ]
                },
                "created_at": {
                  "title": "Creation time of the connection record",
                  "description": "Creation time of the connection record.",
                  "type": "string",
                  "format": "date-time"
                }
              },
              "required": [
                "id",
                "channel",
                "external_user",
                "href",
                "referrer",
                "ip",
                "created_at"
              ]
            },
            "citizen": {
              "title": "Real-name and mobile number authentication information",
              "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile} input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored.",
              "type": "object",
              "properties": {
                "id": {
                  "title": "Primary Key",
                  "description": "Primary Key.",
                  "type": "string",
                  "format": "uuid"
                },
                "created_at": {
                  "title": "Creation time of record",
                  "description": "Creation time of record.",
                  "type": "string",
                  "format": "date-time"
                },
                "mobile": {
                  "title": "Mobile number",
                  "description": "Mobile number.",
                  "x-wrtn-payment-order-mobile": true,
                  "type": "string",
                  "pattern": "^[0-9]*$"
                },
                "name": {
                  "title": "Real name, or equivalent nickname",
                  "description": "Real name, or equivalent nickname.",
                  "x-wrtn-payment-order-citizen": true,
                  "type": "string"
                }
              },
              "required": [
                "id",
                "created_at",
                "mobile",
                "name"
              ]
            },
            "id": {
              "title": "Primary Key",
              "description": "Primary Key.",
              "type": "string",
              "format": "uuid"
            },
            "created_at": {
              "title": "Creation tmie of record",
              "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up.",
              "type": "string",
              "format": "date-time"
            }
          },
          "required": [
            "type",
            "member",
            "customer",
            "citizen",
            "id",
            "created_at"
          ]
        },
        "id": {
          "title": "Primary Key of Sale",
          "description": "Primary Key of Sale.",
          "type": "string",
          "format": "uuid"
        },
        "snapshot_id": {
          "title": "Primary Key of Snapshot",
          "description": "Primary Key of Snapshot.",
          "type": "string",
          "format": "uuid"
        },
        "latest": {
          "title": "Whether the snapshot is the latest one or not",
          "description": "Whether the snapshot is the latest one or not.",
          "type": "boolean"
        },
        "content": {
          "title": "Description and image content describing the sale",
          "description": "Content information of sale snapshot.\n\n`IShoppingSaleContent` is an entity embodies the description contents\nof {@link IShoppingSale}.",
          "type": "object",
          "properties": {
            "id": {
              "title": "Primary Key",
              "description": "Primary Key.",
              "type": "string",
              "format": "uuid"
            },
            "title": {
              "title": "Title of the content",
              "description": "Title of the content.",
              "type": "string"
            },
            "format": {
              "title": "Format of the body content",
              "description": "Format of the body content.\n\nSame meaning with file extension like `html`, `md`, and `txt`.",
              "oneOf": [
                {
                  "const": "html"
                },
                {
                  "const": "md"
                },
                {
                  "const": "txt"
                }
              ]
            },
            "body": {
              "title": "The main body content",
              "description": "The main body content.",
              "type": "string"
            },
            "files": {
              "title": "List of attached files",
              "description": "List of attached files.",
              "type": "array",
              "items": {
                "description": "Attachment File.\n\nEvery attachment files that are managed in current system.\n\nFor reference, it is possible to omit one of file {@link name}\nor {@link extension} like `.gitignore` or `README` case, but not\npossible to omit both of them.",
                "type": "object",
                "properties": {
                  "id": {
                    "title": "Primary Key",
                    "description": "Primary Key.",
                    "type": "string",
                    "format": "uuid"
                  },
                  "created_at": {
                    "title": "Creation time of attachment file",
                    "description": "Creation time of attachment file.",
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "title": "File name, except extension",
                    "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string.",
                    "type": "string",
                    "maxLength": 255
                  },
                  "extension": {
                    "title": "Extension",
                    "description": "Extension.\n\nPossible to omit like `README` case.",
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 8
                      }
                    ]
                  },
                  "url": {
                    "title": "URL path of the real file",
                    "description": "URL path of the real file.",
                    "type": "string",
                    "format": "uri",
                    "contentMediaType": "image/*"
                  }
                },
                "required": [
                  "id",
                  "created_at",
                  "name",
                  "extension",
                  "url"
                ]
              }
            },
            "thumbnails": {
              "title": "List of thumbnails",
              "description": "List of thumbnails.",
              "type": "array",
              "items": {
                "description": "Attachment File.\n\nEvery attachment files that are managed in current system.\n\nFor reference, it is possible to omit one of file {@link name}\nor {@link extension} like `.gitignore` or `README` case, but not\npossible to omit both of them.",
                "type": "object",
                "properties": {
                  "id": {
                    "title": "Primary Key",
                    "description": "Primary Key.",
                    "type": "string",
                    "format": "uuid"
                  },
                  "created_at": {
                    "title": "Creation time of attachment file",
                    "description": "Creation time of attachment file.",
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "title": "File name, except extension",
                    "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string.",
                    "type": "string",
                    "maxLength": 255
                  },
                  "extension": {
                    "title": "Extension",
                    "description": "Extension.\n\nPossible to omit like `README` case.",
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 8
                      }
                    ]
                  },
                  "url": {
                    "title": "URL path of the real file",
                    "description": "URL path of the real file.",
                    "type": "string",
                    "format": "uri",
                    "contentMediaType": "image/*"
                  }
                },
                "required": [
                  "id",
                  "created_at",
                  "name",
                  "extension",
                  "url"
                ]
              }
            }
          },
          "required": [
            "id",
            "title",
            "format",
            "body",
            "files",
            "thumbnails"
          ]
        },
        "channels": {
          "title": "List of channels and categories",
          "description": "List of channels and categories.\n\nWhich channels and categories the sale is registered to.",
          "type": "array",
          "items": {
            "description": "Target channel (and categories) of sale to sell.\n\n`IShoppingSaleChannel` is an entity that expresses through which\n{@link IShoppingChannel channel} a listing {@link IShoppingSale} is sold.\n\nAlso, if {@link IShoppingChannelCategory categories} are specified, it also\nmeans that the sale be sold. Otherwise, none of the categories of the channel\nbeing specified, it means that every categories of the channel is listing the\ntarget sale.",
            "type": "object",
            "properties": {
              "categories": {
                "title": "List of categories of the channel listing the sale",
                "description": "List of categories of the channel listing the sale.\n\nIf empty, it means all categories of the channel is listing the sale.",
                "type": "array",
                "items": {
                  "$ref": "#/$defs/IShoppingChannelCategory.IInvert"
                }
              },
              "id": {
                "title": "Primary Key",
                "description": "Primary Key.",
                "type": "string",
                "format": "uuid"
              },
              "created_at": {
                "title": "Creation time of record",
                "description": "Creation time of record.",
                "type": "string",
                "format": "date-time"
              },
              "code": {
                "title": "Identifier code",
                "description": "Identifier code.",
                "type": "string"
              },
              "name": {
                "title": "Name of the channel",
                "description": "Name of the channel.",
                "type": "string"
              }
            },
            "required": [
              "categories",
              "id",
              "created_at",
              "code",
              "name"
            ]
          },
          "minItems": 1
        },
        "tags": {
          "title": "List of search tags",
          "description": "List of search tags.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "units": {
          "title": "List of units",
          "description": "List of units.\n\nRecords about individual product composition information that are sold\nin the sale. Each {@link IShoppingSaleUnit unit} record has configurable\n{@link IShoppingSaleUnitOption options},\n{@link IShoppingSaleUnitOptionCandidate candidate} values for each\noption, and {@link IShoppingSaleUnitStock final stocks} determined by\nselecting every candidate values of each option.",
          "type": "array",
          "items": {
            "description": "Product composition information handled in the sale.\n\n`IShoppingSaleUnit` is an entity that embodies the \"individual product\"\ninformation handled in the {@link IShoppingSale sale}.\n\nFor reference, the reason why `IShoppingSaleUnit` is separated from\n{@link IShoppingSaleSnapshot} by an algebraic relationship of 1: N is because\nthere are some cases where multiple products are sold in one listing. This is\nthe case with so-called \"bundled products\".\n\n- Bundle from regular product (Mackbook Set)\n  - Main Body\n  - Keyboard\n  - Mouse\n  - Apple Care (Free A/S Voucher)\n\nAnd again, `IShoppingSaleUnit` does not in itself refer to the\n{@link IShoppingSaleUnitStock final stock} that the\n{@link IShoppingCustomer customer} will {@link IShoppingOrder purchase}.\nThe final stock can be found only after selecting all given\n{@link IShoppingSaleUnitOption options} and their\n{@link IShoppingSaleUnitOptionCandidate candidate values}.\n\nFor example, even if you buy a Macbook, the final stocks are determined only\nafter selecting all the options (CPU / RAM / SSD), etc.",
            "type": "object",
            "properties": {
              "options": {
                "title": "List of options",
                "description": "List of options.",
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "candidates": {
                          "title": "List of candidate values",
                          "description": "List of candidate values.",
                          "type": "array",
                          "items": {
                            "description": "Selectable candidate values within an option.\n\n`IShoppingSaleUnitOptionCandidate` is an entity that represents individual\ncandidate values that can be selected from\n{@link IShoppingSaleUnitSelectableOption options of the \"select\" type}.\n\n- Example\n  - RAM: 8GB, 16GB, 32GB\n  - GPU: RTX 3060, RTX 4080, TESLA\n  - License: Private, Commercial, Educatiion\n\nBy the way, if belonged option is not \"select\" type, this entity never\nbeing used.",
                            "type": "object",
                            "properties": {
                              "id": {
                                "title": "Primary Key",
                                "description": "Primary Key.",
                                "type": "string",
                                "format": "uuid"
                              },
                              "name": {
                                "title": "Represents the name of the candidate value",
                                "description": "Represents the name of the candidate value.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "name"
                            ]
                          },
                          "minItems": 1
                        },
                        "id": {
                          "title": "Primary Key",
                          "description": "Primary Key.",
                          "type": "string",
                          "format": "uuid"
                        },
                        "type": {
                          "title": "Discriminant for the type of selectable option",
                          "description": "Discriminant for the type of selectable option.",
                          "const": "select"
                        },
                        "name": {
                          "title": "Represents the name of the option",
                          "description": "Represents the name of the option.",
                          "type": "string"
                        },
                        "variable": {
                          "title": "Whether the option is variable or not",
                          "description": "Whether the option is variable or not.\n\nWhen type of current option is \"select\", this attribute means whether\nselecting different candidate value affects the final stock or not.",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "candidates",
                        "id",
                        "type",
                        "name",
                        "variable"
                      ],
                      "description": "Individual option information on units for sale.\n\n`IShoppingSaleUnitSelectableOption` is a subsidiary entity of\n{@link IShoppingSaleUnit} that represents individual products in the\n{@link IShoppingSale sale}, and is an entity designed to represent individual\nselectable option information for the unit.\n\n- Examples of Options\n  - selectable options\n    - Computer: CPU, RAM, SSD, etc.\n    - Clothes: size, color, style, etc.\n  - descriptive options\n    - Engrave\n    - Simple question\n\nIf the {@link variable} property value is `true`, the final stock that the\n{@link IShoppingCustomer customer} will purchase changes depending on the\nselection of the {@link IShoppingSaleUnitOptionCandidate candidate value}.\n\nConversely, if it is a type other than \"select\", or if the {@link variable}\nproperty value is \"false\", , this is an option that has no meaning beyond\nsimple information transfer. Therefore, no matter what value the customer\nchooses when purchasing it, the option in this case does not affect the\n{@link IShoppingSaleUnitStock final stock}."
                    },
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "title": "Primary Key",
                          "description": "Primary Key.",
                          "type": "string",
                          "format": "uuid"
                        },
                        "type": {
                          "title": "Type of descriptive option",
                          "description": "Type of descriptive option.\n\nWhich typed value should be written when purchasing.",
                          "oneOf": [
                            {
                              "const": "string"
                            },
                            {
                              "const": "number"
                            },
                            {
                              "const": "boolean"
                            }
                          ]
                        },
                        "name": {
                          "title": "Readable name of the option",
                          "description": "Readable name of the option.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type",
                        "name"
                      ],
                      "description": "Descriptive option.\n\nWhen type of the option not `\"select\"`, it means the option is descriptive\nthat requiring {@link IShoppingCustomer customers} to write some value to\n{@link IShoppingOrder purchase}. Also, whatever customer writes about the\noption, it does not affect the {@link IShoppingSaleUnitStock final stock}.\n\nAnother words, the descriptive option is just for information transfer."
                    }
                  ]
                }
              },
              "stocks": {
                "title": "List of final stocks",
                "description": "List of final stocks.",
                "type": "array",
                "items": {
                  "description": "Final component information on units for sale.\n\n`IShoppingSaleUnitStock` is a subsidiary entity of {@link IShoppingSaleUnit}\nthat represents a product catalog for sale, and is a kind of final stock that is\nconstructed by selecting all {@link IShoppingSaleUnitSelectableOption options}\n(variable \"select\" type) and their\n{@link IShoppingSaleUnitOptionCandidate candidate} values in the belonging unit.\nIt is the \"good\" itself that customers actually purchase.\n\n- Product Name) MacBook\n  - Options\n    - CPU: { i3, i5, i7, i9 }\n    - RAM: { 8GB, 16GB, 32GB, 64GB, 96GB }\n    - SSD: { 256GB, 512GB, 1TB }\n  - Number of final stocks: 4 * 5 * 3 = 60\n\nFor reference, the total number of `IShoppingSaleUnitStock` records in an\nattribution unit can be obtained using Cartesian Product. In other words, the\nvalue obtained by multiplying all the candidate values that each\n(variable \"select\" type) option can have by the number of cases is the total\nnumber of final stocks in the unit.\n\nOf course, without a single variable \"select\" type option, the final stocks\ncount in the unit is only 1.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "Primary Key",
                      "description": "Primary Key.",
                      "type": "string",
                      "format": "uuid"
                    },
                    "name": {
                      "title": "Representative name of the stock",
                      "description": "Representative name of the stock.",
                      "type": "string"
                    },
                    "price": {
                      "title": "Price of the stock",
                      "description": "Shopping price interface.",
                      "type": "object",
                      "properties": {
                        "nominal": {
                          "title": "Nominal price",
                          "description": "Nominal price.\n\nThis is not {@link real real price} to pay, but just a nominal price to show.\nIf this value is greater than the {@link real real price}, it would be shown\nlike {@link IShoppingSeller seller} is giving a discount.",
                          "type": "number",
                          "minimum": 0
                        },
                        "real": {
                          "title": "Real price to pay",
                          "description": "Real price to pay.",
                          "type": "number",
                          "minimum": 0
                        }
                      },
                      "required": [
                        "nominal",
                        "real"
                      ]
                    },
                    "inventory": {
                      "title": "Current inventory status of the stock",
                      "description": "Inventory information of a final stock.",
                      "type": "object",
                      "properties": {
                        "income": {
                          "title": "Total income quantity",
                          "description": "Total income quantity.",
                          "type": "integer"
                        },
                        "outcome": {
                          "title": "Total outcome quantity",
                          "description": "Total outcome quantity.",
                          "type": "integer"
                        }
                      },
                      "required": [
                        "income",
                        "outcome"
                      ]
                    },
                    "choices": {
                      "title": "List of choices",
                      "description": "List of choices.\n\nWhich candidate values being chosen for each option.",
                      "type": "array",
                      "items": {
                        "description": "Selection information of final stock.\n\n`IShoppingSaleUnitStockChoice` is an entity that represents which\n{@link IShoppingSaleUnitSelectableOption option} of each variable \"select\"\ntype was selected for each {@link IShoppingSaleUnitStock stock} and which\n{@link IShoppingSaleUnitOptionCandidate candidate value} was selected within\nit.\n\nOf course, if the bound {@link IShoppingSaleUnit unit} does not have any\noptions, this entity can also be ignored.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "title": "Primary Key",
                            "description": "Primary Key.",
                            "type": "string",
                            "format": "uuid"
                          },
                          "option_id": {
                            "description": "Target option's {@link IShoppingSaleUnitOption.id}",
                            "type": "string",
                            "format": "uuid"
                          },
                          "candidate_id": {
                            "description": "Target candidate's {@link IShoppingSaleUnitOptionCandidate.id}",
                            "type": "string",
                            "format": "uuid"
                          }
                        },
                        "required": [
                          "id",
                          "option_id",
                          "candidate_id"
                        ]
                      }
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "price",
                    "inventory",
                    "choices"
                  ]
                },
                "minItems": 1
              },
              "id": {
                "title": "Primary Key",
                "description": "Primary Key.",
                "type": "string",
                "format": "uuid"
              },
              "name": {
                "title": "Representative name of the unit",
                "description": "Representative name of the unit.",
                "type": "string"
              },
              "primary": {
                "title": "Whether the unit is primary or not",
                "description": "Whether the unit is primary or not.\n\nJust a labeling value.",
                "type": "boolean"
              },
              "required": {
                "title": "Whether the unit is required or not",
                "description": "Whether the unit is required or not.\n\nWhen the unit is required, the customer must select the unit. If do not\nselect, customer can't buy it.\n\nFor example, if there's a sale \"Macbook Set\" and one of the unit is the\n\"Main Body\", is it possible to buy the \"Macbook Set\" without the\n\"Main Body\" unit? This property is for that case.",
                "type": "boolean"
              }
            },
            "required": [
              "options",
              "stocks",
              "id",
              "name",
              "primary",
              "required"
            ]
          },
          "minItems": 1
        },
        "created_at": {
          "title": "Creation time of the record",
          "description": "Creation time of the record.\n\nNote that, this property is different with {@link opened_at},\nwhich means the timepoint of the sale is opened.",
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "title": "Last updated time of the record",
          "description": "Last updated time of the record.\n\nIn another words, creation time of the last snapshot.",
          "type": "string",
          "format": "date-time"
        },
        "paused_at": {
          "title": "Paused time of the sale",
          "description": "Paused time of the sale.\n\nThe sale is paused by the seller, for some reason.\n\n{@link IShoppingCustomer Customers} can still see the sale on the\nboth list and detail pages, but the sale has a warning label\n\"The sale is paused by the seller\".",
          "oneOf": [
            {
              "type": "null"
            },
            {
              "type": "string",
              "format": "date-time"
            }
          ]
        },
        "suspended_at": {
          "title": "Suspended time of the sale",
          "description": "Suspended time of the sale.\n\nThe sale is suspended by the seller, for some reason.\n\n{@link IShoppingCustomer Customers} cannot see the sale on the\nboth list and detail pages. It is almost same with soft delettion,\nbut there's a little bit difference that the owner\n{@link IShoppingSeller seller} can still see the sale and resume it.\n\nOf course, the {@link IShoppingCustomer customers} who have\nalready purchased the sale can still see the sale on the\n{@link IShoppingOrder order} page.",
          "oneOf": [
            {
              "type": "null"
            },
            {
              "type": "string",
              "format": "date-time"
            }
          ]
        },
        "opened_at": {
          "title": "Opening time of the sale",
          "description": "Opening time of the sale.",
          "oneOf": [
            {
              "type": "null"
            },
            {
              "type": "string",
              "format": "date-time"
            }
          ]
        },
        "closed_at": {
          "title": "Closing time of the sale",
          "description": "Closing time of the sale.\n\nIf this value is `null`, the sale be continued forever.",
          "oneOf": [
            {
              "type": "null"
            },
            {
              "type": "string",
              "format": "date-time"
            }
          ]
        }
      },
      "required": [
        "section",
        "seller",
        "id",
        "snapshot_id",
        "latest",
        "content",
        "channels",
        "tags",
        "units",
        "created_at",
        "updated_at",
        "paused_at",
        "suspended_at",
        "opened_at",
        "closed_at"
      ]
    },
    "success": true,
    "arguments": {
      "type": {
        "host": "http://127.0.0.1:37001",
        "headers": {
          "Authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0YWJsZSI6InNob3BwaW5nX2N1c3RvbWVycyIsImlkIjoiMjVlYzg3ZjctODE1ZC00YjU3LTk1NzYtYzk1Mzk4NGJjMjhmIiwicmVhZG9ubHkiOmZhbHNlLCJleHBpcmVkX2F0IjoiMjAyNC0xMi0xM1QwOTo0MjoxMi41MzlaIiwicmVmcmVzaGFibGVfdW50aWwiOiIyMDI0LTEyLTI3VDA2OjQyOjEyLjUzOVoiLCJpYXQiOjE3MzQwNzIxMzJ9.zWZrU-d1bSW-MawmSo2RYRPk_73xtR_PxfFUrEpDJkc"
        }
      },
      "properties": "601228f3-1314-4fbe-b460-918250e9ffa1"
    },
    "value": {
      "section": {
        "id": "a01c572c-3199-4929-ac67-ba7c31b2c808",
        "code": "general",
        "name": "General",
        "created_at": "2024-12-13T06:42:11.124Z"
      },
      "seller": {
        "type": "seller",
        "member": {
          "id": "a853492c-70b4-487f-9648-0f6109a0ad69",
          "nickname": "Robot",
          "emails": [
            {
              "id": "81ea73c4-b41e-4022-9384-d51d3215797e",
              "value": "robot@nestia.io",
              "created_at": "2024-12-13T06:42:11.227Z"
            }
          ],
          "created_at": "2024-12-13T06:42:11.227Z"
        },
        "customer": {
          "id": "aeb8583b-8bd9-4d29-adea-78779b405046",
          "channel": {
            "id": "2323f4bd-21ad-45b7-ae3b-cadd84dcc935",
            "created_at": "2024-12-13T06:42:10.908Z",
            "code": "samchon",
            "name": "Samchon Shopping Mall"
          },
          "external_user": null,
          "href": "http://127.0.0.1/TestAutomation",
          "referrer": "http://127.0.0.1/NodeJS",
          "ip": "127.0.0.1",
          "created_at": "2024-12-13T06:42:11.258Z"
        },
        "citizen": {
          "id": "43aedfea-6b2c-4c18-9f69-60373c9580dd",
          "created_at": "2024-12-13T06:42:11.157Z",
          "mobile": "01012345678",
          "name": "Robot"
        },
        "id": "addccb32-ac48-460e-9624-d9809da19d99",
        "created_at": "2024-12-13T06:42:11.241Z"
      },
      "id": "601228f3-1314-4fbe-b460-918250e9ffa1",
      "snapshot_id": "fe375776-9933-4d97-a0c8-8d46aca01bd1",
      "latest": true,
      "content": {
        "id": "c4566bf9-2544-492d-88d7-0e769e9614f2",
        "title": "Leica M6 (2022 Reissue): The Return of a Legend",
        "format": "md",
        "body": "The Leica M6, a beloved classic in the world of film photography, is back! The 2022 reissue brings modern enhancements while staying true to the original’s timeless charm. Designed for enthusiasts and professionals, the new M6 is a tribute to the past, with a touch of the future.\n\n- **\"Rediscover the Classic\":** The Leica M6 reissue retains the original design, offering the same iconic look and feel that photographers fell in love with decades ago.\n- **\"Enhanced for the Modern Era\":** Now featuring improved durability, a brighter viewfinder, and the latest advancements in metering, the M6 reissue ensures a seamless shooting experience.\n- **\"Craftsmanship Meets Tradition\":** Made in Germany, the M6 embodies Leica's dedication to quality and precision, delivering a tool that feels as good as it performs.\n- **\"For the Love of Film\":** The M6 is perfect for those who cherish the art of analog photography, providing an unmatched tactile and creative experience.\n\nIn summary, the 2022 Leica M6 reissue is a perfect blend of heritage and innovation. It’s a must-have for collectors, analog enthusiasts, and anyone seeking the pure joy of shooting on film with a legendary camera.",
        "files": [],
        "thumbnails": [
          {
            "id": "ae058b66-9388-442d-bdc8-934aae2f0686",
            "created_at": "2024-12-13T06:42:12.008Z",
            "name": "leica-m6-thumbnail-1",
            "extension": "png",
            "url": "https://leica-camera.com/sites/default/files/styles/r_media_medium_desktop_4_3/public/pm-84724-10557_leica_m6_black_front_1.png?itok=SpVHc0cq"
          },
          {
            "id": "62203ee2-c174-430c-aa79-a936d752a3ca",
            "created_at": "2024-12-13T06:42:12.008Z",
            "name": "leica-m6-thumbnail-2",
            "extension": "webp",
            "url": "https://leica-camera.com/sites/default/files/styles/r_media_fullscreen/public/2022-09/leica_m6_packaging_ambient_3840x2160.jpg.webp?itok=lig4kkiB"
          }
        ]
      },
      "channels": [
        {
          "categories": [
            {
              "parent": {
                "parent": null,
                "id": "9b9b36f4-4e50-48ff-ac05-ee8588be0dbe",
                "code": "electronics",
                "parent_id": null,
                "name": "Electronics",
                "created_at": "2024-12-13T06:42:10.919Z"
              },
              "id": "c2c9da5a-7d89-40f6-9021-0255073b87eb",
              "code": "cameras",
              "parent_id": "9b9b36f4-4e50-48ff-ac05-ee8588be0dbe",
              "name": "Cameras",
              "created_at": "2024-12-13T06:42:11.008Z"
            }
          ],
          "id": "2323f4bd-21ad-45b7-ae3b-cadd84dcc935",
          "created_at": "2024-12-13T06:42:10.908Z",
          "code": "samchon",
          "name": "Samchon Shopping Mall"
        }
      ],
      "tags": [
        "Leica M6",
        "Film Camera",
        "Photography",
        "Analog",
        "Camera Reissue",
        "Classic Design",
        "Collector's Item",
        "Camera Lens"
      ],
      "units": [
        {
          "options": [
            {
              "candidates": [
                {
                  "id": "b95602d5-804c-450f-ae98-ab1f5446f056",
                  "name": "Black Paint Finish"
                },
                {
                  "id": "99e176e7-266c-4690-87ed-9cc5c50c0606",
                  "name": "Silver Chrome Finish"
                }
              ],
              "id": "5b9e6404-6a29-4ed2-afe1-76951c0f6383",
              "type": "select",
              "name": "Finish",
              "variable": true
            }
          ],
          "stocks": [
            {
              "id": "f1f8f95b-4b18-44c0-90b2-786900e3c29f",
              "name": "Leica M6 Body (Black Paint Finish)",
              "price": {
                "nominal": 7200000,
                "real": 6899000
              },
              "inventory": {
                "income": 500,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "2e6a4d04-18f1-4594-af66-95f27f1f8188",
                  "option_id": "5b9e6404-6a29-4ed2-afe1-76951c0f6383",
                  "candidate_id": "b95602d5-804c-450f-ae98-ab1f5446f056"
                }
              ]
            },
            {
              "id": "9db85beb-e5ed-4f79-a46e-21fb719895a2",
              "name": "Leica M6 Body (Silver Chrome Finish)",
              "price": {
                "nominal": 7200000,
                "real": 6899000
              },
              "inventory": {
                "income": 500,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "b6fead07-3896-4122-b5c4-cac1e7f1ce65",
                  "option_id": "5b9e6404-6a29-4ed2-afe1-76951c0f6383",
                  "candidate_id": "99e176e7-266c-4690-87ed-9cc5c50c0606"
                }
              ]
            }
          ],
          "id": "2e54e102-92d8-4f15-8f35-5ab43b0217e1",
          "name": "Leica M6 Body (2022 Reissue)",
          "primary": true,
          "required": true
        },
        {
          "options": [],
          "stocks": [
            {
              "id": "fde6c137-5aa1-4817-8e33-b68ae5404ec4",
              "name": "50mm Summilux Lens",
              "price": {
                "nominal": 5200000,
                "real": 4999000
              },
              "inventory": {
                "income": 1000,
                "outcome": 0
              },
              "choices": []
            }
          ],
          "id": "b46d4dd3-162c-4eb2-9968-dffa70910631",
          "name": "50mm Summilux Lens",
          "primary": false,
          "required": false
        }
      ],
      "created_at": "2024-12-13T06:42:12.008Z",
      "updated_at": "2024-12-13T06:42:12.008Z",
      "paused_at": null,
      "suspended_at": null,
      "opened_at": "2024-12-13T06:42:12.005Z",
      "closed_at": null
    }
  },
  {
    "name": "shoppings_customers_sales_getById",
    "method": "get",
    "path": "/shoppings/customers/sales/{id}",
    "description": "Get a sale info.\n\nGet a {@link IShoppingSale sale} with detailed information.\n\nIf you're a {@link IShoppingSeller seller}, you can only access to the\nyour own {@link IShoppingSale sale}. Otherwise you're a\n{@link IShoppingCustomer customer}, you can access to only the operating\nsales in the market. You can't access to the unopened, closed, or suspended\nsales.",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "description": " Target sale's {@link IShoppingSale.id }",
          "type": "string",
          "format": "uuid"
        }
      },
      "additionalProperties": false,
      "required": [
        "id"
      ],
      "$defs": {
        "IShoppingChannelCategory.IInvert": {
          "description": "Invert category information with parent category.",
          "type": "object",
          "properties": {
            "parent": {
              "title": "Parent category info with recursive structure",
              "description": "Parent category info with recursive structure.\n\nIf no parent exists, then be `null`.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "$ref": "#/$defs/IShoppingChannelCategory.IInvert"
                }
              ]
            },
            "id": {
              "title": "Primary Key",
              "description": "Primary Key.",
              "type": "string",
              "format": "uuid"
            },
            "code": {
              "title": "Identifier code of the category",
              "description": "Identifier code of the category.\n\nThe code must be unique in the channel.",
              "type": "string"
            },
            "parent_id": {
              "title": "Parent category's ID",
              "description": "Parent category's ID.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "name": {
              "title": "Representative name of the category",
              "description": "Representative name of the category.\n\nThe name must be unique within the parent category. If no parent exists,\nthen the name must be unique within the channel between no parent\ncategories.",
              "type": "string"
            },
            "created_at": {
              "title": "Creation time of record",
              "description": "Creation time of record.",
              "type": "string",
              "format": "date-time"
            }
          },
          "required": [
            "parent",
            "id",
            "code",
            "parent_id",
            "name",
            "created_at"
          ]
        }
      }
    },
    "output": {
      "description": "Seller sales products.\n\n`IShoppingSale` is an entity that embodies \"product sales\" (sales)\ninformation registered by the {@link ISoppingSeller seller}. And the main\ninformation of the sale is recorded in the sub {@link IShoppingSaleSnapshot},\nnot in the main `IShoppingSale`. When a seller changes a previously registered\nitem, the existing `IShoppingSale` record is not changed, but a new\n{@link IShoppingSaleSnapshot snapshot} record be created.\n\nThis is to preserve the {@link IShoppingCustomer customer}'s\n{@link IShoppingOrder purchase history} flawlessly after the customer\npurchases a specific item, even if the seller changes the components or\nprice of the item. It is also intended to support sellers in so-called A/B\ntesting, which involves changing components or prices and measuring the\nperformance in each case.",
      "type": "object",
      "properties": {
        "section": {
          "title": "Belonged section",
          "description": "Section information.\n\n`IShoppingSection` is a concept that refers to the spatial information of\nthe market.\n\nIf we compare the section mentioned here to the offline market, it means a\nspatially separated area within the store, such as the \"fruit corner\" or\n\"butcher corner\". Therefore, in the {@link IShoppingSale sale} entity, it is\nnot possible to classify multiple sections simultaneously, but only one section\ncan be classified.\n\nBy the way, if your shopping mall system requires only one section, then just\nuse only one. This concept is designed to be expandable in the future.",
          "type": "object",
          "properties": {
            "id": {
              "title": "Primary Key",
              "description": "Primary Key.",
              "type": "string",
              "format": "uuid"
            },
            "code": {
              "title": "Identifier code",
              "description": "Identifier code.",
              "type": "string"
            },
            "name": {
              "title": "Representative name of the section",
              "description": "Representative name of the section.",
              "type": "string"
            },
            "created_at": {
              "title": "Creation time of record",
              "description": "Creation time of record.",
              "type": "string",
              "format": "date-time"
            }
          },
          "required": [
            "id",
            "code",
            "name",
            "created_at"
          ]
        },
        "seller": {
          "title": "Seller who has registered the sale",
          "description": "Invert information starting from seller info.\n\nInstead of accessing to the seller information from the\n{@link IShoppingCustomer.member} -> {@link IShoppingMember.seller},\n`IShoppingSeller.IInvert` starts from the seller information\nand access to the customer, member and {@link IShoppingCitizen citizen}\ninformation inversely.\n\n------------------------------\n\nDescription of the current {@link IShoppingSeller.IInvert} type:\n\n> Invert information starting from seller info.\n> \n> Instead of accessing to the seller information from the\n> {@link IShoppingCustomer.member} -> {@link IShoppingMember.seller},\n> `IShoppingSeller.IInvert` starts from the seller information\n> and access to the customer, member and {@link IShoppingCitizen citizen}\n> information inversely.\n\n------------------------------\n\nDescription of the parent {@link IShoppingSeller} type:\n\n> Seller information.\n> \n> `IShoppingSeller` is an entity that embodies a person who registers\n> {@link IShoppingSale sales} to operate selling activities, with\n> {@link IShoppingMember membership} joining.\n> \n> For reference, unlike {@link IShoppingCustomer customers} which can\n> participate even without membership joining, seller must join membership\n> to operate sales. Also, seller must do the\n> {@link IShoppingCitizen real-name and mobile authentication}, too.",
          "type": "object",
          "properties": {
            "type": {
              "title": "Discriminant for the type of customer",
              "description": "Discriminant for the type of customer.",
              "const": "seller"
            },
            "member": {
              "title": "Membership joining information",
              "description": "Invert information of member.\n\nThis invert member information has been designed to be used for another\ninvert information of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert}\n- {@link IShoppingAdministrator.IInvert}\n\n------------------------------\n\nDescription of the current {@link IShoppingMember.IInvert} type:\n\n> Invert information of member.\n> \n> This invert member information has been designed to be used for another\n> invert information of sellers and administrators like below.\n> \n> - {@link IShoppingSeller.IInvert}\n> - {@link IShoppingAdministrator.IInvert}\n\n------------------------------\n\nDescription of the parent {@link IShoppingMember} type:\n\n> Member Account.\n> \n> `IShoppingMember` is an entity that symbolizes the case when a\n> {@link IShoppingCustomer} signs up as a member of this shopping mall\n> system.\n> \n> If a `IShoppingMember` has seller or administrator property. it means that\n> the {@link IShoppingCustomer} has acting as a {@link IShoppingSeller seller}\n> or {@link IShoppingAdministrator administrator} at the same time.",
              "type": "object",
              "properties": {
                "id": {
                  "title": "Primary Key",
                  "description": "Primary Key.",
                  "type": "string",
                  "format": "uuid"
                },
                "nickname": {
                  "title": "Nickname that uniquely identifies the member",
                  "description": "Nickname that uniquely identifies the member.",
                  "type": "string"
                },
                "emails": {
                  "title": "List of emails",
                  "description": "List of emails.",
                  "type": "array",
                  "items": {
                    "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "title": "Primary Key",
                        "description": "Primary Key.",
                        "type": "string",
                        "format": "uuid"
                      },
                      "value": {
                        "title": "Email address value",
                        "description": "Email address value.",
                        "type": "string",
                        "format": "email"
                      },
                      "created_at": {
                        "title": "Creation time of record",
                        "description": "Creation time of record.",
                        "type": "string",
                        "format": "date-time"
                      }
                    },
                    "required": [
                      "id",
                      "value",
                      "created_at"
                    ]
                  }
                },
                "created_at": {
                  "title": "Creation time of record",
                  "description": "Creation time of record.\n\nAnother words, the time when the member has signed up.",
                  "type": "string",
                  "format": "date-time"
                }
              },
              "required": [
                "id",
                "nickname",
                "emails",
                "created_at"
              ]
            },
            "customer": {
              "title": "Customer, the connection information",
              "description": "Inverted customer informatino.\n\nThis inverted customer information has been designed to be used for\nanother invert information of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert}\n- {@link IShoppingAdministrator.IInvert}\n\n------------------------------\n\nDescription of the current {@link IShoppingCustomer.IInvert} type:\n\n> Inverted customer informatino.\n> \n> This inverted customer information has been designed to be used for\n> another invert information of sellers and administrators like below.\n> \n> - {@link IShoppingSeller.IInvert}\n> - {@link IShoppingAdministrator.IInvert}\n\n------------------------------\n\nDescription of the parent {@link IShoppingCustomer} type:\n\n> Customer information, but not a person but a connection basis.\n> \n> `IShoppingCustomer` is an entity that literally embodies the information of\n> those who participated in the market as customers. By the way, the\n> `IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\n> even if the same person connects to the shopping mall multiple, multiple\n> records are created in `IShoppingCustomer`.\n> \n> The first purpose of this is to track the customer's inflow path in detail,\n> and it is for cases where the same person enters as a non-member,\n> {@link IShoppingCartCommodity puts items in the shopping cart} in advance,\n> and only authenticates their {@link IShoppingCitizen real name} or\n> registers/logs in at the moment of {@link IShoppingOrderPublish payment}.\n> It is the second. Lastly, it is to accurately track the activities that\n> a person performs at the shopping mall in various ways like below.\n> \n> - Same person comes from an {@link IShoppingExternalUser external service}\n> - Same person creates multiple accounts\n> - Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n> - Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n> \n> Therefore, `IShoppingCustomer` can have multiple records with the same\n> {@link IShoppingCitizen}, {@link IShoppingMember}, and\n> {@link IShoppingExternalUser}. Additionally, if a customer signs up for\n> membership after verifying their real name or signs up for our service after\n> being a user of an external service, all related records are changed at once.\n> Therefore, identification and tracking of customers can be done very\n> systematically.",
              "type": "object",
              "properties": {
                "id": {
                  "title": "Primary Key",
                  "description": "Primary Key.",
                  "type": "string",
                  "format": "uuid"
                },
                "channel": {
                  "title": "Belonged channel",
                  "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "Primary Key",
                      "description": "Primary Key.",
                      "type": "string",
                      "format": "uuid"
                    },
                    "created_at": {
                      "title": "Creation time of record",
                      "description": "Creation time of record.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "code": {
                      "title": "Identifier code",
                      "description": "Identifier code.",
                      "type": "string"
                    },
                    "name": {
                      "title": "Name of the channel",
                      "description": "Name of the channel.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "created_at",
                    "code",
                    "name"
                  ]
                },
                "external_user": {
                  "title": "External user information",
                  "description": "External user information.\n\nWhen the customer has come frome an external service.",
                  "oneOf": [
                    {
                      "type": "null"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "title": "Primary Key",
                          "description": "Primary Key.",
                          "type": "string",
                          "format": "uuid"
                        },
                        "citizen": {
                          "title": "Citizen activation info",
                          "description": "Citizen activation info.",
                          "oneOf": [
                            {
                              "type": "null"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "title": "Primary Key",
                                  "description": "Primary Key.",
                                  "type": "string",
                                  "format": "uuid"
                                },
                                "created_at": {
                                  "title": "Creation time of record",
                                  "description": "Creation time of record.",
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "mobile": {
                                  "title": "Mobile number",
                                  "description": "Mobile number.",
                                  "x-wrtn-payment-order-mobile": true,
                                  "type": "string",
                                  "pattern": "^[0-9]*$"
                                },
                                "name": {
                                  "title": "Real name, or equivalent nickname",
                                  "description": "Real name, or equivalent nickname.",
                                  "x-wrtn-payment-order-citizen": true,
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "created_at",
                                "mobile",
                                "name"
                              ],
                              "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile} input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                            }
                          ]
                        },
                        "created_at": {
                          "title": "Creation time of record",
                          "description": "Creation time of record.\n\nAnother word, first time when the external user connected.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "uid": {
                          "title": "Identifier key of external user from the external system",
                          "description": "Identifier key of external user from the external system.",
                          "type": "string"
                        },
                        "application": {
                          "title": "Identifier code of the external service",
                          "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code} in common.",
                          "type": "string"
                        },
                        "nickname": {
                          "title": "Nickname of external user in the external system",
                          "description": "Nickname of external user in the external system.",
                          "type": "string"
                        },
                        "data": {
                          "description": "Additional information about external user from the external\nsystem."
                        }
                      },
                      "required": [
                        "id",
                        "citizen",
                        "created_at",
                        "uid",
                        "application",
                        "nickname",
                        "data"
                      ],
                      "description": "External user information.\n\n`IShoppingExternalUser` is an entity dsigned for when this system needs\nto connect with external services and welcome their users as\n{@link IShoppingCustomer customers} of this service.\n\nFor reference, customers who connect from an external service must have\nthis record, and the external service user is identified through the two\nattributes {@link application} and {@link uid}. If a customer connected\nfrom an external service completes\n{@link IShoppingCitizen real-name authentication} from this service, each\ntime the external service user reconnects to this service and issues a\nnew customer authentication token, real-name authentication begins with\ncompleted.\n\nAnd {@link password} is the password issued to the user by the external\nservice system (the so-called permanent user authentication token), and\nis never the actual user password. However, for customers who entered the\nsame application and uid as the current external system user, this is to\ndetermine whether to view this as a correct external system user or a\nviolation.\n\nIn addition, additional information received from external services can\nbe recorded in the data field in JSON format."
                    }
                  ]
                },
                "href": {
                  "title": "Connection address",
                  "description": "Connection address.\n\nSame with {@link window.location.href} of client.",
                  "type": "string",
                  "format": "uri"
                },
                "referrer": {
                  "title": "Referrer address",
                  "description": "Referrer address.\n\nSame with {@link window.document.referrer} of client.",
                  "oneOf": [
                    {
                      "type": "null"
                    },
                    {
                      "type": "string",
                      "format": "uri"
                    },
                    {
                      "type": "string",
                      "maxLength": 0
                    }
                  ]
                },
                "ip": {
                  "title": "Connection IP Address",
                  "description": "Connection IP Address.",
                  "oneOf": [
                    {
                      "type": "string",
                      "format": "ipv4"
                    },
                    {
                      "type": "string",
                      "format": "ipv6"
                    }
                  ]
                },
                "created_at": {
                  "title": "Creation time of the connection record",
                  "description": "Creation time of the connection record.",
                  "type": "string",
                  "format": "date-time"
                }
              },
              "required": [
                "id",
                "channel",
                "external_user",
                "href",
                "referrer",
                "ip",
                "created_at"
              ]
            },
            "citizen": {
              "title": "Real-name and mobile number authentication information",
              "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile} input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored.",
              "type": "object",
              "properties": {
                "id": {
                  "title": "Primary Key",
                  "description": "Primary Key.",
                  "type": "string",
                  "format": "uuid"
                },
                "created_at": {
                  "title": "Creation time of record",
                  "description": "Creation time of record.",
                  "type": "string",
                  "format": "date-time"
                },
                "mobile": {
                  "title": "Mobile number",
                  "description": "Mobile number.",
                  "x-wrtn-payment-order-mobile": true,
                  "type": "string",
                  "pattern": "^[0-9]*$"
                },
                "name": {
                  "title": "Real name, or equivalent nickname",
                  "description": "Real name, or equivalent nickname.",
                  "x-wrtn-payment-order-citizen": true,
                  "type": "string"
                }
              },
              "required": [
                "id",
                "created_at",
                "mobile",
                "name"
              ]
            },
            "id": {
              "title": "Primary Key",
              "description": "Primary Key.",
              "type": "string",
              "format": "uuid"
            },
            "created_at": {
              "title": "Creation tmie of record",
              "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up.",
              "type": "string",
              "format": "date-time"
            }
          },
          "required": [
            "type",
            "member",
            "customer",
            "citizen",
            "id",
            "created_at"
          ]
        },
        "id": {
          "title": "Primary Key of Sale",
          "description": "Primary Key of Sale.",
          "type": "string",
          "format": "uuid"
        },
        "snapshot_id": {
          "title": "Primary Key of Snapshot",
          "description": "Primary Key of Snapshot.",
          "type": "string",
          "format": "uuid"
        },
        "latest": {
          "title": "Whether the snapshot is the latest one or not",
          "description": "Whether the snapshot is the latest one or not.",
          "type": "boolean"
        },
        "content": {
          "title": "Description and image content describing the sale",
          "description": "Content information of sale snapshot.\n\n`IShoppingSaleContent` is an entity embodies the description contents\nof {@link IShoppingSale}.",
          "type": "object",
          "properties": {
            "id": {
              "title": "Primary Key",
              "description": "Primary Key.",
              "type": "string",
              "format": "uuid"
            },
            "title": {
              "title": "Title of the content",
              "description": "Title of the content.",
              "type": "string"
            },
            "format": {
              "title": "Format of the body content",
              "description": "Format of the body content.\n\nSame meaning with file extension like `html`, `md`, and `txt`.",
              "oneOf": [
                {
                  "const": "html"
                },
                {
                  "const": "md"
                },
                {
                  "const": "txt"
                }
              ]
            },
            "body": {
              "title": "The main body content",
              "description": "The main body content.",
              "type": "string"
            },
            "files": {
              "title": "List of attached files",
              "description": "List of attached files.",
              "type": "array",
              "items": {
                "description": "Attachment File.\n\nEvery attachment files that are managed in current system.\n\nFor reference, it is possible to omit one of file {@link name}\nor {@link extension} like `.gitignore` or `README` case, but not\npossible to omit both of them.",
                "type": "object",
                "properties": {
                  "id": {
                    "title": "Primary Key",
                    "description": "Primary Key.",
                    "type": "string",
                    "format": "uuid"
                  },
                  "created_at": {
                    "title": "Creation time of attachment file",
                    "description": "Creation time of attachment file.",
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "title": "File name, except extension",
                    "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string.",
                    "type": "string",
                    "maxLength": 255
                  },
                  "extension": {
                    "title": "Extension",
                    "description": "Extension.\n\nPossible to omit like `README` case.",
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 8
                      }
                    ]
                  },
                  "url": {
                    "title": "URL path of the real file",
                    "description": "URL path of the real file.",
                    "type": "string",
                    "format": "uri",
                    "contentMediaType": "image/*"
                  }
                },
                "required": [
                  "id",
                  "created_at",
                  "name",
                  "extension",
                  "url"
                ]
              }
            },
            "thumbnails": {
              "title": "List of thumbnails",
              "description": "List of thumbnails.",
              "type": "array",
              "items": {
                "description": "Attachment File.\n\nEvery attachment files that are managed in current system.\n\nFor reference, it is possible to omit one of file {@link name}\nor {@link extension} like `.gitignore` or `README` case, but not\npossible to omit both of them.",
                "type": "object",
                "properties": {
                  "id": {
                    "title": "Primary Key",
                    "description": "Primary Key.",
                    "type": "string",
                    "format": "uuid"
                  },
                  "created_at": {
                    "title": "Creation time of attachment file",
                    "description": "Creation time of attachment file.",
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "title": "File name, except extension",
                    "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string.",
                    "type": "string",
                    "maxLength": 255
                  },
                  "extension": {
                    "title": "Extension",
                    "description": "Extension.\n\nPossible to omit like `README` case.",
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 8
                      }
                    ]
                  },
                  "url": {
                    "title": "URL path of the real file",
                    "description": "URL path of the real file.",
                    "type": "string",
                    "format": "uri",
                    "contentMediaType": "image/*"
                  }
                },
                "required": [
                  "id",
                  "created_at",
                  "name",
                  "extension",
                  "url"
                ]
              }
            }
          },
          "required": [
            "id",
            "title",
            "format",
            "body",
            "files",
            "thumbnails"
          ]
        },
        "channels": {
          "title": "List of channels and categories",
          "description": "List of channels and categories.\n\nWhich channels and categories the sale is registered to.",
          "type": "array",
          "items": {
            "description": "Target channel (and categories) of sale to sell.\n\n`IShoppingSaleChannel` is an entity that expresses through which\n{@link IShoppingChannel channel} a listing {@link IShoppingSale} is sold.\n\nAlso, if {@link IShoppingChannelCategory categories} are specified, it also\nmeans that the sale be sold. Otherwise, none of the categories of the channel\nbeing specified, it means that every categories of the channel is listing the\ntarget sale.",
            "type": "object",
            "properties": {
              "categories": {
                "title": "List of categories of the channel listing the sale",
                "description": "List of categories of the channel listing the sale.\n\nIf empty, it means all categories of the channel is listing the sale.",
                "type": "array",
                "items": {
                  "$ref": "#/$defs/IShoppingChannelCategory.IInvert"
                }
              },
              "id": {
                "title": "Primary Key",
                "description": "Primary Key.",
                "type": "string",
                "format": "uuid"
              },
              "created_at": {
                "title": "Creation time of record",
                "description": "Creation time of record.",
                "type": "string",
                "format": "date-time"
              },
              "code": {
                "title": "Identifier code",
                "description": "Identifier code.",
                "type": "string"
              },
              "name": {
                "title": "Name of the channel",
                "description": "Name of the channel.",
                "type": "string"
              }
            },
            "required": [
              "categories",
              "id",
              "created_at",
              "code",
              "name"
            ]
          },
          "minItems": 1
        },
        "tags": {
          "title": "List of search tags",
          "description": "List of search tags.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "units": {
          "title": "List of units",
          "description": "List of units.\n\nRecords about individual product composition information that are sold\nin the sale. Each {@link IShoppingSaleUnit unit} record has configurable\n{@link IShoppingSaleUnitOption options},\n{@link IShoppingSaleUnitOptionCandidate candidate} values for each\noption, and {@link IShoppingSaleUnitStock final stocks} determined by\nselecting every candidate values of each option.",
          "type": "array",
          "items": {
            "description": "Product composition information handled in the sale.\n\n`IShoppingSaleUnit` is an entity that embodies the \"individual product\"\ninformation handled in the {@link IShoppingSale sale}.\n\nFor reference, the reason why `IShoppingSaleUnit` is separated from\n{@link IShoppingSaleSnapshot} by an algebraic relationship of 1: N is because\nthere are some cases where multiple products are sold in one listing. This is\nthe case with so-called \"bundled products\".\n\n- Bundle from regular product (Mackbook Set)\n  - Main Body\n  - Keyboard\n  - Mouse\n  - Apple Care (Free A/S Voucher)\n\nAnd again, `IShoppingSaleUnit` does not in itself refer to the\n{@link IShoppingSaleUnitStock final stock} that the\n{@link IShoppingCustomer customer} will {@link IShoppingOrder purchase}.\nThe final stock can be found only after selecting all given\n{@link IShoppingSaleUnitOption options} and their\n{@link IShoppingSaleUnitOptionCandidate candidate values}.\n\nFor example, even if you buy a Macbook, the final stocks are determined only\nafter selecting all the options (CPU / RAM / SSD), etc.",
            "type": "object",
            "properties": {
              "options": {
                "title": "List of options",
                "description": "List of options.",
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "candidates": {
                          "title": "List of candidate values",
                          "description": "List of candidate values.",
                          "type": "array",
                          "items": {
                            "description": "Selectable candidate values within an option.\n\n`IShoppingSaleUnitOptionCandidate` is an entity that represents individual\ncandidate values that can be selected from\n{@link IShoppingSaleUnitSelectableOption options of the \"select\" type}.\n\n- Example\n  - RAM: 8GB, 16GB, 32GB\n  - GPU: RTX 3060, RTX 4080, TESLA\n  - License: Private, Commercial, Educatiion\n\nBy the way, if belonged option is not \"select\" type, this entity never\nbeing used.",
                            "type": "object",
                            "properties": {
                              "id": {
                                "title": "Primary Key",
                                "description": "Primary Key.",
                                "type": "string",
                                "format": "uuid"
                              },
                              "name": {
                                "title": "Represents the name of the candidate value",
                                "description": "Represents the name of the candidate value.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "name"
                            ]
                          },
                          "minItems": 1
                        },
                        "id": {
                          "title": "Primary Key",
                          "description": "Primary Key.",
                          "type": "string",
                          "format": "uuid"
                        },
                        "type": {
                          "title": "Discriminant for the type of selectable option",
                          "description": "Discriminant for the type of selectable option.",
                          "const": "select"
                        },
                        "name": {
                          "title": "Represents the name of the option",
                          "description": "Represents the name of the option.",
                          "type": "string"
                        },
                        "variable": {
                          "title": "Whether the option is variable or not",
                          "description": "Whether the option is variable or not.\n\nWhen type of current option is \"select\", this attribute means whether\nselecting different candidate value affects the final stock or not.",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "candidates",
                        "id",
                        "type",
                        "name",
                        "variable"
                      ],
                      "description": "Individual option information on units for sale.\n\n`IShoppingSaleUnitSelectableOption` is a subsidiary entity of\n{@link IShoppingSaleUnit} that represents individual products in the\n{@link IShoppingSale sale}, and is an entity designed to represent individual\nselectable option information for the unit.\n\n- Examples of Options\n  - selectable options\n    - Computer: CPU, RAM, SSD, etc.\n    - Clothes: size, color, style, etc.\n  - descriptive options\n    - Engrave\n    - Simple question\n\nIf the {@link variable} property value is `true`, the final stock that the\n{@link IShoppingCustomer customer} will purchase changes depending on the\nselection of the {@link IShoppingSaleUnitOptionCandidate candidate value}.\n\nConversely, if it is a type other than \"select\", or if the {@link variable}\nproperty value is \"false\", , this is an option that has no meaning beyond\nsimple information transfer. Therefore, no matter what value the customer\nchooses when purchasing it, the option in this case does not affect the\n{@link IShoppingSaleUnitStock final stock}."
                    },
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "title": "Primary Key",
                          "description": "Primary Key.",
                          "type": "string",
                          "format": "uuid"
                        },
                        "type": {
                          "title": "Type of descriptive option",
                          "description": "Type of descriptive option.\n\nWhich typed value should be written when purchasing.",
                          "oneOf": [
                            {
                              "const": "string"
                            },
                            {
                              "const": "number"
                            },
                            {
                              "const": "boolean"
                            }
                          ]
                        },
                        "name": {
                          "title": "Readable name of the option",
                          "description": "Readable name of the option.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type",
                        "name"
                      ],
                      "description": "Descriptive option.\n\nWhen type of the option not `\"select\"`, it means the option is descriptive\nthat requiring {@link IShoppingCustomer customers} to write some value to\n{@link IShoppingOrder purchase}. Also, whatever customer writes about the\noption, it does not affect the {@link IShoppingSaleUnitStock final stock}.\n\nAnother words, the descriptive option is just for information transfer."
                    }
                  ]
                }
              },
              "stocks": {
                "title": "List of final stocks",
                "description": "List of final stocks.",
                "type": "array",
                "items": {
                  "description": "Final component information on units for sale.\n\n`IShoppingSaleUnitStock` is a subsidiary entity of {@link IShoppingSaleUnit}\nthat represents a product catalog for sale, and is a kind of final stock that is\nconstructed by selecting all {@link IShoppingSaleUnitSelectableOption options}\n(variable \"select\" type) and their\n{@link IShoppingSaleUnitOptionCandidate candidate} values in the belonging unit.\nIt is the \"good\" itself that customers actually purchase.\n\n- Product Name) MacBook\n  - Options\n    - CPU: { i3, i5, i7, i9 }\n    - RAM: { 8GB, 16GB, 32GB, 64GB, 96GB }\n    - SSD: { 256GB, 512GB, 1TB }\n  - Number of final stocks: 4 * 5 * 3 = 60\n\nFor reference, the total number of `IShoppingSaleUnitStock` records in an\nattribution unit can be obtained using Cartesian Product. In other words, the\nvalue obtained by multiplying all the candidate values that each\n(variable \"select\" type) option can have by the number of cases is the total\nnumber of final stocks in the unit.\n\nOf course, without a single variable \"select\" type option, the final stocks\ncount in the unit is only 1.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "Primary Key",
                      "description": "Primary Key.",
                      "type": "string",
                      "format": "uuid"
                    },
                    "name": {
                      "title": "Representative name of the stock",
                      "description": "Representative name of the stock.",
                      "type": "string"
                    },
                    "price": {
                      "title": "Price of the stock",
                      "description": "Shopping price interface.",
                      "type": "object",
                      "properties": {
                        "nominal": {
                          "title": "Nominal price",
                          "description": "Nominal price.\n\nThis is not {@link real real price} to pay, but just a nominal price to show.\nIf this value is greater than the {@link real real price}, it would be shown\nlike {@link IShoppingSeller seller} is giving a discount.",
                          "type": "number",
                          "minimum": 0
                        },
                        "real": {
                          "title": "Real price to pay",
                          "description": "Real price to pay.",
                          "type": "number",
                          "minimum": 0
                        }
                      },
                      "required": [
                        "nominal",
                        "real"
                      ]
                    },
                    "inventory": {
                      "title": "Current inventory status of the stock",
                      "description": "Inventory information of a final stock.",
                      "type": "object",
                      "properties": {
                        "income": {
                          "title": "Total income quantity",
                          "description": "Total income quantity.",
                          "type": "integer"
                        },
                        "outcome": {
                          "title": "Total outcome quantity",
                          "description": "Total outcome quantity.",
                          "type": "integer"
                        }
                      },
                      "required": [
                        "income",
                        "outcome"
                      ]
                    },
                    "choices": {
                      "title": "List of choices",
                      "description": "List of choices.\n\nWhich candidate values being chosen for each option.",
                      "type": "array",
                      "items": {
                        "description": "Selection information of final stock.\n\n`IShoppingSaleUnitStockChoice` is an entity that represents which\n{@link IShoppingSaleUnitSelectableOption option} of each variable \"select\"\ntype was selected for each {@link IShoppingSaleUnitStock stock} and which\n{@link IShoppingSaleUnitOptionCandidate candidate value} was selected within\nit.\n\nOf course, if the bound {@link IShoppingSaleUnit unit} does not have any\noptions, this entity can also be ignored.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "title": "Primary Key",
                            "description": "Primary Key.",
                            "type": "string",
                            "format": "uuid"
                          },
                          "option_id": {
                            "description": "Target option's {@link IShoppingSaleUnitOption.id}",
                            "type": "string",
                            "format": "uuid"
                          },
                          "candidate_id": {
                            "description": "Target candidate's {@link IShoppingSaleUnitOptionCandidate.id}",
                            "type": "string",
                            "format": "uuid"
                          }
                        },
                        "required": [
                          "id",
                          "option_id",
                          "candidate_id"
                        ]
                      }
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "price",
                    "inventory",
                    "choices"
                  ]
                },
                "minItems": 1
              },
              "id": {
                "title": "Primary Key",
                "description": "Primary Key.",
                "type": "string",
                "format": "uuid"
              },
              "name": {
                "title": "Representative name of the unit",
                "description": "Representative name of the unit.",
                "type": "string"
              },
              "primary": {
                "title": "Whether the unit is primary or not",
                "description": "Whether the unit is primary or not.\n\nJust a labeling value.",
                "type": "boolean"
              },
              "required": {
                "title": "Whether the unit is required or not",
                "description": "Whether the unit is required or not.\n\nWhen the unit is required, the customer must select the unit. If do not\nselect, customer can't buy it.\n\nFor example, if there's a sale \"Macbook Set\" and one of the unit is the\n\"Main Body\", is it possible to buy the \"Macbook Set\" without the\n\"Main Body\" unit? This property is for that case.",
                "type": "boolean"
              }
            },
            "required": [
              "options",
              "stocks",
              "id",
              "name",
              "primary",
              "required"
            ]
          },
          "minItems": 1
        },
        "created_at": {
          "title": "Creation time of the record",
          "description": "Creation time of the record.\n\nNote that, this property is different with {@link opened_at},\nwhich means the timepoint of the sale is opened.",
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "title": "Last updated time of the record",
          "description": "Last updated time of the record.\n\nIn another words, creation time of the last snapshot.",
          "type": "string",
          "format": "date-time"
        },
        "paused_at": {
          "title": "Paused time of the sale",
          "description": "Paused time of the sale.\n\nThe sale is paused by the seller, for some reason.\n\n{@link IShoppingCustomer Customers} can still see the sale on the\nboth list and detail pages, but the sale has a warning label\n\"The sale is paused by the seller\".",
          "oneOf": [
            {
              "type": "null"
            },
            {
              "type": "string",
              "format": "date-time"
            }
          ]
        },
        "suspended_at": {
          "title": "Suspended time of the sale",
          "description": "Suspended time of the sale.\n\nThe sale is suspended by the seller, for some reason.\n\n{@link IShoppingCustomer Customers} cannot see the sale on the\nboth list and detail pages. It is almost same with soft delettion,\nbut there's a little bit difference that the owner\n{@link IShoppingSeller seller} can still see the sale and resume it.\n\nOf course, the {@link IShoppingCustomer customers} who have\nalready purchased the sale can still see the sale on the\n{@link IShoppingOrder order} page.",
          "oneOf": [
            {
              "type": "null"
            },
            {
              "type": "string",
              "format": "date-time"
            }
          ]
        },
        "opened_at": {
          "title": "Opening time of the sale",
          "description": "Opening time of the sale.",
          "oneOf": [
            {
              "type": "null"
            },
            {
              "type": "string",
              "format": "date-time"
            }
          ]
        },
        "closed_at": {
          "title": "Closing time of the sale",
          "description": "Closing time of the sale.\n\nIf this value is `null`, the sale be continued forever.",
          "oneOf": [
            {
              "type": "null"
            },
            {
              "type": "string",
              "format": "date-time"
            }
          ]
        }
      },
      "required": [
        "section",
        "seller",
        "id",
        "snapshot_id",
        "latest",
        "content",
        "channels",
        "tags",
        "units",
        "created_at",
        "updated_at",
        "paused_at",
        "suspended_at",
        "opened_at",
        "closed_at"
      ]
    },
    "success": true,
    "arguments": {
      "type": {
        "host": "http://127.0.0.1:37001",
        "headers": {
          "Authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0YWJsZSI6InNob3BwaW5nX2N1c3RvbWVycyIsImlkIjoiMjVlYzg3ZjctODE1ZC00YjU3LTk1NzYtYzk1Mzk4NGJjMjhmIiwicmVhZG9ubHkiOmZhbHNlLCJleHBpcmVkX2F0IjoiMjAyNC0xMi0xM1QwOTo0MjoxMi41MzlaIiwicmVmcmVzaGFibGVfdW50aWwiOiIyMDI0LTEyLTI3VDA2OjQyOjEyLjUzOVoiLCJpYXQiOjE3MzQwNzIxMzJ9.zWZrU-d1bSW-MawmSo2RYRPk_73xtR_PxfFUrEpDJkc"
        }
      },
      "properties": "6b0c6399-17f6-420e-a693-c453c8fd155d"
    },
    "value": {
      "section": {
        "id": "a01c572c-3199-4929-ac67-ba7c31b2c808",
        "code": "general",
        "name": "General",
        "created_at": "2024-12-13T06:42:11.124Z"
      },
      "seller": {
        "type": "seller",
        "member": {
          "id": "a853492c-70b4-487f-9648-0f6109a0ad69",
          "nickname": "Robot",
          "emails": [
            {
              "id": "81ea73c4-b41e-4022-9384-d51d3215797e",
              "value": "robot@nestia.io",
              "created_at": "2024-12-13T06:42:11.227Z"
            }
          ],
          "created_at": "2024-12-13T06:42:11.227Z"
        },
        "customer": {
          "id": "aeb8583b-8bd9-4d29-adea-78779b405046",
          "channel": {
            "id": "2323f4bd-21ad-45b7-ae3b-cadd84dcc935",
            "created_at": "2024-12-13T06:42:10.908Z",
            "code": "samchon",
            "name": "Samchon Shopping Mall"
          },
          "external_user": null,
          "href": "http://127.0.0.1/TestAutomation",
          "referrer": "http://127.0.0.1/NodeJS",
          "ip": "127.0.0.1",
          "created_at": "2024-12-13T06:42:11.258Z"
        },
        "citizen": {
          "id": "43aedfea-6b2c-4c18-9f69-60373c9580dd",
          "created_at": "2024-12-13T06:42:11.157Z",
          "mobile": "01012345678",
          "name": "Robot"
        },
        "id": "addccb32-ac48-460e-9624-d9809da19d99",
        "created_at": "2024-12-13T06:42:11.241Z"
      },
      "id": "6b0c6399-17f6-420e-a693-c453c8fd155d",
      "snapshot_id": "fae10058-fb6b-4a87-bbc9-4e1cf1746a5d",
      "latest": true,
      "content": {
        "id": "5cb7834c-6867-4553-bdea-072d986a9435",
        "title": "Apple MacBook Pro",
        "format": "md",
        "body": "MacBook Pro\n\n**The Ultimate Tool for Professionals**\n\nMacBook Pro is designed to elevate your creativity and productivity to new heights. Combining exceptional performance, elegant design, and the unparalleled experience only Apple can deliver, this is the device that empowers you to tackle any challenge with confidence.\n\n- **Remarkable Performance**\n    \n    Powered by the next-generation chip, it handles demanding tasks and complex projects effortlessly, delivering unmatched speed and efficiency.\n    \n- **Outstanding Display**\n    \n    The Retina display offers rich colors and sharp contrast, creating an immersive visual experience. With ProMotion technology, enjoy smooth scrolling and fluid animations like never before.\n    \n- **All-Day Battery Life**\n    \n    Stay focused and in the flow wherever you go with a battery that lasts all day. This is a laptop that works as hard as you do.\n    \n- **Sleek Yet Powerful Design**\n    \n    A precision aluminum body that’s lightweight yet durable, paired with a minimalist design that stands out on your desk and on the go.\n    \n- **Smart Connectivity**\n    \n    Versatile ports for high-speed data transfer and seamless compatibility ensure you're ready for any work environment.\n    \nWith MacBook Pro, your potential knows no bounds. **It’s time to rediscover what you’re capable of.**\n",
        "files": [
          {
            "id": "4e11bfdc-1099-4fa2-8e3a-1214ea89a6ca",
            "created_at": "2024-12-13T06:42:11.584Z",
            "name": "apple-macbook-pro-thumbnail",
            "extension": "png",
            "url": "https://store.storeimages.cdn-apple.com/8756/as-images.apple.com/is/mbp14-spaceblack-gallery1-202410?wid=4000&hei=3074&fmt=jpeg&qlt=90&.v=1729264981617"
          }
        ],
        "thumbnails": [
          {
            "id": "cbb4e2a3-19bc-47d9-941e-5394fe49540a",
            "created_at": "2024-12-13T06:42:11.584Z",
            "name": "apple-macbook-pro-thumbnail",
            "extension": "png",
            "url": "https://store.storeimages.cdn-apple.com/8756/as-images.apple.com/is/mbp14-spaceblack-gallery1-202410?wid=4000&hei=3074&fmt=jpeg&qlt=90&.v=1729264981617"
          }
        ]
      },
      "channels": [
        {
          "categories": [
            {
              "parent": null,
              "id": "9b9b36f4-4e50-48ff-ac05-ee8588be0dbe",
              "code": "electronics",
              "parent_id": null,
              "name": "Electronics",
              "created_at": "2024-12-13T06:42:10.919Z"
            },
            {
              "parent": {
                "parent": {
                  "parent": null,
                  "id": "9b9b36f4-4e50-48ff-ac05-ee8588be0dbe",
                  "code": "electronics",
                  "parent_id": null,
                  "name": "Electronics",
                  "created_at": "2024-12-13T06:42:10.919Z"
                },
                "id": "ab794f96-49c0-4318-9ac8-91318b188e6c",
                "code": "laptops",
                "parent_id": "9b9b36f4-4e50-48ff-ac05-ee8588be0dbe",
                "name": "Laptops",
                "created_at": "2024-12-13T06:42:10.940Z"
              },
              "id": "183f6097-70dd-4333-8dc4-f0c0cf43fa69",
              "code": "macbooks",
              "parent_id": "ab794f96-49c0-4318-9ac8-91318b188e6c",
              "name": "MacBooks",
              "created_at": "2024-12-13T06:42:10.948Z"
            }
          ],
          "id": "2323f4bd-21ad-45b7-ae3b-cadd84dcc935",
          "created_at": "2024-12-13T06:42:10.908Z",
          "code": "samchon",
          "name": "Samchon Shopping Mall"
        }
      ],
      "tags": [],
      "units": [
        {
          "options": [
            {
              "candidates": [
                {
                  "id": "e70b406e-9bc6-41a4-bb1c-d92e69ce4b0b",
                  "name": "Silver"
                },
                {
                  "id": "bd7949b4-cdb0-4a3a-ae4f-7d7c32cbb892",
                  "name": "Space Gray"
                }
              ],
              "id": "2a67e9ec-aed5-4d7e-a316-fa73602c6d41",
              "type": "select",
              "name": "Color",
              "variable": true
            },
            {
              "candidates": [
                {
                  "id": "ec823002-ff99-4419-bdd4-6e880d7082eb",
                  "name": "16GB"
                },
                {
                  "id": "8eaaafaa-6bb2-451a-a876-064ed6b7dbb1",
                  "name": "32GB"
                },
                {
                  "id": "1c9b248f-bf15-432c-bbe8-5ba889e06cb1",
                  "name": "64GB"
                }
              ],
              "id": "7433b627-940f-403f-bd4a-6a9107792c81",
              "type": "select",
              "name": "RAM",
              "variable": true
            },
            {
              "candidates": [
                {
                  "id": "cfc02936-1db5-4d3c-a43b-0825d394d4e2",
                  "name": "512GB"
                },
                {
                  "id": "39f4576c-4848-480f-b995-e86f82921145",
                  "name": "1TB"
                },
                {
                  "id": "4383c738-2ac2-4520-b3e0-d5fd7840f6fc",
                  "name": "2TB"
                }
              ],
              "id": "487827f7-9e48-4c00-a24e-75c90b457953",
              "type": "select",
              "name": "SSD",
              "variable": true
            },
            {
              "candidates": [
                {
                  "id": "64afc06d-eb09-46a7-9c74-2eb1a86f70e4",
                  "name": "English"
                },
                {
                  "id": "6ad47447-c28e-4e98-9f44-d86f37b4222c",
                  "name": "Korean"
                }
              ],
              "id": "d5dcafea-3953-4ad5-b471-b45dcee2103b",
              "type": "select",
              "name": "Keyboard Language",
              "variable": true
            }
          ],
          "stocks": [
            {
              "id": "8a1a4222-fe74-4d75-bcea-5d78c9cea11d",
              "name": "MacBook Pro (Silver, 16GB, 512GB, English)",
              "price": {
                "nominal": 2000000,
                "real": 1800000
              },
              "inventory": {
                "income": 10000,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "fd76905f-1b74-476f-9c15-3b253ba26e31",
                  "option_id": "2a67e9ec-aed5-4d7e-a316-fa73602c6d41",
                  "candidate_id": "e70b406e-9bc6-41a4-bb1c-d92e69ce4b0b"
                },
                {
                  "id": "4255880b-74c9-4995-b0a5-0576d72a609a",
                  "option_id": "7433b627-940f-403f-bd4a-6a9107792c81",
                  "candidate_id": "ec823002-ff99-4419-bdd4-6e880d7082eb"
                },
                {
                  "id": "f707dde0-99e3-41c4-aa5a-85cafd5f6dd7",
                  "option_id": "487827f7-9e48-4c00-a24e-75c90b457953",
                  "candidate_id": "cfc02936-1db5-4d3c-a43b-0825d394d4e2"
                },
                {
                  "id": "695fc482-f676-408b-853c-f9d98b0e08d7",
                  "option_id": "d5dcafea-3953-4ad5-b471-b45dcee2103b",
                  "candidate_id": "64afc06d-eb09-46a7-9c74-2eb1a86f70e4"
                }
              ]
            },
            {
              "id": "b516162c-3a58-4997-8ebf-9054ff3b1397",
              "name": "MacBook Pro (Silver, 16GB, 512GB, Korean)",
              "price": {
                "nominal": 2000000,
                "real": 1800000
              },
              "inventory": {
                "income": 10000,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "ee654a7e-3b4b-4f84-96d4-2a2297e41c17",
                  "option_id": "2a67e9ec-aed5-4d7e-a316-fa73602c6d41",
                  "candidate_id": "e70b406e-9bc6-41a4-bb1c-d92e69ce4b0b"
                },
                {
                  "id": "55e3eb3e-adf8-4f0b-ac3d-96b4cba301ff",
                  "option_id": "7433b627-940f-403f-bd4a-6a9107792c81",
                  "candidate_id": "ec823002-ff99-4419-bdd4-6e880d7082eb"
                },
                {
                  "id": "23f0394e-c8b3-4c51-bbb6-893c05d6c014",
                  "option_id": "487827f7-9e48-4c00-a24e-75c90b457953",
                  "candidate_id": "cfc02936-1db5-4d3c-a43b-0825d394d4e2"
                },
                {
                  "id": "247b2abe-6d8b-4055-a9a9-8fc2f2ffb645",
                  "option_id": "d5dcafea-3953-4ad5-b471-b45dcee2103b",
                  "candidate_id": "6ad47447-c28e-4e98-9f44-d86f37b4222c"
                }
              ]
            },
            {
              "id": "6e34ca70-0947-4d55-8fb6-0d610a5cb02b",
              "name": "MacBook Pro (Silver, 16GB, 1TB, English)",
              "price": {
                "nominal": 2300000,
                "real": 2070000
              },
              "inventory": {
                "income": 10000,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "edc10eb0-ae92-490f-85e1-5bd40948ac25",
                  "option_id": "2a67e9ec-aed5-4d7e-a316-fa73602c6d41",
                  "candidate_id": "e70b406e-9bc6-41a4-bb1c-d92e69ce4b0b"
                },
                {
                  "id": "c03c7563-98c8-4609-8ebe-5743cee27f30",
                  "option_id": "7433b627-940f-403f-bd4a-6a9107792c81",
                  "candidate_id": "ec823002-ff99-4419-bdd4-6e880d7082eb"
                },
                {
                  "id": "bc17bf90-0f41-47d4-af6b-bbc68065a3d4",
                  "option_id": "487827f7-9e48-4c00-a24e-75c90b457953",
                  "candidate_id": "39f4576c-4848-480f-b995-e86f82921145"
                },
                {
                  "id": "be6aada4-9a47-4cf3-a4d5-a3b46cedf584",
                  "option_id": "d5dcafea-3953-4ad5-b471-b45dcee2103b",
                  "candidate_id": "64afc06d-eb09-46a7-9c74-2eb1a86f70e4"
                }
              ]
            },
            {
              "id": "5ab17296-a5ac-47c1-bd47-9fdbb9aebbd0",
              "name": "MacBook Pro (Silver, 16GB, 1TB, Korean)",
              "price": {
                "nominal": 2300000,
                "real": 2070000
              },
              "inventory": {
                "income": 10000,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "37c4c345-d4a1-435f-8b5a-3401c23bd80b",
                  "option_id": "2a67e9ec-aed5-4d7e-a316-fa73602c6d41",
                  "candidate_id": "e70b406e-9bc6-41a4-bb1c-d92e69ce4b0b"
                },
                {
                  "id": "2b54cfed-4ee8-4ac2-9e15-10ca4a7446ed",
                  "option_id": "7433b627-940f-403f-bd4a-6a9107792c81",
                  "candidate_id": "ec823002-ff99-4419-bdd4-6e880d7082eb"
                },
                {
                  "id": "80860fa7-21ab-4b4b-ac24-7ce9f4297fff",
                  "option_id": "487827f7-9e48-4c00-a24e-75c90b457953",
                  "candidate_id": "39f4576c-4848-480f-b995-e86f82921145"
                },
                {
                  "id": "dcf781b5-d718-4aac-9949-f0a7c425e3dd",
                  "option_id": "d5dcafea-3953-4ad5-b471-b45dcee2103b",
                  "candidate_id": "6ad47447-c28e-4e98-9f44-d86f37b4222c"
                }
              ]
            },
            {
              "id": "d87cd077-e0d9-467c-8250-b84f5870ad7a",
              "name": "MacBook Pro (Silver, 16GB, 2TB, English)",
              "price": {
                "nominal": 2900000,
                "real": 2610000
              },
              "inventory": {
                "income": 10000,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "c52c9035-ceef-4f96-bb21-0b44680d6e1d",
                  "option_id": "2a67e9ec-aed5-4d7e-a316-fa73602c6d41",
                  "candidate_id": "e70b406e-9bc6-41a4-bb1c-d92e69ce4b0b"
                },
                {
                  "id": "f1ac3a5d-41b1-4879-aad6-272edf0197f2",
                  "option_id": "7433b627-940f-403f-bd4a-6a9107792c81",
                  "candidate_id": "ec823002-ff99-4419-bdd4-6e880d7082eb"
                },
                {
                  "id": "90f27c0f-6cf8-4143-ba81-22d976fdc65f",
                  "option_id": "487827f7-9e48-4c00-a24e-75c90b457953",
                  "candidate_id": "4383c738-2ac2-4520-b3e0-d5fd7840f6fc"
                },
                {
                  "id": "9061bb2a-474c-4cb0-818c-28599a984cf6",
                  "option_id": "d5dcafea-3953-4ad5-b471-b45dcee2103b",
                  "candidate_id": "64afc06d-eb09-46a7-9c74-2eb1a86f70e4"
                }
              ]
            },
            {
              "id": "3de8563f-5a39-4521-80b0-0909c3708b3d",
              "name": "MacBook Pro (Silver, 16GB, 2TB, Korean)",
              "price": {
                "nominal": 2900000,
                "real": 2610000
              },
              "inventory": {
                "income": 10000,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "e78791b4-9ccc-4004-9762-0997c73fedd8",
                  "option_id": "2a67e9ec-aed5-4d7e-a316-fa73602c6d41",
                  "candidate_id": "e70b406e-9bc6-41a4-bb1c-d92e69ce4b0b"
                },
                {
                  "id": "6b20dc1e-d747-447a-8ffc-f80acae28b1e",
                  "option_id": "7433b627-940f-403f-bd4a-6a9107792c81",
                  "candidate_id": "ec823002-ff99-4419-bdd4-6e880d7082eb"
                },
                {
                  "id": "a94e770f-b546-4820-b58a-134342e56a4e",
                  "option_id": "487827f7-9e48-4c00-a24e-75c90b457953",
                  "candidate_id": "4383c738-2ac2-4520-b3e0-d5fd7840f6fc"
                },
                {
                  "id": "4d46385d-25a5-47a6-b98e-cbe0adf5d22c",
                  "option_id": "d5dcafea-3953-4ad5-b471-b45dcee2103b",
                  "candidate_id": "6ad47447-c28e-4e98-9f44-d86f37b4222c"
                }
              ]
            },
            {
              "id": "05f8702e-e469-4850-a68b-51372e67ce0c",
              "name": "MacBook Pro (Silver, 32GB, 512GB, English)",
              "price": {
                "nominal": 2600000,
                "real": 2340000
              },
              "inventory": {
                "income": 10000,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "78900dc5-352e-4c07-9f7b-35112ee0a0f7",
                  "option_id": "2a67e9ec-aed5-4d7e-a316-fa73602c6d41",
                  "candidate_id": "e70b406e-9bc6-41a4-bb1c-d92e69ce4b0b"
                },
                {
                  "id": "ea5f35e8-5bcb-4453-9630-0a59e77d0953",
                  "option_id": "7433b627-940f-403f-bd4a-6a9107792c81",
                  "candidate_id": "8eaaafaa-6bb2-451a-a876-064ed6b7dbb1"
                },
                {
                  "id": "0a44ecaf-a562-45e8-a2c5-bb012cd5caaa",
                  "option_id": "487827f7-9e48-4c00-a24e-75c90b457953",
                  "candidate_id": "cfc02936-1db5-4d3c-a43b-0825d394d4e2"
                },
                {
                  "id": "095554eb-3db9-41ca-85c5-1d7ef6720ca0",
                  "option_id": "d5dcafea-3953-4ad5-b471-b45dcee2103b",
                  "candidate_id": "64afc06d-eb09-46a7-9c74-2eb1a86f70e4"
                }
              ]
            },
            {
              "id": "b404fe21-6481-4d7f-81de-509d7c4aa75d",
              "name": "MacBook Pro (Silver, 32GB, 512GB, Korean)",
              "price": {
                "nominal": 2600000,
                "real": 2340000
              },
              "inventory": {
                "income": 10000,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "f6de6acb-5956-4f6f-899d-cc9904cadd93",
                  "option_id": "2a67e9ec-aed5-4d7e-a316-fa73602c6d41",
                  "candidate_id": "e70b406e-9bc6-41a4-bb1c-d92e69ce4b0b"
                },
                {
                  "id": "42d27220-07e1-4f38-ba26-53975fae0f0b",
                  "option_id": "7433b627-940f-403f-bd4a-6a9107792c81",
                  "candidate_id": "8eaaafaa-6bb2-451a-a876-064ed6b7dbb1"
                },
                {
                  "id": "a3863ccb-d856-4214-a3e2-5c273a52f878",
                  "option_id": "487827f7-9e48-4c00-a24e-75c90b457953",
                  "candidate_id": "cfc02936-1db5-4d3c-a43b-0825d394d4e2"
                },
                {
                  "id": "8a7222e7-cc87-4f5e-9dc4-1ad979a70db5",
                  "option_id": "d5dcafea-3953-4ad5-b471-b45dcee2103b",
                  "candidate_id": "6ad47447-c28e-4e98-9f44-d86f37b4222c"
                }
              ]
            },
            {
              "id": "988381fb-eef5-44f1-b9cc-3712c77296ff",
              "name": "MacBook Pro (Silver, 32GB, 1TB, English)",
              "price": {
                "nominal": 2900000,
                "real": 2610000
              },
              "inventory": {
                "income": 10000,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "31b26a46-2329-46ec-a9ef-b4f5b7c8b96b",
                  "option_id": "2a67e9ec-aed5-4d7e-a316-fa73602c6d41",
                  "candidate_id": "e70b406e-9bc6-41a4-bb1c-d92e69ce4b0b"
                },
                {
                  "id": "db87ab30-fc5d-46c6-ad14-f3e3284bf52d",
                  "option_id": "7433b627-940f-403f-bd4a-6a9107792c81",
                  "candidate_id": "8eaaafaa-6bb2-451a-a876-064ed6b7dbb1"
                },
                {
                  "id": "c5f34a57-483f-42d3-a68f-80665982d418",
                  "option_id": "487827f7-9e48-4c00-a24e-75c90b457953",
                  "candidate_id": "39f4576c-4848-480f-b995-e86f82921145"
                },
                {
                  "id": "7e584304-cdf7-4d13-a119-d510a00bdfea",
                  "option_id": "d5dcafea-3953-4ad5-b471-b45dcee2103b",
                  "candidate_id": "64afc06d-eb09-46a7-9c74-2eb1a86f70e4"
                }
              ]
            },
            {
              "id": "9cd18c52-1dac-4b58-ab15-386f3f84064a",
              "name": "MacBook Pro (Silver, 32GB, 1TB, Korean)",
              "price": {
                "nominal": 2900000,
                "real": 2610000
              },
              "inventory": {
                "income": 10000,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "dbb8b33c-d501-41bb-937b-ee3d5ae946ff",
                  "option_id": "2a67e9ec-aed5-4d7e-a316-fa73602c6d41",
                  "candidate_id": "e70b406e-9bc6-41a4-bb1c-d92e69ce4b0b"
                },
                {
                  "id": "4b90b28f-c249-45f2-822c-1a6b2eebb519",
                  "option_id": "7433b627-940f-403f-bd4a-6a9107792c81",
                  "candidate_id": "8eaaafaa-6bb2-451a-a876-064ed6b7dbb1"
                },
                {
                  "id": "9351303e-f34e-4786-a383-da69fbd67a52",
                  "option_id": "487827f7-9e48-4c00-a24e-75c90b457953",
                  "candidate_id": "39f4576c-4848-480f-b995-e86f82921145"
                },
                {
                  "id": "09cc7841-d3c2-48ae-b527-9a940d4d377c",
                  "option_id": "d5dcafea-3953-4ad5-b471-b45dcee2103b",
                  "candidate_id": "6ad47447-c28e-4e98-9f44-d86f37b4222c"
                }
              ]
            },
            {
              "id": "7cc175f6-2dff-4d06-85b4-621a01a07e0e",
              "name": "MacBook Pro (Silver, 32GB, 2TB, English)",
              "price": {
                "nominal": 3500000,
                "real": 3150000
              },
              "inventory": {
                "income": 10000,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "b82b47d0-ca3c-4416-a3cc-a62b46640746",
                  "option_id": "2a67e9ec-aed5-4d7e-a316-fa73602c6d41",
                  "candidate_id": "e70b406e-9bc6-41a4-bb1c-d92e69ce4b0b"
                },
                {
                  "id": "5316c4d0-e151-447c-bdb6-13f0aa20e865",
                  "option_id": "7433b627-940f-403f-bd4a-6a9107792c81",
                  "candidate_id": "8eaaafaa-6bb2-451a-a876-064ed6b7dbb1"
                },
                {
                  "id": "95b8ac96-9ddd-42f3-856e-d0c4c87dbf1a",
                  "option_id": "487827f7-9e48-4c00-a24e-75c90b457953",
                  "candidate_id": "4383c738-2ac2-4520-b3e0-d5fd7840f6fc"
                },
                {
                  "id": "2f4da0d5-34a6-420e-9fec-e0f9bd10fc32",
                  "option_id": "d5dcafea-3953-4ad5-b471-b45dcee2103b",
                  "candidate_id": "64afc06d-eb09-46a7-9c74-2eb1a86f70e4"
                }
              ]
            },
            {
              "id": "e244891e-d046-47dd-9931-827b1a061696",
              "name": "MacBook Pro (Silver, 32GB, 2TB, Korean)",
              "price": {
                "nominal": 3500000,
                "real": 3150000
              },
              "inventory": {
                "income": 10000,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "ad3f625d-8438-4155-a284-63cc95855639",
                  "option_id": "2a67e9ec-aed5-4d7e-a316-fa73602c6d41",
                  "candidate_id": "e70b406e-9bc6-41a4-bb1c-d92e69ce4b0b"
                },
                {
                  "id": "ca5bf9a5-2d1e-45ab-b46c-b21ab6f3a4e1",
                  "option_id": "7433b627-940f-403f-bd4a-6a9107792c81",
                  "candidate_id": "8eaaafaa-6bb2-451a-a876-064ed6b7dbb1"
                },
                {
                  "id": "838b6c83-fc4f-492b-ab51-4700dc3b1345",
                  "option_id": "487827f7-9e48-4c00-a24e-75c90b457953",
                  "candidate_id": "4383c738-2ac2-4520-b3e0-d5fd7840f6fc"
                },
                {
                  "id": "99a83308-f452-417f-979b-98db6c8fcd7e",
                  "option_id": "d5dcafea-3953-4ad5-b471-b45dcee2103b",
                  "candidate_id": "6ad47447-c28e-4e98-9f44-d86f37b4222c"
                }
              ]
            },
            {
              "id": "ea244098-e927-4ef5-82a6-ef1d968fd6ed",
              "name": "MacBook Pro (Silver, 64GB, 512GB, English)",
              "price": {
                "nominal": 3200000,
                "real": 2880000
              },
              "inventory": {
                "income": 10000,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "3774ced3-3b90-49b7-a9ac-74f713d70ad9",
                  "option_id": "2a67e9ec-aed5-4d7e-a316-fa73602c6d41",
                  "candidate_id": "e70b406e-9bc6-41a4-bb1c-d92e69ce4b0b"
                },
                {
                  "id": "3f85c0c3-04c2-4bcb-a8c3-f96ca86083ae",
                  "option_id": "7433b627-940f-403f-bd4a-6a9107792c81",
                  "candidate_id": "1c9b248f-bf15-432c-bbe8-5ba889e06cb1"
                },
                {
                  "id": "974021bd-67f9-4b51-9a49-94d72baead02",
                  "option_id": "487827f7-9e48-4c00-a24e-75c90b457953",
                  "candidate_id": "cfc02936-1db5-4d3c-a43b-0825d394d4e2"
                },
                {
                  "id": "0585690f-4318-45b3-9131-e080f845d4a3",
                  "option_id": "d5dcafea-3953-4ad5-b471-b45dcee2103b",
                  "candidate_id": "64afc06d-eb09-46a7-9c74-2eb1a86f70e4"
                }
              ]
            },
            {
              "id": "b7041d99-02db-493d-a40b-ebd3d5620bc3",
              "name": "MacBook Pro (Silver, 64GB, 512GB, Korean)",
              "price": {
                "nominal": 3200000,
                "real": 2880000
              },
              "inventory": {
                "income": 10000,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "a22f7e70-1110-45da-a4b7-013632ec8980",
                  "option_id": "2a67e9ec-aed5-4d7e-a316-fa73602c6d41",
                  "candidate_id": "e70b406e-9bc6-41a4-bb1c-d92e69ce4b0b"
                },
                {
                  "id": "00606439-9f03-4f09-8df9-7966d81e15ae",
                  "option_id": "7433b627-940f-403f-bd4a-6a9107792c81",
                  "candidate_id": "1c9b248f-bf15-432c-bbe8-5ba889e06cb1"
                },
                {
                  "id": "ca761dad-9ed9-47bc-bcab-a57e7135df53",
                  "option_id": "487827f7-9e48-4c00-a24e-75c90b457953",
                  "candidate_id": "cfc02936-1db5-4d3c-a43b-0825d394d4e2"
                },
                {
                  "id": "397707f6-ca90-4b40-8f54-50adeba64062",
                  "option_id": "d5dcafea-3953-4ad5-b471-b45dcee2103b",
                  "candidate_id": "6ad47447-c28e-4e98-9f44-d86f37b4222c"
                }
              ]
            },
            {
              "id": "8eb5cf27-5cb3-47d0-9c9d-2df388dbafd8",
              "name": "MacBook Pro (Silver, 64GB, 1TB, English)",
              "price": {
                "nominal": 3500000,
                "real": 3150000
              },
              "inventory": {
                "income": 10000,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "d5844fce-d374-4b79-bd69-d68e824fba4a",
                  "option_id": "2a67e9ec-aed5-4d7e-a316-fa73602c6d41",
                  "candidate_id": "e70b406e-9bc6-41a4-bb1c-d92e69ce4b0b"
                },
                {
                  "id": "2332f2d5-d214-40ff-9f2a-718c75ba77dd",
                  "option_id": "7433b627-940f-403f-bd4a-6a9107792c81",
                  "candidate_id": "1c9b248f-bf15-432c-bbe8-5ba889e06cb1"
                },
                {
                  "id": "1395a429-cef9-4f23-b8eb-81a308f3b54c",
                  "option_id": "487827f7-9e48-4c00-a24e-75c90b457953",
                  "candidate_id": "39f4576c-4848-480f-b995-e86f82921145"
                },
                {
                  "id": "02c4a5ab-07e3-48f2-8a33-2b168c34b260",
                  "option_id": "d5dcafea-3953-4ad5-b471-b45dcee2103b",
                  "candidate_id": "64afc06d-eb09-46a7-9c74-2eb1a86f70e4"
                }
              ]
            },
            {
              "id": "d6df80ee-2f34-492b-b07a-145e01333720",
              "name": "MacBook Pro (Silver, 64GB, 1TB, Korean)",
              "price": {
                "nominal": 3500000,
                "real": 3150000
              },
              "inventory": {
                "income": 10000,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "be96f65f-11f1-4104-9f8e-ce9564d72939",
                  "option_id": "2a67e9ec-aed5-4d7e-a316-fa73602c6d41",
                  "candidate_id": "e70b406e-9bc6-41a4-bb1c-d92e69ce4b0b"
                },
                {
                  "id": "12cd55ed-7621-44c3-9859-2b9c2dcb3395",
                  "option_id": "7433b627-940f-403f-bd4a-6a9107792c81",
                  "candidate_id": "1c9b248f-bf15-432c-bbe8-5ba889e06cb1"
                },
                {
                  "id": "fa76fde7-0272-49ba-bd21-fb6150f92446",
                  "option_id": "487827f7-9e48-4c00-a24e-75c90b457953",
                  "candidate_id": "39f4576c-4848-480f-b995-e86f82921145"
                },
                {
                  "id": "cdfe0c28-17ad-40ed-88bf-ee0903df56de",
                  "option_id": "d5dcafea-3953-4ad5-b471-b45dcee2103b",
                  "candidate_id": "6ad47447-c28e-4e98-9f44-d86f37b4222c"
                }
              ]
            },
            {
              "id": "9ade300d-1eab-4e3c-9a3e-72ea7fc7c8c7",
              "name": "MacBook Pro (Silver, 64GB, 2TB, English)",
              "price": {
                "nominal": 4100000,
                "real": 3690000
              },
              "inventory": {
                "income": 10000,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "85351db1-38da-4c23-a308-5b394e01412e",
                  "option_id": "2a67e9ec-aed5-4d7e-a316-fa73602c6d41",
                  "candidate_id": "e70b406e-9bc6-41a4-bb1c-d92e69ce4b0b"
                },
                {
                  "id": "bc56bcde-d3a8-47c1-8190-4211d988b529",
                  "option_id": "7433b627-940f-403f-bd4a-6a9107792c81",
                  "candidate_id": "1c9b248f-bf15-432c-bbe8-5ba889e06cb1"
                },
                {
                  "id": "4129e34e-d435-4cc9-be31-f911a29e69d6",
                  "option_id": "487827f7-9e48-4c00-a24e-75c90b457953",
                  "candidate_id": "4383c738-2ac2-4520-b3e0-d5fd7840f6fc"
                },
                {
                  "id": "233327f8-75ac-4318-a9d9-fc42d15b2393",
                  "option_id": "d5dcafea-3953-4ad5-b471-b45dcee2103b",
                  "candidate_id": "64afc06d-eb09-46a7-9c74-2eb1a86f70e4"
                }
              ]
            },
            {
              "id": "3eef7052-e5d9-43e9-b8de-16795e3b18aa",
              "name": "MacBook Pro (Silver, 64GB, 2TB, Korean)",
              "price": {
                "nominal": 4100000,
                "real": 3690000
              },
              "inventory": {
                "income": 10000,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "337fb673-017a-4db1-9724-f9c319ecd014",
                  "option_id": "2a67e9ec-aed5-4d7e-a316-fa73602c6d41",
                  "candidate_id": "e70b406e-9bc6-41a4-bb1c-d92e69ce4b0b"
                },
                {
                  "id": "1b1a1072-dd9a-494e-b4ae-c005cfbf40af",
                  "option_id": "7433b627-940f-403f-bd4a-6a9107792c81",
                  "candidate_id": "1c9b248f-bf15-432c-bbe8-5ba889e06cb1"
                },
                {
                  "id": "92c7d67e-2b33-48d6-ad9c-ed671a7154a8",
                  "option_id": "487827f7-9e48-4c00-a24e-75c90b457953",
                  "candidate_id": "4383c738-2ac2-4520-b3e0-d5fd7840f6fc"
                },
                {
                  "id": "bfb1c701-a349-4f9a-ae5b-3547926373c9",
                  "option_id": "d5dcafea-3953-4ad5-b471-b45dcee2103b",
                  "candidate_id": "6ad47447-c28e-4e98-9f44-d86f37b4222c"
                }
              ]
            },
            {
              "id": "f5a98391-d7ae-4920-9249-3c65c875e998",
              "name": "MacBook Pro (Space Gray, 16GB, 512GB, English)",
              "price": {
                "nominal": 2050000,
                "real": 1845000
              },
              "inventory": {
                "income": 10000,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "0c6d5400-c2e0-4899-afeb-5667ef6e6d13",
                  "option_id": "2a67e9ec-aed5-4d7e-a316-fa73602c6d41",
                  "candidate_id": "bd7949b4-cdb0-4a3a-ae4f-7d7c32cbb892"
                },
                {
                  "id": "73e00683-b00f-43dc-9728-863105283268",
                  "option_id": "7433b627-940f-403f-bd4a-6a9107792c81",
                  "candidate_id": "ec823002-ff99-4419-bdd4-6e880d7082eb"
                },
                {
                  "id": "d1d65490-6074-4f27-b93c-6525eb172f16",
                  "option_id": "487827f7-9e48-4c00-a24e-75c90b457953",
                  "candidate_id": "cfc02936-1db5-4d3c-a43b-0825d394d4e2"
                },
                {
                  "id": "51da0828-b46d-4aa1-9d5a-74141597fe24",
                  "option_id": "d5dcafea-3953-4ad5-b471-b45dcee2103b",
                  "candidate_id": "64afc06d-eb09-46a7-9c74-2eb1a86f70e4"
                }
              ]
            },
            {
              "id": "c248be5b-4a9f-459d-ae89-e636e1e0a34a",
              "name": "MacBook Pro (Space Gray, 16GB, 512GB, Korean)",
              "price": {
                "nominal": 2050000,
                "real": 1845000
              },
              "inventory": {
                "income": 10000,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "0c5e89d0-256f-4064-b5b2-0d66eb5f96d5",
                  "option_id": "2a67e9ec-aed5-4d7e-a316-fa73602c6d41",
                  "candidate_id": "bd7949b4-cdb0-4a3a-ae4f-7d7c32cbb892"
                },
                {
                  "id": "a13c3e86-d867-43e1-a792-706a780c7e3c",
                  "option_id": "7433b627-940f-403f-bd4a-6a9107792c81",
                  "candidate_id": "ec823002-ff99-4419-bdd4-6e880d7082eb"
                },
                {
                  "id": "2c00ab0d-a32e-4252-ab09-ebe278bba197",
                  "option_id": "487827f7-9e48-4c00-a24e-75c90b457953",
                  "candidate_id": "cfc02936-1db5-4d3c-a43b-0825d394d4e2"
                },
                {
                  "id": "cc77fe6a-b723-443d-9dc1-0e698f013e24",
                  "option_id": "d5dcafea-3953-4ad5-b471-b45dcee2103b",
                  "candidate_id": "6ad47447-c28e-4e98-9f44-d86f37b4222c"
                }
              ]
            },
            {
              "id": "6e5f1ede-c7c7-4665-9e40-1a4679be876b",
              "name": "MacBook Pro (Space Gray, 16GB, 1TB, English)",
              "price": {
                "nominal": 2350000,
                "real": 2115000
              },
              "inventory": {
                "income": 10000,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "0681525c-dcdb-4ea2-a305-4e5c4365a3b6",
                  "option_id": "2a67e9ec-aed5-4d7e-a316-fa73602c6d41",
                  "candidate_id": "bd7949b4-cdb0-4a3a-ae4f-7d7c32cbb892"
                },
                {
                  "id": "2c413f55-fbf0-45a7-9ba4-2a40b3c547c4",
                  "option_id": "7433b627-940f-403f-bd4a-6a9107792c81",
                  "candidate_id": "ec823002-ff99-4419-bdd4-6e880d7082eb"
                },
                {
                  "id": "bec94f72-1160-450d-8086-98c1b5a89f65",
                  "option_id": "487827f7-9e48-4c00-a24e-75c90b457953",
                  "candidate_id": "39f4576c-4848-480f-b995-e86f82921145"
                },
                {
                  "id": "09d3b374-d22c-4457-bf75-0b42303647f5",
                  "option_id": "d5dcafea-3953-4ad5-b471-b45dcee2103b",
                  "candidate_id": "64afc06d-eb09-46a7-9c74-2eb1a86f70e4"
                }
              ]
            },
            {
              "id": "deb5b104-3eba-40cc-b0e1-c99cc8485328",
              "name": "MacBook Pro (Space Gray, 16GB, 1TB, Korean)",
              "price": {
                "nominal": 2350000,
                "real": 2115000
              },
              "inventory": {
                "income": 10000,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "0ad490c4-39e4-4a7e-ba90-bcb8cec9964a",
                  "option_id": "2a67e9ec-aed5-4d7e-a316-fa73602c6d41",
                  "candidate_id": "bd7949b4-cdb0-4a3a-ae4f-7d7c32cbb892"
                },
                {
                  "id": "cdbf7a16-1581-463b-a9fc-152db9f85dd5",
                  "option_id": "7433b627-940f-403f-bd4a-6a9107792c81",
                  "candidate_id": "ec823002-ff99-4419-bdd4-6e880d7082eb"
                },
                {
                  "id": "f4e55aee-d5aa-471b-818d-912e21ea197d",
                  "option_id": "487827f7-9e48-4c00-a24e-75c90b457953",
                  "candidate_id": "39f4576c-4848-480f-b995-e86f82921145"
                },
                {
                  "id": "c42ea319-6705-4401-8b53-199e80ea5f6e",
                  "option_id": "d5dcafea-3953-4ad5-b471-b45dcee2103b",
                  "candidate_id": "6ad47447-c28e-4e98-9f44-d86f37b4222c"
                }
              ]
            },
            {
              "id": "abbbae95-73ef-4c9b-af91-566e77ee80b7",
              "name": "MacBook Pro (Space Gray, 16GB, 2TB, English)",
              "price": {
                "nominal": 2950000,
                "real": 2655000
              },
              "inventory": {
                "income": 10000,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "451cce6f-9f49-4106-a7d9-513e654df3a9",
                  "option_id": "2a67e9ec-aed5-4d7e-a316-fa73602c6d41",
                  "candidate_id": "bd7949b4-cdb0-4a3a-ae4f-7d7c32cbb892"
                },
                {
                  "id": "17b99098-2a0f-4580-9ab0-ffff2d46c65a",
                  "option_id": "7433b627-940f-403f-bd4a-6a9107792c81",
                  "candidate_id": "ec823002-ff99-4419-bdd4-6e880d7082eb"
                },
                {
                  "id": "5ca0b770-ba76-404c-8e0e-88107366d165",
                  "option_id": "487827f7-9e48-4c00-a24e-75c90b457953",
                  "candidate_id": "4383c738-2ac2-4520-b3e0-d5fd7840f6fc"
                },
                {
                  "id": "5f237e3d-f027-423f-a850-c5d528d23e43",
                  "option_id": "d5dcafea-3953-4ad5-b471-b45dcee2103b",
                  "candidate_id": "64afc06d-eb09-46a7-9c74-2eb1a86f70e4"
                }
              ]
            },
            {
              "id": "ded2b11d-0429-4d5a-a209-0b353b243871",
              "name": "MacBook Pro (Space Gray, 16GB, 2TB, Korean)",
              "price": {
                "nominal": 2950000,
                "real": 2655000
              },
              "inventory": {
                "income": 10000,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "bb53853f-aa53-42dd-8e16-fd98230c0615",
                  "option_id": "2a67e9ec-aed5-4d7e-a316-fa73602c6d41",
                  "candidate_id": "bd7949b4-cdb0-4a3a-ae4f-7d7c32cbb892"
                },
                {
                  "id": "eae10824-118a-4aae-a14b-039ab62f6652",
                  "option_id": "7433b627-940f-403f-bd4a-6a9107792c81",
                  "candidate_id": "ec823002-ff99-4419-bdd4-6e880d7082eb"
                },
                {
                  "id": "b3263c75-a16b-4371-bdb6-5050b76efe21",
                  "option_id": "487827f7-9e48-4c00-a24e-75c90b457953",
                  "candidate_id": "4383c738-2ac2-4520-b3e0-d5fd7840f6fc"
                },
                {
                  "id": "75a837b9-580e-4277-82fa-ffd4c824004c",
                  "option_id": "d5dcafea-3953-4ad5-b471-b45dcee2103b",
                  "candidate_id": "6ad47447-c28e-4e98-9f44-d86f37b4222c"
                }
              ]
            },
            {
              "id": "d5fdb6fa-aeff-44be-8977-a078557ba901",
              "name": "MacBook Pro (Space Gray, 32GB, 512GB, English)",
              "price": {
                "nominal": 2650000,
                "real": 2385000
              },
              "inventory": {
                "income": 10000,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "81fbef54-e991-44f6-a5da-f6d27c2666e9",
                  "option_id": "2a67e9ec-aed5-4d7e-a316-fa73602c6d41",
                  "candidate_id": "bd7949b4-cdb0-4a3a-ae4f-7d7c32cbb892"
                },
                {
                  "id": "e4c3071d-79fe-4f09-a867-dd8746519daa",
                  "option_id": "7433b627-940f-403f-bd4a-6a9107792c81",
                  "candidate_id": "8eaaafaa-6bb2-451a-a876-064ed6b7dbb1"
                },
                {
                  "id": "db0f3a3a-a446-49ec-a67a-f1bf96f3e9f6",
                  "option_id": "487827f7-9e48-4c00-a24e-75c90b457953",
                  "candidate_id": "cfc02936-1db5-4d3c-a43b-0825d394d4e2"
                },
                {
                  "id": "03256792-d995-41fe-810b-ba2a9e0fd892",
                  "option_id": "d5dcafea-3953-4ad5-b471-b45dcee2103b",
                  "candidate_id": "64afc06d-eb09-46a7-9c74-2eb1a86f70e4"
                }
              ]
            },
            {
              "id": "c00deeab-c946-4d99-ba45-8f23a0d1a313",
              "name": "MacBook Pro (Space Gray, 32GB, 512GB, Korean)",
              "price": {
                "nominal": 2650000,
                "real": 2385000
              },
              "inventory": {
                "income": 10000,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "74ee029f-3d62-4f7c-a9c9-a4f60ce3431b",
                  "option_id": "2a67e9ec-aed5-4d7e-a316-fa73602c6d41",
                  "candidate_id": "bd7949b4-cdb0-4a3a-ae4f-7d7c32cbb892"
                },
                {
                  "id": "8e46ff97-cc70-47e8-b71f-f14209f06db3",
                  "option_id": "7433b627-940f-403f-bd4a-6a9107792c81",
                  "candidate_id": "8eaaafaa-6bb2-451a-a876-064ed6b7dbb1"
                },
                {
                  "id": "bfe9de77-6df5-4a2a-9b60-76c194e20d69",
                  "option_id": "487827f7-9e48-4c00-a24e-75c90b457953",
                  "candidate_id": "cfc02936-1db5-4d3c-a43b-0825d394d4e2"
                },
                {
                  "id": "275fcd49-ecee-462f-bfd1-99061cdb77e7",
                  "option_id": "d5dcafea-3953-4ad5-b471-b45dcee2103b",
                  "candidate_id": "6ad47447-c28e-4e98-9f44-d86f37b4222c"
                }
              ]
            },
            {
              "id": "38a47423-95a0-4648-a5b1-fc7a8f27092e",
              "name": "MacBook Pro (Space Gray, 32GB, 1TB, English)",
              "price": {
                "nominal": 2950000,
                "real": 2655000
              },
              "inventory": {
                "income": 10000,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "872e7db5-fcfd-4300-8a96-65cb071d764e",
                  "option_id": "2a67e9ec-aed5-4d7e-a316-fa73602c6d41",
                  "candidate_id": "bd7949b4-cdb0-4a3a-ae4f-7d7c32cbb892"
                },
                {
                  "id": "7269a275-cda4-4360-a5b1-504ed20aed0d",
                  "option_id": "7433b627-940f-403f-bd4a-6a9107792c81",
                  "candidate_id": "8eaaafaa-6bb2-451a-a876-064ed6b7dbb1"
                },
                {
                  "id": "b5083921-f623-48d6-a451-d661bfe34a34",
                  "option_id": "487827f7-9e48-4c00-a24e-75c90b457953",
                  "candidate_id": "39f4576c-4848-480f-b995-e86f82921145"
                },
                {
                  "id": "3cf3594d-9ab5-495f-b12b-6caf2436401d",
                  "option_id": "d5dcafea-3953-4ad5-b471-b45dcee2103b",
                  "candidate_id": "64afc06d-eb09-46a7-9c74-2eb1a86f70e4"
                }
              ]
            },
            {
              "id": "d2e4ab64-f409-4afa-a3f2-5a0eb3c64e9e",
              "name": "MacBook Pro (Space Gray, 32GB, 1TB, Korean)",
              "price": {
                "nominal": 2950000,
                "real": 2655000
              },
              "inventory": {
                "income": 10000,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "bdb46b55-8a34-4396-84da-03d01423e9d8",
                  "option_id": "2a67e9ec-aed5-4d7e-a316-fa73602c6d41",
                  "candidate_id": "bd7949b4-cdb0-4a3a-ae4f-7d7c32cbb892"
                },
                {
                  "id": "ffc855f1-1fe4-4ee3-a1bd-c8c9bda11473",
                  "option_id": "7433b627-940f-403f-bd4a-6a9107792c81",
                  "candidate_id": "8eaaafaa-6bb2-451a-a876-064ed6b7dbb1"
                },
                {
                  "id": "0d5b926f-e11e-46ae-97ec-99d67dabc32c",
                  "option_id": "487827f7-9e48-4c00-a24e-75c90b457953",
                  "candidate_id": "39f4576c-4848-480f-b995-e86f82921145"
                },
                {
                  "id": "a1eac35f-53f6-4e62-870d-5700024a5f3f",
                  "option_id": "d5dcafea-3953-4ad5-b471-b45dcee2103b",
                  "candidate_id": "6ad47447-c28e-4e98-9f44-d86f37b4222c"
                }
              ]
            },
            {
              "id": "95c684b9-5da4-478b-890a-b2e6a582db1f",
              "name": "MacBook Pro (Space Gray, 32GB, 2TB, English)",
              "price": {
                "nominal": 3550000,
                "real": 3195000
              },
              "inventory": {
                "income": 10000,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "66da956a-9148-41eb-9069-963de37bf91e",
                  "option_id": "2a67e9ec-aed5-4d7e-a316-fa73602c6d41",
                  "candidate_id": "bd7949b4-cdb0-4a3a-ae4f-7d7c32cbb892"
                },
                {
                  "id": "ec3dff26-aba3-4a99-8b43-0d569f144605",
                  "option_id": "7433b627-940f-403f-bd4a-6a9107792c81",
                  "candidate_id": "8eaaafaa-6bb2-451a-a876-064ed6b7dbb1"
                },
                {
                  "id": "4bce5337-0fc7-4075-9b71-ad4402269f0c",
                  "option_id": "487827f7-9e48-4c00-a24e-75c90b457953",
                  "candidate_id": "4383c738-2ac2-4520-b3e0-d5fd7840f6fc"
                },
                {
                  "id": "eaaf6cf3-510e-4b36-a1e6-ad2423e23f88",
                  "option_id": "d5dcafea-3953-4ad5-b471-b45dcee2103b",
                  "candidate_id": "64afc06d-eb09-46a7-9c74-2eb1a86f70e4"
                }
              ]
            },
            {
              "id": "cb9b215c-b13f-4e04-9f56-bf221577ec28",
              "name": "MacBook Pro (Space Gray, 32GB, 2TB, Korean)",
              "price": {
                "nominal": 3550000,
                "real": 3195000
              },
              "inventory": {
                "income": 10000,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "86c4ca38-dc25-4067-a7dc-df4c3d0c0e32",
                  "option_id": "2a67e9ec-aed5-4d7e-a316-fa73602c6d41",
                  "candidate_id": "bd7949b4-cdb0-4a3a-ae4f-7d7c32cbb892"
                },
                {
                  "id": "a4e6bb1d-89ba-44ae-aebf-b0cc7718ea39",
                  "option_id": "7433b627-940f-403f-bd4a-6a9107792c81",
                  "candidate_id": "8eaaafaa-6bb2-451a-a876-064ed6b7dbb1"
                },
                {
                  "id": "e412bdd9-4231-4f14-84ff-bcefd589cda9",
                  "option_id": "487827f7-9e48-4c00-a24e-75c90b457953",
                  "candidate_id": "4383c738-2ac2-4520-b3e0-d5fd7840f6fc"
                },
                {
                  "id": "e5089bb1-5632-4135-aa84-904e57f2da56",
                  "option_id": "d5dcafea-3953-4ad5-b471-b45dcee2103b",
                  "candidate_id": "6ad47447-c28e-4e98-9f44-d86f37b4222c"
                }
              ]
            },
            {
              "id": "1a51bcbb-1cf0-4d14-8b4a-00cf53d88244",
              "name": "MacBook Pro (Space Gray, 64GB, 512GB, English)",
              "price": {
                "nominal": 3250000,
                "real": 2925000
              },
              "inventory": {
                "income": 10000,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "ba62ada7-8352-4014-a525-328af6b6fcbf",
                  "option_id": "2a67e9ec-aed5-4d7e-a316-fa73602c6d41",
                  "candidate_id": "bd7949b4-cdb0-4a3a-ae4f-7d7c32cbb892"
                },
                {
                  "id": "8a684fbb-5d2b-4110-91ea-6924980ad3dc",
                  "option_id": "7433b627-940f-403f-bd4a-6a9107792c81",
                  "candidate_id": "1c9b248f-bf15-432c-bbe8-5ba889e06cb1"
                },
                {
                  "id": "7d311438-c13a-4755-aa35-7b4113f5f934",
                  "option_id": "487827f7-9e48-4c00-a24e-75c90b457953",
                  "candidate_id": "cfc02936-1db5-4d3c-a43b-0825d394d4e2"
                },
                {
                  "id": "86a0a69a-e861-41ae-9222-355aa00fadbe",
                  "option_id": "d5dcafea-3953-4ad5-b471-b45dcee2103b",
                  "candidate_id": "64afc06d-eb09-46a7-9c74-2eb1a86f70e4"
                }
              ]
            },
            {
              "id": "f779da55-1e49-461e-b223-360af1eba58d",
              "name": "MacBook Pro (Space Gray, 64GB, 512GB, Korean)",
              "price": {
                "nominal": 3250000,
                "real": 2925000
              },
              "inventory": {
                "income": 10000,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "815ac027-ca83-4ae2-9547-0f645d4c9c2c",
                  "option_id": "2a67e9ec-aed5-4d7e-a316-fa73602c6d41",
                  "candidate_id": "bd7949b4-cdb0-4a3a-ae4f-7d7c32cbb892"
                },
                {
                  "id": "6adcc02f-b063-4f84-9b3d-718381180c67",
                  "option_id": "7433b627-940f-403f-bd4a-6a9107792c81",
                  "candidate_id": "1c9b248f-bf15-432c-bbe8-5ba889e06cb1"
                },
                {
                  "id": "e5ff0204-56cc-4fb5-a105-badb9b1dcd04",
                  "option_id": "487827f7-9e48-4c00-a24e-75c90b457953",
                  "candidate_id": "cfc02936-1db5-4d3c-a43b-0825d394d4e2"
                },
                {
                  "id": "ffc68f61-bab8-42b9-b540-7872fa9fb5b6",
                  "option_id": "d5dcafea-3953-4ad5-b471-b45dcee2103b",
                  "candidate_id": "6ad47447-c28e-4e98-9f44-d86f37b4222c"
                }
              ]
            },
            {
              "id": "7d17074b-999f-406d-b3f5-87d6cfe3b9ab",
              "name": "MacBook Pro (Space Gray, 64GB, 1TB, English)",
              "price": {
                "nominal": 3550000,
                "real": 3195000
              },
              "inventory": {
                "income": 10000,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "e8a726f7-e003-4e2f-a4a9-8bbe2c461ba6",
                  "option_id": "2a67e9ec-aed5-4d7e-a316-fa73602c6d41",
                  "candidate_id": "bd7949b4-cdb0-4a3a-ae4f-7d7c32cbb892"
                },
                {
                  "id": "0d0af427-32d1-4014-bdaf-418a687d255e",
                  "option_id": "7433b627-940f-403f-bd4a-6a9107792c81",
                  "candidate_id": "1c9b248f-bf15-432c-bbe8-5ba889e06cb1"
                },
                {
                  "id": "9fcd2202-8400-4c66-8227-2d324ce8ae7a",
                  "option_id": "487827f7-9e48-4c00-a24e-75c90b457953",
                  "candidate_id": "39f4576c-4848-480f-b995-e86f82921145"
                },
                {
                  "id": "5f736a90-87fe-4bc9-be78-448c805ff361",
                  "option_id": "d5dcafea-3953-4ad5-b471-b45dcee2103b",
                  "candidate_id": "64afc06d-eb09-46a7-9c74-2eb1a86f70e4"
                }
              ]
            },
            {
              "id": "bbd66765-0b8a-4754-a7cf-5c9217362e5a",
              "name": "MacBook Pro (Space Gray, 64GB, 1TB, Korean)",
              "price": {
                "nominal": 3550000,
                "real": 3195000
              },
              "inventory": {
                "income": 10000,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "ae06178b-da13-4dcf-af75-0ae226051792",
                  "option_id": "2a67e9ec-aed5-4d7e-a316-fa73602c6d41",
                  "candidate_id": "bd7949b4-cdb0-4a3a-ae4f-7d7c32cbb892"
                },
                {
                  "id": "889f4c39-7434-4050-a149-a0bc5f2b8b20",
                  "option_id": "7433b627-940f-403f-bd4a-6a9107792c81",
                  "candidate_id": "1c9b248f-bf15-432c-bbe8-5ba889e06cb1"
                },
                {
                  "id": "260bcc43-f02a-4c89-a57e-26da28e4a232",
                  "option_id": "487827f7-9e48-4c00-a24e-75c90b457953",
                  "candidate_id": "39f4576c-4848-480f-b995-e86f82921145"
                },
                {
                  "id": "4c873976-8515-4f09-b044-b25c5b1cf9b8",
                  "option_id": "d5dcafea-3953-4ad5-b471-b45dcee2103b",
                  "candidate_id": "6ad47447-c28e-4e98-9f44-d86f37b4222c"
                }
              ]
            },
            {
              "id": "1d4161ef-c353-46ed-94fd-e00be5aed213",
              "name": "MacBook Pro (Space Gray, 64GB, 2TB, English)",
              "price": {
                "nominal": 4150000,
                "real": 3735000
              },
              "inventory": {
                "income": 10000,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "bf7621b2-7408-4b49-8b72-f732cc6e0275",
                  "option_id": "2a67e9ec-aed5-4d7e-a316-fa73602c6d41",
                  "candidate_id": "bd7949b4-cdb0-4a3a-ae4f-7d7c32cbb892"
                },
                {
                  "id": "bb28378c-1fc4-4e5e-adfd-861f78edd975",
                  "option_id": "7433b627-940f-403f-bd4a-6a9107792c81",
                  "candidate_id": "1c9b248f-bf15-432c-bbe8-5ba889e06cb1"
                },
                {
                  "id": "c02b379a-9c7d-4cb0-89de-4877eebce0e4",
                  "option_id": "487827f7-9e48-4c00-a24e-75c90b457953",
                  "candidate_id": "4383c738-2ac2-4520-b3e0-d5fd7840f6fc"
                },
                {
                  "id": "11f3f64c-8d8d-460b-a797-3efad0f7df9c",
                  "option_id": "d5dcafea-3953-4ad5-b471-b45dcee2103b",
                  "candidate_id": "64afc06d-eb09-46a7-9c74-2eb1a86f70e4"
                }
              ]
            },
            {
              "id": "7b7551cf-22b6-4cbf-ae3a-83c0f1a81268",
              "name": "MacBook Pro (Space Gray, 64GB, 2TB, Korean)",
              "price": {
                "nominal": 4150000,
                "real": 3735000
              },
              "inventory": {
                "income": 10000,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "1c4dbb1a-413e-4c27-b9e7-f48fc2d8ab58",
                  "option_id": "2a67e9ec-aed5-4d7e-a316-fa73602c6d41",
                  "candidate_id": "bd7949b4-cdb0-4a3a-ae4f-7d7c32cbb892"
                },
                {
                  "id": "13e84517-d891-4abb-a60b-5820b1694374",
                  "option_id": "7433b627-940f-403f-bd4a-6a9107792c81",
                  "candidate_id": "1c9b248f-bf15-432c-bbe8-5ba889e06cb1"
                },
                {
                  "id": "4efc4964-2121-4dbe-8ce0-3ca1db7a2f6e",
                  "option_id": "487827f7-9e48-4c00-a24e-75c90b457953",
                  "candidate_id": "4383c738-2ac2-4520-b3e0-d5fd7840f6fc"
                },
                {
                  "id": "259b8cb6-6c6f-4885-9b64-93812844d9a2",
                  "option_id": "d5dcafea-3953-4ad5-b471-b45dcee2103b",
                  "candidate_id": "6ad47447-c28e-4e98-9f44-d86f37b4222c"
                }
              ]
            }
          ],
          "id": "bf0794e6-1c99-4a7d-be11-5e6a5bf690b0",
          "name": "MacBook M3 Pro 14inch Entity",
          "primary": false,
          "required": true
        },
        {
          "options": [],
          "stocks": [
            {
              "id": "149fbf9b-f6fa-403a-8438-3a2d7ce8c0ca",
              "name": "Warranty Program",
              "price": {
                "nominal": 100000,
                "real": 89000
              },
              "inventory": {
                "income": 10000,
                "outcome": 0
              },
              "choices": []
            }
          ],
          "id": "aeb2a291-ec9e-4527-b3cd-d6d686676a58",
          "name": "Warranty Program",
          "primary": false,
          "required": false
        },
        {
          "options": [],
          "stocks": [
            {
              "id": "f2548de0-2168-46b1-985d-a2b56c9e878e",
              "name": "Magnetic Keyboard",
              "price": {
                "nominal": 200000,
                "real": 169000
              },
              "inventory": {
                "income": 8000,
                "outcome": 0
              },
              "choices": []
            }
          ],
          "id": "54eb903a-eb2e-4d60-9ddc-786a47999dda",
          "name": "Magnetic Keyboard",
          "primary": false,
          "required": false
        }
      ],
      "created_at": "2024-12-13T06:42:11.585Z",
      "updated_at": "2024-12-13T06:42:11.585Z",
      "paused_at": null,
      "suspended_at": null,
      "opened_at": "2024-12-13T06:42:11.580Z",
      "closed_at": null
    }
  },
  {
    "name": "shoppings_customers_sales_getById",
    "method": "get",
    "path": "/shoppings/customers/sales/{id}",
    "description": "Get a sale info.\n\nGet a {@link IShoppingSale sale} with detailed information.\n\nIf you're a {@link IShoppingSeller seller}, you can only access to the\nyour own {@link IShoppingSale sale}. Otherwise you're a\n{@link IShoppingCustomer customer}, you can access to only the operating\nsales in the market. You can't access to the unopened, closed, or suspended\nsales.",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "description": " Target sale's {@link IShoppingSale.id }",
          "type": "string",
          "format": "uuid"
        }
      },
      "additionalProperties": false,
      "required": [
        "id"
      ],
      "$defs": {
        "IShoppingChannelCategory.IInvert": {
          "description": "Invert category information with parent category.",
          "type": "object",
          "properties": {
            "parent": {
              "title": "Parent category info with recursive structure",
              "description": "Parent category info with recursive structure.\n\nIf no parent exists, then be `null`.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "$ref": "#/$defs/IShoppingChannelCategory.IInvert"
                }
              ]
            },
            "id": {
              "title": "Primary Key",
              "description": "Primary Key.",
              "type": "string",
              "format": "uuid"
            },
            "code": {
              "title": "Identifier code of the category",
              "description": "Identifier code of the category.\n\nThe code must be unique in the channel.",
              "type": "string"
            },
            "parent_id": {
              "title": "Parent category's ID",
              "description": "Parent category's ID.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "name": {
              "title": "Representative name of the category",
              "description": "Representative name of the category.\n\nThe name must be unique within the parent category. If no parent exists,\nthen the name must be unique within the channel between no parent\ncategories.",
              "type": "string"
            },
            "created_at": {
              "title": "Creation time of record",
              "description": "Creation time of record.",
              "type": "string",
              "format": "date-time"
            }
          },
          "required": [
            "parent",
            "id",
            "code",
            "parent_id",
            "name",
            "created_at"
          ]
        }
      }
    },
    "output": {
      "description": "Seller sales products.\n\n`IShoppingSale` is an entity that embodies \"product sales\" (sales)\ninformation registered by the {@link ISoppingSeller seller}. And the main\ninformation of the sale is recorded in the sub {@link IShoppingSaleSnapshot},\nnot in the main `IShoppingSale`. When a seller changes a previously registered\nitem, the existing `IShoppingSale` record is not changed, but a new\n{@link IShoppingSaleSnapshot snapshot} record be created.\n\nThis is to preserve the {@link IShoppingCustomer customer}'s\n{@link IShoppingOrder purchase history} flawlessly after the customer\npurchases a specific item, even if the seller changes the components or\nprice of the item. It is also intended to support sellers in so-called A/B\ntesting, which involves changing components or prices and measuring the\nperformance in each case.",
      "type": "object",
      "properties": {
        "section": {
          "title": "Belonged section",
          "description": "Section information.\n\n`IShoppingSection` is a concept that refers to the spatial information of\nthe market.\n\nIf we compare the section mentioned here to the offline market, it means a\nspatially separated area within the store, such as the \"fruit corner\" or\n\"butcher corner\". Therefore, in the {@link IShoppingSale sale} entity, it is\nnot possible to classify multiple sections simultaneously, but only one section\ncan be classified.\n\nBy the way, if your shopping mall system requires only one section, then just\nuse only one. This concept is designed to be expandable in the future.",
          "type": "object",
          "properties": {
            "id": {
              "title": "Primary Key",
              "description": "Primary Key.",
              "type": "string",
              "format": "uuid"
            },
            "code": {
              "title": "Identifier code",
              "description": "Identifier code.",
              "type": "string"
            },
            "name": {
              "title": "Representative name of the section",
              "description": "Representative name of the section.",
              "type": "string"
            },
            "created_at": {
              "title": "Creation time of record",
              "description": "Creation time of record.",
              "type": "string",
              "format": "date-time"
            }
          },
          "required": [
            "id",
            "code",
            "name",
            "created_at"
          ]
        },
        "seller": {
          "title": "Seller who has registered the sale",
          "description": "Invert information starting from seller info.\n\nInstead of accessing to the seller information from the\n{@link IShoppingCustomer.member} -> {@link IShoppingMember.seller},\n`IShoppingSeller.IInvert` starts from the seller information\nand access to the customer, member and {@link IShoppingCitizen citizen}\ninformation inversely.\n\n------------------------------\n\nDescription of the current {@link IShoppingSeller.IInvert} type:\n\n> Invert information starting from seller info.\n> \n> Instead of accessing to the seller information from the\n> {@link IShoppingCustomer.member} -> {@link IShoppingMember.seller},\n> `IShoppingSeller.IInvert` starts from the seller information\n> and access to the customer, member and {@link IShoppingCitizen citizen}\n> information inversely.\n\n------------------------------\n\nDescription of the parent {@link IShoppingSeller} type:\n\n> Seller information.\n> \n> `IShoppingSeller` is an entity that embodies a person who registers\n> {@link IShoppingSale sales} to operate selling activities, with\n> {@link IShoppingMember membership} joining.\n> \n> For reference, unlike {@link IShoppingCustomer customers} which can\n> participate even without membership joining, seller must join membership\n> to operate sales. Also, seller must do the\n> {@link IShoppingCitizen real-name and mobile authentication}, too.",
          "type": "object",
          "properties": {
            "type": {
              "title": "Discriminant for the type of customer",
              "description": "Discriminant for the type of customer.",
              "const": "seller"
            },
            "member": {
              "title": "Membership joining information",
              "description": "Invert information of member.\n\nThis invert member information has been designed to be used for another\ninvert information of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert}\n- {@link IShoppingAdministrator.IInvert}\n\n------------------------------\n\nDescription of the current {@link IShoppingMember.IInvert} type:\n\n> Invert information of member.\n> \n> This invert member information has been designed to be used for another\n> invert information of sellers and administrators like below.\n> \n> - {@link IShoppingSeller.IInvert}\n> - {@link IShoppingAdministrator.IInvert}\n\n------------------------------\n\nDescription of the parent {@link IShoppingMember} type:\n\n> Member Account.\n> \n> `IShoppingMember` is an entity that symbolizes the case when a\n> {@link IShoppingCustomer} signs up as a member of this shopping mall\n> system.\n> \n> If a `IShoppingMember` has seller or administrator property. it means that\n> the {@link IShoppingCustomer} has acting as a {@link IShoppingSeller seller}\n> or {@link IShoppingAdministrator administrator} at the same time.",
              "type": "object",
              "properties": {
                "id": {
                  "title": "Primary Key",
                  "description": "Primary Key.",
                  "type": "string",
                  "format": "uuid"
                },
                "nickname": {
                  "title": "Nickname that uniquely identifies the member",
                  "description": "Nickname that uniquely identifies the member.",
                  "type": "string"
                },
                "emails": {
                  "title": "List of emails",
                  "description": "List of emails.",
                  "type": "array",
                  "items": {
                    "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "title": "Primary Key",
                        "description": "Primary Key.",
                        "type": "string",
                        "format": "uuid"
                      },
                      "value": {
                        "title": "Email address value",
                        "description": "Email address value.",
                        "type": "string",
                        "format": "email"
                      },
                      "created_at": {
                        "title": "Creation time of record",
                        "description": "Creation time of record.",
                        "type": "string",
                        "format": "date-time"
                      }
                    },
                    "required": [
                      "id",
                      "value",
                      "created_at"
                    ]
                  }
                },
                "created_at": {
                  "title": "Creation time of record",
                  "description": "Creation time of record.\n\nAnother words, the time when the member has signed up.",
                  "type": "string",
                  "format": "date-time"
                }
              },
              "required": [
                "id",
                "nickname",
                "emails",
                "created_at"
              ]
            },
            "customer": {
              "title": "Customer, the connection information",
              "description": "Inverted customer informatino.\n\nThis inverted customer information has been designed to be used for\nanother invert information of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert}\n- {@link IShoppingAdministrator.IInvert}\n\n------------------------------\n\nDescription of the current {@link IShoppingCustomer.IInvert} type:\n\n> Inverted customer informatino.\n> \n> This inverted customer information has been designed to be used for\n> another invert information of sellers and administrators like below.\n> \n> - {@link IShoppingSeller.IInvert}\n> - {@link IShoppingAdministrator.IInvert}\n\n------------------------------\n\nDescription of the parent {@link IShoppingCustomer} type:\n\n> Customer information, but not a person but a connection basis.\n> \n> `IShoppingCustomer` is an entity that literally embodies the information of\n> those who participated in the market as customers. By the way, the\n> `IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\n> even if the same person connects to the shopping mall multiple, multiple\n> records are created in `IShoppingCustomer`.\n> \n> The first purpose of this is to track the customer's inflow path in detail,\n> and it is for cases where the same person enters as a non-member,\n> {@link IShoppingCartCommodity puts items in the shopping cart} in advance,\n> and only authenticates their {@link IShoppingCitizen real name} or\n> registers/logs in at the moment of {@link IShoppingOrderPublish payment}.\n> It is the second. Lastly, it is to accurately track the activities that\n> a person performs at the shopping mall in various ways like below.\n> \n> - Same person comes from an {@link IShoppingExternalUser external service}\n> - Same person creates multiple accounts\n> - Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n> - Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n> \n> Therefore, `IShoppingCustomer` can have multiple records with the same\n> {@link IShoppingCitizen}, {@link IShoppingMember}, and\n> {@link IShoppingExternalUser}. Additionally, if a customer signs up for\n> membership after verifying their real name or signs up for our service after\n> being a user of an external service, all related records are changed at once.\n> Therefore, identification and tracking of customers can be done very\n> systematically.",
              "type": "object",
              "properties": {
                "id": {
                  "title": "Primary Key",
                  "description": "Primary Key.",
                  "type": "string",
                  "format": "uuid"
                },
                "channel": {
                  "title": "Belonged channel",
                  "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "Primary Key",
                      "description": "Primary Key.",
                      "type": "string",
                      "format": "uuid"
                    },
                    "created_at": {
                      "title": "Creation time of record",
                      "description": "Creation time of record.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "code": {
                      "title": "Identifier code",
                      "description": "Identifier code.",
                      "type": "string"
                    },
                    "name": {
                      "title": "Name of the channel",
                      "description": "Name of the channel.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "created_at",
                    "code",
                    "name"
                  ]
                },
                "external_user": {
                  "title": "External user information",
                  "description": "External user information.\n\nWhen the customer has come frome an external service.",
                  "oneOf": [
                    {
                      "type": "null"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "title": "Primary Key",
                          "description": "Primary Key.",
                          "type": "string",
                          "format": "uuid"
                        },
                        "citizen": {
                          "title": "Citizen activation info",
                          "description": "Citizen activation info.",
                          "oneOf": [
                            {
                              "type": "null"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "title": "Primary Key",
                                  "description": "Primary Key.",
                                  "type": "string",
                                  "format": "uuid"
                                },
                                "created_at": {
                                  "title": "Creation time of record",
                                  "description": "Creation time of record.",
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "mobile": {
                                  "title": "Mobile number",
                                  "description": "Mobile number.",
                                  "x-wrtn-payment-order-mobile": true,
                                  "type": "string",
                                  "pattern": "^[0-9]*$"
                                },
                                "name": {
                                  "title": "Real name, or equivalent nickname",
                                  "description": "Real name, or equivalent nickname.",
                                  "x-wrtn-payment-order-citizen": true,
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "created_at",
                                "mobile",
                                "name"
                              ],
                              "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile} input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                            }
                          ]
                        },
                        "created_at": {
                          "title": "Creation time of record",
                          "description": "Creation time of record.\n\nAnother word, first time when the external user connected.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "uid": {
                          "title": "Identifier key of external user from the external system",
                          "description": "Identifier key of external user from the external system.",
                          "type": "string"
                        },
                        "application": {
                          "title": "Identifier code of the external service",
                          "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code} in common.",
                          "type": "string"
                        },
                        "nickname": {
                          "title": "Nickname of external user in the external system",
                          "description": "Nickname of external user in the external system.",
                          "type": "string"
                        },
                        "data": {
                          "description": "Additional information about external user from the external\nsystem."
                        }
                      },
                      "required": [
                        "id",
                        "citizen",
                        "created_at",
                        "uid",
                        "application",
                        "nickname",
                        "data"
                      ],
                      "description": "External user information.\n\n`IShoppingExternalUser` is an entity dsigned for when this system needs\nto connect with external services and welcome their users as\n{@link IShoppingCustomer customers} of this service.\n\nFor reference, customers who connect from an external service must have\nthis record, and the external service user is identified through the two\nattributes {@link application} and {@link uid}. If a customer connected\nfrom an external service completes\n{@link IShoppingCitizen real-name authentication} from this service, each\ntime the external service user reconnects to this service and issues a\nnew customer authentication token, real-name authentication begins with\ncompleted.\n\nAnd {@link password} is the password issued to the user by the external\nservice system (the so-called permanent user authentication token), and\nis never the actual user password. However, for customers who entered the\nsame application and uid as the current external system user, this is to\ndetermine whether to view this as a correct external system user or a\nviolation.\n\nIn addition, additional information received from external services can\nbe recorded in the data field in JSON format."
                    }
                  ]
                },
                "href": {
                  "title": "Connection address",
                  "description": "Connection address.\n\nSame with {@link window.location.href} of client.",
                  "type": "string",
                  "format": "uri"
                },
                "referrer": {
                  "title": "Referrer address",
                  "description": "Referrer address.\n\nSame with {@link window.document.referrer} of client.",
                  "oneOf": [
                    {
                      "type": "null"
                    },
                    {
                      "type": "string",
                      "format": "uri"
                    },
                    {
                      "type": "string",
                      "maxLength": 0
                    }
                  ]
                },
                "ip": {
                  "title": "Connection IP Address",
                  "description": "Connection IP Address.",
                  "oneOf": [
                    {
                      "type": "string",
                      "format": "ipv4"
                    },
                    {
                      "type": "string",
                      "format": "ipv6"
                    }
                  ]
                },
                "created_at": {
                  "title": "Creation time of the connection record",
                  "description": "Creation time of the connection record.",
                  "type": "string",
                  "format": "date-time"
                }
              },
              "required": [
                "id",
                "channel",
                "external_user",
                "href",
                "referrer",
                "ip",
                "created_at"
              ]
            },
            "citizen": {
              "title": "Real-name and mobile number authentication information",
              "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile} input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored.",
              "type": "object",
              "properties": {
                "id": {
                  "title": "Primary Key",
                  "description": "Primary Key.",
                  "type": "string",
                  "format": "uuid"
                },
                "created_at": {
                  "title": "Creation time of record",
                  "description": "Creation time of record.",
                  "type": "string",
                  "format": "date-time"
                },
                "mobile": {
                  "title": "Mobile number",
                  "description": "Mobile number.",
                  "x-wrtn-payment-order-mobile": true,
                  "type": "string",
                  "pattern": "^[0-9]*$"
                },
                "name": {
                  "title": "Real name, or equivalent nickname",
                  "description": "Real name, or equivalent nickname.",
                  "x-wrtn-payment-order-citizen": true,
                  "type": "string"
                }
              },
              "required": [
                "id",
                "created_at",
                "mobile",
                "name"
              ]
            },
            "id": {
              "title": "Primary Key",
              "description": "Primary Key.",
              "type": "string",
              "format": "uuid"
            },
            "created_at": {
              "title": "Creation tmie of record",
              "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up.",
              "type": "string",
              "format": "date-time"
            }
          },
          "required": [
            "type",
            "member",
            "customer",
            "citizen",
            "id",
            "created_at"
          ]
        },
        "id": {
          "title": "Primary Key of Sale",
          "description": "Primary Key of Sale.",
          "type": "string",
          "format": "uuid"
        },
        "snapshot_id": {
          "title": "Primary Key of Snapshot",
          "description": "Primary Key of Snapshot.",
          "type": "string",
          "format": "uuid"
        },
        "latest": {
          "title": "Whether the snapshot is the latest one or not",
          "description": "Whether the snapshot is the latest one or not.",
          "type": "boolean"
        },
        "content": {
          "title": "Description and image content describing the sale",
          "description": "Content information of sale snapshot.\n\n`IShoppingSaleContent` is an entity embodies the description contents\nof {@link IShoppingSale}.",
          "type": "object",
          "properties": {
            "id": {
              "title": "Primary Key",
              "description": "Primary Key.",
              "type": "string",
              "format": "uuid"
            },
            "title": {
              "title": "Title of the content",
              "description": "Title of the content.",
              "type": "string"
            },
            "format": {
              "title": "Format of the body content",
              "description": "Format of the body content.\n\nSame meaning with file extension like `html`, `md`, and `txt`.",
              "oneOf": [
                {
                  "const": "html"
                },
                {
                  "const": "md"
                },
                {
                  "const": "txt"
                }
              ]
            },
            "body": {
              "title": "The main body content",
              "description": "The main body content.",
              "type": "string"
            },
            "files": {
              "title": "List of attached files",
              "description": "List of attached files.",
              "type": "array",
              "items": {
                "description": "Attachment File.\n\nEvery attachment files that are managed in current system.\n\nFor reference, it is possible to omit one of file {@link name}\nor {@link extension} like `.gitignore` or `README` case, but not\npossible to omit both of them.",
                "type": "object",
                "properties": {
                  "id": {
                    "title": "Primary Key",
                    "description": "Primary Key.",
                    "type": "string",
                    "format": "uuid"
                  },
                  "created_at": {
                    "title": "Creation time of attachment file",
                    "description": "Creation time of attachment file.",
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "title": "File name, except extension",
                    "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string.",
                    "type": "string",
                    "maxLength": 255
                  },
                  "extension": {
                    "title": "Extension",
                    "description": "Extension.\n\nPossible to omit like `README` case.",
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 8
                      }
                    ]
                  },
                  "url": {
                    "title": "URL path of the real file",
                    "description": "URL path of the real file.",
                    "type": "string",
                    "format": "uri",
                    "contentMediaType": "image/*"
                  }
                },
                "required": [
                  "id",
                  "created_at",
                  "name",
                  "extension",
                  "url"
                ]
              }
            },
            "thumbnails": {
              "title": "List of thumbnails",
              "description": "List of thumbnails.",
              "type": "array",
              "items": {
                "description": "Attachment File.\n\nEvery attachment files that are managed in current system.\n\nFor reference, it is possible to omit one of file {@link name}\nor {@link extension} like `.gitignore` or `README` case, but not\npossible to omit both of them.",
                "type": "object",
                "properties": {
                  "id": {
                    "title": "Primary Key",
                    "description": "Primary Key.",
                    "type": "string",
                    "format": "uuid"
                  },
                  "created_at": {
                    "title": "Creation time of attachment file",
                    "description": "Creation time of attachment file.",
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "title": "File name, except extension",
                    "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string.",
                    "type": "string",
                    "maxLength": 255
                  },
                  "extension": {
                    "title": "Extension",
                    "description": "Extension.\n\nPossible to omit like `README` case.",
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 8
                      }
                    ]
                  },
                  "url": {
                    "title": "URL path of the real file",
                    "description": "URL path of the real file.",
                    "type": "string",
                    "format": "uri",
                    "contentMediaType": "image/*"
                  }
                },
                "required": [
                  "id",
                  "created_at",
                  "name",
                  "extension",
                  "url"
                ]
              }
            }
          },
          "required": [
            "id",
            "title",
            "format",
            "body",
            "files",
            "thumbnails"
          ]
        },
        "channels": {
          "title": "List of channels and categories",
          "description": "List of channels and categories.\n\nWhich channels and categories the sale is registered to.",
          "type": "array",
          "items": {
            "description": "Target channel (and categories) of sale to sell.\n\n`IShoppingSaleChannel` is an entity that expresses through which\n{@link IShoppingChannel channel} a listing {@link IShoppingSale} is sold.\n\nAlso, if {@link IShoppingChannelCategory categories} are specified, it also\nmeans that the sale be sold. Otherwise, none of the categories of the channel\nbeing specified, it means that every categories of the channel is listing the\ntarget sale.",
            "type": "object",
            "properties": {
              "categories": {
                "title": "List of categories of the channel listing the sale",
                "description": "List of categories of the channel listing the sale.\n\nIf empty, it means all categories of the channel is listing the sale.",
                "type": "array",
                "items": {
                  "$ref": "#/$defs/IShoppingChannelCategory.IInvert"
                }
              },
              "id": {
                "title": "Primary Key",
                "description": "Primary Key.",
                "type": "string",
                "format": "uuid"
              },
              "created_at": {
                "title": "Creation time of record",
                "description": "Creation time of record.",
                "type": "string",
                "format": "date-time"
              },
              "code": {
                "title": "Identifier code",
                "description": "Identifier code.",
                "type": "string"
              },
              "name": {
                "title": "Name of the channel",
                "description": "Name of the channel.",
                "type": "string"
              }
            },
            "required": [
              "categories",
              "id",
              "created_at",
              "code",
              "name"
            ]
          },
          "minItems": 1
        },
        "tags": {
          "title": "List of search tags",
          "description": "List of search tags.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "units": {
          "title": "List of units",
          "description": "List of units.\n\nRecords about individual product composition information that are sold\nin the sale. Each {@link IShoppingSaleUnit unit} record has configurable\n{@link IShoppingSaleUnitOption options},\n{@link IShoppingSaleUnitOptionCandidate candidate} values for each\noption, and {@link IShoppingSaleUnitStock final stocks} determined by\nselecting every candidate values of each option.",
          "type": "array",
          "items": {
            "description": "Product composition information handled in the sale.\n\n`IShoppingSaleUnit` is an entity that embodies the \"individual product\"\ninformation handled in the {@link IShoppingSale sale}.\n\nFor reference, the reason why `IShoppingSaleUnit` is separated from\n{@link IShoppingSaleSnapshot} by an algebraic relationship of 1: N is because\nthere are some cases where multiple products are sold in one listing. This is\nthe case with so-called \"bundled products\".\n\n- Bundle from regular product (Mackbook Set)\n  - Main Body\n  - Keyboard\n  - Mouse\n  - Apple Care (Free A/S Voucher)\n\nAnd again, `IShoppingSaleUnit` does not in itself refer to the\n{@link IShoppingSaleUnitStock final stock} that the\n{@link IShoppingCustomer customer} will {@link IShoppingOrder purchase}.\nThe final stock can be found only after selecting all given\n{@link IShoppingSaleUnitOption options} and their\n{@link IShoppingSaleUnitOptionCandidate candidate values}.\n\nFor example, even if you buy a Macbook, the final stocks are determined only\nafter selecting all the options (CPU / RAM / SSD), etc.",
            "type": "object",
            "properties": {
              "options": {
                "title": "List of options",
                "description": "List of options.",
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "candidates": {
                          "title": "List of candidate values",
                          "description": "List of candidate values.",
                          "type": "array",
                          "items": {
                            "description": "Selectable candidate values within an option.\n\n`IShoppingSaleUnitOptionCandidate` is an entity that represents individual\ncandidate values that can be selected from\n{@link IShoppingSaleUnitSelectableOption options of the \"select\" type}.\n\n- Example\n  - RAM: 8GB, 16GB, 32GB\n  - GPU: RTX 3060, RTX 4080, TESLA\n  - License: Private, Commercial, Educatiion\n\nBy the way, if belonged option is not \"select\" type, this entity never\nbeing used.",
                            "type": "object",
                            "properties": {
                              "id": {
                                "title": "Primary Key",
                                "description": "Primary Key.",
                                "type": "string",
                                "format": "uuid"
                              },
                              "name": {
                                "title": "Represents the name of the candidate value",
                                "description": "Represents the name of the candidate value.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "name"
                            ]
                          },
                          "minItems": 1
                        },
                        "id": {
                          "title": "Primary Key",
                          "description": "Primary Key.",
                          "type": "string",
                          "format": "uuid"
                        },
                        "type": {
                          "title": "Discriminant for the type of selectable option",
                          "description": "Discriminant for the type of selectable option.",
                          "const": "select"
                        },
                        "name": {
                          "title": "Represents the name of the option",
                          "description": "Represents the name of the option.",
                          "type": "string"
                        },
                        "variable": {
                          "title": "Whether the option is variable or not",
                          "description": "Whether the option is variable or not.\n\nWhen type of current option is \"select\", this attribute means whether\nselecting different candidate value affects the final stock or not.",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "candidates",
                        "id",
                        "type",
                        "name",
                        "variable"
                      ],
                      "description": "Individual option information on units for sale.\n\n`IShoppingSaleUnitSelectableOption` is a subsidiary entity of\n{@link IShoppingSaleUnit} that represents individual products in the\n{@link IShoppingSale sale}, and is an entity designed to represent individual\nselectable option information for the unit.\n\n- Examples of Options\n  - selectable options\n    - Computer: CPU, RAM, SSD, etc.\n    - Clothes: size, color, style, etc.\n  - descriptive options\n    - Engrave\n    - Simple question\n\nIf the {@link variable} property value is `true`, the final stock that the\n{@link IShoppingCustomer customer} will purchase changes depending on the\nselection of the {@link IShoppingSaleUnitOptionCandidate candidate value}.\n\nConversely, if it is a type other than \"select\", or if the {@link variable}\nproperty value is \"false\", , this is an option that has no meaning beyond\nsimple information transfer. Therefore, no matter what value the customer\nchooses when purchasing it, the option in this case does not affect the\n{@link IShoppingSaleUnitStock final stock}."
                    },
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "title": "Primary Key",
                          "description": "Primary Key.",
                          "type": "string",
                          "format": "uuid"
                        },
                        "type": {
                          "title": "Type of descriptive option",
                          "description": "Type of descriptive option.\n\nWhich typed value should be written when purchasing.",
                          "oneOf": [
                            {
                              "const": "string"
                            },
                            {
                              "const": "number"
                            },
                            {
                              "const": "boolean"
                            }
                          ]
                        },
                        "name": {
                          "title": "Readable name of the option",
                          "description": "Readable name of the option.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type",
                        "name"
                      ],
                      "description": "Descriptive option.\n\nWhen type of the option not `\"select\"`, it means the option is descriptive\nthat requiring {@link IShoppingCustomer customers} to write some value to\n{@link IShoppingOrder purchase}. Also, whatever customer writes about the\noption, it does not affect the {@link IShoppingSaleUnitStock final stock}.\n\nAnother words, the descriptive option is just for information transfer."
                    }
                  ]
                }
              },
              "stocks": {
                "title": "List of final stocks",
                "description": "List of final stocks.",
                "type": "array",
                "items": {
                  "description": "Final component information on units for sale.\n\n`IShoppingSaleUnitStock` is a subsidiary entity of {@link IShoppingSaleUnit}\nthat represents a product catalog for sale, and is a kind of final stock that is\nconstructed by selecting all {@link IShoppingSaleUnitSelectableOption options}\n(variable \"select\" type) and their\n{@link IShoppingSaleUnitOptionCandidate candidate} values in the belonging unit.\nIt is the \"good\" itself that customers actually purchase.\n\n- Product Name) MacBook\n  - Options\n    - CPU: { i3, i5, i7, i9 }\n    - RAM: { 8GB, 16GB, 32GB, 64GB, 96GB }\n    - SSD: { 256GB, 512GB, 1TB }\n  - Number of final stocks: 4 * 5 * 3 = 60\n\nFor reference, the total number of `IShoppingSaleUnitStock` records in an\nattribution unit can be obtained using Cartesian Product. In other words, the\nvalue obtained by multiplying all the candidate values that each\n(variable \"select\" type) option can have by the number of cases is the total\nnumber of final stocks in the unit.\n\nOf course, without a single variable \"select\" type option, the final stocks\ncount in the unit is only 1.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "Primary Key",
                      "description": "Primary Key.",
                      "type": "string",
                      "format": "uuid"
                    },
                    "name": {
                      "title": "Representative name of the stock",
                      "description": "Representative name of the stock.",
                      "type": "string"
                    },
                    "price": {
                      "title": "Price of the stock",
                      "description": "Shopping price interface.",
                      "type": "object",
                      "properties": {
                        "nominal": {
                          "title": "Nominal price",
                          "description": "Nominal price.\n\nThis is not {@link real real price} to pay, but just a nominal price to show.\nIf this value is greater than the {@link real real price}, it would be shown\nlike {@link IShoppingSeller seller} is giving a discount.",
                          "type": "number",
                          "minimum": 0
                        },
                        "real": {
                          "title": "Real price to pay",
                          "description": "Real price to pay.",
                          "type": "number",
                          "minimum": 0
                        }
                      },
                      "required": [
                        "nominal",
                        "real"
                      ]
                    },
                    "inventory": {
                      "title": "Current inventory status of the stock",
                      "description": "Inventory information of a final stock.",
                      "type": "object",
                      "properties": {
                        "income": {
                          "title": "Total income quantity",
                          "description": "Total income quantity.",
                          "type": "integer"
                        },
                        "outcome": {
                          "title": "Total outcome quantity",
                          "description": "Total outcome quantity.",
                          "type": "integer"
                        }
                      },
                      "required": [
                        "income",
                        "outcome"
                      ]
                    },
                    "choices": {
                      "title": "List of choices",
                      "description": "List of choices.\n\nWhich candidate values being chosen for each option.",
                      "type": "array",
                      "items": {
                        "description": "Selection information of final stock.\n\n`IShoppingSaleUnitStockChoice` is an entity that represents which\n{@link IShoppingSaleUnitSelectableOption option} of each variable \"select\"\ntype was selected for each {@link IShoppingSaleUnitStock stock} and which\n{@link IShoppingSaleUnitOptionCandidate candidate value} was selected within\nit.\n\nOf course, if the bound {@link IShoppingSaleUnit unit} does not have any\noptions, this entity can also be ignored.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "title": "Primary Key",
                            "description": "Primary Key.",
                            "type": "string",
                            "format": "uuid"
                          },
                          "option_id": {
                            "description": "Target option's {@link IShoppingSaleUnitOption.id}",
                            "type": "string",
                            "format": "uuid"
                          },
                          "candidate_id": {
                            "description": "Target candidate's {@link IShoppingSaleUnitOptionCandidate.id}",
                            "type": "string",
                            "format": "uuid"
                          }
                        },
                        "required": [
                          "id",
                          "option_id",
                          "candidate_id"
                        ]
                      }
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "price",
                    "inventory",
                    "choices"
                  ]
                },
                "minItems": 1
              },
              "id": {
                "title": "Primary Key",
                "description": "Primary Key.",
                "type": "string",
                "format": "uuid"
              },
              "name": {
                "title": "Representative name of the unit",
                "description": "Representative name of the unit.",
                "type": "string"
              },
              "primary": {
                "title": "Whether the unit is primary or not",
                "description": "Whether the unit is primary or not.\n\nJust a labeling value.",
                "type": "boolean"
              },
              "required": {
                "title": "Whether the unit is required or not",
                "description": "Whether the unit is required or not.\n\nWhen the unit is required, the customer must select the unit. If do not\nselect, customer can't buy it.\n\nFor example, if there's a sale \"Macbook Set\" and one of the unit is the\n\"Main Body\", is it possible to buy the \"Macbook Set\" without the\n\"Main Body\" unit? This property is for that case.",
                "type": "boolean"
              }
            },
            "required": [
              "options",
              "stocks",
              "id",
              "name",
              "primary",
              "required"
            ]
          },
          "minItems": 1
        },
        "created_at": {
          "title": "Creation time of the record",
          "description": "Creation time of the record.\n\nNote that, this property is different with {@link opened_at},\nwhich means the timepoint of the sale is opened.",
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "title": "Last updated time of the record",
          "description": "Last updated time of the record.\n\nIn another words, creation time of the last snapshot.",
          "type": "string",
          "format": "date-time"
        },
        "paused_at": {
          "title": "Paused time of the sale",
          "description": "Paused time of the sale.\n\nThe sale is paused by the seller, for some reason.\n\n{@link IShoppingCustomer Customers} can still see the sale on the\nboth list and detail pages, but the sale has a warning label\n\"The sale is paused by the seller\".",
          "oneOf": [
            {
              "type": "null"
            },
            {
              "type": "string",
              "format": "date-time"
            }
          ]
        },
        "suspended_at": {
          "title": "Suspended time of the sale",
          "description": "Suspended time of the sale.\n\nThe sale is suspended by the seller, for some reason.\n\n{@link IShoppingCustomer Customers} cannot see the sale on the\nboth list and detail pages. It is almost same with soft delettion,\nbut there's a little bit difference that the owner\n{@link IShoppingSeller seller} can still see the sale and resume it.\n\nOf course, the {@link IShoppingCustomer customers} who have\nalready purchased the sale can still see the sale on the\n{@link IShoppingOrder order} page.",
          "oneOf": [
            {
              "type": "null"
            },
            {
              "type": "string",
              "format": "date-time"
            }
          ]
        },
        "opened_at": {
          "title": "Opening time of the sale",
          "description": "Opening time of the sale.",
          "oneOf": [
            {
              "type": "null"
            },
            {
              "type": "string",
              "format": "date-time"
            }
          ]
        },
        "closed_at": {
          "title": "Closing time of the sale",
          "description": "Closing time of the sale.\n\nIf this value is `null`, the sale be continued forever.",
          "oneOf": [
            {
              "type": "null"
            },
            {
              "type": "string",
              "format": "date-time"
            }
          ]
        }
      },
      "required": [
        "section",
        "seller",
        "id",
        "snapshot_id",
        "latest",
        "content",
        "channels",
        "tags",
        "units",
        "created_at",
        "updated_at",
        "paused_at",
        "suspended_at",
        "opened_at",
        "closed_at"
      ]
    },
    "success": true,
    "arguments": {
      "type": {
        "host": "http://127.0.0.1:37001",
        "headers": {
          "Authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0YWJsZSI6InNob3BwaW5nX2N1c3RvbWVycyIsImlkIjoiMjVlYzg3ZjctODE1ZC00YjU3LTk1NzYtYzk1Mzk4NGJjMjhmIiwicmVhZG9ubHkiOmZhbHNlLCJleHBpcmVkX2F0IjoiMjAyNC0xMi0xM1QwOTo0MjoxMi41MzlaIiwicmVmcmVzaGFibGVfdW50aWwiOiIyMDI0LTEyLTI3VDA2OjQyOjEyLjUzOVoiLCJpYXQiOjE3MzQwNzIxMzJ9.zWZrU-d1bSW-MawmSo2RYRPk_73xtR_PxfFUrEpDJkc"
        }
      },
      "properties": "2338cfa2-6e52-46e9-9d0c-a706425962e9"
    },
    "value": {
      "section": {
        "id": "a01c572c-3199-4929-ac67-ba7c31b2c808",
        "code": "general",
        "name": "General",
        "created_at": "2024-12-13T06:42:11.124Z"
      },
      "seller": {
        "type": "seller",
        "member": {
          "id": "a853492c-70b4-487f-9648-0f6109a0ad69",
          "nickname": "Robot",
          "emails": [
            {
              "id": "81ea73c4-b41e-4022-9384-d51d3215797e",
              "value": "robot@nestia.io",
              "created_at": "2024-12-13T06:42:11.227Z"
            }
          ],
          "created_at": "2024-12-13T06:42:11.227Z"
        },
        "customer": {
          "id": "aeb8583b-8bd9-4d29-adea-78779b405046",
          "channel": {
            "id": "2323f4bd-21ad-45b7-ae3b-cadd84dcc935",
            "created_at": "2024-12-13T06:42:10.908Z",
            "code": "samchon",
            "name": "Samchon Shopping Mall"
          },
          "external_user": null,
          "href": "http://127.0.0.1/TestAutomation",
          "referrer": "http://127.0.0.1/NodeJS",
          "ip": "127.0.0.1",
          "created_at": "2024-12-13T06:42:11.258Z"
        },
        "citizen": {
          "id": "43aedfea-6b2c-4c18-9f69-60373c9580dd",
          "created_at": "2024-12-13T06:42:11.157Z",
          "mobile": "01012345678",
          "name": "Robot"
        },
        "id": "addccb32-ac48-460e-9624-d9809da19d99",
        "created_at": "2024-12-13T06:42:11.241Z"
      },
      "id": "2338cfa2-6e52-46e9-9d0c-a706425962e9",
      "snapshot_id": "bab8605c-d6a6-41e5-b3c8-0e7caf4b3fe0",
      "latest": true,
      "content": {
        "id": "32765e09-6001-4cdb-9db2-af3a9c018a17",
        "title": "Apple MacBook Pro",
        "format": "md",
        "body": "MacBook Pro\n\n**The Ultimate Tool for Professionals**\n\nMacBook Pro is designed to elevate your creativity and productivity to new heights. Combining exceptional performance, elegant design, and the unparalleled experience only Apple can deliver, this is the device that empowers you to tackle any challenge with confidence.\n\n- **Remarkable Performance**\n    \n    Powered by the next-generation chip, it handles demanding tasks and complex projects effortlessly, delivering unmatched speed and efficiency.\n    \n- **Outstanding Display**\n    \n    The Retina display offers rich colors and sharp contrast, creating an immersive visual experience. With ProMotion technology, enjoy smooth scrolling and fluid animations like never before.\n    \n- **All-Day Battery Life**\n    \n    Stay focused and in the flow wherever you go with a battery that lasts all day. This is a laptop that works as hard as you do.\n    \n- **Sleek Yet Powerful Design**\n    \n    A precision aluminum body that’s lightweight yet durable, paired with a minimalist design that stands out on your desk and on the go.\n    \n- **Smart Connectivity**\n    \n    Versatile ports for high-speed data transfer and seamless compatibility ensure you're ready for any work environment.\n    \n\nWith MacBook Pro, your potential knows no bounds. **It’s time to rediscover what you’re capable of.**\n",
        "files": [],
        "thumbnails": [
          {
            "id": "fb222d61-315f-45c7-a276-ca7524452863",
            "created_at": "2024-12-13T06:42:11.345Z",
            "name": "apple-iphone-thumbnail",
            "extension": "jpeg",
            "url": "https://store.storeimages.cdn-apple.com/8756/as-images.apple.com/is/mbp14-spaceblack-gallery1-202410?wid=4000&hei=3074&fmt=jpeg&qlt=90&.v=1729264981617"
          }
        ]
      },
      "channels": [
        {
          "categories": [
            {
              "parent": null,
              "id": "9b9b36f4-4e50-48ff-ac05-ee8588be0dbe",
              "code": "electronics",
              "parent_id": null,
              "name": "Electronics",
              "created_at": "2024-12-13T06:42:10.919Z"
            },
            {
              "parent": {
                "parent": null,
                "id": "9b9b36f4-4e50-48ff-ac05-ee8588be0dbe",
                "code": "electronics",
                "parent_id": null,
                "name": "Electronics",
                "created_at": "2024-12-13T06:42:10.919Z"
              },
              "id": "ab794f96-49c0-4318-9ac8-91318b188e6c",
              "code": "laptops",
              "parent_id": "9b9b36f4-4e50-48ff-ac05-ee8588be0dbe",
              "name": "Laptops",
              "created_at": "2024-12-13T06:42:10.940Z"
            },
            {
              "parent": {
                "parent": {
                  "parent": null,
                  "id": "9b9b36f4-4e50-48ff-ac05-ee8588be0dbe",
                  "code": "electronics",
                  "parent_id": null,
                  "name": "Electronics",
                  "created_at": "2024-12-13T06:42:10.919Z"
                },
                "id": "ab794f96-49c0-4318-9ac8-91318b188e6c",
                "code": "laptops",
                "parent_id": "9b9b36f4-4e50-48ff-ac05-ee8588be0dbe",
                "name": "Laptops",
                "created_at": "2024-12-13T06:42:10.940Z"
              },
              "id": "183f6097-70dd-4333-8dc4-f0c0cf43fa69",
              "code": "macbooks",
              "parent_id": "ab794f96-49c0-4318-9ac8-91318b188e6c",
              "name": "MacBooks",
              "created_at": "2024-12-13T06:42:10.948Z"
            }
          ],
          "id": "2323f4bd-21ad-45b7-ae3b-cadd84dcc935",
          "created_at": "2024-12-13T06:42:10.908Z",
          "code": "samchon",
          "name": "Samchon Shopping Mall"
        }
      ],
      "tags": [
        "macbook",
        "apple",
        "laptop",
        "electronics",
        "professional"
      ],
      "units": [
        {
          "options": [
            {
              "candidates": [
                {
                  "id": "da17d387-aa37-4d5a-ac91-f9fb54a066e1",
                  "name": "Sliver"
                },
                {
                  "id": "3ff5a928-126d-417a-88da-d7130f4cef66",
                  "name": "Space Gray"
                }
              ],
              "id": "75cb1035-c68b-4f02-8398-c6449cabd358",
              "type": "select",
              "name": "Color",
              "variable": true
            },
            {
              "candidates": [
                {
                  "id": "1a7a5c77-fd52-485a-ac05-bbff5be2bc0b",
                  "name": "16GB"
                },
                {
                  "id": "d10349d9-02c2-49f7-abad-edfec9c6f595",
                  "name": "32GB"
                },
                {
                  "id": "1b4a3a48-17a6-4b42-808e-536323841c42",
                  "name": "64GB"
                }
              ],
              "id": "41a6ae10-aad9-4099-8f4f-cd47e9184ccc",
              "type": "select",
              "name": "RAM",
              "variable": true
            },
            {
              "candidates": [
                {
                  "id": "b2276623-d8b6-4380-841c-48785b11a8a4",
                  "name": "512GB"
                },
                {
                  "id": "ab5e5be1-2ddd-4ea5-ae07-2bf02d0a6b0e",
                  "name": "1TB"
                },
                {
                  "id": "d930e66c-f08b-4b60-93bd-c5ebabd2fab1",
                  "name": "2TB"
                }
              ],
              "id": "9335f715-05ce-499c-8720-f770de65a934",
              "type": "select",
              "name": "SSD",
              "variable": true
            },
            {
              "candidates": [
                {
                  "id": "761726dc-0fc3-412f-a115-10e9f08fd6c5",
                  "name": "English"
                },
                {
                  "id": "29074731-998c-4238-a108-13fbb6cf6012",
                  "name": "Korean"
                }
              ],
              "id": "642f45f4-2604-4ee6-aab5-ffce81831688",
              "type": "select",
              "name": "Keyboard Language",
              "variable": true
            }
          ],
          "stocks": [
            {
              "id": "d99dcccc-85fb-4de4-a954-b25d01c1eb68",
              "name": "MacBook Pro - Sliver, 16GB, 512GB, English",
              "price": {
                "nominal": 2000000,
                "real": 1800000
              },
              "inventory": {
                "income": 500,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "51d9fea0-a566-4b22-822e-f0af1d636fed",
                  "option_id": "75cb1035-c68b-4f02-8398-c6449cabd358",
                  "candidate_id": "da17d387-aa37-4d5a-ac91-f9fb54a066e1"
                },
                {
                  "id": "bc4b90ca-cb9b-4ae0-b021-e85b4229199a",
                  "option_id": "41a6ae10-aad9-4099-8f4f-cd47e9184ccc",
                  "candidate_id": "1a7a5c77-fd52-485a-ac05-bbff5be2bc0b"
                },
                {
                  "id": "354ec8dc-c657-4fa5-8f1c-33eb7dc952eb",
                  "option_id": "9335f715-05ce-499c-8720-f770de65a934",
                  "candidate_id": "b2276623-d8b6-4380-841c-48785b11a8a4"
                },
                {
                  "id": "2b3567a0-065d-4ce0-aa37-122c14870821",
                  "option_id": "642f45f4-2604-4ee6-aab5-ffce81831688",
                  "candidate_id": "761726dc-0fc3-412f-a115-10e9f08fd6c5"
                }
              ]
            },
            {
              "id": "e1560115-b9ca-4b6c-bed8-5951af22b006",
              "name": "MacBook Pro - Sliver, 16GB, 512GB, Korean",
              "price": {
                "nominal": 2000000,
                "real": 1800000
              },
              "inventory": {
                "income": 500,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "b851d335-0367-4693-8647-dfdbc278502e",
                  "option_id": "75cb1035-c68b-4f02-8398-c6449cabd358",
                  "candidate_id": "da17d387-aa37-4d5a-ac91-f9fb54a066e1"
                },
                {
                  "id": "93a1d4b5-ed10-4545-b8bf-82d8440ec11b",
                  "option_id": "41a6ae10-aad9-4099-8f4f-cd47e9184ccc",
                  "candidate_id": "1a7a5c77-fd52-485a-ac05-bbff5be2bc0b"
                },
                {
                  "id": "9e5709d1-c67d-442e-91f8-d297b7af6a48",
                  "option_id": "9335f715-05ce-499c-8720-f770de65a934",
                  "candidate_id": "b2276623-d8b6-4380-841c-48785b11a8a4"
                },
                {
                  "id": "136662b9-f1c6-404a-9381-7f3c920d82eb",
                  "option_id": "642f45f4-2604-4ee6-aab5-ffce81831688",
                  "candidate_id": "29074731-998c-4238-a108-13fbb6cf6012"
                }
              ]
            },
            {
              "id": "ac80dce2-d850-40cf-aa71-5d07ffe56e13",
              "name": "MacBook Pro - Sliver, 16GB, 1TB, English",
              "price": {
                "nominal": 2300000,
                "real": 2070000
              },
              "inventory": {
                "income": 500,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "766657dc-b4f0-4ab5-8826-87f4b2c23de1",
                  "option_id": "75cb1035-c68b-4f02-8398-c6449cabd358",
                  "candidate_id": "da17d387-aa37-4d5a-ac91-f9fb54a066e1"
                },
                {
                  "id": "6e6d3ed5-3116-436f-9df1-22eb83b019b8",
                  "option_id": "41a6ae10-aad9-4099-8f4f-cd47e9184ccc",
                  "candidate_id": "1a7a5c77-fd52-485a-ac05-bbff5be2bc0b"
                },
                {
                  "id": "13aee12b-6847-404e-b6af-4d5a7fab810a",
                  "option_id": "9335f715-05ce-499c-8720-f770de65a934",
                  "candidate_id": "ab5e5be1-2ddd-4ea5-ae07-2bf02d0a6b0e"
                },
                {
                  "id": "78847811-c71c-4158-8016-f3cce8f94b86",
                  "option_id": "642f45f4-2604-4ee6-aab5-ffce81831688",
                  "candidate_id": "761726dc-0fc3-412f-a115-10e9f08fd6c5"
                }
              ]
            },
            {
              "id": "42e980d8-4d61-427c-b076-b78f9dc78a58",
              "name": "MacBook Pro - Sliver, 16GB, 1TB, Korean",
              "price": {
                "nominal": 2300000,
                "real": 2070000
              },
              "inventory": {
                "income": 500,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "f1598cff-8510-49da-804a-4036a34b1648",
                  "option_id": "75cb1035-c68b-4f02-8398-c6449cabd358",
                  "candidate_id": "da17d387-aa37-4d5a-ac91-f9fb54a066e1"
                },
                {
                  "id": "26f046f6-a3d1-405f-be79-179d564e2adc",
                  "option_id": "41a6ae10-aad9-4099-8f4f-cd47e9184ccc",
                  "candidate_id": "1a7a5c77-fd52-485a-ac05-bbff5be2bc0b"
                },
                {
                  "id": "e52f841b-7c1a-4f39-a99b-5749a5e581db",
                  "option_id": "9335f715-05ce-499c-8720-f770de65a934",
                  "candidate_id": "ab5e5be1-2ddd-4ea5-ae07-2bf02d0a6b0e"
                },
                {
                  "id": "b4f33e67-4f20-44e1-a805-408ceed191d7",
                  "option_id": "642f45f4-2604-4ee6-aab5-ffce81831688",
                  "candidate_id": "29074731-998c-4238-a108-13fbb6cf6012"
                }
              ]
            },
            {
              "id": "249a7368-6cfa-496c-b75d-910be7035217",
              "name": "MacBook Pro - Sliver, 16GB, 2TB, English",
              "price": {
                "nominal": 2900000,
                "real": 2610000
              },
              "inventory": {
                "income": 500,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "0c134e15-4750-429b-8eb2-f75a7d442763",
                  "option_id": "75cb1035-c68b-4f02-8398-c6449cabd358",
                  "candidate_id": "da17d387-aa37-4d5a-ac91-f9fb54a066e1"
                },
                {
                  "id": "621be009-f437-4293-b397-12b5d2c72d11",
                  "option_id": "41a6ae10-aad9-4099-8f4f-cd47e9184ccc",
                  "candidate_id": "1a7a5c77-fd52-485a-ac05-bbff5be2bc0b"
                },
                {
                  "id": "aa7aef73-8948-4715-809e-4226e80b932c",
                  "option_id": "9335f715-05ce-499c-8720-f770de65a934",
                  "candidate_id": "d930e66c-f08b-4b60-93bd-c5ebabd2fab1"
                },
                {
                  "id": "42eb9ed0-c1cb-46f5-97d8-49d4f468fdd4",
                  "option_id": "642f45f4-2604-4ee6-aab5-ffce81831688",
                  "candidate_id": "761726dc-0fc3-412f-a115-10e9f08fd6c5"
                }
              ]
            },
            {
              "id": "3ef241c4-73b1-47aa-bf2d-6d41aaa499f9",
              "name": "MacBook Pro - Sliver, 16GB, 2TB, Korean",
              "price": {
                "nominal": 2900000,
                "real": 2610000
              },
              "inventory": {
                "income": 500,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "80379245-26cf-499d-ab23-8a17da057bb9",
                  "option_id": "75cb1035-c68b-4f02-8398-c6449cabd358",
                  "candidate_id": "da17d387-aa37-4d5a-ac91-f9fb54a066e1"
                },
                {
                  "id": "461fddd0-1c30-4890-8401-3a727e7b8416",
                  "option_id": "41a6ae10-aad9-4099-8f4f-cd47e9184ccc",
                  "candidate_id": "1a7a5c77-fd52-485a-ac05-bbff5be2bc0b"
                },
                {
                  "id": "6f7a0434-0200-41e3-a050-bee94ff0fc04",
                  "option_id": "9335f715-05ce-499c-8720-f770de65a934",
                  "candidate_id": "d930e66c-f08b-4b60-93bd-c5ebabd2fab1"
                },
                {
                  "id": "2d3b5e8e-1445-4f81-ac50-a7248a63a4cf",
                  "option_id": "642f45f4-2604-4ee6-aab5-ffce81831688",
                  "candidate_id": "29074731-998c-4238-a108-13fbb6cf6012"
                }
              ]
            },
            {
              "id": "29f5f377-6961-4fa4-8cc8-b70e008ecd3c",
              "name": "MacBook Pro - Sliver, 32GB, 512GB, English",
              "price": {
                "nominal": 2600000,
                "real": 2340000
              },
              "inventory": {
                "income": 500,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "cb7e1295-9e27-4e6a-88f0-520f653049b0",
                  "option_id": "75cb1035-c68b-4f02-8398-c6449cabd358",
                  "candidate_id": "da17d387-aa37-4d5a-ac91-f9fb54a066e1"
                },
                {
                  "id": "28279a4d-152c-4378-9b6c-a0137018e99c",
                  "option_id": "41a6ae10-aad9-4099-8f4f-cd47e9184ccc",
                  "candidate_id": "d10349d9-02c2-49f7-abad-edfec9c6f595"
                },
                {
                  "id": "468a8361-ca1c-49e4-b0e6-1fa08f2f8f54",
                  "option_id": "9335f715-05ce-499c-8720-f770de65a934",
                  "candidate_id": "b2276623-d8b6-4380-841c-48785b11a8a4"
                },
                {
                  "id": "01eb19fe-5cfb-4a0c-b9e2-81d9e4d52bd5",
                  "option_id": "642f45f4-2604-4ee6-aab5-ffce81831688",
                  "candidate_id": "761726dc-0fc3-412f-a115-10e9f08fd6c5"
                }
              ]
            },
            {
              "id": "749253d4-f3c9-4d69-b11b-0d8ee6f79305",
              "name": "MacBook Pro - Sliver, 32GB, 512GB, Korean",
              "price": {
                "nominal": 2600000,
                "real": 2340000
              },
              "inventory": {
                "income": 500,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "07b34010-8592-4da1-a55d-06e34ed98b87",
                  "option_id": "75cb1035-c68b-4f02-8398-c6449cabd358",
                  "candidate_id": "da17d387-aa37-4d5a-ac91-f9fb54a066e1"
                },
                {
                  "id": "fd3d19b6-523b-43b5-b164-e544b15044a8",
                  "option_id": "41a6ae10-aad9-4099-8f4f-cd47e9184ccc",
                  "candidate_id": "d10349d9-02c2-49f7-abad-edfec9c6f595"
                },
                {
                  "id": "90f17af9-2075-45c4-a2c6-f2697220421e",
                  "option_id": "9335f715-05ce-499c-8720-f770de65a934",
                  "candidate_id": "b2276623-d8b6-4380-841c-48785b11a8a4"
                },
                {
                  "id": "5d22dc3f-b2bc-41ff-986b-b6eab9b8db44",
                  "option_id": "642f45f4-2604-4ee6-aab5-ffce81831688",
                  "candidate_id": "29074731-998c-4238-a108-13fbb6cf6012"
                }
              ]
            },
            {
              "id": "c9f84b62-b070-4a0d-bc13-b3586a002f0f",
              "name": "MacBook Pro - Sliver, 32GB, 1TB, English",
              "price": {
                "nominal": 2900000,
                "real": 2610000
              },
              "inventory": {
                "income": 500,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "0866b54e-4aaf-4529-b991-f07b14e174e5",
                  "option_id": "75cb1035-c68b-4f02-8398-c6449cabd358",
                  "candidate_id": "da17d387-aa37-4d5a-ac91-f9fb54a066e1"
                },
                {
                  "id": "bc807524-f9f3-4227-988e-b9635253b4e8",
                  "option_id": "41a6ae10-aad9-4099-8f4f-cd47e9184ccc",
                  "candidate_id": "d10349d9-02c2-49f7-abad-edfec9c6f595"
                },
                {
                  "id": "18d99fd0-c61d-4d87-b795-973d39238115",
                  "option_id": "9335f715-05ce-499c-8720-f770de65a934",
                  "candidate_id": "ab5e5be1-2ddd-4ea5-ae07-2bf02d0a6b0e"
                },
                {
                  "id": "bdbac153-215c-4817-bb46-e7b6c7b2c0a8",
                  "option_id": "642f45f4-2604-4ee6-aab5-ffce81831688",
                  "candidate_id": "761726dc-0fc3-412f-a115-10e9f08fd6c5"
                }
              ]
            },
            {
              "id": "704112f9-0513-45d7-b87a-8081ba987034",
              "name": "MacBook Pro - Sliver, 32GB, 1TB, Korean",
              "price": {
                "nominal": 2900000,
                "real": 2610000
              },
              "inventory": {
                "income": 500,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "7bf4467a-cc6c-47c2-906c-b5ca99175740",
                  "option_id": "75cb1035-c68b-4f02-8398-c6449cabd358",
                  "candidate_id": "da17d387-aa37-4d5a-ac91-f9fb54a066e1"
                },
                {
                  "id": "0372ee48-1103-41c2-a90a-48b89a5353f6",
                  "option_id": "41a6ae10-aad9-4099-8f4f-cd47e9184ccc",
                  "candidate_id": "d10349d9-02c2-49f7-abad-edfec9c6f595"
                },
                {
                  "id": "fc903c00-d1e9-43b2-bef7-bf943b128381",
                  "option_id": "9335f715-05ce-499c-8720-f770de65a934",
                  "candidate_id": "ab5e5be1-2ddd-4ea5-ae07-2bf02d0a6b0e"
                },
                {
                  "id": "abe3d3e8-3767-407d-a9ae-48583773bd33",
                  "option_id": "642f45f4-2604-4ee6-aab5-ffce81831688",
                  "candidate_id": "29074731-998c-4238-a108-13fbb6cf6012"
                }
              ]
            },
            {
              "id": "47dbac67-bc9f-4ba3-a85e-c81294ff3bfc",
              "name": "MacBook Pro - Sliver, 32GB, 2TB, English",
              "price": {
                "nominal": 3500000,
                "real": 3150000
              },
              "inventory": {
                "income": 500,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "841234ce-6c96-41e0-babb-ba7cde7b76b7",
                  "option_id": "75cb1035-c68b-4f02-8398-c6449cabd358",
                  "candidate_id": "da17d387-aa37-4d5a-ac91-f9fb54a066e1"
                },
                {
                  "id": "40cda1a2-48f6-42ca-8f1c-3d7761218e33",
                  "option_id": "41a6ae10-aad9-4099-8f4f-cd47e9184ccc",
                  "candidate_id": "d10349d9-02c2-49f7-abad-edfec9c6f595"
                },
                {
                  "id": "74f47fe2-7743-4fd0-a7ac-4259a2933af2",
                  "option_id": "9335f715-05ce-499c-8720-f770de65a934",
                  "candidate_id": "d930e66c-f08b-4b60-93bd-c5ebabd2fab1"
                },
                {
                  "id": "c4a88785-eea4-4c17-b51f-e6aa6b010b9f",
                  "option_id": "642f45f4-2604-4ee6-aab5-ffce81831688",
                  "candidate_id": "761726dc-0fc3-412f-a115-10e9f08fd6c5"
                }
              ]
            },
            {
              "id": "87ba47f8-a3ac-44aa-bc59-523d88a0332f",
              "name": "MacBook Pro - Sliver, 32GB, 2TB, Korean",
              "price": {
                "nominal": 3500000,
                "real": 3150000
              },
              "inventory": {
                "income": 500,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "c136b66d-14d6-494d-a15a-dbb9b50499ca",
                  "option_id": "75cb1035-c68b-4f02-8398-c6449cabd358",
                  "candidate_id": "da17d387-aa37-4d5a-ac91-f9fb54a066e1"
                },
                {
                  "id": "d0a33656-f3ce-451e-be11-63e7e074edf4",
                  "option_id": "41a6ae10-aad9-4099-8f4f-cd47e9184ccc",
                  "candidate_id": "d10349d9-02c2-49f7-abad-edfec9c6f595"
                },
                {
                  "id": "d3eedae7-3e93-481c-8613-393ff0b6c447",
                  "option_id": "9335f715-05ce-499c-8720-f770de65a934",
                  "candidate_id": "d930e66c-f08b-4b60-93bd-c5ebabd2fab1"
                },
                {
                  "id": "dd1c1ded-5b77-4d01-8ebd-bc8487bbf671",
                  "option_id": "642f45f4-2604-4ee6-aab5-ffce81831688",
                  "candidate_id": "29074731-998c-4238-a108-13fbb6cf6012"
                }
              ]
            },
            {
              "id": "3ab93371-b0c2-4640-afa2-6b71dd57ca6a",
              "name": "MacBook Pro - Sliver, 64GB, 512GB, English",
              "price": {
                "nominal": 3200000,
                "real": 2880000
              },
              "inventory": {
                "income": 500,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "ae60cfa4-35d3-47a5-9837-0f41d8b3f573",
                  "option_id": "75cb1035-c68b-4f02-8398-c6449cabd358",
                  "candidate_id": "da17d387-aa37-4d5a-ac91-f9fb54a066e1"
                },
                {
                  "id": "e11303c5-913e-42ba-8bce-acf8e30525af",
                  "option_id": "41a6ae10-aad9-4099-8f4f-cd47e9184ccc",
                  "candidate_id": "1b4a3a48-17a6-4b42-808e-536323841c42"
                },
                {
                  "id": "96d5ca59-2e91-48d8-b321-1c1d7c66c5c7",
                  "option_id": "9335f715-05ce-499c-8720-f770de65a934",
                  "candidate_id": "b2276623-d8b6-4380-841c-48785b11a8a4"
                },
                {
                  "id": "11e56f14-d700-4e69-a32a-ca5af8bee97b",
                  "option_id": "642f45f4-2604-4ee6-aab5-ffce81831688",
                  "candidate_id": "761726dc-0fc3-412f-a115-10e9f08fd6c5"
                }
              ]
            },
            {
              "id": "9ae84707-6cd3-409f-b25b-43df10e72e1a",
              "name": "MacBook Pro - Sliver, 64GB, 512GB, Korean",
              "price": {
                "nominal": 3200000,
                "real": 2880000
              },
              "inventory": {
                "income": 500,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "c56a7a20-2a95-49d6-b3b5-e79148ff4721",
                  "option_id": "75cb1035-c68b-4f02-8398-c6449cabd358",
                  "candidate_id": "da17d387-aa37-4d5a-ac91-f9fb54a066e1"
                },
                {
                  "id": "fa193863-c756-4908-a0aa-86d9a1660fbe",
                  "option_id": "41a6ae10-aad9-4099-8f4f-cd47e9184ccc",
                  "candidate_id": "1b4a3a48-17a6-4b42-808e-536323841c42"
                },
                {
                  "id": "8918eaec-bcf2-4967-812f-07470ac1386a",
                  "option_id": "9335f715-05ce-499c-8720-f770de65a934",
                  "candidate_id": "b2276623-d8b6-4380-841c-48785b11a8a4"
                },
                {
                  "id": "cf77b873-ce85-49b8-8ccc-8ebecf2a6953",
                  "option_id": "642f45f4-2604-4ee6-aab5-ffce81831688",
                  "candidate_id": "29074731-998c-4238-a108-13fbb6cf6012"
                }
              ]
            },
            {
              "id": "e34e6676-586a-4a7e-acf1-33f43d086edc",
              "name": "MacBook Pro - Sliver, 64GB, 1TB, English",
              "price": {
                "nominal": 3500000,
                "real": 3150000
              },
              "inventory": {
                "income": 500,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "9c078be3-993b-4f76-8218-bdc556d98983",
                  "option_id": "75cb1035-c68b-4f02-8398-c6449cabd358",
                  "candidate_id": "da17d387-aa37-4d5a-ac91-f9fb54a066e1"
                },
                {
                  "id": "c056387e-ff19-4b97-ae7f-dac172228511",
                  "option_id": "41a6ae10-aad9-4099-8f4f-cd47e9184ccc",
                  "candidate_id": "1b4a3a48-17a6-4b42-808e-536323841c42"
                },
                {
                  "id": "851644e4-f030-4f9e-90c1-3a032015ac5f",
                  "option_id": "9335f715-05ce-499c-8720-f770de65a934",
                  "candidate_id": "ab5e5be1-2ddd-4ea5-ae07-2bf02d0a6b0e"
                },
                {
                  "id": "bb6a703d-73e4-4829-bcf3-9327fac9ea43",
                  "option_id": "642f45f4-2604-4ee6-aab5-ffce81831688",
                  "candidate_id": "761726dc-0fc3-412f-a115-10e9f08fd6c5"
                }
              ]
            },
            {
              "id": "32be686c-b34b-4367-9685-60c6ed7d825b",
              "name": "MacBook Pro - Sliver, 64GB, 1TB, Korean",
              "price": {
                "nominal": 3500000,
                "real": 3150000
              },
              "inventory": {
                "income": 500,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "277becf2-ec3e-40db-b971-cae1b2ade2fb",
                  "option_id": "75cb1035-c68b-4f02-8398-c6449cabd358",
                  "candidate_id": "da17d387-aa37-4d5a-ac91-f9fb54a066e1"
                },
                {
                  "id": "659e6b78-720b-46fe-ab33-5843e688a6b0",
                  "option_id": "41a6ae10-aad9-4099-8f4f-cd47e9184ccc",
                  "candidate_id": "1b4a3a48-17a6-4b42-808e-536323841c42"
                },
                {
                  "id": "e95d4509-fe58-4f9c-8aff-de82be96d2ed",
                  "option_id": "9335f715-05ce-499c-8720-f770de65a934",
                  "candidate_id": "ab5e5be1-2ddd-4ea5-ae07-2bf02d0a6b0e"
                },
                {
                  "id": "458bdebd-6e2d-4d5b-aad4-92888b77167e",
                  "option_id": "642f45f4-2604-4ee6-aab5-ffce81831688",
                  "candidate_id": "29074731-998c-4238-a108-13fbb6cf6012"
                }
              ]
            },
            {
              "id": "e6f96cce-ea71-4641-b582-36924ff1d8f6",
              "name": "MacBook Pro - Sliver, 64GB, 2TB, English",
              "price": {
                "nominal": 4100000,
                "real": 3690000
              },
              "inventory": {
                "income": 500,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "83b376db-273b-4b2b-872e-c80b35171a90",
                  "option_id": "75cb1035-c68b-4f02-8398-c6449cabd358",
                  "candidate_id": "da17d387-aa37-4d5a-ac91-f9fb54a066e1"
                },
                {
                  "id": "8540a1d5-8f3e-4725-b07b-bc047f8b7b4c",
                  "option_id": "41a6ae10-aad9-4099-8f4f-cd47e9184ccc",
                  "candidate_id": "1b4a3a48-17a6-4b42-808e-536323841c42"
                },
                {
                  "id": "f08b52f3-4baf-43da-a80c-5712106e94f1",
                  "option_id": "9335f715-05ce-499c-8720-f770de65a934",
                  "candidate_id": "d930e66c-f08b-4b60-93bd-c5ebabd2fab1"
                },
                {
                  "id": "6c16c1c9-ce98-4018-b719-2598d4a9eeb2",
                  "option_id": "642f45f4-2604-4ee6-aab5-ffce81831688",
                  "candidate_id": "761726dc-0fc3-412f-a115-10e9f08fd6c5"
                }
              ]
            },
            {
              "id": "3f055f58-6683-4338-8fe9-e7eb0feb186b",
              "name": "MacBook Pro - Sliver, 64GB, 2TB, Korean",
              "price": {
                "nominal": 4100000,
                "real": 3690000
              },
              "inventory": {
                "income": 500,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "d90a0d6f-6226-43aa-b2aa-a9e015d4584d",
                  "option_id": "75cb1035-c68b-4f02-8398-c6449cabd358",
                  "candidate_id": "da17d387-aa37-4d5a-ac91-f9fb54a066e1"
                },
                {
                  "id": "0f5c6f16-4f02-4f7f-bd03-a1c26723c9bd",
                  "option_id": "41a6ae10-aad9-4099-8f4f-cd47e9184ccc",
                  "candidate_id": "1b4a3a48-17a6-4b42-808e-536323841c42"
                },
                {
                  "id": "93882828-ccd0-42e5-beb3-9159b49035b3",
                  "option_id": "9335f715-05ce-499c-8720-f770de65a934",
                  "candidate_id": "d930e66c-f08b-4b60-93bd-c5ebabd2fab1"
                },
                {
                  "id": "3218a513-882e-4fbf-bba7-bdc3565ba0f7",
                  "option_id": "642f45f4-2604-4ee6-aab5-ffce81831688",
                  "candidate_id": "29074731-998c-4238-a108-13fbb6cf6012"
                }
              ]
            },
            {
              "id": "360ce0f8-a8e0-45ae-8396-60a38a2a0f81",
              "name": "MacBook Pro - Space Gray, 16GB, 512GB, English",
              "price": {
                "nominal": 2050000,
                "real": 1845000
              },
              "inventory": {
                "income": 500,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "e4cc627d-51b4-41ea-8a8d-c9a33df95de5",
                  "option_id": "75cb1035-c68b-4f02-8398-c6449cabd358",
                  "candidate_id": "3ff5a928-126d-417a-88da-d7130f4cef66"
                },
                {
                  "id": "f6c2c368-74fb-4558-964b-7bceec3cc937",
                  "option_id": "41a6ae10-aad9-4099-8f4f-cd47e9184ccc",
                  "candidate_id": "1a7a5c77-fd52-485a-ac05-bbff5be2bc0b"
                },
                {
                  "id": "8bba297f-0f3f-4c9a-99ba-905740a70454",
                  "option_id": "9335f715-05ce-499c-8720-f770de65a934",
                  "candidate_id": "b2276623-d8b6-4380-841c-48785b11a8a4"
                },
                {
                  "id": "a2e014fa-f31e-4146-a058-3bd08e0a957f",
                  "option_id": "642f45f4-2604-4ee6-aab5-ffce81831688",
                  "candidate_id": "761726dc-0fc3-412f-a115-10e9f08fd6c5"
                }
              ]
            },
            {
              "id": "c22ff1f9-6bde-4d3b-8c0d-68def5dd5de9",
              "name": "MacBook Pro - Space Gray, 16GB, 512GB, Korean",
              "price": {
                "nominal": 2050000,
                "real": 1845000
              },
              "inventory": {
                "income": 500,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "4e946665-e78b-46d1-9c90-71ff2e895f6b",
                  "option_id": "75cb1035-c68b-4f02-8398-c6449cabd358",
                  "candidate_id": "3ff5a928-126d-417a-88da-d7130f4cef66"
                },
                {
                  "id": "7aafb1bf-fa7d-44b3-a6dc-dceb3e616095",
                  "option_id": "41a6ae10-aad9-4099-8f4f-cd47e9184ccc",
                  "candidate_id": "1a7a5c77-fd52-485a-ac05-bbff5be2bc0b"
                },
                {
                  "id": "f877e592-1dbf-4927-b431-e29751c931c1",
                  "option_id": "9335f715-05ce-499c-8720-f770de65a934",
                  "candidate_id": "b2276623-d8b6-4380-841c-48785b11a8a4"
                },
                {
                  "id": "a5f77505-4862-4fb8-9f4a-086df44e80c2",
                  "option_id": "642f45f4-2604-4ee6-aab5-ffce81831688",
                  "candidate_id": "29074731-998c-4238-a108-13fbb6cf6012"
                }
              ]
            },
            {
              "id": "b6196116-de66-4617-a3cd-0c06f8e727e2",
              "name": "MacBook Pro - Space Gray, 16GB, 1TB, English",
              "price": {
                "nominal": 2350000,
                "real": 2115000
              },
              "inventory": {
                "income": 500,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "16f3abdf-e919-4ffa-9294-a82d33e1aac3",
                  "option_id": "75cb1035-c68b-4f02-8398-c6449cabd358",
                  "candidate_id": "3ff5a928-126d-417a-88da-d7130f4cef66"
                },
                {
                  "id": "1474caeb-6703-417d-89fe-a4eeb0f96010",
                  "option_id": "41a6ae10-aad9-4099-8f4f-cd47e9184ccc",
                  "candidate_id": "1a7a5c77-fd52-485a-ac05-bbff5be2bc0b"
                },
                {
                  "id": "98d4d964-0342-4114-8255-88152ab0368f",
                  "option_id": "9335f715-05ce-499c-8720-f770de65a934",
                  "candidate_id": "ab5e5be1-2ddd-4ea5-ae07-2bf02d0a6b0e"
                },
                {
                  "id": "53bb3b58-9a05-4900-aca0-659f72e56b77",
                  "option_id": "642f45f4-2604-4ee6-aab5-ffce81831688",
                  "candidate_id": "761726dc-0fc3-412f-a115-10e9f08fd6c5"
                }
              ]
            },
            {
              "id": "6ff6ed80-bd5c-42a2-922c-47be379e1a78",
              "name": "MacBook Pro - Space Gray, 16GB, 1TB, Korean",
              "price": {
                "nominal": 2350000,
                "real": 2115000
              },
              "inventory": {
                "income": 500,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "dcf710c1-7a1a-477e-9752-bf51fb54c29a",
                  "option_id": "75cb1035-c68b-4f02-8398-c6449cabd358",
                  "candidate_id": "3ff5a928-126d-417a-88da-d7130f4cef66"
                },
                {
                  "id": "ce590685-dd8d-4846-8333-eaede3040237",
                  "option_id": "41a6ae10-aad9-4099-8f4f-cd47e9184ccc",
                  "candidate_id": "1a7a5c77-fd52-485a-ac05-bbff5be2bc0b"
                },
                {
                  "id": "2e114e26-8a02-4c9e-aac7-eb1b5a54a3f5",
                  "option_id": "9335f715-05ce-499c-8720-f770de65a934",
                  "candidate_id": "ab5e5be1-2ddd-4ea5-ae07-2bf02d0a6b0e"
                },
                {
                  "id": "be06b913-7f17-4f9a-9e0b-1b41769781eb",
                  "option_id": "642f45f4-2604-4ee6-aab5-ffce81831688",
                  "candidate_id": "29074731-998c-4238-a108-13fbb6cf6012"
                }
              ]
            },
            {
              "id": "7766f138-c40c-444f-b2b3-f4c08cdbd111",
              "name": "MacBook Pro - Space Gray, 16GB, 2TB, English",
              "price": {
                "nominal": 2950000,
                "real": 2655000
              },
              "inventory": {
                "income": 500,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "c3495b9d-3f92-45bd-bd30-168461d47653",
                  "option_id": "75cb1035-c68b-4f02-8398-c6449cabd358",
                  "candidate_id": "3ff5a928-126d-417a-88da-d7130f4cef66"
                },
                {
                  "id": "61707718-923d-413f-9a22-fbeea5d23bd0",
                  "option_id": "41a6ae10-aad9-4099-8f4f-cd47e9184ccc",
                  "candidate_id": "1a7a5c77-fd52-485a-ac05-bbff5be2bc0b"
                },
                {
                  "id": "f7808f32-2a08-472e-91b0-e75a23238916",
                  "option_id": "9335f715-05ce-499c-8720-f770de65a934",
                  "candidate_id": "d930e66c-f08b-4b60-93bd-c5ebabd2fab1"
                },
                {
                  "id": "a3d32c2d-87de-4f9d-9de3-984fae8ab874",
                  "option_id": "642f45f4-2604-4ee6-aab5-ffce81831688",
                  "candidate_id": "761726dc-0fc3-412f-a115-10e9f08fd6c5"
                }
              ]
            },
            {
              "id": "63235e94-0a5f-4bcd-850f-0811ba8a61fd",
              "name": "MacBook Pro - Space Gray, 16GB, 2TB, Korean",
              "price": {
                "nominal": 2950000,
                "real": 2655000
              },
              "inventory": {
                "income": 500,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "41e6e97f-4fbe-408a-a5ee-07431bbe338b",
                  "option_id": "75cb1035-c68b-4f02-8398-c6449cabd358",
                  "candidate_id": "3ff5a928-126d-417a-88da-d7130f4cef66"
                },
                {
                  "id": "f807902a-c5a0-4afc-baae-586a3967a1c4",
                  "option_id": "41a6ae10-aad9-4099-8f4f-cd47e9184ccc",
                  "candidate_id": "1a7a5c77-fd52-485a-ac05-bbff5be2bc0b"
                },
                {
                  "id": "0674f1c4-4deb-49aa-90a7-82cfc953bb10",
                  "option_id": "9335f715-05ce-499c-8720-f770de65a934",
                  "candidate_id": "d930e66c-f08b-4b60-93bd-c5ebabd2fab1"
                },
                {
                  "id": "23c209e5-9e44-419f-9cf1-58af091199f7",
                  "option_id": "642f45f4-2604-4ee6-aab5-ffce81831688",
                  "candidate_id": "29074731-998c-4238-a108-13fbb6cf6012"
                }
              ]
            },
            {
              "id": "c1badc84-9701-48e9-bfeb-05c29f050771",
              "name": "MacBook Pro - Space Gray, 32GB, 512GB, English",
              "price": {
                "nominal": 2650000,
                "real": 2385000
              },
              "inventory": {
                "income": 500,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "5da6493c-eef7-4551-9d4e-9f998e7eedab",
                  "option_id": "75cb1035-c68b-4f02-8398-c6449cabd358",
                  "candidate_id": "3ff5a928-126d-417a-88da-d7130f4cef66"
                },
                {
                  "id": "c32c2d3e-aeab-475d-8176-c9d1acc00625",
                  "option_id": "41a6ae10-aad9-4099-8f4f-cd47e9184ccc",
                  "candidate_id": "d10349d9-02c2-49f7-abad-edfec9c6f595"
                },
                {
                  "id": "9700ac86-9564-476a-a53e-fd98f2ef19d4",
                  "option_id": "9335f715-05ce-499c-8720-f770de65a934",
                  "candidate_id": "b2276623-d8b6-4380-841c-48785b11a8a4"
                },
                {
                  "id": "54de882f-b100-4427-8a8b-02e4ffe8d6ee",
                  "option_id": "642f45f4-2604-4ee6-aab5-ffce81831688",
                  "candidate_id": "761726dc-0fc3-412f-a115-10e9f08fd6c5"
                }
              ]
            },
            {
              "id": "37f0fa1b-a335-4869-978f-36e423edfd33",
              "name": "MacBook Pro - Space Gray, 32GB, 512GB, Korean",
              "price": {
                "nominal": 2650000,
                "real": 2385000
              },
              "inventory": {
                "income": 500,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "36774ba6-cbb0-4706-99c7-a204db67e39d",
                  "option_id": "75cb1035-c68b-4f02-8398-c6449cabd358",
                  "candidate_id": "3ff5a928-126d-417a-88da-d7130f4cef66"
                },
                {
                  "id": "b18e797a-4e9c-4310-8d0a-c00ad5a8f4a1",
                  "option_id": "41a6ae10-aad9-4099-8f4f-cd47e9184ccc",
                  "candidate_id": "d10349d9-02c2-49f7-abad-edfec9c6f595"
                },
                {
                  "id": "3f1f8574-95c7-49c8-8531-87a780de2a39",
                  "option_id": "9335f715-05ce-499c-8720-f770de65a934",
                  "candidate_id": "b2276623-d8b6-4380-841c-48785b11a8a4"
                },
                {
                  "id": "b03ce1d3-ffa5-462f-b5b1-620667471c38",
                  "option_id": "642f45f4-2604-4ee6-aab5-ffce81831688",
                  "candidate_id": "29074731-998c-4238-a108-13fbb6cf6012"
                }
              ]
            },
            {
              "id": "ac6eacf8-94af-4133-a3f2-ee2d1a7fe65a",
              "name": "MacBook Pro - Space Gray, 32GB, 1TB, English",
              "price": {
                "nominal": 2950000,
                "real": 2655000
              },
              "inventory": {
                "income": 500,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "5002bca2-4c4e-4c9b-a7f6-16aac593ddac",
                  "option_id": "75cb1035-c68b-4f02-8398-c6449cabd358",
                  "candidate_id": "3ff5a928-126d-417a-88da-d7130f4cef66"
                },
                {
                  "id": "8ad824f7-4554-4039-b6a7-05ea97d22c23",
                  "option_id": "41a6ae10-aad9-4099-8f4f-cd47e9184ccc",
                  "candidate_id": "d10349d9-02c2-49f7-abad-edfec9c6f595"
                },
                {
                  "id": "7bffd41f-9dbb-47e4-ae44-b0bc674a964a",
                  "option_id": "9335f715-05ce-499c-8720-f770de65a934",
                  "candidate_id": "ab5e5be1-2ddd-4ea5-ae07-2bf02d0a6b0e"
                },
                {
                  "id": "fb6fb023-34f2-4fb3-a124-985524a7329f",
                  "option_id": "642f45f4-2604-4ee6-aab5-ffce81831688",
                  "candidate_id": "761726dc-0fc3-412f-a115-10e9f08fd6c5"
                }
              ]
            },
            {
              "id": "695fd100-5150-4839-96cf-6e780212c785",
              "name": "MacBook Pro - Space Gray, 32GB, 1TB, Korean",
              "price": {
                "nominal": 2950000,
                "real": 2655000
              },
              "inventory": {
                "income": 500,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "f2992440-7c26-4fa5-abd8-203949e408ff",
                  "option_id": "75cb1035-c68b-4f02-8398-c6449cabd358",
                  "candidate_id": "3ff5a928-126d-417a-88da-d7130f4cef66"
                },
                {
                  "id": "1c75e490-cdeb-45fd-aee5-578040ed0f5a",
                  "option_id": "41a6ae10-aad9-4099-8f4f-cd47e9184ccc",
                  "candidate_id": "d10349d9-02c2-49f7-abad-edfec9c6f595"
                },
                {
                  "id": "a813c493-689c-4990-95d0-2fcfde5f1e1a",
                  "option_id": "9335f715-05ce-499c-8720-f770de65a934",
                  "candidate_id": "ab5e5be1-2ddd-4ea5-ae07-2bf02d0a6b0e"
                },
                {
                  "id": "0247de45-9907-4a82-9bc9-8077f825ac6e",
                  "option_id": "642f45f4-2604-4ee6-aab5-ffce81831688",
                  "candidate_id": "29074731-998c-4238-a108-13fbb6cf6012"
                }
              ]
            },
            {
              "id": "d5ff9cf5-8283-493b-9519-73af0a6fabcd",
              "name": "MacBook Pro - Space Gray, 32GB, 2TB, English",
              "price": {
                "nominal": 3550000,
                "real": 3195000
              },
              "inventory": {
                "income": 500,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "505b99a8-7faa-406a-a74c-63592e8dd6be",
                  "option_id": "75cb1035-c68b-4f02-8398-c6449cabd358",
                  "candidate_id": "3ff5a928-126d-417a-88da-d7130f4cef66"
                },
                {
                  "id": "ce9bc3c5-55f6-48d1-a1a5-5a29bb6e28ec",
                  "option_id": "41a6ae10-aad9-4099-8f4f-cd47e9184ccc",
                  "candidate_id": "d10349d9-02c2-49f7-abad-edfec9c6f595"
                },
                {
                  "id": "d3efca40-72c4-469a-8b24-64970c1dad8b",
                  "option_id": "9335f715-05ce-499c-8720-f770de65a934",
                  "candidate_id": "d930e66c-f08b-4b60-93bd-c5ebabd2fab1"
                },
                {
                  "id": "44cf8bc7-a8e5-4dc9-8567-501103896a84",
                  "option_id": "642f45f4-2604-4ee6-aab5-ffce81831688",
                  "candidate_id": "761726dc-0fc3-412f-a115-10e9f08fd6c5"
                }
              ]
            },
            {
              "id": "56ee1b1e-3b3b-4c39-b248-b254d238830a",
              "name": "MacBook Pro - Space Gray, 32GB, 2TB, Korean",
              "price": {
                "nominal": 3550000,
                "real": 3195000
              },
              "inventory": {
                "income": 500,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "417d06fb-b716-427a-b6d1-17d3b923b1aa",
                  "option_id": "75cb1035-c68b-4f02-8398-c6449cabd358",
                  "candidate_id": "3ff5a928-126d-417a-88da-d7130f4cef66"
                },
                {
                  "id": "685b01b0-2d2b-4ae3-9d84-f1e035e9108f",
                  "option_id": "41a6ae10-aad9-4099-8f4f-cd47e9184ccc",
                  "candidate_id": "d10349d9-02c2-49f7-abad-edfec9c6f595"
                },
                {
                  "id": "b3fb2164-d4c9-4284-9b6e-69fd71b54c1c",
                  "option_id": "9335f715-05ce-499c-8720-f770de65a934",
                  "candidate_id": "d930e66c-f08b-4b60-93bd-c5ebabd2fab1"
                },
                {
                  "id": "593c6ab1-ff57-47c6-a4b6-15b60cf279e6",
                  "option_id": "642f45f4-2604-4ee6-aab5-ffce81831688",
                  "candidate_id": "29074731-998c-4238-a108-13fbb6cf6012"
                }
              ]
            },
            {
              "id": "6be68e95-2439-46a5-88f9-c1c9a11e0e1b",
              "name": "MacBook Pro - Space Gray, 64GB, 512GB, English",
              "price": {
                "nominal": 3250000,
                "real": 2925000
              },
              "inventory": {
                "income": 500,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "cb53b36d-a76a-4de8-b717-32524d68c993",
                  "option_id": "75cb1035-c68b-4f02-8398-c6449cabd358",
                  "candidate_id": "3ff5a928-126d-417a-88da-d7130f4cef66"
                },
                {
                  "id": "9f1c529e-5803-424d-9666-5337dc8a071a",
                  "option_id": "41a6ae10-aad9-4099-8f4f-cd47e9184ccc",
                  "candidate_id": "1b4a3a48-17a6-4b42-808e-536323841c42"
                },
                {
                  "id": "c6c8dd6c-89b4-440b-8e51-15c844ee0a3c",
                  "option_id": "9335f715-05ce-499c-8720-f770de65a934",
                  "candidate_id": "b2276623-d8b6-4380-841c-48785b11a8a4"
                },
                {
                  "id": "197590f8-c8c2-416c-80ce-daa56722a29b",
                  "option_id": "642f45f4-2604-4ee6-aab5-ffce81831688",
                  "candidate_id": "761726dc-0fc3-412f-a115-10e9f08fd6c5"
                }
              ]
            },
            {
              "id": "f0c9ac61-25ab-486a-8532-9d807f903659",
              "name": "MacBook Pro - Space Gray, 64GB, 512GB, Korean",
              "price": {
                "nominal": 3250000,
                "real": 2925000
              },
              "inventory": {
                "income": 500,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "8f0953e7-3f54-45f1-837f-a7dae83b63f8",
                  "option_id": "75cb1035-c68b-4f02-8398-c6449cabd358",
                  "candidate_id": "3ff5a928-126d-417a-88da-d7130f4cef66"
                },
                {
                  "id": "e981e782-3496-41aa-a3d9-131d41849535",
                  "option_id": "41a6ae10-aad9-4099-8f4f-cd47e9184ccc",
                  "candidate_id": "1b4a3a48-17a6-4b42-808e-536323841c42"
                },
                {
                  "id": "cf194664-262f-4fd7-a5f0-7c82617ea560",
                  "option_id": "9335f715-05ce-499c-8720-f770de65a934",
                  "candidate_id": "b2276623-d8b6-4380-841c-48785b11a8a4"
                },
                {
                  "id": "bb896c0c-c3e7-4e8f-a33e-fa3486c392c4",
                  "option_id": "642f45f4-2604-4ee6-aab5-ffce81831688",
                  "candidate_id": "29074731-998c-4238-a108-13fbb6cf6012"
                }
              ]
            },
            {
              "id": "aaa104e4-4c6c-4d25-8d07-def0cbdee6c8",
              "name": "MacBook Pro - Space Gray, 64GB, 1TB, English",
              "price": {
                "nominal": 3550000,
                "real": 3195000
              },
              "inventory": {
                "income": 500,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "33dbdfc8-884f-468d-bb23-c3579c0afd89",
                  "option_id": "75cb1035-c68b-4f02-8398-c6449cabd358",
                  "candidate_id": "3ff5a928-126d-417a-88da-d7130f4cef66"
                },
                {
                  "id": "182b06a6-fd81-4a2f-b618-def61b853602",
                  "option_id": "41a6ae10-aad9-4099-8f4f-cd47e9184ccc",
                  "candidate_id": "1b4a3a48-17a6-4b42-808e-536323841c42"
                },
                {
                  "id": "9b3ed81c-59ed-4f1d-9825-99fdbf7304b1",
                  "option_id": "9335f715-05ce-499c-8720-f770de65a934",
                  "candidate_id": "ab5e5be1-2ddd-4ea5-ae07-2bf02d0a6b0e"
                },
                {
                  "id": "182b5d0e-9efc-45ad-857b-8e077b056451",
                  "option_id": "642f45f4-2604-4ee6-aab5-ffce81831688",
                  "candidate_id": "761726dc-0fc3-412f-a115-10e9f08fd6c5"
                }
              ]
            },
            {
              "id": "8674617b-c533-4a86-b2ce-c505cf3d14db",
              "name": "MacBook Pro - Space Gray, 64GB, 1TB, Korean",
              "price": {
                "nominal": 3550000,
                "real": 3195000
              },
              "inventory": {
                "income": 500,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "c76805d5-55b4-42e3-a12c-9191683288fb",
                  "option_id": "75cb1035-c68b-4f02-8398-c6449cabd358",
                  "candidate_id": "3ff5a928-126d-417a-88da-d7130f4cef66"
                },
                {
                  "id": "47bf94e6-027b-4852-9ae9-392b0f5c7c2f",
                  "option_id": "41a6ae10-aad9-4099-8f4f-cd47e9184ccc",
                  "candidate_id": "1b4a3a48-17a6-4b42-808e-536323841c42"
                },
                {
                  "id": "5c617ad0-0348-46ad-9120-a962229b2be6",
                  "option_id": "9335f715-05ce-499c-8720-f770de65a934",
                  "candidate_id": "ab5e5be1-2ddd-4ea5-ae07-2bf02d0a6b0e"
                },
                {
                  "id": "d4878a33-f33c-4a30-9a8a-463caa9c66a2",
                  "option_id": "642f45f4-2604-4ee6-aab5-ffce81831688",
                  "candidate_id": "29074731-998c-4238-a108-13fbb6cf6012"
                }
              ]
            },
            {
              "id": "91830228-abec-4b84-a6c6-64f7433d5533",
              "name": "MacBook Pro - Space Gray, 64GB, 2TB, English",
              "price": {
                "nominal": 4150000,
                "real": 3735000
              },
              "inventory": {
                "income": 500,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "f445bf9b-d059-48ae-8fb0-8010a32a5f2f",
                  "option_id": "75cb1035-c68b-4f02-8398-c6449cabd358",
                  "candidate_id": "3ff5a928-126d-417a-88da-d7130f4cef66"
                },
                {
                  "id": "546ae664-ddf8-4f75-9edf-59044a32e51a",
                  "option_id": "41a6ae10-aad9-4099-8f4f-cd47e9184ccc",
                  "candidate_id": "1b4a3a48-17a6-4b42-808e-536323841c42"
                },
                {
                  "id": "45eefe38-4a73-46f2-bbb9-53f972f77bbc",
                  "option_id": "9335f715-05ce-499c-8720-f770de65a934",
                  "candidate_id": "d930e66c-f08b-4b60-93bd-c5ebabd2fab1"
                },
                {
                  "id": "c21bf334-9901-4323-bfe2-f7a92ad71c4c",
                  "option_id": "642f45f4-2604-4ee6-aab5-ffce81831688",
                  "candidate_id": "761726dc-0fc3-412f-a115-10e9f08fd6c5"
                }
              ]
            },
            {
              "id": "4f2868a3-7d64-44ea-b0ae-47b73760fbee",
              "name": "MacBook Pro - Space Gray, 64GB, 2TB, Korean",
              "price": {
                "nominal": 4150000,
                "real": 3735000
              },
              "inventory": {
                "income": 500,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "e64ef482-db04-49c4-b685-d1b656aa76c9",
                  "option_id": "75cb1035-c68b-4f02-8398-c6449cabd358",
                  "candidate_id": "3ff5a928-126d-417a-88da-d7130f4cef66"
                },
                {
                  "id": "5558f0b6-ee22-415a-aea3-ee400476d04c",
                  "option_id": "41a6ae10-aad9-4099-8f4f-cd47e9184ccc",
                  "candidate_id": "1b4a3a48-17a6-4b42-808e-536323841c42"
                },
                {
                  "id": "03ec63d4-4258-4971-9560-9a4daa205590",
                  "option_id": "9335f715-05ce-499c-8720-f770de65a934",
                  "candidate_id": "d930e66c-f08b-4b60-93bd-c5ebabd2fab1"
                },
                {
                  "id": "f25ae1e9-fc8e-4297-a61b-69570683fd56",
                  "option_id": "642f45f4-2604-4ee6-aab5-ffce81831688",
                  "candidate_id": "29074731-998c-4238-a108-13fbb6cf6012"
                }
              ]
            }
          ],
          "id": "f6825138-1e94-42ef-90b2-f27d1ea5581c",
          "name": "MacBook M3 Pro 14inch Entity",
          "primary": true,
          "required": true
        },
        {
          "options": [],
          "stocks": [
            {
              "id": "fc7552bb-2a74-44fe-891a-e5af66444694",
              "name": "Warranty Program",
              "price": {
                "nominal": 100000,
                "real": 89000
              },
              "inventory": {
                "income": 10000,
                "outcome": 0
              },
              "choices": []
            }
          ],
          "id": "461232cc-bd5b-48b8-a693-f2888ebb9266",
          "name": "Warranty Program",
          "primary": false,
          "required": false
        },
        {
          "options": [],
          "stocks": [
            {
              "id": "6aa2fef3-d488-4f8c-8989-8b479f22bb74",
              "name": "Magnetic Keyboard",
              "price": {
                "nominal": 200000,
                "real": 169000
              },
              "inventory": {
                "income": 8000,
                "outcome": 0
              },
              "choices": []
            }
          ],
          "id": "f6ea807d-484f-4a37-be51-92cbb9fdc119",
          "name": "Magnetic Keyboard",
          "primary": false,
          "required": false
        }
      ],
      "created_at": "2024-12-13T06:42:11.347Z",
      "updated_at": "2024-12-13T06:42:11.346Z",
      "paused_at": null,
      "suspended_at": null,
      "opened_at": "2024-12-13T06:42:11.340Z",
      "closed_at": null
    }
  },
  {
    "name": "shoppings_customers_sales_getById",
    "method": "get",
    "path": "/shoppings/customers/sales/{id}",
    "description": "Get a sale info.\n\nGet a {@link IShoppingSale sale} with detailed information.\n\nIf you're a {@link IShoppingSeller seller}, you can only access to the\nyour own {@link IShoppingSale sale}. Otherwise you're a\n{@link IShoppingCustomer customer}, you can access to only the operating\nsales in the market. You can't access to the unopened, closed, or suspended\nsales.",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "description": " Target sale's {@link IShoppingSale.id }",
          "type": "string",
          "format": "uuid"
        }
      },
      "additionalProperties": false,
      "required": [
        "id"
      ],
      "$defs": {
        "IShoppingChannelCategory.IInvert": {
          "description": "Invert category information with parent category.",
          "type": "object",
          "properties": {
            "parent": {
              "title": "Parent category info with recursive structure",
              "description": "Parent category info with recursive structure.\n\nIf no parent exists, then be `null`.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "$ref": "#/$defs/IShoppingChannelCategory.IInvert"
                }
              ]
            },
            "id": {
              "title": "Primary Key",
              "description": "Primary Key.",
              "type": "string",
              "format": "uuid"
            },
            "code": {
              "title": "Identifier code of the category",
              "description": "Identifier code of the category.\n\nThe code must be unique in the channel.",
              "type": "string"
            },
            "parent_id": {
              "title": "Parent category's ID",
              "description": "Parent category's ID.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "name": {
              "title": "Representative name of the category",
              "description": "Representative name of the category.\n\nThe name must be unique within the parent category. If no parent exists,\nthen the name must be unique within the channel between no parent\ncategories.",
              "type": "string"
            },
            "created_at": {
              "title": "Creation time of record",
              "description": "Creation time of record.",
              "type": "string",
              "format": "date-time"
            }
          },
          "required": [
            "parent",
            "id",
            "code",
            "parent_id",
            "name",
            "created_at"
          ]
        }
      }
    },
    "output": {
      "description": "Seller sales products.\n\n`IShoppingSale` is an entity that embodies \"product sales\" (sales)\ninformation registered by the {@link ISoppingSeller seller}. And the main\ninformation of the sale is recorded in the sub {@link IShoppingSaleSnapshot},\nnot in the main `IShoppingSale`. When a seller changes a previously registered\nitem, the existing `IShoppingSale` record is not changed, but a new\n{@link IShoppingSaleSnapshot snapshot} record be created.\n\nThis is to preserve the {@link IShoppingCustomer customer}'s\n{@link IShoppingOrder purchase history} flawlessly after the customer\npurchases a specific item, even if the seller changes the components or\nprice of the item. It is also intended to support sellers in so-called A/B\ntesting, which involves changing components or prices and measuring the\nperformance in each case.",
      "type": "object",
      "properties": {
        "section": {
          "title": "Belonged section",
          "description": "Section information.\n\n`IShoppingSection` is a concept that refers to the spatial information of\nthe market.\n\nIf we compare the section mentioned here to the offline market, it means a\nspatially separated area within the store, such as the \"fruit corner\" or\n\"butcher corner\". Therefore, in the {@link IShoppingSale sale} entity, it is\nnot possible to classify multiple sections simultaneously, but only one section\ncan be classified.\n\nBy the way, if your shopping mall system requires only one section, then just\nuse only one. This concept is designed to be expandable in the future.",
          "type": "object",
          "properties": {
            "id": {
              "title": "Primary Key",
              "description": "Primary Key.",
              "type": "string",
              "format": "uuid"
            },
            "code": {
              "title": "Identifier code",
              "description": "Identifier code.",
              "type": "string"
            },
            "name": {
              "title": "Representative name of the section",
              "description": "Representative name of the section.",
              "type": "string"
            },
            "created_at": {
              "title": "Creation time of record",
              "description": "Creation time of record.",
              "type": "string",
              "format": "date-time"
            }
          },
          "required": [
            "id",
            "code",
            "name",
            "created_at"
          ]
        },
        "seller": {
          "title": "Seller who has registered the sale",
          "description": "Invert information starting from seller info.\n\nInstead of accessing to the seller information from the\n{@link IShoppingCustomer.member} -> {@link IShoppingMember.seller},\n`IShoppingSeller.IInvert` starts from the seller information\nand access to the customer, member and {@link IShoppingCitizen citizen}\ninformation inversely.\n\n------------------------------\n\nDescription of the current {@link IShoppingSeller.IInvert} type:\n\n> Invert information starting from seller info.\n> \n> Instead of accessing to the seller information from the\n> {@link IShoppingCustomer.member} -> {@link IShoppingMember.seller},\n> `IShoppingSeller.IInvert` starts from the seller information\n> and access to the customer, member and {@link IShoppingCitizen citizen}\n> information inversely.\n\n------------------------------\n\nDescription of the parent {@link IShoppingSeller} type:\n\n> Seller information.\n> \n> `IShoppingSeller` is an entity that embodies a person who registers\n> {@link IShoppingSale sales} to operate selling activities, with\n> {@link IShoppingMember membership} joining.\n> \n> For reference, unlike {@link IShoppingCustomer customers} which can\n> participate even without membership joining, seller must join membership\n> to operate sales. Also, seller must do the\n> {@link IShoppingCitizen real-name and mobile authentication}, too.",
          "type": "object",
          "properties": {
            "type": {
              "title": "Discriminant for the type of customer",
              "description": "Discriminant for the type of customer.",
              "const": "seller"
            },
            "member": {
              "title": "Membership joining information",
              "description": "Invert information of member.\n\nThis invert member information has been designed to be used for another\ninvert information of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert}\n- {@link IShoppingAdministrator.IInvert}\n\n------------------------------\n\nDescription of the current {@link IShoppingMember.IInvert} type:\n\n> Invert information of member.\n> \n> This invert member information has been designed to be used for another\n> invert information of sellers and administrators like below.\n> \n> - {@link IShoppingSeller.IInvert}\n> - {@link IShoppingAdministrator.IInvert}\n\n------------------------------\n\nDescription of the parent {@link IShoppingMember} type:\n\n> Member Account.\n> \n> `IShoppingMember` is an entity that symbolizes the case when a\n> {@link IShoppingCustomer} signs up as a member of this shopping mall\n> system.\n> \n> If a `IShoppingMember` has seller or administrator property. it means that\n> the {@link IShoppingCustomer} has acting as a {@link IShoppingSeller seller}\n> or {@link IShoppingAdministrator administrator} at the same time.",
              "type": "object",
              "properties": {
                "id": {
                  "title": "Primary Key",
                  "description": "Primary Key.",
                  "type": "string",
                  "format": "uuid"
                },
                "nickname": {
                  "title": "Nickname that uniquely identifies the member",
                  "description": "Nickname that uniquely identifies the member.",
                  "type": "string"
                },
                "emails": {
                  "title": "List of emails",
                  "description": "List of emails.",
                  "type": "array",
                  "items": {
                    "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "title": "Primary Key",
                        "description": "Primary Key.",
                        "type": "string",
                        "format": "uuid"
                      },
                      "value": {
                        "title": "Email address value",
                        "description": "Email address value.",
                        "type": "string",
                        "format": "email"
                      },
                      "created_at": {
                        "title": "Creation time of record",
                        "description": "Creation time of record.",
                        "type": "string",
                        "format": "date-time"
                      }
                    },
                    "required": [
                      "id",
                      "value",
                      "created_at"
                    ]
                  }
                },
                "created_at": {
                  "title": "Creation time of record",
                  "description": "Creation time of record.\n\nAnother words, the time when the member has signed up.",
                  "type": "string",
                  "format": "date-time"
                }
              },
              "required": [
                "id",
                "nickname",
                "emails",
                "created_at"
              ]
            },
            "customer": {
              "title": "Customer, the connection information",
              "description": "Inverted customer informatino.\n\nThis inverted customer information has been designed to be used for\nanother invert information of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert}\n- {@link IShoppingAdministrator.IInvert}\n\n------------------------------\n\nDescription of the current {@link IShoppingCustomer.IInvert} type:\n\n> Inverted customer informatino.\n> \n> This inverted customer information has been designed to be used for\n> another invert information of sellers and administrators like below.\n> \n> - {@link IShoppingSeller.IInvert}\n> - {@link IShoppingAdministrator.IInvert}\n\n------------------------------\n\nDescription of the parent {@link IShoppingCustomer} type:\n\n> Customer information, but not a person but a connection basis.\n> \n> `IShoppingCustomer` is an entity that literally embodies the information of\n> those who participated in the market as customers. By the way, the\n> `IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\n> even if the same person connects to the shopping mall multiple, multiple\n> records are created in `IShoppingCustomer`.\n> \n> The first purpose of this is to track the customer's inflow path in detail,\n> and it is for cases where the same person enters as a non-member,\n> {@link IShoppingCartCommodity puts items in the shopping cart} in advance,\n> and only authenticates their {@link IShoppingCitizen real name} or\n> registers/logs in at the moment of {@link IShoppingOrderPublish payment}.\n> It is the second. Lastly, it is to accurately track the activities that\n> a person performs at the shopping mall in various ways like below.\n> \n> - Same person comes from an {@link IShoppingExternalUser external service}\n> - Same person creates multiple accounts\n> - Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n> - Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n> \n> Therefore, `IShoppingCustomer` can have multiple records with the same\n> {@link IShoppingCitizen}, {@link IShoppingMember}, and\n> {@link IShoppingExternalUser}. Additionally, if a customer signs up for\n> membership after verifying their real name or signs up for our service after\n> being a user of an external service, all related records are changed at once.\n> Therefore, identification and tracking of customers can be done very\n> systematically.",
              "type": "object",
              "properties": {
                "id": {
                  "title": "Primary Key",
                  "description": "Primary Key.",
                  "type": "string",
                  "format": "uuid"
                },
                "channel": {
                  "title": "Belonged channel",
                  "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "Primary Key",
                      "description": "Primary Key.",
                      "type": "string",
                      "format": "uuid"
                    },
                    "created_at": {
                      "title": "Creation time of record",
                      "description": "Creation time of record.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "code": {
                      "title": "Identifier code",
                      "description": "Identifier code.",
                      "type": "string"
                    },
                    "name": {
                      "title": "Name of the channel",
                      "description": "Name of the channel.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "created_at",
                    "code",
                    "name"
                  ]
                },
                "external_user": {
                  "title": "External user information",
                  "description": "External user information.\n\nWhen the customer has come frome an external service.",
                  "oneOf": [
                    {
                      "type": "null"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "title": "Primary Key",
                          "description": "Primary Key.",
                          "type": "string",
                          "format": "uuid"
                        },
                        "citizen": {
                          "title": "Citizen activation info",
                          "description": "Citizen activation info.",
                          "oneOf": [
                            {
                              "type": "null"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "title": "Primary Key",
                                  "description": "Primary Key.",
                                  "type": "string",
                                  "format": "uuid"
                                },
                                "created_at": {
                                  "title": "Creation time of record",
                                  "description": "Creation time of record.",
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "mobile": {
                                  "title": "Mobile number",
                                  "description": "Mobile number.",
                                  "x-wrtn-payment-order-mobile": true,
                                  "type": "string",
                                  "pattern": "^[0-9]*$"
                                },
                                "name": {
                                  "title": "Real name, or equivalent nickname",
                                  "description": "Real name, or equivalent nickname.",
                                  "x-wrtn-payment-order-citizen": true,
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "created_at",
                                "mobile",
                                "name"
                              ],
                              "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile} input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                            }
                          ]
                        },
                        "created_at": {
                          "title": "Creation time of record",
                          "description": "Creation time of record.\n\nAnother word, first time when the external user connected.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "uid": {
                          "title": "Identifier key of external user from the external system",
                          "description": "Identifier key of external user from the external system.",
                          "type": "string"
                        },
                        "application": {
                          "title": "Identifier code of the external service",
                          "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code} in common.",
                          "type": "string"
                        },
                        "nickname": {
                          "title": "Nickname of external user in the external system",
                          "description": "Nickname of external user in the external system.",
                          "type": "string"
                        },
                        "data": {
                          "description": "Additional information about external user from the external\nsystem."
                        }
                      },
                      "required": [
                        "id",
                        "citizen",
                        "created_at",
                        "uid",
                        "application",
                        "nickname",
                        "data"
                      ],
                      "description": "External user information.\n\n`IShoppingExternalUser` is an entity dsigned for when this system needs\nto connect with external services and welcome their users as\n{@link IShoppingCustomer customers} of this service.\n\nFor reference, customers who connect from an external service must have\nthis record, and the external service user is identified through the two\nattributes {@link application} and {@link uid}. If a customer connected\nfrom an external service completes\n{@link IShoppingCitizen real-name authentication} from this service, each\ntime the external service user reconnects to this service and issues a\nnew customer authentication token, real-name authentication begins with\ncompleted.\n\nAnd {@link password} is the password issued to the user by the external\nservice system (the so-called permanent user authentication token), and\nis never the actual user password. However, for customers who entered the\nsame application and uid as the current external system user, this is to\ndetermine whether to view this as a correct external system user or a\nviolation.\n\nIn addition, additional information received from external services can\nbe recorded in the data field in JSON format."
                    }
                  ]
                },
                "href": {
                  "title": "Connection address",
                  "description": "Connection address.\n\nSame with {@link window.location.href} of client.",
                  "type": "string",
                  "format": "uri"
                },
                "referrer": {
                  "title": "Referrer address",
                  "description": "Referrer address.\n\nSame with {@link window.document.referrer} of client.",
                  "oneOf": [
                    {
                      "type": "null"
                    },
                    {
                      "type": "string",
                      "format": "uri"
                    },
                    {
                      "type": "string",
                      "maxLength": 0
                    }
                  ]
                },
                "ip": {
                  "title": "Connection IP Address",
                  "description": "Connection IP Address.",
                  "oneOf": [
                    {
                      "type": "string",
                      "format": "ipv4"
                    },
                    {
                      "type": "string",
                      "format": "ipv6"
                    }
                  ]
                },
                "created_at": {
                  "title": "Creation time of the connection record",
                  "description": "Creation time of the connection record.",
                  "type": "string",
                  "format": "date-time"
                }
              },
              "required": [
                "id",
                "channel",
                "external_user",
                "href",
                "referrer",
                "ip",
                "created_at"
              ]
            },
            "citizen": {
              "title": "Real-name and mobile number authentication information",
              "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile} input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored.",
              "type": "object",
              "properties": {
                "id": {
                  "title": "Primary Key",
                  "description": "Primary Key.",
                  "type": "string",
                  "format": "uuid"
                },
                "created_at": {
                  "title": "Creation time of record",
                  "description": "Creation time of record.",
                  "type": "string",
                  "format": "date-time"
                },
                "mobile": {
                  "title": "Mobile number",
                  "description": "Mobile number.",
                  "x-wrtn-payment-order-mobile": true,
                  "type": "string",
                  "pattern": "^[0-9]*$"
                },
                "name": {
                  "title": "Real name, or equivalent nickname",
                  "description": "Real name, or equivalent nickname.",
                  "x-wrtn-payment-order-citizen": true,
                  "type": "string"
                }
              },
              "required": [
                "id",
                "created_at",
                "mobile",
                "name"
              ]
            },
            "id": {
              "title": "Primary Key",
              "description": "Primary Key.",
              "type": "string",
              "format": "uuid"
            },
            "created_at": {
              "title": "Creation tmie of record",
              "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up.",
              "type": "string",
              "format": "date-time"
            }
          },
          "required": [
            "type",
            "member",
            "customer",
            "citizen",
            "id",
            "created_at"
          ]
        },
        "id": {
          "title": "Primary Key of Sale",
          "description": "Primary Key of Sale.",
          "type": "string",
          "format": "uuid"
        },
        "snapshot_id": {
          "title": "Primary Key of Snapshot",
          "description": "Primary Key of Snapshot.",
          "type": "string",
          "format": "uuid"
        },
        "latest": {
          "title": "Whether the snapshot is the latest one or not",
          "description": "Whether the snapshot is the latest one or not.",
          "type": "boolean"
        },
        "content": {
          "title": "Description and image content describing the sale",
          "description": "Content information of sale snapshot.\n\n`IShoppingSaleContent` is an entity embodies the description contents\nof {@link IShoppingSale}.",
          "type": "object",
          "properties": {
            "id": {
              "title": "Primary Key",
              "description": "Primary Key.",
              "type": "string",
              "format": "uuid"
            },
            "title": {
              "title": "Title of the content",
              "description": "Title of the content.",
              "type": "string"
            },
            "format": {
              "title": "Format of the body content",
              "description": "Format of the body content.\n\nSame meaning with file extension like `html`, `md`, and `txt`.",
              "oneOf": [
                {
                  "const": "html"
                },
                {
                  "const": "md"
                },
                {
                  "const": "txt"
                }
              ]
            },
            "body": {
              "title": "The main body content",
              "description": "The main body content.",
              "type": "string"
            },
            "files": {
              "title": "List of attached files",
              "description": "List of attached files.",
              "type": "array",
              "items": {
                "description": "Attachment File.\n\nEvery attachment files that are managed in current system.\n\nFor reference, it is possible to omit one of file {@link name}\nor {@link extension} like `.gitignore` or `README` case, but not\npossible to omit both of them.",
                "type": "object",
                "properties": {
                  "id": {
                    "title": "Primary Key",
                    "description": "Primary Key.",
                    "type": "string",
                    "format": "uuid"
                  },
                  "created_at": {
                    "title": "Creation time of attachment file",
                    "description": "Creation time of attachment file.",
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "title": "File name, except extension",
                    "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string.",
                    "type": "string",
                    "maxLength": 255
                  },
                  "extension": {
                    "title": "Extension",
                    "description": "Extension.\n\nPossible to omit like `README` case.",
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 8
                      }
                    ]
                  },
                  "url": {
                    "title": "URL path of the real file",
                    "description": "URL path of the real file.",
                    "type": "string",
                    "format": "uri",
                    "contentMediaType": "image/*"
                  }
                },
                "required": [
                  "id",
                  "created_at",
                  "name",
                  "extension",
                  "url"
                ]
              }
            },
            "thumbnails": {
              "title": "List of thumbnails",
              "description": "List of thumbnails.",
              "type": "array",
              "items": {
                "description": "Attachment File.\n\nEvery attachment files that are managed in current system.\n\nFor reference, it is possible to omit one of file {@link name}\nor {@link extension} like `.gitignore` or `README` case, but not\npossible to omit both of them.",
                "type": "object",
                "properties": {
                  "id": {
                    "title": "Primary Key",
                    "description": "Primary Key.",
                    "type": "string",
                    "format": "uuid"
                  },
                  "created_at": {
                    "title": "Creation time of attachment file",
                    "description": "Creation time of attachment file.",
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "title": "File name, except extension",
                    "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string.",
                    "type": "string",
                    "maxLength": 255
                  },
                  "extension": {
                    "title": "Extension",
                    "description": "Extension.\n\nPossible to omit like `README` case.",
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 8
                      }
                    ]
                  },
                  "url": {
                    "title": "URL path of the real file",
                    "description": "URL path of the real file.",
                    "type": "string",
                    "format": "uri",
                    "contentMediaType": "image/*"
                  }
                },
                "required": [
                  "id",
                  "created_at",
                  "name",
                  "extension",
                  "url"
                ]
              }
            }
          },
          "required": [
            "id",
            "title",
            "format",
            "body",
            "files",
            "thumbnails"
          ]
        },
        "channels": {
          "title": "List of channels and categories",
          "description": "List of channels and categories.\n\nWhich channels and categories the sale is registered to.",
          "type": "array",
          "items": {
            "description": "Target channel (and categories) of sale to sell.\n\n`IShoppingSaleChannel` is an entity that expresses through which\n{@link IShoppingChannel channel} a listing {@link IShoppingSale} is sold.\n\nAlso, if {@link IShoppingChannelCategory categories} are specified, it also\nmeans that the sale be sold. Otherwise, none of the categories of the channel\nbeing specified, it means that every categories of the channel is listing the\ntarget sale.",
            "type": "object",
            "properties": {
              "categories": {
                "title": "List of categories of the channel listing the sale",
                "description": "List of categories of the channel listing the sale.\n\nIf empty, it means all categories of the channel is listing the sale.",
                "type": "array",
                "items": {
                  "$ref": "#/$defs/IShoppingChannelCategory.IInvert"
                }
              },
              "id": {
                "title": "Primary Key",
                "description": "Primary Key.",
                "type": "string",
                "format": "uuid"
              },
              "created_at": {
                "title": "Creation time of record",
                "description": "Creation time of record.",
                "type": "string",
                "format": "date-time"
              },
              "code": {
                "title": "Identifier code",
                "description": "Identifier code.",
                "type": "string"
              },
              "name": {
                "title": "Name of the channel",
                "description": "Name of the channel.",
                "type": "string"
              }
            },
            "required": [
              "categories",
              "id",
              "created_at",
              "code",
              "name"
            ]
          },
          "minItems": 1
        },
        "tags": {
          "title": "List of search tags",
          "description": "List of search tags.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "units": {
          "title": "List of units",
          "description": "List of units.\n\nRecords about individual product composition information that are sold\nin the sale. Each {@link IShoppingSaleUnit unit} record has configurable\n{@link IShoppingSaleUnitOption options},\n{@link IShoppingSaleUnitOptionCandidate candidate} values for each\noption, and {@link IShoppingSaleUnitStock final stocks} determined by\nselecting every candidate values of each option.",
          "type": "array",
          "items": {
            "description": "Product composition information handled in the sale.\n\n`IShoppingSaleUnit` is an entity that embodies the \"individual product\"\ninformation handled in the {@link IShoppingSale sale}.\n\nFor reference, the reason why `IShoppingSaleUnit` is separated from\n{@link IShoppingSaleSnapshot} by an algebraic relationship of 1: N is because\nthere are some cases where multiple products are sold in one listing. This is\nthe case with so-called \"bundled products\".\n\n- Bundle from regular product (Mackbook Set)\n  - Main Body\n  - Keyboard\n  - Mouse\n  - Apple Care (Free A/S Voucher)\n\nAnd again, `IShoppingSaleUnit` does not in itself refer to the\n{@link IShoppingSaleUnitStock final stock} that the\n{@link IShoppingCustomer customer} will {@link IShoppingOrder purchase}.\nThe final stock can be found only after selecting all given\n{@link IShoppingSaleUnitOption options} and their\n{@link IShoppingSaleUnitOptionCandidate candidate values}.\n\nFor example, even if you buy a Macbook, the final stocks are determined only\nafter selecting all the options (CPU / RAM / SSD), etc.",
            "type": "object",
            "properties": {
              "options": {
                "title": "List of options",
                "description": "List of options.",
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "candidates": {
                          "title": "List of candidate values",
                          "description": "List of candidate values.",
                          "type": "array",
                          "items": {
                            "description": "Selectable candidate values within an option.\n\n`IShoppingSaleUnitOptionCandidate` is an entity that represents individual\ncandidate values that can be selected from\n{@link IShoppingSaleUnitSelectableOption options of the \"select\" type}.\n\n- Example\n  - RAM: 8GB, 16GB, 32GB\n  - GPU: RTX 3060, RTX 4080, TESLA\n  - License: Private, Commercial, Educatiion\n\nBy the way, if belonged option is not \"select\" type, this entity never\nbeing used.",
                            "type": "object",
                            "properties": {
                              "id": {
                                "title": "Primary Key",
                                "description": "Primary Key.",
                                "type": "string",
                                "format": "uuid"
                              },
                              "name": {
                                "title": "Represents the name of the candidate value",
                                "description": "Represents the name of the candidate value.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "name"
                            ]
                          },
                          "minItems": 1
                        },
                        "id": {
                          "title": "Primary Key",
                          "description": "Primary Key.",
                          "type": "string",
                          "format": "uuid"
                        },
                        "type": {
                          "title": "Discriminant for the type of selectable option",
                          "description": "Discriminant for the type of selectable option.",
                          "const": "select"
                        },
                        "name": {
                          "title": "Represents the name of the option",
                          "description": "Represents the name of the option.",
                          "type": "string"
                        },
                        "variable": {
                          "title": "Whether the option is variable or not",
                          "description": "Whether the option is variable or not.\n\nWhen type of current option is \"select\", this attribute means whether\nselecting different candidate value affects the final stock or not.",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "candidates",
                        "id",
                        "type",
                        "name",
                        "variable"
                      ],
                      "description": "Individual option information on units for sale.\n\n`IShoppingSaleUnitSelectableOption` is a subsidiary entity of\n{@link IShoppingSaleUnit} that represents individual products in the\n{@link IShoppingSale sale}, and is an entity designed to represent individual\nselectable option information for the unit.\n\n- Examples of Options\n  - selectable options\n    - Computer: CPU, RAM, SSD, etc.\n    - Clothes: size, color, style, etc.\n  - descriptive options\n    - Engrave\n    - Simple question\n\nIf the {@link variable} property value is `true`, the final stock that the\n{@link IShoppingCustomer customer} will purchase changes depending on the\nselection of the {@link IShoppingSaleUnitOptionCandidate candidate value}.\n\nConversely, if it is a type other than \"select\", or if the {@link variable}\nproperty value is \"false\", , this is an option that has no meaning beyond\nsimple information transfer. Therefore, no matter what value the customer\nchooses when purchasing it, the option in this case does not affect the\n{@link IShoppingSaleUnitStock final stock}."
                    },
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "title": "Primary Key",
                          "description": "Primary Key.",
                          "type": "string",
                          "format": "uuid"
                        },
                        "type": {
                          "title": "Type of descriptive option",
                          "description": "Type of descriptive option.\n\nWhich typed value should be written when purchasing.",
                          "oneOf": [
                            {
                              "const": "string"
                            },
                            {
                              "const": "number"
                            },
                            {
                              "const": "boolean"
                            }
                          ]
                        },
                        "name": {
                          "title": "Readable name of the option",
                          "description": "Readable name of the option.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type",
                        "name"
                      ],
                      "description": "Descriptive option.\n\nWhen type of the option not `\"select\"`, it means the option is descriptive\nthat requiring {@link IShoppingCustomer customers} to write some value to\n{@link IShoppingOrder purchase}. Also, whatever customer writes about the\noption, it does not affect the {@link IShoppingSaleUnitStock final stock}.\n\nAnother words, the descriptive option is just for information transfer."
                    }
                  ]
                }
              },
              "stocks": {
                "title": "List of final stocks",
                "description": "List of final stocks.",
                "type": "array",
                "items": {
                  "description": "Final component information on units for sale.\n\n`IShoppingSaleUnitStock` is a subsidiary entity of {@link IShoppingSaleUnit}\nthat represents a product catalog for sale, and is a kind of final stock that is\nconstructed by selecting all {@link IShoppingSaleUnitSelectableOption options}\n(variable \"select\" type) and their\n{@link IShoppingSaleUnitOptionCandidate candidate} values in the belonging unit.\nIt is the \"good\" itself that customers actually purchase.\n\n- Product Name) MacBook\n  - Options\n    - CPU: { i3, i5, i7, i9 }\n    - RAM: { 8GB, 16GB, 32GB, 64GB, 96GB }\n    - SSD: { 256GB, 512GB, 1TB }\n  - Number of final stocks: 4 * 5 * 3 = 60\n\nFor reference, the total number of `IShoppingSaleUnitStock` records in an\nattribution unit can be obtained using Cartesian Product. In other words, the\nvalue obtained by multiplying all the candidate values that each\n(variable \"select\" type) option can have by the number of cases is the total\nnumber of final stocks in the unit.\n\nOf course, without a single variable \"select\" type option, the final stocks\ncount in the unit is only 1.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "Primary Key",
                      "description": "Primary Key.",
                      "type": "string",
                      "format": "uuid"
                    },
                    "name": {
                      "title": "Representative name of the stock",
                      "description": "Representative name of the stock.",
                      "type": "string"
                    },
                    "price": {
                      "title": "Price of the stock",
                      "description": "Shopping price interface.",
                      "type": "object",
                      "properties": {
                        "nominal": {
                          "title": "Nominal price",
                          "description": "Nominal price.\n\nThis is not {@link real real price} to pay, but just a nominal price to show.\nIf this value is greater than the {@link real real price}, it would be shown\nlike {@link IShoppingSeller seller} is giving a discount.",
                          "type": "number",
                          "minimum": 0
                        },
                        "real": {
                          "title": "Real price to pay",
                          "description": "Real price to pay.",
                          "type": "number",
                          "minimum": 0
                        }
                      },
                      "required": [
                        "nominal",
                        "real"
                      ]
                    },
                    "inventory": {
                      "title": "Current inventory status of the stock",
                      "description": "Inventory information of a final stock.",
                      "type": "object",
                      "properties": {
                        "income": {
                          "title": "Total income quantity",
                          "description": "Total income quantity.",
                          "type": "integer"
                        },
                        "outcome": {
                          "title": "Total outcome quantity",
                          "description": "Total outcome quantity.",
                          "type": "integer"
                        }
                      },
                      "required": [
                        "income",
                        "outcome"
                      ]
                    },
                    "choices": {
                      "title": "List of choices",
                      "description": "List of choices.\n\nWhich candidate values being chosen for each option.",
                      "type": "array",
                      "items": {
                        "description": "Selection information of final stock.\n\n`IShoppingSaleUnitStockChoice` is an entity that represents which\n{@link IShoppingSaleUnitSelectableOption option} of each variable \"select\"\ntype was selected for each {@link IShoppingSaleUnitStock stock} and which\n{@link IShoppingSaleUnitOptionCandidate candidate value} was selected within\nit.\n\nOf course, if the bound {@link IShoppingSaleUnit unit} does not have any\noptions, this entity can also be ignored.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "title": "Primary Key",
                            "description": "Primary Key.",
                            "type": "string",
                            "format": "uuid"
                          },
                          "option_id": {
                            "description": "Target option's {@link IShoppingSaleUnitOption.id}",
                            "type": "string",
                            "format": "uuid"
                          },
                          "candidate_id": {
                            "description": "Target candidate's {@link IShoppingSaleUnitOptionCandidate.id}",
                            "type": "string",
                            "format": "uuid"
                          }
                        },
                        "required": [
                          "id",
                          "option_id",
                          "candidate_id"
                        ]
                      }
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "price",
                    "inventory",
                    "choices"
                  ]
                },
                "minItems": 1
              },
              "id": {
                "title": "Primary Key",
                "description": "Primary Key.",
                "type": "string",
                "format": "uuid"
              },
              "name": {
                "title": "Representative name of the unit",
                "description": "Representative name of the unit.",
                "type": "string"
              },
              "primary": {
                "title": "Whether the unit is primary or not",
                "description": "Whether the unit is primary or not.\n\nJust a labeling value.",
                "type": "boolean"
              },
              "required": {
                "title": "Whether the unit is required or not",
                "description": "Whether the unit is required or not.\n\nWhen the unit is required, the customer must select the unit. If do not\nselect, customer can't buy it.\n\nFor example, if there's a sale \"Macbook Set\" and one of the unit is the\n\"Main Body\", is it possible to buy the \"Macbook Set\" without the\n\"Main Body\" unit? This property is for that case.",
                "type": "boolean"
              }
            },
            "required": [
              "options",
              "stocks",
              "id",
              "name",
              "primary",
              "required"
            ]
          },
          "minItems": 1
        },
        "created_at": {
          "title": "Creation time of the record",
          "description": "Creation time of the record.\n\nNote that, this property is different with {@link opened_at},\nwhich means the timepoint of the sale is opened.",
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "title": "Last updated time of the record",
          "description": "Last updated time of the record.\n\nIn another words, creation time of the last snapshot.",
          "type": "string",
          "format": "date-time"
        },
        "paused_at": {
          "title": "Paused time of the sale",
          "description": "Paused time of the sale.\n\nThe sale is paused by the seller, for some reason.\n\n{@link IShoppingCustomer Customers} can still see the sale on the\nboth list and detail pages, but the sale has a warning label\n\"The sale is paused by the seller\".",
          "oneOf": [
            {
              "type": "null"
            },
            {
              "type": "string",
              "format": "date-time"
            }
          ]
        },
        "suspended_at": {
          "title": "Suspended time of the sale",
          "description": "Suspended time of the sale.\n\nThe sale is suspended by the seller, for some reason.\n\n{@link IShoppingCustomer Customers} cannot see the sale on the\nboth list and detail pages. It is almost same with soft delettion,\nbut there's a little bit difference that the owner\n{@link IShoppingSeller seller} can still see the sale and resume it.\n\nOf course, the {@link IShoppingCustomer customers} who have\nalready purchased the sale can still see the sale on the\n{@link IShoppingOrder order} page.",
          "oneOf": [
            {
              "type": "null"
            },
            {
              "type": "string",
              "format": "date-time"
            }
          ]
        },
        "opened_at": {
          "title": "Opening time of the sale",
          "description": "Opening time of the sale.",
          "oneOf": [
            {
              "type": "null"
            },
            {
              "type": "string",
              "format": "date-time"
            }
          ]
        },
        "closed_at": {
          "title": "Closing time of the sale",
          "description": "Closing time of the sale.\n\nIf this value is `null`, the sale be continued forever.",
          "oneOf": [
            {
              "type": "null"
            },
            {
              "type": "string",
              "format": "date-time"
            }
          ]
        }
      },
      "required": [
        "section",
        "seller",
        "id",
        "snapshot_id",
        "latest",
        "content",
        "channels",
        "tags",
        "units",
        "created_at",
        "updated_at",
        "paused_at",
        "suspended_at",
        "opened_at",
        "closed_at"
      ]
    },
    "success": true,
    "arguments": {
      "type": {
        "host": "http://127.0.0.1:37001",
        "headers": {
          "Authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0YWJsZSI6InNob3BwaW5nX2N1c3RvbWVycyIsImlkIjoiMjVlYzg3ZjctODE1ZC00YjU3LTk1NzYtYzk1Mzk4NGJjMjhmIiwicmVhZG9ubHkiOmZhbHNlLCJleHBpcmVkX2F0IjoiMjAyNC0xMi0xM1QwOTo0MjoxMi41MzlaIiwicmVmcmVzaGFibGVfdW50aWwiOiIyMDI0LTEyLTI3VDA2OjQyOjEyLjUzOVoiLCJpYXQiOjE3MzQwNzIxMzJ9.zWZrU-d1bSW-MawmSo2RYRPk_73xtR_PxfFUrEpDJkc"
        }
      },
      "properties": "ef43459e-edb6-4b2c-bce5-c74cc815a4f4"
    },
    "value": {
      "section": {
        "id": "a01c572c-3199-4929-ac67-ba7c31b2c808",
        "code": "general",
        "name": "General",
        "created_at": "2024-12-13T06:42:11.124Z"
      },
      "seller": {
        "type": "seller",
        "member": {
          "id": "a853492c-70b4-487f-9648-0f6109a0ad69",
          "nickname": "Robot",
          "emails": [
            {
              "id": "81ea73c4-b41e-4022-9384-d51d3215797e",
              "value": "robot@nestia.io",
              "created_at": "2024-12-13T06:42:11.227Z"
            }
          ],
          "created_at": "2024-12-13T06:42:11.227Z"
        },
        "customer": {
          "id": "aeb8583b-8bd9-4d29-adea-78779b405046",
          "channel": {
            "id": "2323f4bd-21ad-45b7-ae3b-cadd84dcc935",
            "created_at": "2024-12-13T06:42:10.908Z",
            "code": "samchon",
            "name": "Samchon Shopping Mall"
          },
          "external_user": null,
          "href": "http://127.0.0.1/TestAutomation",
          "referrer": "http://127.0.0.1/NodeJS",
          "ip": "127.0.0.1",
          "created_at": "2024-12-13T06:42:11.258Z"
        },
        "citizen": {
          "id": "43aedfea-6b2c-4c18-9f69-60373c9580dd",
          "created_at": "2024-12-13T06:42:11.157Z",
          "mobile": "01012345678",
          "name": "Robot"
        },
        "id": "addccb32-ac48-460e-9624-d9809da19d99",
        "created_at": "2024-12-13T06:42:11.241Z"
      },
      "id": "ef43459e-edb6-4b2c-bce5-c74cc815a4f4",
      "snapshot_id": "e13727ff-a31b-4460-ab6f-72e1dd3e1e2c",
      "latest": true,
      "content": {
        "id": "f2a6a47e-f72c-44b6-88ac-27ebbfa1eed0",
        "title": "Stanley Tumbler Collection",
        "format": "md",
        "body": "The Stanley Tumbler Collection offers a range of versatile, durable, and stylish tumblers to suit every lifestyle. With customizable options and eco-friendly designs, these tumblers are the ideal choice for anyone looking to elevate their drinkware experience. Don’t miss this opportunity to grab your Stanley Tumbler today!\n\n### Product Description\n\n> The Stanley Tumbler Collection is the perfect companion for staying hydrated, whether you're at work, on the go, or exploring the great outdoors. Designed with functionality and durability in mind, these tumblers are built to keep your drinks at the perfect temperature all day long.\n> \n> - **\"Built for Adventure\"**: The Stanley Tumbler features rugged construction, making it ideal for outdoor enthusiasts and urban adventurers alike.\n> - **\"Temperature Control at Its Best\"**: With double-wall vacuum insulation, the Stanley Tumbler keeps drinks hot for up to 7 hours or cold for up to 11 hours.\n> - **\"Leakproof and Spillproof\"**: Designed for ease of use, these tumblers are 100% leakproof, ensuring your drink stays exactly where it belongs.\n> - **\"Eco-Friendly and Sustainable\"**: Made with 18/8 stainless steel, Stanley Tumblers are BPA-free and built to last, reducing waste from disposable cups.\n> \n> In summary, the Stanley Tumbler Collection combines durability, functionality, and style. Whether you're sipping coffee during your morning commute or staying hydrated during a hike, Stanley Tumblers are designed to meet your needs. Choose Stanley and enjoy unmatched quality and performance.\n",
        "files": [],
        "thumbnails": [
          {
            "id": "c47319f2-bd60-49f5-8703-773a593e0775",
            "created_at": "2024-12-13T06:42:12.111Z",
            "name": "stanley-tumbler-collection-thumbnail",
            "extension": "jpeg",
            "url": "https://serpapi.com/searches/673d71322c566d56d9c20ceb/images/ce9a07f2aa831dbec8bb1c287299706e24a52a8e0c119fa162041805038957a7.jpeg"
          }
        ]
      },
      "channels": [
        {
          "categories": [
            {
              "parent": null,
              "id": "19f9099e-3a2f-4894-a2c7-36d8c2d7d9d7",
              "code": "accessories",
              "parent_id": null,
              "name": "Accessories",
              "created_at": "2024-12-13T06:42:11.060Z"
            },
            {
              "parent": null,
              "id": "e82fb84b-d443-441b-a140-9f45bd73e0ca",
              "code": "others",
              "parent_id": null,
              "name": "Others",
              "created_at": "2024-12-13T06:42:11.116Z"
            }
          ],
          "id": "2323f4bd-21ad-45b7-ae3b-cadd84dcc935",
          "created_at": "2024-12-13T06:42:10.908Z",
          "code": "samchon",
          "name": "Samchon Shopping Mall"
        }
      ],
      "tags": [
        "Stanley",
        "Tumbler",
        "Drinkware",
        "Eco-Friendly"
      ],
      "units": [
        {
          "options": [
            {
              "candidates": [
                {
                  "id": "27afd6e9-c6fe-468b-bb81-30e73e60a66d",
                  "name": "16 oz"
                },
                {
                  "id": "e2620d76-2be4-4d7d-99cb-3b411a89d851",
                  "name": "20 oz"
                },
                {
                  "id": "2242ef1f-aff2-432a-8ff3-2de6e155f039",
                  "name": "24 oz"
                }
              ],
              "id": "ecc25b78-a2e7-456a-a9e9-a0628855d2ff",
              "type": "select",
              "name": "Capacity",
              "variable": true
            },
            {
              "candidates": [
                {
                  "id": "951eb620-4077-49b4-9d7a-364882d7e0fb",
                  "name": "Matte Black"
                },
                {
                  "id": "33fc5dff-ace2-4fe4-98c1-c26a0055b373",
                  "name": "Hammertone Green"
                },
                {
                  "id": "34d16f7d-c322-42a4-b3fd-053aa28ea199",
                  "name": "Polar White"
                }
              ],
              "id": "377c03e7-3da2-4082-a3a3-db735247ef58",
              "type": "select",
              "name": "Color",
              "variable": true
            }
          ],
          "stocks": [
            {
              "id": "7eba88c5-40d7-4df7-a03b-fccbbee3f2dc",
              "name": "Classic Tumbler - 16 oz Matte Black",
              "price": {
                "nominal": 40000,
                "real": 35000
              },
              "inventory": {
                "income": 2000,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "38c389f3-d00d-4fcd-accf-5da26e267557",
                  "option_id": "ecc25b78-a2e7-456a-a9e9-a0628855d2ff",
                  "candidate_id": "27afd6e9-c6fe-468b-bb81-30e73e60a66d"
                },
                {
                  "id": "42c3b302-3112-4ea9-aa0e-94ce7c81075e",
                  "option_id": "377c03e7-3da2-4082-a3a3-db735247ef58",
                  "candidate_id": "951eb620-4077-49b4-9d7a-364882d7e0fb"
                }
              ]
            },
            {
              "id": "7134fca1-d0fb-4e31-b825-ff7086ad2934",
              "name": "Classic Tumbler - 20 oz Hammertone Green",
              "price": {
                "nominal": 50000,
                "real": 44000
              },
              "inventory": {
                "income": 2000,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "ff37c27e-872a-4540-831b-83a0162f4518",
                  "option_id": "ecc25b78-a2e7-456a-a9e9-a0628855d2ff",
                  "candidate_id": "e2620d76-2be4-4d7d-99cb-3b411a89d851"
                },
                {
                  "id": "62965dbe-0e95-4937-9355-80e3ccd82c11",
                  "option_id": "377c03e7-3da2-4082-a3a3-db735247ef58",
                  "candidate_id": "33fc5dff-ace2-4fe4-98c1-c26a0055b373"
                }
              ]
            },
            {
              "id": "6711956d-8aec-488f-b5ce-bfb060c262b3",
              "name": "Classic Tumbler - 24 oz Polar White",
              "price": {
                "nominal": 60000,
                "real": 54000
              },
              "inventory": {
                "income": 2000,
                "outcome": 0
              },
              "choices": [
                {
                  "id": "a8d9357d-79a8-4bcd-84fe-1d037451dbc5",
                  "option_id": "ecc25b78-a2e7-456a-a9e9-a0628855d2ff",
                  "candidate_id": "2242ef1f-aff2-432a-8ff3-2de6e155f039"
                },
                {
                  "id": "29e2412b-97d7-4fe2-8f54-0aa058b6e4b1",
                  "option_id": "377c03e7-3da2-4082-a3a3-db735247ef58",
                  "candidate_id": "34d16f7d-c322-42a4-b3fd-053aa28ea199"
                }
              ]
            }
          ],
          "id": "496ed199-3bf8-4de6-a38e-faf9267de621",
          "name": "Classic Tumbler",
          "primary": true,
          "required": true
        },
        {
          "options": [],
          "stocks": [
            {
              "id": "9810c724-f965-4e06-87cd-971a5f4788c3",
              "name": "Adventure Quencher Tumbler",
              "price": {
                "nominal": 70000,
                "real": 64000
              },
              "inventory": {
                "income": 5000,
                "outcome": 0
              },
              "choices": []
            }
          ],
          "id": "36a2127c-9ed2-4adb-a116-1de93f7fb1ce",
          "name": "Adventure Quencher Tumbler",
          "primary": false,
          "required": false
        },
        {
          "options": [],
          "stocks": [
            {
              "id": "c42c4acb-d77f-4b4c-8d5c-3d78532271f7",
              "name": "Accessories Set",
              "price": {
                "nominal": 20000,
                "real": 18000
              },
              "inventory": {
                "income": 10000,
                "outcome": 0
              },
              "choices": []
            }
          ],
          "id": "6aa653da-6ec2-4c9f-83a1-3e63958ef0d8",
          "name": "Accessories Set",
          "primary": false,
          "required": false
        }
      ],
      "created_at": "2024-12-13T06:42:12.111Z",
      "updated_at": "2024-12-13T06:42:12.111Z",
      "paused_at": null,
      "suspended_at": null,
      "opened_at": "2024-12-13T06:42:12.108Z",
      "closed_at": null
    }
  },
  {
    "name": "shoppings_customers_carts_commodities_post",
    "method": "post",
    "path": "/shoppings/customers/carts/commodities",
    "description": "Create a new commodity.\n\nCreate a new {@link IShoppingCartCommodity commodity} into a specific\nshopping cart.\n\nIf {@link IShoppingCartCommodity.ICreate.accumulate} has `true` value\nand there's some same commodity that composed with same\n{@link IShoppingSaleUnitStock.IInvert stocks and quantities},\nthen new commodity would not be created but the volume would be accumulated.\n\nBy the way, if the target {@link IShoppingSale sale} has been suspended or\n{@link IShoppingSaleUnitStockInventory out of stock}, then 410 gone error\nwould be thrown. Therefore, it would better to check the target sale and\n{@link IShoppingSaleUnitStock stock}'s status before.",
    "parameters": {
      "type": "object",
      "properties": {
        "body": {
          "description": "Creation information of a shopping cart commodity.\n\n------------------------------\n\nDescription of the current {@link IShoppingCartCommodity.ICreate} type:\n\n> Creation information of a shopping cart commodity.\n\n------------------------------\n\nDescription of the parent {@link IShoppingCartCommodity} type:\n\n> Item in a shopping cart.\n> \n> `IShoppingCartCommodity` is an entity that represents a\n> {@link IShoppingSaleSnapshot snapshot} of the items that\n> {@link IShoppingCustomer customer} has placed into his shopping cart with a\n> {@link IShoppingOrder purchase} in mind. And if the customer continues this\n> into an actual order in the future, `IShoppingCartCommodity` be changed to\n> {@link IShoppingOrderGood}.\n> \n> And while adding a sale snapshot to the shopping cart, the customer inevitably\n> selects specific {@link IShoppingSaleUnit units} and\n> {@link IShoppingSaleUnitStock final stocks} within the listing snapshot.\n> Information about these units and stocks is recorded in the subsidiary entity\n> {@link IShoppingCartCommodityStock}. Also, there is an attribute {@link volume}\n> that indicates how many sets of snapshots of the target commodity will be\n> purchased. This \"volume\" is a value that will be multiplied by\n> {@link IShoppingSaleUnitStock.IInvert.quantity}, the quantity for each\n> component.",
          "type": "object",
          "properties": {
            "sale_id": {
              "title": "Target sale's {@link IShoppingSale.id}",
              "description": "Target sale's {@link IShoppingSale.id}.",
              "type": "string",
              "format": "uuid"
            },
            "stocks": {
              "title": "List of the stocks to be purchased",
              "description": "List of the stocks to be purchased.",
              "type": "array",
              "items": {
                "description": "Creation information of the commodity stock of shopping cart.\n\nWhen record being created, its corresponding structure would be\n{@link IShoppingSaleSnapshotUnit.IInvert} and\n{@link IShoppingSaleSnapshotUnitStock.IInvert}.\n\n------------------------------\n\nDescription of the current {@link IShoppingCartCommodityStock.ICreate} type:\n\n> Creation information of the commodity stock of shopping cart.\n> \n> When record being created, its corresponding structure would be\n> {@link IShoppingSaleSnapshotUnit.IInvert} and\n> {@link IShoppingSaleSnapshotUnitStock.IInvert}.",
                "type": "object",
                "properties": {
                  "unit_id": {
                    "title": "Target unit's {@link IShoppingSaleUnit.id}",
                    "description": "Target unit's {@link IShoppingSaleUnit.id}.",
                    "type": "string",
                    "format": "uuid"
                  },
                  "stock_id": {
                    "title": "Target stock's {@link IShoppingSaleUnitStock.id}",
                    "description": "Target stock's {@link IShoppingSaleUnitStock.id}.\n\nIt must be matched with the {@link choices} property.",
                    "type": "string",
                    "format": "uuid"
                  },
                  "choices": {
                    "title": "Creation information of the choices for each option",
                    "description": "Creation information of the choices for each option.",
                    "type": "array",
                    "items": {
                      "description": "Creation information of the choice for each option.\n\nWhen record being created, its corresponding structure would be\n{@link IShoppingSaleUnitStockChoice.IInvert}.\n\n------------------------------\n\nDescription of the current {@link IShoppingCartCommodityStockChoice.ICreate} type:\n\n> Creation information of the choice for each option.\n> \n> When record being created, its corresponding structure would be\n> {@link IShoppingSaleUnitStockChoice.IInvert}.",
                      "type": "object",
                      "properties": {
                        "option_id": {
                          "title": "Target option's {@link IShoppingSaleUnitOption.id}",
                          "description": "Target option's {@link IShoppingSaleUnitOption.id}.",
                          "type": "string",
                          "format": "uuid"
                        },
                        "candidate_id": {
                          "title": "Target candidate's {@link IShoppingSaleUnitOptionCandidate.id}",
                          "description": "Target candidate's {@link IShoppingSaleUnitOptionCandidate.id}.\n\nWhen target option's type is `select`, then this attribute is not\n`null` but has a value.",
                          "oneOf": [
                            {
                              "type": "null"
                            },
                            {
                              "type": "string",
                              "format": "uuid"
                            }
                          ]
                        },
                        "value": {
                          "title": "Written value about the option",
                          "description": "Written value about the option.\n\nWhen target option's type is not `select`, but an atomic type value\nlike `boolean`, `number` or `string`, then this attribute is not\n`null` but has the matched atomic value.",
                          "oneOf": [
                            {
                              "type": "null"
                            },
                            {
                              "type": "string"
                            },
                            {
                              "type": "number"
                            },
                            {
                              "type": "boolean"
                            }
                          ]
                        }
                      },
                      "required": [
                        "option_id",
                        "candidate_id",
                        "value"
                      ]
                    }
                  },
                  "quantity": {
                    "title": "Quantity of the stock to purchase",
                    "description": "Quantity of the stock to purchase.\n\nThis value is multiplied by the {@link IShoppingCartCommodity.volume}.",
                    "type": "integer",
                    "minimum": 1
                  }
                },
                "required": [
                  "unit_id",
                  "stock_id",
                  "choices",
                  "quantity"
                ]
              },
              "minItems": 1
            },
            "volume": {
              "title": "Volume of the commodity to purchase",
              "description": "Volume of the commodity to purchase.\n\nA value indicating how many sets would be multiplied to the children\n{@link IShoppingSaleUnitStock.IInvert.quantity} values.",
              "type": "integer",
              "minimum": 1
            },
            "accumulate": {
              "title": "Whether to accumulate the volume or not",
              "description": "Whether to accumulate the volume or not.\n\nIf this attribute is not `false` and there's same commodity that\ncomposed with same stocks and options, then the volume will be\naccumulated to the existed one.\n\nOtherwise, duplicated commodity would be newly created.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "boolean"
                }
              ]
            }
          },
          "required": [
            "sale_id",
            "stocks",
            "volume",
            "accumulate"
          ]
        }
      },
      "additionalProperties": false,
      "required": [
        "body"
      ],
      "$defs": {
        "IShoppingChannelCategory.IInvert": {
          "description": "Invert category information with parent category.",
          "type": "object",
          "properties": {
            "parent": {
              "title": "Parent category info with recursive structure",
              "description": "Parent category info with recursive structure.\n\nIf no parent exists, then be `null`.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "$ref": "#/$defs/IShoppingChannelCategory.IInvert"
                }
              ]
            },
            "id": {
              "title": "Primary Key",
              "description": "Primary Key.",
              "type": "string",
              "format": "uuid"
            },
            "code": {
              "title": "Identifier code of the category",
              "description": "Identifier code of the category.\n\nThe code must be unique in the channel.",
              "type": "string"
            },
            "parent_id": {
              "title": "Parent category's ID",
              "description": "Parent category's ID.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "name": {
              "title": "Representative name of the category",
              "description": "Representative name of the category.\n\nThe name must be unique within the parent category. If no parent exists,\nthen the name must be unique within the channel between no parent\ncategories.",
              "type": "string"
            },
            "created_at": {
              "title": "Creation time of record",
              "description": "Creation time of record.",
              "type": "string",
              "format": "date-time"
            }
          },
          "required": [
            "parent",
            "id",
            "code",
            "parent_id",
            "name",
            "created_at"
          ]
        }
      }
    },
    "output": {
      "description": "Item in a shopping cart.\n\n`IShoppingCartCommodity` is an entity that represents a\n{@link IShoppingSaleSnapshot snapshot} of the items that\n{@link IShoppingCustomer customer} has placed into his shopping cart with a\n{@link IShoppingOrder purchase} in mind. And if the customer continues this\ninto an actual order in the future, `IShoppingCartCommodity` be changed to\n{@link IShoppingOrderGood}.\n\nAnd while adding a sale snapshot to the shopping cart, the customer inevitably\nselects specific {@link IShoppingSaleUnit units} and\n{@link IShoppingSaleUnitStock final stocks} within the listing snapshot.\nInformation about these units and stocks is recorded in the subsidiary entity\n{@link IShoppingCartCommodityStock}. Also, there is an attribute {@link volume}\nthat indicates how many sets of snapshots of the target commodity will be\npurchased. This \"volume\" is a value that will be multiplied by\n{@link IShoppingSaleUnitStock.IInvert.quantity}, the quantity for each\ncomponent.",
      "type": "object",
      "properties": {
        "id": {
          "title": "Primary Key",
          "description": "Primary Key.",
          "type": "string",
          "format": "uuid"
        },
        "sale": {
          "title": "Invert information of the sale (snapshot), in the perspective of commodity",
          "description": "Invert information of the sale snapshot, in the perspective of commodity.\n\n`IShoppingSaleSnapshot.IInvert` is a structure used to represent a\nsnapshot in the perspective of a {@link IShoppingCommodity}, corresponding\nto an {@link IShoppingCartCommodityStock} entity.\n\nTherefore, `IShoppingSaleSnapshot.IInvert` does not contain every\n{@link IShoppingSaleUnit units} and {@link IShoppingSaleUnitStock stocks}\nof the snapshot records, but only some of the records which are put\ninto the {@link IShoppingCartCommodity shopping cart}.\n\n------------------------------\n\nDescription of the current {@link IShoppingSaleSnapshot.IInvert} type:\n\n> Invert information of the sale snapshot, in the perspective of commodity.\n> \n> `IShoppingSaleSnapshot.IInvert` is a structure used to represent a\n> snapshot in the perspective of a {@link IShoppingCommodity}, corresponding\n> to an {@link IShoppingCartCommodityStock} entity.\n> \n> Therefore, `IShoppingSaleSnapshot.IInvert` does not contain every\n> {@link IShoppingSaleUnit units} and {@link IShoppingSaleUnitStock stocks}\n> of the snapshot records, but only some of the records which are put\n> into the {@link IShoppingCartCommodity shopping cart}.\n\n------------------------------\n\nDescription of the parent {@link IShoppingSaleSnapshot} type:\n\n> Snapshot record of sale.\n> \n> `IShoppingSaleSnapshot` is an entity that embodies a snapshot of a sale,\n> and the ERD (Entity Relationship Diagram) describes the role of the\n> `shopping_sale_snapshots` table as follows:\n> \n> > {@link IShoppingSale shopping_sales} is an entity that embodies\n> > \"product sales\" (sales) information registered by the\n> > {@link IShoppingSeller seller}. And the main information of the sale is\n> > recorded in the sub `shopping_sale_snapshots`, not in the main\n> > {@link IShoppingSale shopping_sales}. When a seller changes a previously\n> > registered item, the existing {@link IShoppingSale shopping_sales} record\n> > is not changed, but a new snapshot record is created.\n> >\n> > This is to preserve the {@link IShoppingCustomer customer}'s\n> > {@link IShoppingOrder purchase history} flawlessly after the customer\n> > purchases a specific item, even if the seller changes the components or price\n> > of the item. It is also intended to support sellers in so-called A/B testing,\n> > which involves changing components or prices and measuring the performance\n> > in each case.\n> \n> By the way, DTO (Data Transfer Object) level used by the front-end developer,\n> it does not distinguish {@link IShoppingSale} and `IShoppingSaleSnapshot`\n> strictly, and generally handles {@link IShoppingSale} and snapshot together.\n> \n> But even though the DTO level does not strictly distinguish them, the word and\n> concept of \"snapshot\" is still important, so it is recommended to understand\n> the concept of \"snapshot\" properly.",
          "type": "object",
          "properties": {
            "section": {
              "title": "Belonged section's information",
              "description": "Section information.\n\n`IShoppingSection` is a concept that refers to the spatial information of\nthe market.\n\nIf we compare the section mentioned here to the offline market, it means a\nspatially separated area within the store, such as the \"fruit corner\" or\n\"butcher corner\". Therefore, in the {@link IShoppingSale sale} entity, it is\nnot possible to classify multiple sections simultaneously, but only one section\ncan be classified.\n\nBy the way, if your shopping mall system requires only one section, then just\nuse only one. This concept is designed to be expandable in the future.",
              "type": "object",
              "properties": {
                "id": {
                  "title": "Primary Key",
                  "description": "Primary Key.",
                  "type": "string",
                  "format": "uuid"
                },
                "code": {
                  "title": "Identifier code",
                  "description": "Identifier code.",
                  "type": "string"
                },
                "name": {
                  "title": "Representative name of the section",
                  "description": "Representative name of the section.",
                  "type": "string"
                },
                "created_at": {
                  "title": "Creation time of record",
                  "description": "Creation time of record.",
                  "type": "string",
                  "format": "date-time"
                }
              },
              "required": [
                "id",
                "code",
                "name",
                "created_at"
              ]
            },
            "seller": {
              "title": "Seller who've registered the sale",
              "description": "Invert information starting from seller info.\n\nInstead of accessing to the seller information from the\n{@link IShoppingCustomer.member} -> {@link IShoppingMember.seller},\n`IShoppingSeller.IInvert` starts from the seller information\nand access to the customer, member and {@link IShoppingCitizen citizen}\ninformation inversely.\n\n------------------------------\n\nDescription of the current {@link IShoppingSeller.IInvert} type:\n\n> Invert information starting from seller info.\n> \n> Instead of accessing to the seller information from the\n> {@link IShoppingCustomer.member} -> {@link IShoppingMember.seller},\n> `IShoppingSeller.IInvert` starts from the seller information\n> and access to the customer, member and {@link IShoppingCitizen citizen}\n> information inversely.\n\n------------------------------\n\nDescription of the parent {@link IShoppingSeller} type:\n\n> Seller information.\n> \n> `IShoppingSeller` is an entity that embodies a person who registers\n> {@link IShoppingSale sales} to operate selling activities, with\n> {@link IShoppingMember membership} joining.\n> \n> For reference, unlike {@link IShoppingCustomer customers} which can\n> participate even without membership joining, seller must join membership\n> to operate sales. Also, seller must do the\n> {@link IShoppingCitizen real-name and mobile authentication}, too.",
              "type": "object",
              "properties": {
                "type": {
                  "title": "Discriminant for the type of customer",
                  "description": "Discriminant for the type of customer.",
                  "const": "seller"
                },
                "member": {
                  "title": "Membership joining information",
                  "description": "Invert information of member.\n\nThis invert member information has been designed to be used for another\ninvert information of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert}\n- {@link IShoppingAdministrator.IInvert}\n\n------------------------------\n\nDescription of the current {@link IShoppingMember.IInvert} type:\n\n> Invert information of member.\n> \n> This invert member information has been designed to be used for another\n> invert information of sellers and administrators like below.\n> \n> - {@link IShoppingSeller.IInvert}\n> - {@link IShoppingAdministrator.IInvert}\n\n------------------------------\n\nDescription of the parent {@link IShoppingMember} type:\n\n> Member Account.\n> \n> `IShoppingMember` is an entity that symbolizes the case when a\n> {@link IShoppingCustomer} signs up as a member of this shopping mall\n> system.\n> \n> If a `IShoppingMember` has seller or administrator property. it means that\n> the {@link IShoppingCustomer} has acting as a {@link IShoppingSeller seller}\n> or {@link IShoppingAdministrator administrator} at the same time.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "Primary Key",
                      "description": "Primary Key.",
                      "type": "string",
                      "format": "uuid"
                    },
                    "nickname": {
                      "title": "Nickname that uniquely identifies the member",
                      "description": "Nickname that uniquely identifies the member.",
                      "type": "string"
                    },
                    "emails": {
                      "title": "List of emails",
                      "description": "List of emails.",
                      "type": "array",
                      "items": {
                        "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "title": "Primary Key",
                            "description": "Primary Key.",
                            "type": "string",
                            "format": "uuid"
                          },
                          "value": {
                            "title": "Email address value",
                            "description": "Email address value.",
                            "type": "string",
                            "format": "email"
                          },
                          "created_at": {
                            "title": "Creation time of record",
                            "description": "Creation time of record.",
                            "type": "string",
                            "format": "date-time"
                          }
                        },
                        "required": [
                          "id",
                          "value",
                          "created_at"
                        ]
                      }
                    },
                    "created_at": {
                      "title": "Creation time of record",
                      "description": "Creation time of record.\n\nAnother words, the time when the member has signed up.",
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "required": [
                    "id",
                    "nickname",
                    "emails",
                    "created_at"
                  ]
                },
                "customer": {
                  "title": "Customer, the connection information",
                  "description": "Inverted customer informatino.\n\nThis inverted customer information has been designed to be used for\nanother invert information of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert}\n- {@link IShoppingAdministrator.IInvert}\n\n------------------------------\n\nDescription of the current {@link IShoppingCustomer.IInvert} type:\n\n> Inverted customer informatino.\n> \n> This inverted customer information has been designed to be used for\n> another invert information of sellers and administrators like below.\n> \n> - {@link IShoppingSeller.IInvert}\n> - {@link IShoppingAdministrator.IInvert}\n\n------------------------------\n\nDescription of the parent {@link IShoppingCustomer} type:\n\n> Customer information, but not a person but a connection basis.\n> \n> `IShoppingCustomer` is an entity that literally embodies the information of\n> those who participated in the market as customers. By the way, the\n> `IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\n> even if the same person connects to the shopping mall multiple, multiple\n> records are created in `IShoppingCustomer`.\n> \n> The first purpose of this is to track the customer's inflow path in detail,\n> and it is for cases where the same person enters as a non-member,\n> {@link IShoppingCartCommodity puts items in the shopping cart} in advance,\n> and only authenticates their {@link IShoppingCitizen real name} or\n> registers/logs in at the moment of {@link IShoppingOrderPublish payment}.\n> It is the second. Lastly, it is to accurately track the activities that\n> a person performs at the shopping mall in various ways like below.\n> \n> - Same person comes from an {@link IShoppingExternalUser external service}\n> - Same person creates multiple accounts\n> - Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n> - Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n> \n> Therefore, `IShoppingCustomer` can have multiple records with the same\n> {@link IShoppingCitizen}, {@link IShoppingMember}, and\n> {@link IShoppingExternalUser}. Additionally, if a customer signs up for\n> membership after verifying their real name or signs up for our service after\n> being a user of an external service, all related records are changed at once.\n> Therefore, identification and tracking of customers can be done very\n> systematically.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "Primary Key",
                      "description": "Primary Key.",
                      "type": "string",
                      "format": "uuid"
                    },
                    "channel": {
                      "title": "Belonged channel",
                      "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "title": "Primary Key",
                          "description": "Primary Key.",
                          "type": "string",
                          "format": "uuid"
                        },
                        "created_at": {
                          "title": "Creation time of record",
                          "description": "Creation time of record.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "code": {
                          "title": "Identifier code",
                          "description": "Identifier code.",
                          "type": "string"
                        },
                        "name": {
                          "title": "Name of the channel",
                          "description": "Name of the channel.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "created_at",
                        "code",
                        "name"
                      ]
                    },
                    "external_user": {
                      "title": "External user information",
                      "description": "External user information.\n\nWhen the customer has come frome an external service.",
                      "oneOf": [
                        {
                          "type": "null"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "title": "Primary Key",
                              "description": "Primary Key.",
                              "type": "string",
                              "format": "uuid"
                            },
                            "citizen": {
                              "title": "Citizen activation info",
                              "description": "Citizen activation info.",
                              "oneOf": [
                                {
                                  "type": "null"
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "title": "Primary Key",
                                      "description": "Primary Key.",
                                      "type": "string",
                                      "format": "uuid"
                                    },
                                    "created_at": {
                                      "title": "Creation time of record",
                                      "description": "Creation time of record.",
                                      "type": "string",
                                      "format": "date-time"
                                    },
                                    "mobile": {
                                      "title": "Mobile number",
                                      "description": "Mobile number.",
                                      "x-wrtn-payment-order-mobile": true,
                                      "type": "string",
                                      "pattern": "^[0-9]*$"
                                    },
                                    "name": {
                                      "title": "Real name, or equivalent nickname",
                                      "description": "Real name, or equivalent nickname.",
                                      "x-wrtn-payment-order-citizen": true,
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "created_at",
                                    "mobile",
                                    "name"
                                  ],
                                  "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile} input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                                }
                              ]
                            },
                            "created_at": {
                              "title": "Creation time of record",
                              "description": "Creation time of record.\n\nAnother word, first time when the external user connected.",
                              "type": "string",
                              "format": "date-time"
                            },
                            "uid": {
                              "title": "Identifier key of external user from the external system",
                              "description": "Identifier key of external user from the external system.",
                              "type": "string"
                            },
                            "application": {
                              "title": "Identifier code of the external service",
                              "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code} in common.",
                              "type": "string"
                            },
                            "nickname": {
                              "title": "Nickname of external user in the external system",
                              "description": "Nickname of external user in the external system.",
                              "type": "string"
                            },
                            "data": {
                              "description": "Additional information about external user from the external\nsystem."
                            }
                          },
                          "required": [
                            "id",
                            "citizen",
                            "created_at",
                            "uid",
                            "application",
                            "nickname",
                            "data"
                          ],
                          "description": "External user information.\n\n`IShoppingExternalUser` is an entity dsigned for when this system needs\nto connect with external services and welcome their users as\n{@link IShoppingCustomer customers} of this service.\n\nFor reference, customers who connect from an external service must have\nthis record, and the external service user is identified through the two\nattributes {@link application} and {@link uid}. If a customer connected\nfrom an external service completes\n{@link IShoppingCitizen real-name authentication} from this service, each\ntime the external service user reconnects to this service and issues a\nnew customer authentication token, real-name authentication begins with\ncompleted.\n\nAnd {@link password} is the password issued to the user by the external\nservice system (the so-called permanent user authentication token), and\nis never the actual user password. However, for customers who entered the\nsame application and uid as the current external system user, this is to\ndetermine whether to view this as a correct external system user or a\nviolation.\n\nIn addition, additional information received from external services can\nbe recorded in the data field in JSON format."
                        }
                      ]
                    },
                    "href": {
                      "title": "Connection address",
                      "description": "Connection address.\n\nSame with {@link window.location.href} of client.",
                      "type": "string",
                      "format": "uri"
                    },
                    "referrer": {
                      "title": "Referrer address",
                      "description": "Referrer address.\n\nSame with {@link window.document.referrer} of client.",
                      "oneOf": [
                        {
                          "type": "null"
                        },
                        {
                          "type": "string",
                          "format": "uri"
                        },
                        {
                          "type": "string",
                          "maxLength": 0
                        }
                      ]
                    },
                    "ip": {
                      "title": "Connection IP Address",
                      "description": "Connection IP Address.",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "ipv4"
                        },
                        {
                          "type": "string",
                          "format": "ipv6"
                        }
                      ]
                    },
                    "created_at": {
                      "title": "Creation time of the connection record",
                      "description": "Creation time of the connection record.",
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "required": [
                    "id",
                    "channel",
                    "external_user",
                    "href",
                    "referrer",
                    "ip",
                    "created_at"
                  ]
                },
                "citizen": {
                  "title": "Real-name and mobile number authentication information",
                  "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile} input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "Primary Key",
                      "description": "Primary Key.",
                      "type": "string",
                      "format": "uuid"
                    },
                    "created_at": {
                      "title": "Creation time of record",
                      "description": "Creation time of record.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "mobile": {
                      "title": "Mobile number",
                      "description": "Mobile number.",
                      "x-wrtn-payment-order-mobile": true,
                      "type": "string",
                      "pattern": "^[0-9]*$"
                    },
                    "name": {
                      "title": "Real name, or equivalent nickname",
                      "description": "Real name, or equivalent nickname.",
                      "x-wrtn-payment-order-citizen": true,
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "created_at",
                    "mobile",
                    "name"
                  ]
                },
                "id": {
                  "title": "Primary Key",
                  "description": "Primary Key.",
                  "type": "string",
                  "format": "uuid"
                },
                "created_at": {
                  "title": "Creation tmie of record",
                  "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up.",
                  "type": "string",
                  "format": "date-time"
                }
              },
              "required": [
                "type",
                "member",
                "customer",
                "citizen",
                "id",
                "created_at"
              ]
            },
            "id": {
              "title": "Primary Key of Sale",
              "description": "Primary Key of Sale.",
              "type": "string",
              "format": "uuid"
            },
            "snapshot_id": {
              "title": "Primary Key of Snapshot",
              "description": "Primary Key of Snapshot.",
              "type": "string",
              "format": "uuid"
            },
            "latest": {
              "title": "Whether the snapshot is the latest one or not",
              "description": "Whether the snapshot is the latest one or not.",
              "type": "boolean"
            },
            "content": {
              "title": "Description and image content describing the sale",
              "description": "Description of the current {@link IShoppingSaleContent} type:\n\n> Content information of sale snapshot.\n> \n> `IShoppingSaleContent` is an entity embodies the description contents\n> of {@link IShoppingSale}.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid"
                },
                "title": {
                  "type": "string"
                },
                "thumbnails": {
                  "type": "array",
                  "items": {
                    "description": "Attachment File.\n\nEvery attachment files that are managed in current system.\n\nFor reference, it is possible to omit one of file {@link name}\nor {@link extension} like `.gitignore` or `README` case, but not\npossible to omit both of them.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "title": "Primary Key",
                        "description": "Primary Key.",
                        "type": "string",
                        "format": "uuid"
                      },
                      "created_at": {
                        "title": "Creation time of attachment file",
                        "description": "Creation time of attachment file.",
                        "type": "string",
                        "format": "date-time"
                      },
                      "name": {
                        "title": "File name, except extension",
                        "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string.",
                        "type": "string",
                        "maxLength": 255
                      },
                      "extension": {
                        "title": "Extension",
                        "description": "Extension.\n\nPossible to omit like `README` case.",
                        "oneOf": [
                          {
                            "type": "null"
                          },
                          {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 8
                          }
                        ]
                      },
                      "url": {
                        "title": "URL path of the real file",
                        "description": "URL path of the real file.",
                        "type": "string",
                        "format": "uri",
                        "contentMediaType": "image/*"
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "name",
                      "extension",
                      "url"
                    ]
                  }
                }
              },
              "required": [
                "id",
                "title",
                "thumbnails"
              ]
            },
            "channels": {
              "title": "List of channels and categories",
              "description": "List of channels and categories.\n\nWhich channels and categories the sale is registered to.",
              "type": "array",
              "items": {
                "description": "Target channel (and categories) of sale to sell.\n\n`IShoppingSaleChannel` is an entity that expresses through which\n{@link IShoppingChannel channel} a listing {@link IShoppingSale} is sold.\n\nAlso, if {@link IShoppingChannelCategory categories} are specified, it also\nmeans that the sale be sold. Otherwise, none of the categories of the channel\nbeing specified, it means that every categories of the channel is listing the\ntarget sale.",
                "type": "object",
                "properties": {
                  "categories": {
                    "title": "List of categories of the channel listing the sale",
                    "description": "List of categories of the channel listing the sale.\n\nIf empty, it means all categories of the channel is listing the sale.",
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/IShoppingChannelCategory.IInvert"
                    }
                  },
                  "id": {
                    "title": "Primary Key",
                    "description": "Primary Key.",
                    "type": "string",
                    "format": "uuid"
                  },
                  "created_at": {
                    "title": "Creation time of record",
                    "description": "Creation time of record.",
                    "type": "string",
                    "format": "date-time"
                  },
                  "code": {
                    "title": "Identifier code",
                    "description": "Identifier code.",
                    "type": "string"
                  },
                  "name": {
                    "title": "Name of the channel",
                    "description": "Name of the channel.",
                    "type": "string"
                  }
                },
                "required": [
                  "categories",
                  "id",
                  "created_at",
                  "code",
                  "name"
                ]
              },
              "minItems": 1
            },
            "tags": {
              "title": "List of search tags",
              "description": "List of search tags.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "units": {
              "title": "List of units",
              "description": "List of units.\n\nRecords about individual product composition information that are sold\nin the sale. Each {@link IShoppingSaleUnit unit} record has configurable\n{@link IShoppingSaleUnitOption options},\n{@link IShoppingSaleUnitOptionCandidate candidate} values for each\noption, and {@link IShoppingSaleUnitStock final stocks} determined by\nselecting every candidate values of each option.",
              "type": "array",
              "items": {
                "description": "Description of the current {@link IShoppingSaleUnit} type:\n\n> Product composition information handled in the sale.\n> \n> `IShoppingSaleUnit` is an entity that embodies the \"individual product\"\n> information handled in the {@link IShoppingSale sale}.\n> \n> For reference, the reason why `IShoppingSaleUnit` is separated from\n> {@link IShoppingSaleSnapshot} by an algebraic relationship of 1: N is because\n> there are some cases where multiple products are sold in one listing. This is\n> the case with so-called \"bundled products\".\n> \n> - Bundle from regular product (Mackbook Set)\n>   - Main Body\n>   - Keyboard\n>   - Mouse\n>   - Apple Care (Free A/S Voucher)\n> \n> And again, `IShoppingSaleUnit` does not in itself refer to the\n> {@link IShoppingSaleUnitStock final stock} that the\n> {@link IShoppingCustomer customer} will {@link IShoppingOrder purchase}.\n> The final stock can be found only after selecting all given\n> {@link IShoppingSaleUnitOption options} and their\n> {@link IShoppingSaleUnitOptionCandidate candidate values}.\n> \n> For example, even if you buy a Macbook, the final stocks are determined only\n> after selecting all the options (CPU / RAM / SSD), etc.",
                "type": "object",
                "properties": {
                  "stocks": {
                    "title": "List of final stocks",
                    "description": "List of final stocks.",
                    "type": "array",
                    "items": {
                      "description": "Invert information from the cart.\n\n------------------------------\n\nDescription of the current {@link IShoppingSaleUnitStock.IInvert} type:\n\n> Invert information from the cart.\n\n------------------------------\n\nDescription of the parent {@link IShoppingSaleUnitStock} type:\n\n> Final component information on units for sale.\n> \n> `IShoppingSaleUnitStock` is a subsidiary entity of {@link IShoppingSaleUnit}\n> that represents a product catalog for sale, and is a kind of final stock that is\n> constructed by selecting all {@link IShoppingSaleUnitSelectableOption options}\n> (variable \"select\" type) and their\n> {@link IShoppingSaleUnitOptionCandidate candidate} values in the belonging unit.\n> It is the \"good\" itself that customers actually purchase.\n> \n> - Product Name) MacBook\n>   - Options\n>     - CPU: { i3, i5, i7, i9 }\n>     - RAM: { 8GB, 16GB, 32GB, 64GB, 96GB }\n>     - SSD: { 256GB, 512GB, 1TB }\n>   - Number of final stocks: 4 * 5 * 3 = 60\n> \n> For reference, the total number of `IShoppingSaleUnitStock` records in an\n> attribution unit can be obtained using Cartesian Product. In other words, the\n> value obtained by multiplying all the candidate values that each\n> (variable \"select\" type) option can have by the number of cases is the total\n> number of final stocks in the unit.\n> \n> Of course, without a single variable \"select\" type option, the final stocks\n> count in the unit is only 1.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "title": "Primary Key",
                          "description": "Primary Key.",
                          "type": "string",
                          "format": "uuid"
                        },
                        "name": {
                          "title": "Representative name of the stock",
                          "description": "Representative name of the stock.",
                          "type": "string"
                        },
                        "price": {
                          "title": "Price of the stock",
                          "description": "Shopping price interface.",
                          "type": "object",
                          "properties": {
                            "nominal": {
                              "title": "Nominal price",
                              "description": "Nominal price.\n\nThis is not {@link real real price} to pay, but just a nominal price to show.\nIf this value is greater than the {@link real real price}, it would be shown\nlike {@link IShoppingSeller seller} is giving a discount.",
                              "type": "number",
                              "minimum": 0
                            },
                            "real": {
                              "title": "Real price to pay",
                              "description": "Real price to pay.",
                              "type": "number",
                              "minimum": 0
                            }
                          },
                          "required": [
                            "nominal",
                            "real"
                          ]
                        },
                        "quantity": {
                          "title": "Quantity of the stock in the cart",
                          "description": "Quantity of the stock in the cart.",
                          "type": "integer",
                          "minimum": 1
                        },
                        "inventory": {
                          "title": "Current inventory status of the stock",
                          "description": "Inventory information of a final stock.",
                          "type": "object",
                          "properties": {
                            "income": {
                              "title": "Total income quantity",
                              "description": "Total income quantity.",
                              "type": "integer"
                            },
                            "outcome": {
                              "title": "Total outcome quantity",
                              "description": "Total outcome quantity.",
                              "type": "integer"
                            }
                          },
                          "required": [
                            "income",
                            "outcome"
                          ]
                        },
                        "choices": {
                          "title": "List of choices",
                          "description": "List of choices.\n\nWhich values being written for each option.",
                          "type": "array",
                          "items": {
                            "description": "Invert information from the cart.\n\n------------------------------\n\nDescription of the current {@link IShoppingSaleUnitStockChoice.IInvert} type:\n\n> Invert information from the cart.\n\n------------------------------\n\nDescription of the parent {@link IShoppingSaleUnitStockChoice} type:\n\n> Selection information of final stock.\n> \n> `IShoppingSaleUnitStockChoice` is an entity that represents which\n> {@link IShoppingSaleUnitSelectableOption option} of each variable \"select\"\n> type was selected for each {@link IShoppingSaleUnitStock stock} and which\n> {@link IShoppingSaleUnitOptionCandidate candidate value} was selected within\n> it.\n> \n> Of course, if the bound {@link IShoppingSaleUnit unit} does not have any\n> options, this entity can also be ignored.",
                            "type": "object",
                            "properties": {
                              "id": {
                                "title": "Primary Key",
                                "description": "Primary Key.",
                                "type": "string",
                                "format": "uuid"
                              },
                              "option": {
                                "title": "Target option",
                                "description": "Target option.",
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "title": "Primary Key",
                                        "description": "Primary Key.",
                                        "type": "string",
                                        "format": "uuid"
                                      },
                                      "type": {
                                        "title": "Discriminant for the type of selectable option",
                                        "description": "Discriminant for the type of selectable option.",
                                        "const": "select"
                                      },
                                      "name": {
                                        "title": "Represents the name of the option",
                                        "description": "Represents the name of the option.",
                                        "type": "string"
                                      },
                                      "variable": {
                                        "title": "Whether the option is variable or not",
                                        "description": "Whether the option is variable or not.\n\nWhen type of current option is \"select\", this attribute means whether\nselecting different candidate value affects the final stock or not.",
                                        "type": "boolean"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "type",
                                      "name",
                                      "variable"
                                    ],
                                    "description": "Description of the current {@link IShoppingSaleUnitSelectableOption} type:\n\n> Individual option information on units for sale.\n> \n> `IShoppingSaleUnitSelectableOption` is a subsidiary entity of\n> {@link IShoppingSaleUnit} that represents individual products in the\n> {@link IShoppingSale sale}, and is an entity designed to represent individual\n> selectable option information for the unit.\n> \n> - Examples of Options\n>   - selectable options\n>     - Computer: CPU, RAM, SSD, etc.\n>     - Clothes: size, color, style, etc.\n>   - descriptive options\n>     - Engrave\n>     - Simple question\n> \n> If the {@link variable} property value is `true`, the final stock that the\n> {@link IShoppingCustomer customer} will purchase changes depending on the\n> selection of the {@link IShoppingSaleUnitOptionCandidate candidate value}.\n> \n> Conversely, if it is a type other than \"select\", or if the {@link variable}\n> property value is \"false\", , this is an option that has no meaning beyond\n> simple information transfer. Therefore, no matter what value the customer\n> chooses when purchasing it, the option in this case does not affect the\n> {@link IShoppingSaleUnitStock final stock}."
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "title": "Primary Key",
                                        "description": "Primary Key.",
                                        "type": "string",
                                        "format": "uuid"
                                      },
                                      "type": {
                                        "title": "Type of descriptive option",
                                        "description": "Type of descriptive option.\n\nWhich typed value should be written when purchasing.",
                                        "oneOf": [
                                          {
                                            "const": "string"
                                          },
                                          {
                                            "const": "number"
                                          },
                                          {
                                            "const": "boolean"
                                          }
                                        ]
                                      },
                                      "name": {
                                        "title": "Readable name of the option",
                                        "description": "Readable name of the option.",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "type",
                                      "name"
                                    ],
                                    "description": "Descriptive option.\n\nWhen type of the option not `\"select\"`, it means the option is descriptive\nthat requiring {@link IShoppingCustomer customers} to write some value to\n{@link IShoppingOrder purchase}. Also, whatever customer writes about the\noption, it does not affect the {@link IShoppingSaleUnitStock final stock}.\n\nAnother words, the descriptive option is just for information transfer."
                                  }
                                ]
                              },
                              "candidate": {
                                "title": "Selected candidate value",
                                "description": "Selected candidate value.",
                                "oneOf": [
                                  {
                                    "type": "null"
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "title": "Primary Key",
                                        "description": "Primary Key.",
                                        "type": "string",
                                        "format": "uuid"
                                      },
                                      "name": {
                                        "title": "Represents the name of the candidate value",
                                        "description": "Represents the name of the candidate value.",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "name"
                                    ],
                                    "description": "Selectable candidate values within an option.\n\n`IShoppingSaleUnitOptionCandidate` is an entity that represents individual\ncandidate values that can be selected from\n{@link IShoppingSaleUnitSelectableOption options of the \"select\" type}.\n\n- Example\n  - RAM: 8GB, 16GB, 32GB\n  - GPU: RTX 3060, RTX 4080, TESLA\n  - License: Private, Commercial, Educatiion\n\nBy the way, if belonged option is not \"select\" type, this entity never\nbeing used."
                                  }
                                ]
                              },
                              "value": {
                                "title": "Written value",
                                "description": "Written value.",
                                "oneOf": [
                                  {
                                    "type": "null"
                                  },
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  },
                                  {
                                    "type": "boolean"
                                  }
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "option",
                              "candidate",
                              "value"
                            ]
                          }
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "price",
                        "quantity",
                        "inventory",
                        "choices"
                      ]
                    },
                    "minItems": 1
                  },
                  "id": {
                    "title": "Primary Key",
                    "description": "Primary Key.",
                    "type": "string",
                    "format": "uuid"
                  },
                  "name": {
                    "title": "Representative name of the unit",
                    "description": "Representative name of the unit.",
                    "type": "string"
                  },
                  "primary": {
                    "title": "Whether the unit is primary or not",
                    "description": "Whether the unit is primary or not.\n\nJust a labeling value.",
                    "type": "boolean"
                  },
                  "required": {
                    "title": "Whether the unit is required or not",
                    "description": "Whether the unit is required or not.\n\nWhen the unit is required, the customer must select the unit. If do not\nselect, customer can't buy it.\n\nFor example, if there's a sale \"Macbook Set\" and one of the unit is the\n\"Main Body\", is it possible to buy the \"Macbook Set\" without the\n\"Main Body\" unit? This property is for that case.",
                    "type": "boolean"
                  }
                },
                "required": [
                  "stocks",
                  "id",
                  "name",
                  "primary",
                  "required"
                ]
              },
              "minItems": 1
            },
            "created_at": {
              "title": "Creation time of the record",
              "description": "Creation time of the record.\n\nNote that, this property is different with {@link opened_at},\nwhich means the timepoint of the sale is opened.",
              "type": "string",
              "format": "date-time"
            },
            "updated_at": {
              "title": "Last updated time of the record",
              "description": "Last updated time of the record.\n\nIn another words, creation time of the last snapshot.",
              "type": "string",
              "format": "date-time"
            },
            "paused_at": {
              "title": "Paused time of the sale",
              "description": "Paused time of the sale.\n\nThe sale is paused by the seller, for some reason.\n\n{@link IShoppingCustomer Customers} can still see the sale on the\nboth list and detail pages, but the sale has a warning label\n\"The sale is paused by the seller\".",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "date-time"
                }
              ]
            },
            "suspended_at": {
              "title": "Suspended time of the sale",
              "description": "Suspended time of the sale.\n\nThe sale is suspended by the seller, for some reason.\n\n{@link IShoppingCustomer Customers} cannot see the sale on the\nboth list and detail pages. It is almost same with soft delettion,\nbut there's a little bit difference that the owner\n{@link IShoppingSeller seller} can still see the sale and resume it.\n\nOf course, the {@link IShoppingCustomer customers} who have\nalready purchased the sale can still see the sale on the\n{@link IShoppingOrder order} page.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "date-time"
                }
              ]
            },
            "opened_at": {
              "title": "Opening time of the sale",
              "description": "Opening time of the sale.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "date-time"
                }
              ]
            },
            "closed_at": {
              "title": "Closing time of the sale",
              "description": "Closing time of the sale.\n\nIf this value is `null`, the sale be continued forever.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "date-time"
                }
              ]
            }
          },
          "required": [
            "section",
            "seller",
            "id",
            "snapshot_id",
            "latest",
            "content",
            "channels",
            "tags",
            "units",
            "created_at",
            "updated_at",
            "paused_at",
            "suspended_at",
            "opened_at",
            "closed_at"
          ]
        },
        "orderable": {
          "title": "Whether current commodity is orderable or not",
          "description": "Whether current commodity is orderable or not.\n\nIf this attribute is `false`, then the commodity is not orderable, because\nit has already been ordered.",
          "type": "boolean"
        },
        "pseudo": {
          "title": "Whether current commodity is pseudo or not",
          "description": "Whether current commodity is pseudo or not.\n\nWhen this attribute is `true`, then the commodity is not the real one,\nbut just fake information only for calculating the discount effect by\n{@link IShoppingCoupon coupons}.",
          "type": "boolean"
        },
        "volume": {
          "title": "Volume of the commodity to purchase",
          "description": "Volume of the commodity to purchase.\n\nA value indicating how many sets would be multiplied to the children\n{@link IShoppingSaleUnitStock.IInvert.quantity} values.",
          "type": "integer",
          "minimum": 1
        },
        "price": {
          "title": "Price of the commodity",
          "description": "Shopping price interface.",
          "type": "object",
          "properties": {
            "nominal": {
              "title": "Nominal price",
              "description": "Nominal price.\n\nThis is not {@link real real price} to pay, but just a nominal price to show.\nIf this value is greater than the {@link real real price}, it would be shown\nlike {@link IShoppingSeller seller} is giving a discount.",
              "type": "number",
              "minimum": 0
            },
            "real": {
              "title": "Real price to pay",
              "description": "Real price to pay.",
              "type": "number",
              "minimum": 0
            }
          },
          "required": [
            "nominal",
            "real"
          ]
        },
        "created_at": {
          "title": "Creation time of the record",
          "description": "Creation time of the record.",
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "sale",
        "orderable",
        "pseudo",
        "volume",
        "price",
        "created_at"
      ]
    },
    "success": true,
    "arguments": {
      "type": {
        "host": "http://127.0.0.1:37001",
        "headers": {
          "Authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0YWJsZSI6InNob3BwaW5nX2N1c3RvbWVycyIsImlkIjoiMjVlYzg3ZjctODE1ZC00YjU3LTk1NzYtYzk1Mzk4NGJjMjhmIiwicmVhZG9ubHkiOmZhbHNlLCJleHBpcmVkX2F0IjoiMjAyNC0xMi0xM1QwOTo0MjoxMi41MzlaIiwicmVmcmVzaGFibGVfdW50aWwiOiIyMDI0LTEyLTI3VDA2OjQyOjEyLjUzOVoiLCJpYXQiOjE3MzQwNzIxMzJ9.zWZrU-d1bSW-MawmSo2RYRPk_73xtR_PxfFUrEpDJkc"
        }
      },
      "properties": {
        "sale_id": "601228f3-1314-4fbe-b460-918250e9ffa1",
        "stocks": [
          {
            "unit_id": "2e54e102-92d8-4f15-8f35-5ab43b0217e1",
            "stock_id": "f1f8f95b-4b18-44c0-90b2-786900e3c29f",
            "choices": [
              {
                "option_id": "5b9e6404-6a29-4ed2-afe1-76951c0f6383",
                "candidate_id": "b95602d5-804c-450f-ae98-ab1f5446f056",
                "value": null
              }
            ],
            "quantity": 1
          },
          {
            "unit_id": "b46d4dd3-162c-4eb2-9968-dffa70910631",
            "stock_id": "fde6c137-5aa1-4817-8e33-b68ae5404ec4",
            "choices": [],
            "quantity": 1
          }
        ],
        "volume": 1
      }
    },
    "value": {
      "id": "eb8b8bd3-0ccb-409f-b85a-d6314b76e3fd",
      "sale": {
        "section": {
          "id": "a01c572c-3199-4929-ac67-ba7c31b2c808",
          "code": "general",
          "name": "General",
          "created_at": "2024-12-13T06:42:11.124Z"
        },
        "seller": {
          "type": "seller",
          "member": {
            "id": "a853492c-70b4-487f-9648-0f6109a0ad69",
            "nickname": "Robot",
            "emails": [
              {
                "id": "81ea73c4-b41e-4022-9384-d51d3215797e",
                "value": "robot@nestia.io",
                "created_at": "2024-12-13T06:42:11.227Z"
              }
            ],
            "created_at": "2024-12-13T06:42:11.227Z"
          },
          "customer": {
            "id": "aeb8583b-8bd9-4d29-adea-78779b405046",
            "channel": {
              "id": "2323f4bd-21ad-45b7-ae3b-cadd84dcc935",
              "created_at": "2024-12-13T06:42:10.908Z",
              "code": "samchon",
              "name": "Samchon Shopping Mall"
            },
            "external_user": null,
            "href": "http://127.0.0.1/TestAutomation",
            "referrer": "http://127.0.0.1/NodeJS",
            "ip": "127.0.0.1",
            "created_at": "2024-12-13T06:42:11.258Z"
          },
          "citizen": {
            "id": "43aedfea-6b2c-4c18-9f69-60373c9580dd",
            "created_at": "2024-12-13T06:42:11.157Z",
            "mobile": "01012345678",
            "name": "Robot"
          },
          "id": "addccb32-ac48-460e-9624-d9809da19d99",
          "created_at": "2024-12-13T06:42:11.241Z"
        },
        "id": "601228f3-1314-4fbe-b460-918250e9ffa1",
        "snapshot_id": "fe375776-9933-4d97-a0c8-8d46aca01bd1",
        "latest": true,
        "content": {
          "id": "c4566bf9-2544-492d-88d7-0e769e9614f2",
          "title": "Leica M6 (2022 Reissue): The Return of a Legend",
          "thumbnails": [
            {
              "id": "62203ee2-c174-430c-aa79-a936d752a3ca",
              "created_at": "2024-12-13T06:42:12.008Z",
              "name": "leica-m6-thumbnail-2",
              "extension": "webp",
              "url": "https://leica-camera.com/sites/default/files/styles/r_media_fullscreen/public/2022-09/leica_m6_packaging_ambient_3840x2160.jpg.webp?itok=lig4kkiB"
            },
            {
              "id": "ae058b66-9388-442d-bdc8-934aae2f0686",
              "created_at": "2024-12-13T06:42:12.008Z",
              "name": "leica-m6-thumbnail-1",
              "extension": "png",
              "url": "https://leica-camera.com/sites/default/files/styles/r_media_medium_desktop_4_3/public/pm-84724-10557_leica_m6_black_front_1.png?itok=SpVHc0cq"
            }
          ]
        },
        "channels": [
          {
            "categories": [
              {
                "parent": {
                  "parent": null,
                  "id": "9b9b36f4-4e50-48ff-ac05-ee8588be0dbe",
                  "code": "electronics",
                  "parent_id": null,
                  "name": "Electronics",
                  "created_at": "2024-12-13T06:42:10.919Z"
                },
                "id": "c2c9da5a-7d89-40f6-9021-0255073b87eb",
                "code": "cameras",
                "parent_id": "9b9b36f4-4e50-48ff-ac05-ee8588be0dbe",
                "name": "Cameras",
                "created_at": "2024-12-13T06:42:11.008Z"
              }
            ],
            "id": "2323f4bd-21ad-45b7-ae3b-cadd84dcc935",
            "created_at": "2024-12-13T06:42:10.908Z",
            "code": "samchon",
            "name": "Samchon Shopping Mall"
          }
        ],
        "tags": [
          "Leica M6",
          "Film Camera",
          "Photography",
          "Analog",
          "Camera Reissue",
          "Classic Design",
          "Collector's Item",
          "Camera Lens"
        ],
        "units": [
          {
            "stocks": [
              {
                "id": "f1f8f95b-4b18-44c0-90b2-786900e3c29f",
                "name": "Leica M6 Body (Black Paint Finish)",
                "price": {
                  "nominal": 7200000,
                  "real": 6899000
                },
                "quantity": 1,
                "inventory": {
                  "income": 500,
                  "outcome": 0
                },
                "choices": [
                  {
                    "id": "cefa06cb-6f19-46b5-a11e-9bb849f89a00",
                    "option": {
                      "id": "5b9e6404-6a29-4ed2-afe1-76951c0f6383",
                      "type": "select",
                      "name": "Finish",
                      "variable": true
                    },
                    "candidate": {
                      "id": "b95602d5-804c-450f-ae98-ab1f5446f056",
                      "name": "Black Paint Finish"
                    },
                    "value": null
                  }
                ]
              }
            ],
            "id": "2e54e102-92d8-4f15-8f35-5ab43b0217e1",
            "name": "Leica M6 Body (2022 Reissue)",
            "primary": true,
            "required": true
          },
          {
            "stocks": [
              {
                "id": "fde6c137-5aa1-4817-8e33-b68ae5404ec4",
                "name": "50mm Summilux Lens",
                "price": {
                  "nominal": 5200000,
                  "real": 4999000
                },
                "quantity": 1,
                "inventory": {
                  "income": 1000,
                  "outcome": 0
                },
                "choices": []
              }
            ],
            "id": "b46d4dd3-162c-4eb2-9968-dffa70910631",
            "name": "50mm Summilux Lens",
            "primary": false,
            "required": false
          }
        ],
        "created_at": "2024-12-13T06:42:12.008Z",
        "updated_at": "2024-12-13T06:42:12.008Z",
        "paused_at": null,
        "suspended_at": null,
        "opened_at": "2024-12-13T06:42:12.005Z",
        "closed_at": null
      },
      "orderable": true,
      "pseudo": false,
      "volume": 1,
      "price": {
        "nominal": 12400000,
        "real": 11898000
      },
      "created_at": "2024-12-13T06:42:13.028Z"
    }
  },
  {
    "name": "shoppings_customers_carts_commodities_post",
    "method": "post",
    "path": "/shoppings/customers/carts/commodities",
    "description": "Create a new commodity.\n\nCreate a new {@link IShoppingCartCommodity commodity} into a specific\nshopping cart.\n\nIf {@link IShoppingCartCommodity.ICreate.accumulate} has `true` value\nand there's some same commodity that composed with same\n{@link IShoppingSaleUnitStock.IInvert stocks and quantities},\nthen new commodity would not be created but the volume would be accumulated.\n\nBy the way, if the target {@link IShoppingSale sale} has been suspended or\n{@link IShoppingSaleUnitStockInventory out of stock}, then 410 gone error\nwould be thrown. Therefore, it would better to check the target sale and\n{@link IShoppingSaleUnitStock stock}'s status before.",
    "parameters": {
      "type": "object",
      "properties": {
        "body": {
          "description": "Creation information of a shopping cart commodity.\n\n------------------------------\n\nDescription of the current {@link IShoppingCartCommodity.ICreate} type:\n\n> Creation information of a shopping cart commodity.\n\n------------------------------\n\nDescription of the parent {@link IShoppingCartCommodity} type:\n\n> Item in a shopping cart.\n> \n> `IShoppingCartCommodity` is an entity that represents a\n> {@link IShoppingSaleSnapshot snapshot} of the items that\n> {@link IShoppingCustomer customer} has placed into his shopping cart with a\n> {@link IShoppingOrder purchase} in mind. And if the customer continues this\n> into an actual order in the future, `IShoppingCartCommodity` be changed to\n> {@link IShoppingOrderGood}.\n> \n> And while adding a sale snapshot to the shopping cart, the customer inevitably\n> selects specific {@link IShoppingSaleUnit units} and\n> {@link IShoppingSaleUnitStock final stocks} within the listing snapshot.\n> Information about these units and stocks is recorded in the subsidiary entity\n> {@link IShoppingCartCommodityStock}. Also, there is an attribute {@link volume}\n> that indicates how many sets of snapshots of the target commodity will be\n> purchased. This \"volume\" is a value that will be multiplied by\n> {@link IShoppingSaleUnitStock.IInvert.quantity}, the quantity for each\n> component.",
          "type": "object",
          "properties": {
            "sale_id": {
              "title": "Target sale's {@link IShoppingSale.id}",
              "description": "Target sale's {@link IShoppingSale.id}.",
              "type": "string",
              "format": "uuid"
            },
            "stocks": {
              "title": "List of the stocks to be purchased",
              "description": "List of the stocks to be purchased.",
              "type": "array",
              "items": {
                "description": "Creation information of the commodity stock of shopping cart.\n\nWhen record being created, its corresponding structure would be\n{@link IShoppingSaleSnapshotUnit.IInvert} and\n{@link IShoppingSaleSnapshotUnitStock.IInvert}.\n\n------------------------------\n\nDescription of the current {@link IShoppingCartCommodityStock.ICreate} type:\n\n> Creation information of the commodity stock of shopping cart.\n> \n> When record being created, its corresponding structure would be\n> {@link IShoppingSaleSnapshotUnit.IInvert} and\n> {@link IShoppingSaleSnapshotUnitStock.IInvert}.",
                "type": "object",
                "properties": {
                  "unit_id": {
                    "title": "Target unit's {@link IShoppingSaleUnit.id}",
                    "description": "Target unit's {@link IShoppingSaleUnit.id}.",
                    "type": "string",
                    "format": "uuid"
                  },
                  "stock_id": {
                    "title": "Target stock's {@link IShoppingSaleUnitStock.id}",
                    "description": "Target stock's {@link IShoppingSaleUnitStock.id}.\n\nIt must be matched with the {@link choices} property.",
                    "type": "string",
                    "format": "uuid"
                  },
                  "choices": {
                    "title": "Creation information of the choices for each option",
                    "description": "Creation information of the choices for each option.",
                    "type": "array",
                    "items": {
                      "description": "Creation information of the choice for each option.\n\nWhen record being created, its corresponding structure would be\n{@link IShoppingSaleUnitStockChoice.IInvert}.\n\n------------------------------\n\nDescription of the current {@link IShoppingCartCommodityStockChoice.ICreate} type:\n\n> Creation information of the choice for each option.\n> \n> When record being created, its corresponding structure would be\n> {@link IShoppingSaleUnitStockChoice.IInvert}.",
                      "type": "object",
                      "properties": {
                        "option_id": {
                          "title": "Target option's {@link IShoppingSaleUnitOption.id}",
                          "description": "Target option's {@link IShoppingSaleUnitOption.id}.",
                          "type": "string",
                          "format": "uuid"
                        },
                        "candidate_id": {
                          "title": "Target candidate's {@link IShoppingSaleUnitOptionCandidate.id}",
                          "description": "Target candidate's {@link IShoppingSaleUnitOptionCandidate.id}.\n\nWhen target option's type is `select`, then this attribute is not\n`null` but has a value.",
                          "oneOf": [
                            {
                              "type": "null"
                            },
                            {
                              "type": "string",
                              "format": "uuid"
                            }
                          ]
                        },
                        "value": {
                          "title": "Written value about the option",
                          "description": "Written value about the option.\n\nWhen target option's type is not `select`, but an atomic type value\nlike `boolean`, `number` or `string`, then this attribute is not\n`null` but has the matched atomic value.",
                          "oneOf": [
                            {
                              "type": "null"
                            },
                            {
                              "type": "string"
                            },
                            {
                              "type": "number"
                            },
                            {
                              "type": "boolean"
                            }
                          ]
                        }
                      },
                      "required": [
                        "option_id",
                        "candidate_id",
                        "value"
                      ]
                    }
                  },
                  "quantity": {
                    "title": "Quantity of the stock to purchase",
                    "description": "Quantity of the stock to purchase.\n\nThis value is multiplied by the {@link IShoppingCartCommodity.volume}.",
                    "type": "integer",
                    "minimum": 1
                  }
                },
                "required": [
                  "unit_id",
                  "stock_id",
                  "choices",
                  "quantity"
                ]
              },
              "minItems": 1
            },
            "volume": {
              "title": "Volume of the commodity to purchase",
              "description": "Volume of the commodity to purchase.\n\nA value indicating how many sets would be multiplied to the children\n{@link IShoppingSaleUnitStock.IInvert.quantity} values.",
              "type": "integer",
              "minimum": 1
            },
            "accumulate": {
              "title": "Whether to accumulate the volume or not",
              "description": "Whether to accumulate the volume or not.\n\nIf this attribute is not `false` and there's same commodity that\ncomposed with same stocks and options, then the volume will be\naccumulated to the existed one.\n\nOtherwise, duplicated commodity would be newly created.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "boolean"
                }
              ]
            }
          },
          "required": [
            "sale_id",
            "stocks",
            "volume",
            "accumulate"
          ]
        }
      },
      "additionalProperties": false,
      "required": [
        "body"
      ],
      "$defs": {
        "IShoppingChannelCategory.IInvert": {
          "description": "Invert category information with parent category.",
          "type": "object",
          "properties": {
            "parent": {
              "title": "Parent category info with recursive structure",
              "description": "Parent category info with recursive structure.\n\nIf no parent exists, then be `null`.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "$ref": "#/$defs/IShoppingChannelCategory.IInvert"
                }
              ]
            },
            "id": {
              "title": "Primary Key",
              "description": "Primary Key.",
              "type": "string",
              "format": "uuid"
            },
            "code": {
              "title": "Identifier code of the category",
              "description": "Identifier code of the category.\n\nThe code must be unique in the channel.",
              "type": "string"
            },
            "parent_id": {
              "title": "Parent category's ID",
              "description": "Parent category's ID.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "name": {
              "title": "Representative name of the category",
              "description": "Representative name of the category.\n\nThe name must be unique within the parent category. If no parent exists,\nthen the name must be unique within the channel between no parent\ncategories.",
              "type": "string"
            },
            "created_at": {
              "title": "Creation time of record",
              "description": "Creation time of record.",
              "type": "string",
              "format": "date-time"
            }
          },
          "required": [
            "parent",
            "id",
            "code",
            "parent_id",
            "name",
            "created_at"
          ]
        }
      }
    },
    "output": {
      "description": "Item in a shopping cart.\n\n`IShoppingCartCommodity` is an entity that represents a\n{@link IShoppingSaleSnapshot snapshot} of the items that\n{@link IShoppingCustomer customer} has placed into his shopping cart with a\n{@link IShoppingOrder purchase} in mind. And if the customer continues this\ninto an actual order in the future, `IShoppingCartCommodity` be changed to\n{@link IShoppingOrderGood}.\n\nAnd while adding a sale snapshot to the shopping cart, the customer inevitably\nselects specific {@link IShoppingSaleUnit units} and\n{@link IShoppingSaleUnitStock final stocks} within the listing snapshot.\nInformation about these units and stocks is recorded in the subsidiary entity\n{@link IShoppingCartCommodityStock}. Also, there is an attribute {@link volume}\nthat indicates how many sets of snapshots of the target commodity will be\npurchased. This \"volume\" is a value that will be multiplied by\n{@link IShoppingSaleUnitStock.IInvert.quantity}, the quantity for each\ncomponent.",
      "type": "object",
      "properties": {
        "id": {
          "title": "Primary Key",
          "description": "Primary Key.",
          "type": "string",
          "format": "uuid"
        },
        "sale": {
          "title": "Invert information of the sale (snapshot), in the perspective of commodity",
          "description": "Invert information of the sale snapshot, in the perspective of commodity.\n\n`IShoppingSaleSnapshot.IInvert` is a structure used to represent a\nsnapshot in the perspective of a {@link IShoppingCommodity}, corresponding\nto an {@link IShoppingCartCommodityStock} entity.\n\nTherefore, `IShoppingSaleSnapshot.IInvert` does not contain every\n{@link IShoppingSaleUnit units} and {@link IShoppingSaleUnitStock stocks}\nof the snapshot records, but only some of the records which are put\ninto the {@link IShoppingCartCommodity shopping cart}.\n\n------------------------------\n\nDescription of the current {@link IShoppingSaleSnapshot.IInvert} type:\n\n> Invert information of the sale snapshot, in the perspective of commodity.\n> \n> `IShoppingSaleSnapshot.IInvert` is a structure used to represent a\n> snapshot in the perspective of a {@link IShoppingCommodity}, corresponding\n> to an {@link IShoppingCartCommodityStock} entity.\n> \n> Therefore, `IShoppingSaleSnapshot.IInvert` does not contain every\n> {@link IShoppingSaleUnit units} and {@link IShoppingSaleUnitStock stocks}\n> of the snapshot records, but only some of the records which are put\n> into the {@link IShoppingCartCommodity shopping cart}.\n\n------------------------------\n\nDescription of the parent {@link IShoppingSaleSnapshot} type:\n\n> Snapshot record of sale.\n> \n> `IShoppingSaleSnapshot` is an entity that embodies a snapshot of a sale,\n> and the ERD (Entity Relationship Diagram) describes the role of the\n> `shopping_sale_snapshots` table as follows:\n> \n> > {@link IShoppingSale shopping_sales} is an entity that embodies\n> > \"product sales\" (sales) information registered by the\n> > {@link IShoppingSeller seller}. And the main information of the sale is\n> > recorded in the sub `shopping_sale_snapshots`, not in the main\n> > {@link IShoppingSale shopping_sales}. When a seller changes a previously\n> > registered item, the existing {@link IShoppingSale shopping_sales} record\n> > is not changed, but a new snapshot record is created.\n> >\n> > This is to preserve the {@link IShoppingCustomer customer}'s\n> > {@link IShoppingOrder purchase history} flawlessly after the customer\n> > purchases a specific item, even if the seller changes the components or price\n> > of the item. It is also intended to support sellers in so-called A/B testing,\n> > which involves changing components or prices and measuring the performance\n> > in each case.\n> \n> By the way, DTO (Data Transfer Object) level used by the front-end developer,\n> it does not distinguish {@link IShoppingSale} and `IShoppingSaleSnapshot`\n> strictly, and generally handles {@link IShoppingSale} and snapshot together.\n> \n> But even though the DTO level does not strictly distinguish them, the word and\n> concept of \"snapshot\" is still important, so it is recommended to understand\n> the concept of \"snapshot\" properly.",
          "type": "object",
          "properties": {
            "section": {
              "title": "Belonged section's information",
              "description": "Section information.\n\n`IShoppingSection` is a concept that refers to the spatial information of\nthe market.\n\nIf we compare the section mentioned here to the offline market, it means a\nspatially separated area within the store, such as the \"fruit corner\" or\n\"butcher corner\". Therefore, in the {@link IShoppingSale sale} entity, it is\nnot possible to classify multiple sections simultaneously, but only one section\ncan be classified.\n\nBy the way, if your shopping mall system requires only one section, then just\nuse only one. This concept is designed to be expandable in the future.",
              "type": "object",
              "properties": {
                "id": {
                  "title": "Primary Key",
                  "description": "Primary Key.",
                  "type": "string",
                  "format": "uuid"
                },
                "code": {
                  "title": "Identifier code",
                  "description": "Identifier code.",
                  "type": "string"
                },
                "name": {
                  "title": "Representative name of the section",
                  "description": "Representative name of the section.",
                  "type": "string"
                },
                "created_at": {
                  "title": "Creation time of record",
                  "description": "Creation time of record.",
                  "type": "string",
                  "format": "date-time"
                }
              },
              "required": [
                "id",
                "code",
                "name",
                "created_at"
              ]
            },
            "seller": {
              "title": "Seller who've registered the sale",
              "description": "Invert information starting from seller info.\n\nInstead of accessing to the seller information from the\n{@link IShoppingCustomer.member} -> {@link IShoppingMember.seller},\n`IShoppingSeller.IInvert` starts from the seller information\nand access to the customer, member and {@link IShoppingCitizen citizen}\ninformation inversely.\n\n------------------------------\n\nDescription of the current {@link IShoppingSeller.IInvert} type:\n\n> Invert information starting from seller info.\n> \n> Instead of accessing to the seller information from the\n> {@link IShoppingCustomer.member} -> {@link IShoppingMember.seller},\n> `IShoppingSeller.IInvert` starts from the seller information\n> and access to the customer, member and {@link IShoppingCitizen citizen}\n> information inversely.\n\n------------------------------\n\nDescription of the parent {@link IShoppingSeller} type:\n\n> Seller information.\n> \n> `IShoppingSeller` is an entity that embodies a person who registers\n> {@link IShoppingSale sales} to operate selling activities, with\n> {@link IShoppingMember membership} joining.\n> \n> For reference, unlike {@link IShoppingCustomer customers} which can\n> participate even without membership joining, seller must join membership\n> to operate sales. Also, seller must do the\n> {@link IShoppingCitizen real-name and mobile authentication}, too.",
              "type": "object",
              "properties": {
                "type": {
                  "title": "Discriminant for the type of customer",
                  "description": "Discriminant for the type of customer.",
                  "const": "seller"
                },
                "member": {
                  "title": "Membership joining information",
                  "description": "Invert information of member.\n\nThis invert member information has been designed to be used for another\ninvert information of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert}\n- {@link IShoppingAdministrator.IInvert}\n\n------------------------------\n\nDescription of the current {@link IShoppingMember.IInvert} type:\n\n> Invert information of member.\n> \n> This invert member information has been designed to be used for another\n> invert information of sellers and administrators like below.\n> \n> - {@link IShoppingSeller.IInvert}\n> - {@link IShoppingAdministrator.IInvert}\n\n------------------------------\n\nDescription of the parent {@link IShoppingMember} type:\n\n> Member Account.\n> \n> `IShoppingMember` is an entity that symbolizes the case when a\n> {@link IShoppingCustomer} signs up as a member of this shopping mall\n> system.\n> \n> If a `IShoppingMember` has seller or administrator property. it means that\n> the {@link IShoppingCustomer} has acting as a {@link IShoppingSeller seller}\n> or {@link IShoppingAdministrator administrator} at the same time.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "Primary Key",
                      "description": "Primary Key.",
                      "type": "string",
                      "format": "uuid"
                    },
                    "nickname": {
                      "title": "Nickname that uniquely identifies the member",
                      "description": "Nickname that uniquely identifies the member.",
                      "type": "string"
                    },
                    "emails": {
                      "title": "List of emails",
                      "description": "List of emails.",
                      "type": "array",
                      "items": {
                        "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "title": "Primary Key",
                            "description": "Primary Key.",
                            "type": "string",
                            "format": "uuid"
                          },
                          "value": {
                            "title": "Email address value",
                            "description": "Email address value.",
                            "type": "string",
                            "format": "email"
                          },
                          "created_at": {
                            "title": "Creation time of record",
                            "description": "Creation time of record.",
                            "type": "string",
                            "format": "date-time"
                          }
                        },
                        "required": [
                          "id",
                          "value",
                          "created_at"
                        ]
                      }
                    },
                    "created_at": {
                      "title": "Creation time of record",
                      "description": "Creation time of record.\n\nAnother words, the time when the member has signed up.",
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "required": [
                    "id",
                    "nickname",
                    "emails",
                    "created_at"
                  ]
                },
                "customer": {
                  "title": "Customer, the connection information",
                  "description": "Inverted customer informatino.\n\nThis inverted customer information has been designed to be used for\nanother invert information of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert}\n- {@link IShoppingAdministrator.IInvert}\n\n------------------------------\n\nDescription of the current {@link IShoppingCustomer.IInvert} type:\n\n> Inverted customer informatino.\n> \n> This inverted customer information has been designed to be used for\n> another invert information of sellers and administrators like below.\n> \n> - {@link IShoppingSeller.IInvert}\n> - {@link IShoppingAdministrator.IInvert}\n\n------------------------------\n\nDescription of the parent {@link IShoppingCustomer} type:\n\n> Customer information, but not a person but a connection basis.\n> \n> `IShoppingCustomer` is an entity that literally embodies the information of\n> those who participated in the market as customers. By the way, the\n> `IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\n> even if the same person connects to the shopping mall multiple, multiple\n> records are created in `IShoppingCustomer`.\n> \n> The first purpose of this is to track the customer's inflow path in detail,\n> and it is for cases where the same person enters as a non-member,\n> {@link IShoppingCartCommodity puts items in the shopping cart} in advance,\n> and only authenticates their {@link IShoppingCitizen real name} or\n> registers/logs in at the moment of {@link IShoppingOrderPublish payment}.\n> It is the second. Lastly, it is to accurately track the activities that\n> a person performs at the shopping mall in various ways like below.\n> \n> - Same person comes from an {@link IShoppingExternalUser external service}\n> - Same person creates multiple accounts\n> - Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n> - Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n> \n> Therefore, `IShoppingCustomer` can have multiple records with the same\n> {@link IShoppingCitizen}, {@link IShoppingMember}, and\n> {@link IShoppingExternalUser}. Additionally, if a customer signs up for\n> membership after verifying their real name or signs up for our service after\n> being a user of an external service, all related records are changed at once.\n> Therefore, identification and tracking of customers can be done very\n> systematically.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "Primary Key",
                      "description": "Primary Key.",
                      "type": "string",
                      "format": "uuid"
                    },
                    "channel": {
                      "title": "Belonged channel",
                      "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "title": "Primary Key",
                          "description": "Primary Key.",
                          "type": "string",
                          "format": "uuid"
                        },
                        "created_at": {
                          "title": "Creation time of record",
                          "description": "Creation time of record.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "code": {
                          "title": "Identifier code",
                          "description": "Identifier code.",
                          "type": "string"
                        },
                        "name": {
                          "title": "Name of the channel",
                          "description": "Name of the channel.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "created_at",
                        "code",
                        "name"
                      ]
                    },
                    "external_user": {
                      "title": "External user information",
                      "description": "External user information.\n\nWhen the customer has come frome an external service.",
                      "oneOf": [
                        {
                          "type": "null"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "title": "Primary Key",
                              "description": "Primary Key.",
                              "type": "string",
                              "format": "uuid"
                            },
                            "citizen": {
                              "title": "Citizen activation info",
                              "description": "Citizen activation info.",
                              "oneOf": [
                                {
                                  "type": "null"
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "title": "Primary Key",
                                      "description": "Primary Key.",
                                      "type": "string",
                                      "format": "uuid"
                                    },
                                    "created_at": {
                                      "title": "Creation time of record",
                                      "description": "Creation time of record.",
                                      "type": "string",
                                      "format": "date-time"
                                    },
                                    "mobile": {
                                      "title": "Mobile number",
                                      "description": "Mobile number.",
                                      "x-wrtn-payment-order-mobile": true,
                                      "type": "string",
                                      "pattern": "^[0-9]*$"
                                    },
                                    "name": {
                                      "title": "Real name, or equivalent nickname",
                                      "description": "Real name, or equivalent nickname.",
                                      "x-wrtn-payment-order-citizen": true,
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "created_at",
                                    "mobile",
                                    "name"
                                  ],
                                  "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile} input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                                }
                              ]
                            },
                            "created_at": {
                              "title": "Creation time of record",
                              "description": "Creation time of record.\n\nAnother word, first time when the external user connected.",
                              "type": "string",
                              "format": "date-time"
                            },
                            "uid": {
                              "title": "Identifier key of external user from the external system",
                              "description": "Identifier key of external user from the external system.",
                              "type": "string"
                            },
                            "application": {
                              "title": "Identifier code of the external service",
                              "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code} in common.",
                              "type": "string"
                            },
                            "nickname": {
                              "title": "Nickname of external user in the external system",
                              "description": "Nickname of external user in the external system.",
                              "type": "string"
                            },
                            "data": {
                              "description": "Additional information about external user from the external\nsystem."
                            }
                          },
                          "required": [
                            "id",
                            "citizen",
                            "created_at",
                            "uid",
                            "application",
                            "nickname",
                            "data"
                          ],
                          "description": "External user information.\n\n`IShoppingExternalUser` is an entity dsigned for when this system needs\nto connect with external services and welcome their users as\n{@link IShoppingCustomer customers} of this service.\n\nFor reference, customers who connect from an external service must have\nthis record, and the external service user is identified through the two\nattributes {@link application} and {@link uid}. If a customer connected\nfrom an external service completes\n{@link IShoppingCitizen real-name authentication} from this service, each\ntime the external service user reconnects to this service and issues a\nnew customer authentication token, real-name authentication begins with\ncompleted.\n\nAnd {@link password} is the password issued to the user by the external\nservice system (the so-called permanent user authentication token), and\nis never the actual user password. However, for customers who entered the\nsame application and uid as the current external system user, this is to\ndetermine whether to view this as a correct external system user or a\nviolation.\n\nIn addition, additional information received from external services can\nbe recorded in the data field in JSON format."
                        }
                      ]
                    },
                    "href": {
                      "title": "Connection address",
                      "description": "Connection address.\n\nSame with {@link window.location.href} of client.",
                      "type": "string",
                      "format": "uri"
                    },
                    "referrer": {
                      "title": "Referrer address",
                      "description": "Referrer address.\n\nSame with {@link window.document.referrer} of client.",
                      "oneOf": [
                        {
                          "type": "null"
                        },
                        {
                          "type": "string",
                          "format": "uri"
                        },
                        {
                          "type": "string",
                          "maxLength": 0
                        }
                      ]
                    },
                    "ip": {
                      "title": "Connection IP Address",
                      "description": "Connection IP Address.",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "ipv4"
                        },
                        {
                          "type": "string",
                          "format": "ipv6"
                        }
                      ]
                    },
                    "created_at": {
                      "title": "Creation time of the connection record",
                      "description": "Creation time of the connection record.",
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "required": [
                    "id",
                    "channel",
                    "external_user",
                    "href",
                    "referrer",
                    "ip",
                    "created_at"
                  ]
                },
                "citizen": {
                  "title": "Real-name and mobile number authentication information",
                  "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile} input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "Primary Key",
                      "description": "Primary Key.",
                      "type": "string",
                      "format": "uuid"
                    },
                    "created_at": {
                      "title": "Creation time of record",
                      "description": "Creation time of record.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "mobile": {
                      "title": "Mobile number",
                      "description": "Mobile number.",
                      "x-wrtn-payment-order-mobile": true,
                      "type": "string",
                      "pattern": "^[0-9]*$"
                    },
                    "name": {
                      "title": "Real name, or equivalent nickname",
                      "description": "Real name, or equivalent nickname.",
                      "x-wrtn-payment-order-citizen": true,
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "created_at",
                    "mobile",
                    "name"
                  ]
                },
                "id": {
                  "title": "Primary Key",
                  "description": "Primary Key.",
                  "type": "string",
                  "format": "uuid"
                },
                "created_at": {
                  "title": "Creation tmie of record",
                  "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up.",
                  "type": "string",
                  "format": "date-time"
                }
              },
              "required": [
                "type",
                "member",
                "customer",
                "citizen",
                "id",
                "created_at"
              ]
            },
            "id": {
              "title": "Primary Key of Sale",
              "description": "Primary Key of Sale.",
              "type": "string",
              "format": "uuid"
            },
            "snapshot_id": {
              "title": "Primary Key of Snapshot",
              "description": "Primary Key of Snapshot.",
              "type": "string",
              "format": "uuid"
            },
            "latest": {
              "title": "Whether the snapshot is the latest one or not",
              "description": "Whether the snapshot is the latest one or not.",
              "type": "boolean"
            },
            "content": {
              "title": "Description and image content describing the sale",
              "description": "Description of the current {@link IShoppingSaleContent} type:\n\n> Content information of sale snapshot.\n> \n> `IShoppingSaleContent` is an entity embodies the description contents\n> of {@link IShoppingSale}.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid"
                },
                "title": {
                  "type": "string"
                },
                "thumbnails": {
                  "type": "array",
                  "items": {
                    "description": "Attachment File.\n\nEvery attachment files that are managed in current system.\n\nFor reference, it is possible to omit one of file {@link name}\nor {@link extension} like `.gitignore` or `README` case, but not\npossible to omit both of them.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "title": "Primary Key",
                        "description": "Primary Key.",
                        "type": "string",
                        "format": "uuid"
                      },
                      "created_at": {
                        "title": "Creation time of attachment file",
                        "description": "Creation time of attachment file.",
                        "type": "string",
                        "format": "date-time"
                      },
                      "name": {
                        "title": "File name, except extension",
                        "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string.",
                        "type": "string",
                        "maxLength": 255
                      },
                      "extension": {
                        "title": "Extension",
                        "description": "Extension.\n\nPossible to omit like `README` case.",
                        "oneOf": [
                          {
                            "type": "null"
                          },
                          {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 8
                          }
                        ]
                      },
                      "url": {
                        "title": "URL path of the real file",
                        "description": "URL path of the real file.",
                        "type": "string",
                        "format": "uri",
                        "contentMediaType": "image/*"
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "name",
                      "extension",
                      "url"
                    ]
                  }
                }
              },
              "required": [
                "id",
                "title",
                "thumbnails"
              ]
            },
            "channels": {
              "title": "List of channels and categories",
              "description": "List of channels and categories.\n\nWhich channels and categories the sale is registered to.",
              "type": "array",
              "items": {
                "description": "Target channel (and categories) of sale to sell.\n\n`IShoppingSaleChannel` is an entity that expresses through which\n{@link IShoppingChannel channel} a listing {@link IShoppingSale} is sold.\n\nAlso, if {@link IShoppingChannelCategory categories} are specified, it also\nmeans that the sale be sold. Otherwise, none of the categories of the channel\nbeing specified, it means that every categories of the channel is listing the\ntarget sale.",
                "type": "object",
                "properties": {
                  "categories": {
                    "title": "List of categories of the channel listing the sale",
                    "description": "List of categories of the channel listing the sale.\n\nIf empty, it means all categories of the channel is listing the sale.",
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/IShoppingChannelCategory.IInvert"
                    }
                  },
                  "id": {
                    "title": "Primary Key",
                    "description": "Primary Key.",
                    "type": "string",
                    "format": "uuid"
                  },
                  "created_at": {
                    "title": "Creation time of record",
                    "description": "Creation time of record.",
                    "type": "string",
                    "format": "date-time"
                  },
                  "code": {
                    "title": "Identifier code",
                    "description": "Identifier code.",
                    "type": "string"
                  },
                  "name": {
                    "title": "Name of the channel",
                    "description": "Name of the channel.",
                    "type": "string"
                  }
                },
                "required": [
                  "categories",
                  "id",
                  "created_at",
                  "code",
                  "name"
                ]
              },
              "minItems": 1
            },
            "tags": {
              "title": "List of search tags",
              "description": "List of search tags.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "units": {
              "title": "List of units",
              "description": "List of units.\n\nRecords about individual product composition information that are sold\nin the sale. Each {@link IShoppingSaleUnit unit} record has configurable\n{@link IShoppingSaleUnitOption options},\n{@link IShoppingSaleUnitOptionCandidate candidate} values for each\noption, and {@link IShoppingSaleUnitStock final stocks} determined by\nselecting every candidate values of each option.",
              "type": "array",
              "items": {
                "description": "Description of the current {@link IShoppingSaleUnit} type:\n\n> Product composition information handled in the sale.\n> \n> `IShoppingSaleUnit` is an entity that embodies the \"individual product\"\n> information handled in the {@link IShoppingSale sale}.\n> \n> For reference, the reason why `IShoppingSaleUnit` is separated from\n> {@link IShoppingSaleSnapshot} by an algebraic relationship of 1: N is because\n> there are some cases where multiple products are sold in one listing. This is\n> the case with so-called \"bundled products\".\n> \n> - Bundle from regular product (Mackbook Set)\n>   - Main Body\n>   - Keyboard\n>   - Mouse\n>   - Apple Care (Free A/S Voucher)\n> \n> And again, `IShoppingSaleUnit` does not in itself refer to the\n> {@link IShoppingSaleUnitStock final stock} that the\n> {@link IShoppingCustomer customer} will {@link IShoppingOrder purchase}.\n> The final stock can be found only after selecting all given\n> {@link IShoppingSaleUnitOption options} and their\n> {@link IShoppingSaleUnitOptionCandidate candidate values}.\n> \n> For example, even if you buy a Macbook, the final stocks are determined only\n> after selecting all the options (CPU / RAM / SSD), etc.",
                "type": "object",
                "properties": {
                  "stocks": {
                    "title": "List of final stocks",
                    "description": "List of final stocks.",
                    "type": "array",
                    "items": {
                      "description": "Invert information from the cart.\n\n------------------------------\n\nDescription of the current {@link IShoppingSaleUnitStock.IInvert} type:\n\n> Invert information from the cart.\n\n------------------------------\n\nDescription of the parent {@link IShoppingSaleUnitStock} type:\n\n> Final component information on units for sale.\n> \n> `IShoppingSaleUnitStock` is a subsidiary entity of {@link IShoppingSaleUnit}\n> that represents a product catalog for sale, and is a kind of final stock that is\n> constructed by selecting all {@link IShoppingSaleUnitSelectableOption options}\n> (variable \"select\" type) and their\n> {@link IShoppingSaleUnitOptionCandidate candidate} values in the belonging unit.\n> It is the \"good\" itself that customers actually purchase.\n> \n> - Product Name) MacBook\n>   - Options\n>     - CPU: { i3, i5, i7, i9 }\n>     - RAM: { 8GB, 16GB, 32GB, 64GB, 96GB }\n>     - SSD: { 256GB, 512GB, 1TB }\n>   - Number of final stocks: 4 * 5 * 3 = 60\n> \n> For reference, the total number of `IShoppingSaleUnitStock` records in an\n> attribution unit can be obtained using Cartesian Product. In other words, the\n> value obtained by multiplying all the candidate values that each\n> (variable \"select\" type) option can have by the number of cases is the total\n> number of final stocks in the unit.\n> \n> Of course, without a single variable \"select\" type option, the final stocks\n> count in the unit is only 1.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "title": "Primary Key",
                          "description": "Primary Key.",
                          "type": "string",
                          "format": "uuid"
                        },
                        "name": {
                          "title": "Representative name of the stock",
                          "description": "Representative name of the stock.",
                          "type": "string"
                        },
                        "price": {
                          "title": "Price of the stock",
                          "description": "Shopping price interface.",
                          "type": "object",
                          "properties": {
                            "nominal": {
                              "title": "Nominal price",
                              "description": "Nominal price.\n\nThis is not {@link real real price} to pay, but just a nominal price to show.\nIf this value is greater than the {@link real real price}, it would be shown\nlike {@link IShoppingSeller seller} is giving a discount.",
                              "type": "number",
                              "minimum": 0
                            },
                            "real": {
                              "title": "Real price to pay",
                              "description": "Real price to pay.",
                              "type": "number",
                              "minimum": 0
                            }
                          },
                          "required": [
                            "nominal",
                            "real"
                          ]
                        },
                        "quantity": {
                          "title": "Quantity of the stock in the cart",
                          "description": "Quantity of the stock in the cart.",
                          "type": "integer",
                          "minimum": 1
                        },
                        "inventory": {
                          "title": "Current inventory status of the stock",
                          "description": "Inventory information of a final stock.",
                          "type": "object",
                          "properties": {
                            "income": {
                              "title": "Total income quantity",
                              "description": "Total income quantity.",
                              "type": "integer"
                            },
                            "outcome": {
                              "title": "Total outcome quantity",
                              "description": "Total outcome quantity.",
                              "type": "integer"
                            }
                          },
                          "required": [
                            "income",
                            "outcome"
                          ]
                        },
                        "choices": {
                          "title": "List of choices",
                          "description": "List of choices.\n\nWhich values being written for each option.",
                          "type": "array",
                          "items": {
                            "description": "Invert information from the cart.\n\n------------------------------\n\nDescription of the current {@link IShoppingSaleUnitStockChoice.IInvert} type:\n\n> Invert information from the cart.\n\n------------------------------\n\nDescription of the parent {@link IShoppingSaleUnitStockChoice} type:\n\n> Selection information of final stock.\n> \n> `IShoppingSaleUnitStockChoice` is an entity that represents which\n> {@link IShoppingSaleUnitSelectableOption option} of each variable \"select\"\n> type was selected for each {@link IShoppingSaleUnitStock stock} and which\n> {@link IShoppingSaleUnitOptionCandidate candidate value} was selected within\n> it.\n> \n> Of course, if the bound {@link IShoppingSaleUnit unit} does not have any\n> options, this entity can also be ignored.",
                            "type": "object",
                            "properties": {
                              "id": {
                                "title": "Primary Key",
                                "description": "Primary Key.",
                                "type": "string",
                                "format": "uuid"
                              },
                              "option": {
                                "title": "Target option",
                                "description": "Target option.",
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "title": "Primary Key",
                                        "description": "Primary Key.",
                                        "type": "string",
                                        "format": "uuid"
                                      },
                                      "type": {
                                        "title": "Discriminant for the type of selectable option",
                                        "description": "Discriminant for the type of selectable option.",
                                        "const": "select"
                                      },
                                      "name": {
                                        "title": "Represents the name of the option",
                                        "description": "Represents the name of the option.",
                                        "type": "string"
                                      },
                                      "variable": {
                                        "title": "Whether the option is variable or not",
                                        "description": "Whether the option is variable or not.\n\nWhen type of current option is \"select\", this attribute means whether\nselecting different candidate value affects the final stock or not.",
                                        "type": "boolean"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "type",
                                      "name",
                                      "variable"
                                    ],
                                    "description": "Description of the current {@link IShoppingSaleUnitSelectableOption} type:\n\n> Individual option information on units for sale.\n> \n> `IShoppingSaleUnitSelectableOption` is a subsidiary entity of\n> {@link IShoppingSaleUnit} that represents individual products in the\n> {@link IShoppingSale sale}, and is an entity designed to represent individual\n> selectable option information for the unit.\n> \n> - Examples of Options\n>   - selectable options\n>     - Computer: CPU, RAM, SSD, etc.\n>     - Clothes: size, color, style, etc.\n>   - descriptive options\n>     - Engrave\n>     - Simple question\n> \n> If the {@link variable} property value is `true`, the final stock that the\n> {@link IShoppingCustomer customer} will purchase changes depending on the\n> selection of the {@link IShoppingSaleUnitOptionCandidate candidate value}.\n> \n> Conversely, if it is a type other than \"select\", or if the {@link variable}\n> property value is \"false\", , this is an option that has no meaning beyond\n> simple information transfer. Therefore, no matter what value the customer\n> chooses when purchasing it, the option in this case does not affect the\n> {@link IShoppingSaleUnitStock final stock}."
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "title": "Primary Key",
                                        "description": "Primary Key.",
                                        "type": "string",
                                        "format": "uuid"
                                      },
                                      "type": {
                                        "title": "Type of descriptive option",
                                        "description": "Type of descriptive option.\n\nWhich typed value should be written when purchasing.",
                                        "oneOf": [
                                          {
                                            "const": "string"
                                          },
                                          {
                                            "const": "number"
                                          },
                                          {
                                            "const": "boolean"
                                          }
                                        ]
                                      },
                                      "name": {
                                        "title": "Readable name of the option",
                                        "description": "Readable name of the option.",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "type",
                                      "name"
                                    ],
                                    "description": "Descriptive option.\n\nWhen type of the option not `\"select\"`, it means the option is descriptive\nthat requiring {@link IShoppingCustomer customers} to write some value to\n{@link IShoppingOrder purchase}. Also, whatever customer writes about the\noption, it does not affect the {@link IShoppingSaleUnitStock final stock}.\n\nAnother words, the descriptive option is just for information transfer."
                                  }
                                ]
                              },
                              "candidate": {
                                "title": "Selected candidate value",
                                "description": "Selected candidate value.",
                                "oneOf": [
                                  {
                                    "type": "null"
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "title": "Primary Key",
                                        "description": "Primary Key.",
                                        "type": "string",
                                        "format": "uuid"
                                      },
                                      "name": {
                                        "title": "Represents the name of the candidate value",
                                        "description": "Represents the name of the candidate value.",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "name"
                                    ],
                                    "description": "Selectable candidate values within an option.\n\n`IShoppingSaleUnitOptionCandidate` is an entity that represents individual\ncandidate values that can be selected from\n{@link IShoppingSaleUnitSelectableOption options of the \"select\" type}.\n\n- Example\n  - RAM: 8GB, 16GB, 32GB\n  - GPU: RTX 3060, RTX 4080, TESLA\n  - License: Private, Commercial, Educatiion\n\nBy the way, if belonged option is not \"select\" type, this entity never\nbeing used."
                                  }
                                ]
                              },
                              "value": {
                                "title": "Written value",
                                "description": "Written value.",
                                "oneOf": [
                                  {
                                    "type": "null"
                                  },
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  },
                                  {
                                    "type": "boolean"
                                  }
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "option",
                              "candidate",
                              "value"
                            ]
                          }
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "price",
                        "quantity",
                        "inventory",
                        "choices"
                      ]
                    },
                    "minItems": 1
                  },
                  "id": {
                    "title": "Primary Key",
                    "description": "Primary Key.",
                    "type": "string",
                    "format": "uuid"
                  },
                  "name": {
                    "title": "Representative name of the unit",
                    "description": "Representative name of the unit.",
                    "type": "string"
                  },
                  "primary": {
                    "title": "Whether the unit is primary or not",
                    "description": "Whether the unit is primary or not.\n\nJust a labeling value.",
                    "type": "boolean"
                  },
                  "required": {
                    "title": "Whether the unit is required or not",
                    "description": "Whether the unit is required or not.\n\nWhen the unit is required, the customer must select the unit. If do not\nselect, customer can't buy it.\n\nFor example, if there's a sale \"Macbook Set\" and one of the unit is the\n\"Main Body\", is it possible to buy the \"Macbook Set\" without the\n\"Main Body\" unit? This property is for that case.",
                    "type": "boolean"
                  }
                },
                "required": [
                  "stocks",
                  "id",
                  "name",
                  "primary",
                  "required"
                ]
              },
              "minItems": 1
            },
            "created_at": {
              "title": "Creation time of the record",
              "description": "Creation time of the record.\n\nNote that, this property is different with {@link opened_at},\nwhich means the timepoint of the sale is opened.",
              "type": "string",
              "format": "date-time"
            },
            "updated_at": {
              "title": "Last updated time of the record",
              "description": "Last updated time of the record.\n\nIn another words, creation time of the last snapshot.",
              "type": "string",
              "format": "date-time"
            },
            "paused_at": {
              "title": "Paused time of the sale",
              "description": "Paused time of the sale.\n\nThe sale is paused by the seller, for some reason.\n\n{@link IShoppingCustomer Customers} can still see the sale on the\nboth list and detail pages, but the sale has a warning label\n\"The sale is paused by the seller\".",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "date-time"
                }
              ]
            },
            "suspended_at": {
              "title": "Suspended time of the sale",
              "description": "Suspended time of the sale.\n\nThe sale is suspended by the seller, for some reason.\n\n{@link IShoppingCustomer Customers} cannot see the sale on the\nboth list and detail pages. It is almost same with soft delettion,\nbut there's a little bit difference that the owner\n{@link IShoppingSeller seller} can still see the sale and resume it.\n\nOf course, the {@link IShoppingCustomer customers} who have\nalready purchased the sale can still see the sale on the\n{@link IShoppingOrder order} page.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "date-time"
                }
              ]
            },
            "opened_at": {
              "title": "Opening time of the sale",
              "description": "Opening time of the sale.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "date-time"
                }
              ]
            },
            "closed_at": {
              "title": "Closing time of the sale",
              "description": "Closing time of the sale.\n\nIf this value is `null`, the sale be continued forever.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "date-time"
                }
              ]
            }
          },
          "required": [
            "section",
            "seller",
            "id",
            "snapshot_id",
            "latest",
            "content",
            "channels",
            "tags",
            "units",
            "created_at",
            "updated_at",
            "paused_at",
            "suspended_at",
            "opened_at",
            "closed_at"
          ]
        },
        "orderable": {
          "title": "Whether current commodity is orderable or not",
          "description": "Whether current commodity is orderable or not.\n\nIf this attribute is `false`, then the commodity is not orderable, because\nit has already been ordered.",
          "type": "boolean"
        },
        "pseudo": {
          "title": "Whether current commodity is pseudo or not",
          "description": "Whether current commodity is pseudo or not.\n\nWhen this attribute is `true`, then the commodity is not the real one,\nbut just fake information only for calculating the discount effect by\n{@link IShoppingCoupon coupons}.",
          "type": "boolean"
        },
        "volume": {
          "title": "Volume of the commodity to purchase",
          "description": "Volume of the commodity to purchase.\n\nA value indicating how many sets would be multiplied to the children\n{@link IShoppingSaleUnitStock.IInvert.quantity} values.",
          "type": "integer",
          "minimum": 1
        },
        "price": {
          "title": "Price of the commodity",
          "description": "Shopping price interface.",
          "type": "object",
          "properties": {
            "nominal": {
              "title": "Nominal price",
              "description": "Nominal price.\n\nThis is not {@link real real price} to pay, but just a nominal price to show.\nIf this value is greater than the {@link real real price}, it would be shown\nlike {@link IShoppingSeller seller} is giving a discount.",
              "type": "number",
              "minimum": 0
            },
            "real": {
              "title": "Real price to pay",
              "description": "Real price to pay.",
              "type": "number",
              "minimum": 0
            }
          },
          "required": [
            "nominal",
            "real"
          ]
        },
        "created_at": {
          "title": "Creation time of the record",
          "description": "Creation time of the record.",
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "sale",
        "orderable",
        "pseudo",
        "volume",
        "price",
        "created_at"
      ]
    },
    "success": true,
    "arguments": {
      "type": {
        "host": "http://127.0.0.1:37001",
        "headers": {
          "Authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0YWJsZSI6InNob3BwaW5nX2N1c3RvbWVycyIsImlkIjoiMjVlYzg3ZjctODE1ZC00YjU3LTk1NzYtYzk1Mzk4NGJjMjhmIiwicmVhZG9ubHkiOmZhbHNlLCJleHBpcmVkX2F0IjoiMjAyNC0xMi0xM1QwOTo0MjoxMi41MzlaIiwicmVmcmVzaGFibGVfdW50aWwiOiIyMDI0LTEyLTI3VDA2OjQyOjEyLjUzOVoiLCJpYXQiOjE3MzQwNzIxMzJ9.zWZrU-d1bSW-MawmSo2RYRPk_73xtR_PxfFUrEpDJkc"
        }
      },
      "properties": {
        "sale_id": "6b0c6399-17f6-420e-a693-c453c8fd155d",
        "stocks": [
          {
            "unit_id": "bf0794e6-1c99-4a7d-be11-5e6a5bf690b0",
            "stock_id": "b516162c-3a58-4997-8ebf-9054ff3b1397",
            "choices": [
              {
                "option_id": "2a67e9ec-aed5-4d7e-a316-fa73602c6d41",
                "candidate_id": "e70b406e-9bc6-41a4-bb1c-d92e69ce4b0b",
                "value": null
              },
              {
                "option_id": "7433b627-940f-403f-bd4a-6a9107792c81",
                "candidate_id": "ec823002-ff99-4419-bdd4-6e880d7082eb",
                "value": null
              },
              {
                "option_id": "487827f7-9e48-4c00-a24e-75c90b457953",
                "candidate_id": "cfc02936-1db5-4d3c-a43b-0825d394d4e2",
                "value": null
              },
              {
                "option_id": "d5dcafea-3953-4ad5-b471-b45dcee2103b",
                "candidate_id": "6ad47447-c28e-4e98-9f44-d86f37b4222c",
                "value": null
              }
            ],
            "quantity": 1
          },
          {
            "unit_id": "aeb2a291-ec9e-4527-b3cd-d6d686676a58",
            "stock_id": "149fbf9b-f6fa-403a-8438-3a2d7ce8c0ca",
            "choices": [],
            "quantity": 1
          },
          {
            "unit_id": "54eb903a-eb2e-4d60-9ddc-786a47999dda",
            "stock_id": "f2548de0-2168-46b1-985d-a2b56c9e878e",
            "choices": [],
            "quantity": 1
          }
        ],
        "volume": 1
      }
    },
    "value": {
      "id": "c276d7b6-91ec-4db8-a8c3-4687626efaf5",
      "sale": {
        "section": {
          "id": "a01c572c-3199-4929-ac67-ba7c31b2c808",
          "code": "general",
          "name": "General",
          "created_at": "2024-12-13T06:42:11.124Z"
        },
        "seller": {
          "type": "seller",
          "member": {
            "id": "a853492c-70b4-487f-9648-0f6109a0ad69",
            "nickname": "Robot",
            "emails": [
              {
                "id": "81ea73c4-b41e-4022-9384-d51d3215797e",
                "value": "robot@nestia.io",
                "created_at": "2024-12-13T06:42:11.227Z"
              }
            ],
            "created_at": "2024-12-13T06:42:11.227Z"
          },
          "customer": {
            "id": "aeb8583b-8bd9-4d29-adea-78779b405046",
            "channel": {
              "id": "2323f4bd-21ad-45b7-ae3b-cadd84dcc935",
              "created_at": "2024-12-13T06:42:10.908Z",
              "code": "samchon",
              "name": "Samchon Shopping Mall"
            },
            "external_user": null,
            "href": "http://127.0.0.1/TestAutomation",
            "referrer": "http://127.0.0.1/NodeJS",
            "ip": "127.0.0.1",
            "created_at": "2024-12-13T06:42:11.258Z"
          },
          "citizen": {
            "id": "43aedfea-6b2c-4c18-9f69-60373c9580dd",
            "created_at": "2024-12-13T06:42:11.157Z",
            "mobile": "01012345678",
            "name": "Robot"
          },
          "id": "addccb32-ac48-460e-9624-d9809da19d99",
          "created_at": "2024-12-13T06:42:11.241Z"
        },
        "id": "6b0c6399-17f6-420e-a693-c453c8fd155d",
        "snapshot_id": "fae10058-fb6b-4a87-bbc9-4e1cf1746a5d",
        "latest": true,
        "content": {
          "id": "5cb7834c-6867-4553-bdea-072d986a9435",
          "title": "Apple MacBook Pro",
          "thumbnails": [
            {
              "id": "cbb4e2a3-19bc-47d9-941e-5394fe49540a",
              "created_at": "2024-12-13T06:42:11.584Z",
              "name": "apple-macbook-pro-thumbnail",
              "extension": "png",
              "url": "https://store.storeimages.cdn-apple.com/8756/as-images.apple.com/is/mbp14-spaceblack-gallery1-202410?wid=4000&hei=3074&fmt=jpeg&qlt=90&.v=1729264981617"
            }
          ]
        },
        "channels": [
          {
            "categories": [
              {
                "parent": null,
                "id": "9b9b36f4-4e50-48ff-ac05-ee8588be0dbe",
                "code": "electronics",
                "parent_id": null,
                "name": "Electronics",
                "created_at": "2024-12-13T06:42:10.919Z"
              },
              {
                "parent": {
                  "parent": {
                    "parent": null,
                    "id": "9b9b36f4-4e50-48ff-ac05-ee8588be0dbe",
                    "code": "electronics",
                    "parent_id": null,
                    "name": "Electronics",
                    "created_at": "2024-12-13T06:42:10.919Z"
                  },
                  "id": "ab794f96-49c0-4318-9ac8-91318b188e6c",
                  "code": "laptops",
                  "parent_id": "9b9b36f4-4e50-48ff-ac05-ee8588be0dbe",
                  "name": "Laptops",
                  "created_at": "2024-12-13T06:42:10.940Z"
                },
                "id": "183f6097-70dd-4333-8dc4-f0c0cf43fa69",
                "code": "macbooks",
                "parent_id": "ab794f96-49c0-4318-9ac8-91318b188e6c",
                "name": "MacBooks",
                "created_at": "2024-12-13T06:42:10.948Z"
              }
            ],
            "id": "2323f4bd-21ad-45b7-ae3b-cadd84dcc935",
            "created_at": "2024-12-13T06:42:10.908Z",
            "code": "samchon",
            "name": "Samchon Shopping Mall"
          }
        ],
        "tags": [],
        "units": [
          {
            "stocks": [
              {
                "id": "b516162c-3a58-4997-8ebf-9054ff3b1397",
                "name": "MacBook Pro (Silver, 16GB, 512GB, Korean)",
                "price": {
                  "nominal": 2000000,
                  "real": 1800000
                },
                "quantity": 1,
                "inventory": {
                  "income": 10000,
                  "outcome": 0
                },
                "choices": [
                  {
                    "id": "e9d063f3-d6e2-4871-a58a-b5b86d44518b",
                    "option": {
                      "id": "2a67e9ec-aed5-4d7e-a316-fa73602c6d41",
                      "type": "select",
                      "name": "Color",
                      "variable": true
                    },
                    "candidate": {
                      "id": "e70b406e-9bc6-41a4-bb1c-d92e69ce4b0b",
                      "name": "Silver"
                    },
                    "value": null
                  },
                  {
                    "id": "f7067a64-195f-4c60-be2c-0c0038b09e63",
                    "option": {
                      "id": "7433b627-940f-403f-bd4a-6a9107792c81",
                      "type": "select",
                      "name": "RAM",
                      "variable": true
                    },
                    "candidate": {
                      "id": "ec823002-ff99-4419-bdd4-6e880d7082eb",
                      "name": "16GB"
                    },
                    "value": null
                  },
                  {
                    "id": "f0a90d96-4994-42f4-8c5e-36c24635eb1d",
                    "option": {
                      "id": "487827f7-9e48-4c00-a24e-75c90b457953",
                      "type": "select",
                      "name": "SSD",
                      "variable": true
                    },
                    "candidate": {
                      "id": "cfc02936-1db5-4d3c-a43b-0825d394d4e2",
                      "name": "512GB"
                    },
                    "value": null
                  },
                  {
                    "id": "99c4b677-f44c-49be-99fa-dcea0d6f7f13",
                    "option": {
                      "id": "d5dcafea-3953-4ad5-b471-b45dcee2103b",
                      "type": "select",
                      "name": "Keyboard Language",
                      "variable": true
                    },
                    "candidate": {
                      "id": "6ad47447-c28e-4e98-9f44-d86f37b4222c",
                      "name": "Korean"
                    },
                    "value": null
                  }
                ]
              }
            ],
            "id": "bf0794e6-1c99-4a7d-be11-5e6a5bf690b0",
            "name": "MacBook M3 Pro 14inch Entity",
            "primary": false,
            "required": true
          },
          {
            "stocks": [
              {
                "id": "149fbf9b-f6fa-403a-8438-3a2d7ce8c0ca",
                "name": "Warranty Program",
                "price": {
                  "nominal": 100000,
                  "real": 89000
                },
                "quantity": 1,
                "inventory": {
                  "income": 10000,
                  "outcome": 0
                },
                "choices": []
              }
            ],
            "id": "aeb2a291-ec9e-4527-b3cd-d6d686676a58",
            "name": "Warranty Program",
            "primary": false,
            "required": false
          },
          {
            "stocks": [
              {
                "id": "f2548de0-2168-46b1-985d-a2b56c9e878e",
                "name": "Magnetic Keyboard",
                "price": {
                  "nominal": 200000,
                  "real": 169000
                },
                "quantity": 1,
                "inventory": {
                  "income": 8000,
                  "outcome": 0
                },
                "choices": []
              }
            ],
            "id": "54eb903a-eb2e-4d60-9ddc-786a47999dda",
            "name": "Magnetic Keyboard",
            "primary": false,
            "required": false
          }
        ],
        "created_at": "2024-12-13T06:42:11.585Z",
        "updated_at": "2024-12-13T06:42:11.585Z",
        "paused_at": null,
        "suspended_at": null,
        "opened_at": "2024-12-13T06:42:11.580Z",
        "closed_at": null
      },
      "orderable": true,
      "pseudo": false,
      "volume": 1,
      "price": {
        "nominal": 2300000,
        "real": 2058000
      },
      "created_at": "2024-12-13T06:42:13.069Z"
    }
  },
  {
    "name": "shoppings_customers_carts_commodities_post",
    "method": "post",
    "path": "/shoppings/customers/carts/commodities",
    "description": "Create a new commodity.\n\nCreate a new {@link IShoppingCartCommodity commodity} into a specific\nshopping cart.\n\nIf {@link IShoppingCartCommodity.ICreate.accumulate} has `true` value\nand there's some same commodity that composed with same\n{@link IShoppingSaleUnitStock.IInvert stocks and quantities},\nthen new commodity would not be created but the volume would be accumulated.\n\nBy the way, if the target {@link IShoppingSale sale} has been suspended or\n{@link IShoppingSaleUnitStockInventory out of stock}, then 410 gone error\nwould be thrown. Therefore, it would better to check the target sale and\n{@link IShoppingSaleUnitStock stock}'s status before.",
    "parameters": {
      "type": "object",
      "properties": {
        "body": {
          "description": "Creation information of a shopping cart commodity.\n\n------------------------------\n\nDescription of the current {@link IShoppingCartCommodity.ICreate} type:\n\n> Creation information of a shopping cart commodity.\n\n------------------------------\n\nDescription of the parent {@link IShoppingCartCommodity} type:\n\n> Item in a shopping cart.\n> \n> `IShoppingCartCommodity` is an entity that represents a\n> {@link IShoppingSaleSnapshot snapshot} of the items that\n> {@link IShoppingCustomer customer} has placed into his shopping cart with a\n> {@link IShoppingOrder purchase} in mind. And if the customer continues this\n> into an actual order in the future, `IShoppingCartCommodity` be changed to\n> {@link IShoppingOrderGood}.\n> \n> And while adding a sale snapshot to the shopping cart, the customer inevitably\n> selects specific {@link IShoppingSaleUnit units} and\n> {@link IShoppingSaleUnitStock final stocks} within the listing snapshot.\n> Information about these units and stocks is recorded in the subsidiary entity\n> {@link IShoppingCartCommodityStock}. Also, there is an attribute {@link volume}\n> that indicates how many sets of snapshots of the target commodity will be\n> purchased. This \"volume\" is a value that will be multiplied by\n> {@link IShoppingSaleUnitStock.IInvert.quantity}, the quantity for each\n> component.",
          "type": "object",
          "properties": {
            "sale_id": {
              "title": "Target sale's {@link IShoppingSale.id}",
              "description": "Target sale's {@link IShoppingSale.id}.",
              "type": "string",
              "format": "uuid"
            },
            "stocks": {
              "title": "List of the stocks to be purchased",
              "description": "List of the stocks to be purchased.",
              "type": "array",
              "items": {
                "description": "Creation information of the commodity stock of shopping cart.\n\nWhen record being created, its corresponding structure would be\n{@link IShoppingSaleSnapshotUnit.IInvert} and\n{@link IShoppingSaleSnapshotUnitStock.IInvert}.\n\n------------------------------\n\nDescription of the current {@link IShoppingCartCommodityStock.ICreate} type:\n\n> Creation information of the commodity stock of shopping cart.\n> \n> When record being created, its corresponding structure would be\n> {@link IShoppingSaleSnapshotUnit.IInvert} and\n> {@link IShoppingSaleSnapshotUnitStock.IInvert}.",
                "type": "object",
                "properties": {
                  "unit_id": {
                    "title": "Target unit's {@link IShoppingSaleUnit.id}",
                    "description": "Target unit's {@link IShoppingSaleUnit.id}.",
                    "type": "string",
                    "format": "uuid"
                  },
                  "stock_id": {
                    "title": "Target stock's {@link IShoppingSaleUnitStock.id}",
                    "description": "Target stock's {@link IShoppingSaleUnitStock.id}.\n\nIt must be matched with the {@link choices} property.",
                    "type": "string",
                    "format": "uuid"
                  },
                  "choices": {
                    "title": "Creation information of the choices for each option",
                    "description": "Creation information of the choices for each option.",
                    "type": "array",
                    "items": {
                      "description": "Creation information of the choice for each option.\n\nWhen record being created, its corresponding structure would be\n{@link IShoppingSaleUnitStockChoice.IInvert}.\n\n------------------------------\n\nDescription of the current {@link IShoppingCartCommodityStockChoice.ICreate} type:\n\n> Creation information of the choice for each option.\n> \n> When record being created, its corresponding structure would be\n> {@link IShoppingSaleUnitStockChoice.IInvert}.",
                      "type": "object",
                      "properties": {
                        "option_id": {
                          "title": "Target option's {@link IShoppingSaleUnitOption.id}",
                          "description": "Target option's {@link IShoppingSaleUnitOption.id}.",
                          "type": "string",
                          "format": "uuid"
                        },
                        "candidate_id": {
                          "title": "Target candidate's {@link IShoppingSaleUnitOptionCandidate.id}",
                          "description": "Target candidate's {@link IShoppingSaleUnitOptionCandidate.id}.\n\nWhen target option's type is `select`, then this attribute is not\n`null` but has a value.",
                          "oneOf": [
                            {
                              "type": "null"
                            },
                            {
                              "type": "string",
                              "format": "uuid"
                            }
                          ]
                        },
                        "value": {
                          "title": "Written value about the option",
                          "description": "Written value about the option.\n\nWhen target option's type is not `select`, but an atomic type value\nlike `boolean`, `number` or `string`, then this attribute is not\n`null` but has the matched atomic value.",
                          "oneOf": [
                            {
                              "type": "null"
                            },
                            {
                              "type": "string"
                            },
                            {
                              "type": "number"
                            },
                            {
                              "type": "boolean"
                            }
                          ]
                        }
                      },
                      "required": [
                        "option_id",
                        "candidate_id",
                        "value"
                      ]
                    }
                  },
                  "quantity": {
                    "title": "Quantity of the stock to purchase",
                    "description": "Quantity of the stock to purchase.\n\nThis value is multiplied by the {@link IShoppingCartCommodity.volume}.",
                    "type": "integer",
                    "minimum": 1
                  }
                },
                "required": [
                  "unit_id",
                  "stock_id",
                  "choices",
                  "quantity"
                ]
              },
              "minItems": 1
            },
            "volume": {
              "title": "Volume of the commodity to purchase",
              "description": "Volume of the commodity to purchase.\n\nA value indicating how many sets would be multiplied to the children\n{@link IShoppingSaleUnitStock.IInvert.quantity} values.",
              "type": "integer",
              "minimum": 1
            },
            "accumulate": {
              "title": "Whether to accumulate the volume or not",
              "description": "Whether to accumulate the volume or not.\n\nIf this attribute is not `false` and there's same commodity that\ncomposed with same stocks and options, then the volume will be\naccumulated to the existed one.\n\nOtherwise, duplicated commodity would be newly created.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "boolean"
                }
              ]
            }
          },
          "required": [
            "sale_id",
            "stocks",
            "volume",
            "accumulate"
          ]
        }
      },
      "additionalProperties": false,
      "required": [
        "body"
      ],
      "$defs": {
        "IShoppingChannelCategory.IInvert": {
          "description": "Invert category information with parent category.",
          "type": "object",
          "properties": {
            "parent": {
              "title": "Parent category info with recursive structure",
              "description": "Parent category info with recursive structure.\n\nIf no parent exists, then be `null`.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "$ref": "#/$defs/IShoppingChannelCategory.IInvert"
                }
              ]
            },
            "id": {
              "title": "Primary Key",
              "description": "Primary Key.",
              "type": "string",
              "format": "uuid"
            },
            "code": {
              "title": "Identifier code of the category",
              "description": "Identifier code of the category.\n\nThe code must be unique in the channel.",
              "type": "string"
            },
            "parent_id": {
              "title": "Parent category's ID",
              "description": "Parent category's ID.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "name": {
              "title": "Representative name of the category",
              "description": "Representative name of the category.\n\nThe name must be unique within the parent category. If no parent exists,\nthen the name must be unique within the channel between no parent\ncategories.",
              "type": "string"
            },
            "created_at": {
              "title": "Creation time of record",
              "description": "Creation time of record.",
              "type": "string",
              "format": "date-time"
            }
          },
          "required": [
            "parent",
            "id",
            "code",
            "parent_id",
            "name",
            "created_at"
          ]
        }
      }
    },
    "output": {
      "description": "Item in a shopping cart.\n\n`IShoppingCartCommodity` is an entity that represents a\n{@link IShoppingSaleSnapshot snapshot} of the items that\n{@link IShoppingCustomer customer} has placed into his shopping cart with a\n{@link IShoppingOrder purchase} in mind. And if the customer continues this\ninto an actual order in the future, `IShoppingCartCommodity` be changed to\n{@link IShoppingOrderGood}.\n\nAnd while adding a sale snapshot to the shopping cart, the customer inevitably\nselects specific {@link IShoppingSaleUnit units} and\n{@link IShoppingSaleUnitStock final stocks} within the listing snapshot.\nInformation about these units and stocks is recorded in the subsidiary entity\n{@link IShoppingCartCommodityStock}. Also, there is an attribute {@link volume}\nthat indicates how many sets of snapshots of the target commodity will be\npurchased. This \"volume\" is a value that will be multiplied by\n{@link IShoppingSaleUnitStock.IInvert.quantity}, the quantity for each\ncomponent.",
      "type": "object",
      "properties": {
        "id": {
          "title": "Primary Key",
          "description": "Primary Key.",
          "type": "string",
          "format": "uuid"
        },
        "sale": {
          "title": "Invert information of the sale (snapshot), in the perspective of commodity",
          "description": "Invert information of the sale snapshot, in the perspective of commodity.\n\n`IShoppingSaleSnapshot.IInvert` is a structure used to represent a\nsnapshot in the perspective of a {@link IShoppingCommodity}, corresponding\nto an {@link IShoppingCartCommodityStock} entity.\n\nTherefore, `IShoppingSaleSnapshot.IInvert` does not contain every\n{@link IShoppingSaleUnit units} and {@link IShoppingSaleUnitStock stocks}\nof the snapshot records, but only some of the records which are put\ninto the {@link IShoppingCartCommodity shopping cart}.\n\n------------------------------\n\nDescription of the current {@link IShoppingSaleSnapshot.IInvert} type:\n\n> Invert information of the sale snapshot, in the perspective of commodity.\n> \n> `IShoppingSaleSnapshot.IInvert` is a structure used to represent a\n> snapshot in the perspective of a {@link IShoppingCommodity}, corresponding\n> to an {@link IShoppingCartCommodityStock} entity.\n> \n> Therefore, `IShoppingSaleSnapshot.IInvert` does not contain every\n> {@link IShoppingSaleUnit units} and {@link IShoppingSaleUnitStock stocks}\n> of the snapshot records, but only some of the records which are put\n> into the {@link IShoppingCartCommodity shopping cart}.\n\n------------------------------\n\nDescription of the parent {@link IShoppingSaleSnapshot} type:\n\n> Snapshot record of sale.\n> \n> `IShoppingSaleSnapshot` is an entity that embodies a snapshot of a sale,\n> and the ERD (Entity Relationship Diagram) describes the role of the\n> `shopping_sale_snapshots` table as follows:\n> \n> > {@link IShoppingSale shopping_sales} is an entity that embodies\n> > \"product sales\" (sales) information registered by the\n> > {@link IShoppingSeller seller}. And the main information of the sale is\n> > recorded in the sub `shopping_sale_snapshots`, not in the main\n> > {@link IShoppingSale shopping_sales}. When a seller changes a previously\n> > registered item, the existing {@link IShoppingSale shopping_sales} record\n> > is not changed, but a new snapshot record is created.\n> >\n> > This is to preserve the {@link IShoppingCustomer customer}'s\n> > {@link IShoppingOrder purchase history} flawlessly after the customer\n> > purchases a specific item, even if the seller changes the components or price\n> > of the item. It is also intended to support sellers in so-called A/B testing,\n> > which involves changing components or prices and measuring the performance\n> > in each case.\n> \n> By the way, DTO (Data Transfer Object) level used by the front-end developer,\n> it does not distinguish {@link IShoppingSale} and `IShoppingSaleSnapshot`\n> strictly, and generally handles {@link IShoppingSale} and snapshot together.\n> \n> But even though the DTO level does not strictly distinguish them, the word and\n> concept of \"snapshot\" is still important, so it is recommended to understand\n> the concept of \"snapshot\" properly.",
          "type": "object",
          "properties": {
            "section": {
              "title": "Belonged section's information",
              "description": "Section information.\n\n`IShoppingSection` is a concept that refers to the spatial information of\nthe market.\n\nIf we compare the section mentioned here to the offline market, it means a\nspatially separated area within the store, such as the \"fruit corner\" or\n\"butcher corner\". Therefore, in the {@link IShoppingSale sale} entity, it is\nnot possible to classify multiple sections simultaneously, but only one section\ncan be classified.\n\nBy the way, if your shopping mall system requires only one section, then just\nuse only one. This concept is designed to be expandable in the future.",
              "type": "object",
              "properties": {
                "id": {
                  "title": "Primary Key",
                  "description": "Primary Key.",
                  "type": "string",
                  "format": "uuid"
                },
                "code": {
                  "title": "Identifier code",
                  "description": "Identifier code.",
                  "type": "string"
                },
                "name": {
                  "title": "Representative name of the section",
                  "description": "Representative name of the section.",
                  "type": "string"
                },
                "created_at": {
                  "title": "Creation time of record",
                  "description": "Creation time of record.",
                  "type": "string",
                  "format": "date-time"
                }
              },
              "required": [
                "id",
                "code",
                "name",
                "created_at"
              ]
            },
            "seller": {
              "title": "Seller who've registered the sale",
              "description": "Invert information starting from seller info.\n\nInstead of accessing to the seller information from the\n{@link IShoppingCustomer.member} -> {@link IShoppingMember.seller},\n`IShoppingSeller.IInvert` starts from the seller information\nand access to the customer, member and {@link IShoppingCitizen citizen}\ninformation inversely.\n\n------------------------------\n\nDescription of the current {@link IShoppingSeller.IInvert} type:\n\n> Invert information starting from seller info.\n> \n> Instead of accessing to the seller information from the\n> {@link IShoppingCustomer.member} -> {@link IShoppingMember.seller},\n> `IShoppingSeller.IInvert` starts from the seller information\n> and access to the customer, member and {@link IShoppingCitizen citizen}\n> information inversely.\n\n------------------------------\n\nDescription of the parent {@link IShoppingSeller} type:\n\n> Seller information.\n> \n> `IShoppingSeller` is an entity that embodies a person who registers\n> {@link IShoppingSale sales} to operate selling activities, with\n> {@link IShoppingMember membership} joining.\n> \n> For reference, unlike {@link IShoppingCustomer customers} which can\n> participate even without membership joining, seller must join membership\n> to operate sales. Also, seller must do the\n> {@link IShoppingCitizen real-name and mobile authentication}, too.",
              "type": "object",
              "properties": {
                "type": {
                  "title": "Discriminant for the type of customer",
                  "description": "Discriminant for the type of customer.",
                  "const": "seller"
                },
                "member": {
                  "title": "Membership joining information",
                  "description": "Invert information of member.\n\nThis invert member information has been designed to be used for another\ninvert information of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert}\n- {@link IShoppingAdministrator.IInvert}\n\n------------------------------\n\nDescription of the current {@link IShoppingMember.IInvert} type:\n\n> Invert information of member.\n> \n> This invert member information has been designed to be used for another\n> invert information of sellers and administrators like below.\n> \n> - {@link IShoppingSeller.IInvert}\n> - {@link IShoppingAdministrator.IInvert}\n\n------------------------------\n\nDescription of the parent {@link IShoppingMember} type:\n\n> Member Account.\n> \n> `IShoppingMember` is an entity that symbolizes the case when a\n> {@link IShoppingCustomer} signs up as a member of this shopping mall\n> system.\n> \n> If a `IShoppingMember` has seller or administrator property. it means that\n> the {@link IShoppingCustomer} has acting as a {@link IShoppingSeller seller}\n> or {@link IShoppingAdministrator administrator} at the same time.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "Primary Key",
                      "description": "Primary Key.",
                      "type": "string",
                      "format": "uuid"
                    },
                    "nickname": {
                      "title": "Nickname that uniquely identifies the member",
                      "description": "Nickname that uniquely identifies the member.",
                      "type": "string"
                    },
                    "emails": {
                      "title": "List of emails",
                      "description": "List of emails.",
                      "type": "array",
                      "items": {
                        "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "title": "Primary Key",
                            "description": "Primary Key.",
                            "type": "string",
                            "format": "uuid"
                          },
                          "value": {
                            "title": "Email address value",
                            "description": "Email address value.",
                            "type": "string",
                            "format": "email"
                          },
                          "created_at": {
                            "title": "Creation time of record",
                            "description": "Creation time of record.",
                            "type": "string",
                            "format": "date-time"
                          }
                        },
                        "required": [
                          "id",
                          "value",
                          "created_at"
                        ]
                      }
                    },
                    "created_at": {
                      "title": "Creation time of record",
                      "description": "Creation time of record.\n\nAnother words, the time when the member has signed up.",
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "required": [
                    "id",
                    "nickname",
                    "emails",
                    "created_at"
                  ]
                },
                "customer": {
                  "title": "Customer, the connection information",
                  "description": "Inverted customer informatino.\n\nThis inverted customer information has been designed to be used for\nanother invert information of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert}\n- {@link IShoppingAdministrator.IInvert}\n\n------------------------------\n\nDescription of the current {@link IShoppingCustomer.IInvert} type:\n\n> Inverted customer informatino.\n> \n> This inverted customer information has been designed to be used for\n> another invert information of sellers and administrators like below.\n> \n> - {@link IShoppingSeller.IInvert}\n> - {@link IShoppingAdministrator.IInvert}\n\n------------------------------\n\nDescription of the parent {@link IShoppingCustomer} type:\n\n> Customer information, but not a person but a connection basis.\n> \n> `IShoppingCustomer` is an entity that literally embodies the information of\n> those who participated in the market as customers. By the way, the\n> `IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\n> even if the same person connects to the shopping mall multiple, multiple\n> records are created in `IShoppingCustomer`.\n> \n> The first purpose of this is to track the customer's inflow path in detail,\n> and it is for cases where the same person enters as a non-member,\n> {@link IShoppingCartCommodity puts items in the shopping cart} in advance,\n> and only authenticates their {@link IShoppingCitizen real name} or\n> registers/logs in at the moment of {@link IShoppingOrderPublish payment}.\n> It is the second. Lastly, it is to accurately track the activities that\n> a person performs at the shopping mall in various ways like below.\n> \n> - Same person comes from an {@link IShoppingExternalUser external service}\n> - Same person creates multiple accounts\n> - Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n> - Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n> \n> Therefore, `IShoppingCustomer` can have multiple records with the same\n> {@link IShoppingCitizen}, {@link IShoppingMember}, and\n> {@link IShoppingExternalUser}. Additionally, if a customer signs up for\n> membership after verifying their real name or signs up for our service after\n> being a user of an external service, all related records are changed at once.\n> Therefore, identification and tracking of customers can be done very\n> systematically.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "Primary Key",
                      "description": "Primary Key.",
                      "type": "string",
                      "format": "uuid"
                    },
                    "channel": {
                      "title": "Belonged channel",
                      "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "title": "Primary Key",
                          "description": "Primary Key.",
                          "type": "string",
                          "format": "uuid"
                        },
                        "created_at": {
                          "title": "Creation time of record",
                          "description": "Creation time of record.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "code": {
                          "title": "Identifier code",
                          "description": "Identifier code.",
                          "type": "string"
                        },
                        "name": {
                          "title": "Name of the channel",
                          "description": "Name of the channel.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "created_at",
                        "code",
                        "name"
                      ]
                    },
                    "external_user": {
                      "title": "External user information",
                      "description": "External user information.\n\nWhen the customer has come frome an external service.",
                      "oneOf": [
                        {
                          "type": "null"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "title": "Primary Key",
                              "description": "Primary Key.",
                              "type": "string",
                              "format": "uuid"
                            },
                            "citizen": {
                              "title": "Citizen activation info",
                              "description": "Citizen activation info.",
                              "oneOf": [
                                {
                                  "type": "null"
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "title": "Primary Key",
                                      "description": "Primary Key.",
                                      "type": "string",
                                      "format": "uuid"
                                    },
                                    "created_at": {
                                      "title": "Creation time of record",
                                      "description": "Creation time of record.",
                                      "type": "string",
                                      "format": "date-time"
                                    },
                                    "mobile": {
                                      "title": "Mobile number",
                                      "description": "Mobile number.",
                                      "x-wrtn-payment-order-mobile": true,
                                      "type": "string",
                                      "pattern": "^[0-9]*$"
                                    },
                                    "name": {
                                      "title": "Real name, or equivalent nickname",
                                      "description": "Real name, or equivalent nickname.",
                                      "x-wrtn-payment-order-citizen": true,
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "created_at",
                                    "mobile",
                                    "name"
                                  ],
                                  "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile} input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                                }
                              ]
                            },
                            "created_at": {
                              "title": "Creation time of record",
                              "description": "Creation time of record.\n\nAnother word, first time when the external user connected.",
                              "type": "string",
                              "format": "date-time"
                            },
                            "uid": {
                              "title": "Identifier key of external user from the external system",
                              "description": "Identifier key of external user from the external system.",
                              "type": "string"
                            },
                            "application": {
                              "title": "Identifier code of the external service",
                              "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code} in common.",
                              "type": "string"
                            },
                            "nickname": {
                              "title": "Nickname of external user in the external system",
                              "description": "Nickname of external user in the external system.",
                              "type": "string"
                            },
                            "data": {
                              "description": "Additional information about external user from the external\nsystem."
                            }
                          },
                          "required": [
                            "id",
                            "citizen",
                            "created_at",
                            "uid",
                            "application",
                            "nickname",
                            "data"
                          ],
                          "description": "External user information.\n\n`IShoppingExternalUser` is an entity dsigned for when this system needs\nto connect with external services and welcome their users as\n{@link IShoppingCustomer customers} of this service.\n\nFor reference, customers who connect from an external service must have\nthis record, and the external service user is identified through the two\nattributes {@link application} and {@link uid}. If a customer connected\nfrom an external service completes\n{@link IShoppingCitizen real-name authentication} from this service, each\ntime the external service user reconnects to this service and issues a\nnew customer authentication token, real-name authentication begins with\ncompleted.\n\nAnd {@link password} is the password issued to the user by the external\nservice system (the so-called permanent user authentication token), and\nis never the actual user password. However, for customers who entered the\nsame application and uid as the current external system user, this is to\ndetermine whether to view this as a correct external system user or a\nviolation.\n\nIn addition, additional information received from external services can\nbe recorded in the data field in JSON format."
                        }
                      ]
                    },
                    "href": {
                      "title": "Connection address",
                      "description": "Connection address.\n\nSame with {@link window.location.href} of client.",
                      "type": "string",
                      "format": "uri"
                    },
                    "referrer": {
                      "title": "Referrer address",
                      "description": "Referrer address.\n\nSame with {@link window.document.referrer} of client.",
                      "oneOf": [
                        {
                          "type": "null"
                        },
                        {
                          "type": "string",
                          "format": "uri"
                        },
                        {
                          "type": "string",
                          "maxLength": 0
                        }
                      ]
                    },
                    "ip": {
                      "title": "Connection IP Address",
                      "description": "Connection IP Address.",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "ipv4"
                        },
                        {
                          "type": "string",
                          "format": "ipv6"
                        }
                      ]
                    },
                    "created_at": {
                      "title": "Creation time of the connection record",
                      "description": "Creation time of the connection record.",
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "required": [
                    "id",
                    "channel",
                    "external_user",
                    "href",
                    "referrer",
                    "ip",
                    "created_at"
                  ]
                },
                "citizen": {
                  "title": "Real-name and mobile number authentication information",
                  "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile} input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "Primary Key",
                      "description": "Primary Key.",
                      "type": "string",
                      "format": "uuid"
                    },
                    "created_at": {
                      "title": "Creation time of record",
                      "description": "Creation time of record.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "mobile": {
                      "title": "Mobile number",
                      "description": "Mobile number.",
                      "x-wrtn-payment-order-mobile": true,
                      "type": "string",
                      "pattern": "^[0-9]*$"
                    },
                    "name": {
                      "title": "Real name, or equivalent nickname",
                      "description": "Real name, or equivalent nickname.",
                      "x-wrtn-payment-order-citizen": true,
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "created_at",
                    "mobile",
                    "name"
                  ]
                },
                "id": {
                  "title": "Primary Key",
                  "description": "Primary Key.",
                  "type": "string",
                  "format": "uuid"
                },
                "created_at": {
                  "title": "Creation tmie of record",
                  "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up.",
                  "type": "string",
                  "format": "date-time"
                }
              },
              "required": [
                "type",
                "member",
                "customer",
                "citizen",
                "id",
                "created_at"
              ]
            },
            "id": {
              "title": "Primary Key of Sale",
              "description": "Primary Key of Sale.",
              "type": "string",
              "format": "uuid"
            },
            "snapshot_id": {
              "title": "Primary Key of Snapshot",
              "description": "Primary Key of Snapshot.",
              "type": "string",
              "format": "uuid"
            },
            "latest": {
              "title": "Whether the snapshot is the latest one or not",
              "description": "Whether the snapshot is the latest one or not.",
              "type": "boolean"
            },
            "content": {
              "title": "Description and image content describing the sale",
              "description": "Description of the current {@link IShoppingSaleContent} type:\n\n> Content information of sale snapshot.\n> \n> `IShoppingSaleContent` is an entity embodies the description contents\n> of {@link IShoppingSale}.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid"
                },
                "title": {
                  "type": "string"
                },
                "thumbnails": {
                  "type": "array",
                  "items": {
                    "description": "Attachment File.\n\nEvery attachment files that are managed in current system.\n\nFor reference, it is possible to omit one of file {@link name}\nor {@link extension} like `.gitignore` or `README` case, but not\npossible to omit both of them.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "title": "Primary Key",
                        "description": "Primary Key.",
                        "type": "string",
                        "format": "uuid"
                      },
                      "created_at": {
                        "title": "Creation time of attachment file",
                        "description": "Creation time of attachment file.",
                        "type": "string",
                        "format": "date-time"
                      },
                      "name": {
                        "title": "File name, except extension",
                        "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string.",
                        "type": "string",
                        "maxLength": 255
                      },
                      "extension": {
                        "title": "Extension",
                        "description": "Extension.\n\nPossible to omit like `README` case.",
                        "oneOf": [
                          {
                            "type": "null"
                          },
                          {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 8
                          }
                        ]
                      },
                      "url": {
                        "title": "URL path of the real file",
                        "description": "URL path of the real file.",
                        "type": "string",
                        "format": "uri",
                        "contentMediaType": "image/*"
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "name",
                      "extension",
                      "url"
                    ]
                  }
                }
              },
              "required": [
                "id",
                "title",
                "thumbnails"
              ]
            },
            "channels": {
              "title": "List of channels and categories",
              "description": "List of channels and categories.\n\nWhich channels and categories the sale is registered to.",
              "type": "array",
              "items": {
                "description": "Target channel (and categories) of sale to sell.\n\n`IShoppingSaleChannel` is an entity that expresses through which\n{@link IShoppingChannel channel} a listing {@link IShoppingSale} is sold.\n\nAlso, if {@link IShoppingChannelCategory categories} are specified, it also\nmeans that the sale be sold. Otherwise, none of the categories of the channel\nbeing specified, it means that every categories of the channel is listing the\ntarget sale.",
                "type": "object",
                "properties": {
                  "categories": {
                    "title": "List of categories of the channel listing the sale",
                    "description": "List of categories of the channel listing the sale.\n\nIf empty, it means all categories of the channel is listing the sale.",
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/IShoppingChannelCategory.IInvert"
                    }
                  },
                  "id": {
                    "title": "Primary Key",
                    "description": "Primary Key.",
                    "type": "string",
                    "format": "uuid"
                  },
                  "created_at": {
                    "title": "Creation time of record",
                    "description": "Creation time of record.",
                    "type": "string",
                    "format": "date-time"
                  },
                  "code": {
                    "title": "Identifier code",
                    "description": "Identifier code.",
                    "type": "string"
                  },
                  "name": {
                    "title": "Name of the channel",
                    "description": "Name of the channel.",
                    "type": "string"
                  }
                },
                "required": [
                  "categories",
                  "id",
                  "created_at",
                  "code",
                  "name"
                ]
              },
              "minItems": 1
            },
            "tags": {
              "title": "List of search tags",
              "description": "List of search tags.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "units": {
              "title": "List of units",
              "description": "List of units.\n\nRecords about individual product composition information that are sold\nin the sale. Each {@link IShoppingSaleUnit unit} record has configurable\n{@link IShoppingSaleUnitOption options},\n{@link IShoppingSaleUnitOptionCandidate candidate} values for each\noption, and {@link IShoppingSaleUnitStock final stocks} determined by\nselecting every candidate values of each option.",
              "type": "array",
              "items": {
                "description": "Description of the current {@link IShoppingSaleUnit} type:\n\n> Product composition information handled in the sale.\n> \n> `IShoppingSaleUnit` is an entity that embodies the \"individual product\"\n> information handled in the {@link IShoppingSale sale}.\n> \n> For reference, the reason why `IShoppingSaleUnit` is separated from\n> {@link IShoppingSaleSnapshot} by an algebraic relationship of 1: N is because\n> there are some cases where multiple products are sold in one listing. This is\n> the case with so-called \"bundled products\".\n> \n> - Bundle from regular product (Mackbook Set)\n>   - Main Body\n>   - Keyboard\n>   - Mouse\n>   - Apple Care (Free A/S Voucher)\n> \n> And again, `IShoppingSaleUnit` does not in itself refer to the\n> {@link IShoppingSaleUnitStock final stock} that the\n> {@link IShoppingCustomer customer} will {@link IShoppingOrder purchase}.\n> The final stock can be found only after selecting all given\n> {@link IShoppingSaleUnitOption options} and their\n> {@link IShoppingSaleUnitOptionCandidate candidate values}.\n> \n> For example, even if you buy a Macbook, the final stocks are determined only\n> after selecting all the options (CPU / RAM / SSD), etc.",
                "type": "object",
                "properties": {
                  "stocks": {
                    "title": "List of final stocks",
                    "description": "List of final stocks.",
                    "type": "array",
                    "items": {
                      "description": "Invert information from the cart.\n\n------------------------------\n\nDescription of the current {@link IShoppingSaleUnitStock.IInvert} type:\n\n> Invert information from the cart.\n\n------------------------------\n\nDescription of the parent {@link IShoppingSaleUnitStock} type:\n\n> Final component information on units for sale.\n> \n> `IShoppingSaleUnitStock` is a subsidiary entity of {@link IShoppingSaleUnit}\n> that represents a product catalog for sale, and is a kind of final stock that is\n> constructed by selecting all {@link IShoppingSaleUnitSelectableOption options}\n> (variable \"select\" type) and their\n> {@link IShoppingSaleUnitOptionCandidate candidate} values in the belonging unit.\n> It is the \"good\" itself that customers actually purchase.\n> \n> - Product Name) MacBook\n>   - Options\n>     - CPU: { i3, i5, i7, i9 }\n>     - RAM: { 8GB, 16GB, 32GB, 64GB, 96GB }\n>     - SSD: { 256GB, 512GB, 1TB }\n>   - Number of final stocks: 4 * 5 * 3 = 60\n> \n> For reference, the total number of `IShoppingSaleUnitStock` records in an\n> attribution unit can be obtained using Cartesian Product. In other words, the\n> value obtained by multiplying all the candidate values that each\n> (variable \"select\" type) option can have by the number of cases is the total\n> number of final stocks in the unit.\n> \n> Of course, without a single variable \"select\" type option, the final stocks\n> count in the unit is only 1.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "title": "Primary Key",
                          "description": "Primary Key.",
                          "type": "string",
                          "format": "uuid"
                        },
                        "name": {
                          "title": "Representative name of the stock",
                          "description": "Representative name of the stock.",
                          "type": "string"
                        },
                        "price": {
                          "title": "Price of the stock",
                          "description": "Shopping price interface.",
                          "type": "object",
                          "properties": {
                            "nominal": {
                              "title": "Nominal price",
                              "description": "Nominal price.\n\nThis is not {@link real real price} to pay, but just a nominal price to show.\nIf this value is greater than the {@link real real price}, it would be shown\nlike {@link IShoppingSeller seller} is giving a discount.",
                              "type": "number",
                              "minimum": 0
                            },
                            "real": {
                              "title": "Real price to pay",
                              "description": "Real price to pay.",
                              "type": "number",
                              "minimum": 0
                            }
                          },
                          "required": [
                            "nominal",
                            "real"
                          ]
                        },
                        "quantity": {
                          "title": "Quantity of the stock in the cart",
                          "description": "Quantity of the stock in the cart.",
                          "type": "integer",
                          "minimum": 1
                        },
                        "inventory": {
                          "title": "Current inventory status of the stock",
                          "description": "Inventory information of a final stock.",
                          "type": "object",
                          "properties": {
                            "income": {
                              "title": "Total income quantity",
                              "description": "Total income quantity.",
                              "type": "integer"
                            },
                            "outcome": {
                              "title": "Total outcome quantity",
                              "description": "Total outcome quantity.",
                              "type": "integer"
                            }
                          },
                          "required": [
                            "income",
                            "outcome"
                          ]
                        },
                        "choices": {
                          "title": "List of choices",
                          "description": "List of choices.\n\nWhich values being written for each option.",
                          "type": "array",
                          "items": {
                            "description": "Invert information from the cart.\n\n------------------------------\n\nDescription of the current {@link IShoppingSaleUnitStockChoice.IInvert} type:\n\n> Invert information from the cart.\n\n------------------------------\n\nDescription of the parent {@link IShoppingSaleUnitStockChoice} type:\n\n> Selection information of final stock.\n> \n> `IShoppingSaleUnitStockChoice` is an entity that represents which\n> {@link IShoppingSaleUnitSelectableOption option} of each variable \"select\"\n> type was selected for each {@link IShoppingSaleUnitStock stock} and which\n> {@link IShoppingSaleUnitOptionCandidate candidate value} was selected within\n> it.\n> \n> Of course, if the bound {@link IShoppingSaleUnit unit} does not have any\n> options, this entity can also be ignored.",
                            "type": "object",
                            "properties": {
                              "id": {
                                "title": "Primary Key",
                                "description": "Primary Key.",
                                "type": "string",
                                "format": "uuid"
                              },
                              "option": {
                                "title": "Target option",
                                "description": "Target option.",
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "title": "Primary Key",
                                        "description": "Primary Key.",
                                        "type": "string",
                                        "format": "uuid"
                                      },
                                      "type": {
                                        "title": "Discriminant for the type of selectable option",
                                        "description": "Discriminant for the type of selectable option.",
                                        "const": "select"
                                      },
                                      "name": {
                                        "title": "Represents the name of the option",
                                        "description": "Represents the name of the option.",
                                        "type": "string"
                                      },
                                      "variable": {
                                        "title": "Whether the option is variable or not",
                                        "description": "Whether the option is variable or not.\n\nWhen type of current option is \"select\", this attribute means whether\nselecting different candidate value affects the final stock or not.",
                                        "type": "boolean"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "type",
                                      "name",
                                      "variable"
                                    ],
                                    "description": "Description of the current {@link IShoppingSaleUnitSelectableOption} type:\n\n> Individual option information on units for sale.\n> \n> `IShoppingSaleUnitSelectableOption` is a subsidiary entity of\n> {@link IShoppingSaleUnit} that represents individual products in the\n> {@link IShoppingSale sale}, and is an entity designed to represent individual\n> selectable option information for the unit.\n> \n> - Examples of Options\n>   - selectable options\n>     - Computer: CPU, RAM, SSD, etc.\n>     - Clothes: size, color, style, etc.\n>   - descriptive options\n>     - Engrave\n>     - Simple question\n> \n> If the {@link variable} property value is `true`, the final stock that the\n> {@link IShoppingCustomer customer} will purchase changes depending on the\n> selection of the {@link IShoppingSaleUnitOptionCandidate candidate value}.\n> \n> Conversely, if it is a type other than \"select\", or if the {@link variable}\n> property value is \"false\", , this is an option that has no meaning beyond\n> simple information transfer. Therefore, no matter what value the customer\n> chooses when purchasing it, the option in this case does not affect the\n> {@link IShoppingSaleUnitStock final stock}."
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "title": "Primary Key",
                                        "description": "Primary Key.",
                                        "type": "string",
                                        "format": "uuid"
                                      },
                                      "type": {
                                        "title": "Type of descriptive option",
                                        "description": "Type of descriptive option.\n\nWhich typed value should be written when purchasing.",
                                        "oneOf": [
                                          {
                                            "const": "string"
                                          },
                                          {
                                            "const": "number"
                                          },
                                          {
                                            "const": "boolean"
                                          }
                                        ]
                                      },
                                      "name": {
                                        "title": "Readable name of the option",
                                        "description": "Readable name of the option.",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "type",
                                      "name"
                                    ],
                                    "description": "Descriptive option.\n\nWhen type of the option not `\"select\"`, it means the option is descriptive\nthat requiring {@link IShoppingCustomer customers} to write some value to\n{@link IShoppingOrder purchase}. Also, whatever customer writes about the\noption, it does not affect the {@link IShoppingSaleUnitStock final stock}.\n\nAnother words, the descriptive option is just for information transfer."
                                  }
                                ]
                              },
                              "candidate": {
                                "title": "Selected candidate value",
                                "description": "Selected candidate value.",
                                "oneOf": [
                                  {
                                    "type": "null"
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "title": "Primary Key",
                                        "description": "Primary Key.",
                                        "type": "string",
                                        "format": "uuid"
                                      },
                                      "name": {
                                        "title": "Represents the name of the candidate value",
                                        "description": "Represents the name of the candidate value.",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "name"
                                    ],
                                    "description": "Selectable candidate values within an option.\n\n`IShoppingSaleUnitOptionCandidate` is an entity that represents individual\ncandidate values that can be selected from\n{@link IShoppingSaleUnitSelectableOption options of the \"select\" type}.\n\n- Example\n  - RAM: 8GB, 16GB, 32GB\n  - GPU: RTX 3060, RTX 4080, TESLA\n  - License: Private, Commercial, Educatiion\n\nBy the way, if belonged option is not \"select\" type, this entity never\nbeing used."
                                  }
                                ]
                              },
                              "value": {
                                "title": "Written value",
                                "description": "Written value.",
                                "oneOf": [
                                  {
                                    "type": "null"
                                  },
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  },
                                  {
                                    "type": "boolean"
                                  }
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "option",
                              "candidate",
                              "value"
                            ]
                          }
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "price",
                        "quantity",
                        "inventory",
                        "choices"
                      ]
                    },
                    "minItems": 1
                  },
                  "id": {
                    "title": "Primary Key",
                    "description": "Primary Key.",
                    "type": "string",
                    "format": "uuid"
                  },
                  "name": {
                    "title": "Representative name of the unit",
                    "description": "Representative name of the unit.",
                    "type": "string"
                  },
                  "primary": {
                    "title": "Whether the unit is primary or not",
                    "description": "Whether the unit is primary or not.\n\nJust a labeling value.",
                    "type": "boolean"
                  },
                  "required": {
                    "title": "Whether the unit is required or not",
                    "description": "Whether the unit is required or not.\n\nWhen the unit is required, the customer must select the unit. If do not\nselect, customer can't buy it.\n\nFor example, if there's a sale \"Macbook Set\" and one of the unit is the\n\"Main Body\", is it possible to buy the \"Macbook Set\" without the\n\"Main Body\" unit? This property is for that case.",
                    "type": "boolean"
                  }
                },
                "required": [
                  "stocks",
                  "id",
                  "name",
                  "primary",
                  "required"
                ]
              },
              "minItems": 1
            },
            "created_at": {
              "title": "Creation time of the record",
              "description": "Creation time of the record.\n\nNote that, this property is different with {@link opened_at},\nwhich means the timepoint of the sale is opened.",
              "type": "string",
              "format": "date-time"
            },
            "updated_at": {
              "title": "Last updated time of the record",
              "description": "Last updated time of the record.\n\nIn another words, creation time of the last snapshot.",
              "type": "string",
              "format": "date-time"
            },
            "paused_at": {
              "title": "Paused time of the sale",
              "description": "Paused time of the sale.\n\nThe sale is paused by the seller, for some reason.\n\n{@link IShoppingCustomer Customers} can still see the sale on the\nboth list and detail pages, but the sale has a warning label\n\"The sale is paused by the seller\".",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "date-time"
                }
              ]
            },
            "suspended_at": {
              "title": "Suspended time of the sale",
              "description": "Suspended time of the sale.\n\nThe sale is suspended by the seller, for some reason.\n\n{@link IShoppingCustomer Customers} cannot see the sale on the\nboth list and detail pages. It is almost same with soft delettion,\nbut there's a little bit difference that the owner\n{@link IShoppingSeller seller} can still see the sale and resume it.\n\nOf course, the {@link IShoppingCustomer customers} who have\nalready purchased the sale can still see the sale on the\n{@link IShoppingOrder order} page.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "date-time"
                }
              ]
            },
            "opened_at": {
              "title": "Opening time of the sale",
              "description": "Opening time of the sale.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "date-time"
                }
              ]
            },
            "closed_at": {
              "title": "Closing time of the sale",
              "description": "Closing time of the sale.\n\nIf this value is `null`, the sale be continued forever.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "date-time"
                }
              ]
            }
          },
          "required": [
            "section",
            "seller",
            "id",
            "snapshot_id",
            "latest",
            "content",
            "channels",
            "tags",
            "units",
            "created_at",
            "updated_at",
            "paused_at",
            "suspended_at",
            "opened_at",
            "closed_at"
          ]
        },
        "orderable": {
          "title": "Whether current commodity is orderable or not",
          "description": "Whether current commodity is orderable or not.\n\nIf this attribute is `false`, then the commodity is not orderable, because\nit has already been ordered.",
          "type": "boolean"
        },
        "pseudo": {
          "title": "Whether current commodity is pseudo or not",
          "description": "Whether current commodity is pseudo or not.\n\nWhen this attribute is `true`, then the commodity is not the real one,\nbut just fake information only for calculating the discount effect by\n{@link IShoppingCoupon coupons}.",
          "type": "boolean"
        },
        "volume": {
          "title": "Volume of the commodity to purchase",
          "description": "Volume of the commodity to purchase.\n\nA value indicating how many sets would be multiplied to the children\n{@link IShoppingSaleUnitStock.IInvert.quantity} values.",
          "type": "integer",
          "minimum": 1
        },
        "price": {
          "title": "Price of the commodity",
          "description": "Shopping price interface.",
          "type": "object",
          "properties": {
            "nominal": {
              "title": "Nominal price",
              "description": "Nominal price.\n\nThis is not {@link real real price} to pay, but just a nominal price to show.\nIf this value is greater than the {@link real real price}, it would be shown\nlike {@link IShoppingSeller seller} is giving a discount.",
              "type": "number",
              "minimum": 0
            },
            "real": {
              "title": "Real price to pay",
              "description": "Real price to pay.",
              "type": "number",
              "minimum": 0
            }
          },
          "required": [
            "nominal",
            "real"
          ]
        },
        "created_at": {
          "title": "Creation time of the record",
          "description": "Creation time of the record.",
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "sale",
        "orderable",
        "pseudo",
        "volume",
        "price",
        "created_at"
      ]
    },
    "success": true,
    "arguments": {
      "type": {
        "host": "http://127.0.0.1:37001",
        "headers": {
          "Authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0YWJsZSI6InNob3BwaW5nX2N1c3RvbWVycyIsImlkIjoiMjVlYzg3ZjctODE1ZC00YjU3LTk1NzYtYzk1Mzk4NGJjMjhmIiwicmVhZG9ubHkiOmZhbHNlLCJleHBpcmVkX2F0IjoiMjAyNC0xMi0xM1QwOTo0MjoxMi41MzlaIiwicmVmcmVzaGFibGVfdW50aWwiOiIyMDI0LTEyLTI3VDA2OjQyOjEyLjUzOVoiLCJpYXQiOjE3MzQwNzIxMzJ9.zWZrU-d1bSW-MawmSo2RYRPk_73xtR_PxfFUrEpDJkc"
        }
      },
      "properties": {
        "sale_id": "2338cfa2-6e52-46e9-9d0c-a706425962e9",
        "stocks": [
          {
            "unit_id": "f6825138-1e94-42ef-90b2-f27d1ea5581c",
            "stock_id": "6be68e95-2439-46a5-88f9-c1c9a11e0e1b",
            "choices": [
              {
                "option_id": "75cb1035-c68b-4f02-8398-c6449cabd358",
                "candidate_id": "3ff5a928-126d-417a-88da-d7130f4cef66",
                "value": null
              },
              {
                "option_id": "41a6ae10-aad9-4099-8f4f-cd47e9184ccc",
                "candidate_id": "1b4a3a48-17a6-4b42-808e-536323841c42",
                "value": null
              },
              {
                "option_id": "9335f715-05ce-499c-8720-f770de65a934",
                "candidate_id": "b2276623-d8b6-4380-841c-48785b11a8a4",
                "value": null
              },
              {
                "option_id": "642f45f4-2604-4ee6-aab5-ffce81831688",
                "candidate_id": "761726dc-0fc3-412f-a115-10e9f08fd6c5",
                "value": null
              }
            ],
            "quantity": 1
          },
          {
            "unit_id": "461232cc-bd5b-48b8-a693-f2888ebb9266",
            "stock_id": "fc7552bb-2a74-44fe-891a-e5af66444694",
            "choices": [],
            "quantity": 1
          },
          {
            "unit_id": "f6ea807d-484f-4a37-be51-92cbb9fdc119",
            "stock_id": "6aa2fef3-d488-4f8c-8989-8b479f22bb74",
            "choices": [],
            "quantity": 1
          }
        ],
        "volume": 1
      }
    },
    "value": {
      "id": "dc2835cf-f179-4294-8246-0f43a70e6a12",
      "sale": {
        "section": {
          "id": "a01c572c-3199-4929-ac67-ba7c31b2c808",
          "code": "general",
          "name": "General",
          "created_at": "2024-12-13T06:42:11.124Z"
        },
        "seller": {
          "type": "seller",
          "member": {
            "id": "a853492c-70b4-487f-9648-0f6109a0ad69",
            "nickname": "Robot",
            "emails": [
              {
                "id": "81ea73c4-b41e-4022-9384-d51d3215797e",
                "value": "robot@nestia.io",
                "created_at": "2024-12-13T06:42:11.227Z"
              }
            ],
            "created_at": "2024-12-13T06:42:11.227Z"
          },
          "customer": {
            "id": "aeb8583b-8bd9-4d29-adea-78779b405046",
            "channel": {
              "id": "2323f4bd-21ad-45b7-ae3b-cadd84dcc935",
              "created_at": "2024-12-13T06:42:10.908Z",
              "code": "samchon",
              "name": "Samchon Shopping Mall"
            },
            "external_user": null,
            "href": "http://127.0.0.1/TestAutomation",
            "referrer": "http://127.0.0.1/NodeJS",
            "ip": "127.0.0.1",
            "created_at": "2024-12-13T06:42:11.258Z"
          },
          "citizen": {
            "id": "43aedfea-6b2c-4c18-9f69-60373c9580dd",
            "created_at": "2024-12-13T06:42:11.157Z",
            "mobile": "01012345678",
            "name": "Robot"
          },
          "id": "addccb32-ac48-460e-9624-d9809da19d99",
          "created_at": "2024-12-13T06:42:11.241Z"
        },
        "id": "2338cfa2-6e52-46e9-9d0c-a706425962e9",
        "snapshot_id": "bab8605c-d6a6-41e5-b3c8-0e7caf4b3fe0",
        "latest": true,
        "content": {
          "id": "32765e09-6001-4cdb-9db2-af3a9c018a17",
          "title": "Apple MacBook Pro",
          "thumbnails": [
            {
              "id": "fb222d61-315f-45c7-a276-ca7524452863",
              "created_at": "2024-12-13T06:42:11.345Z",
              "name": "apple-iphone-thumbnail",
              "extension": "jpeg",
              "url": "https://store.storeimages.cdn-apple.com/8756/as-images.apple.com/is/mbp14-spaceblack-gallery1-202410?wid=4000&hei=3074&fmt=jpeg&qlt=90&.v=1729264981617"
            }
          ]
        },
        "channels": [
          {
            "categories": [
              {
                "parent": null,
                "id": "9b9b36f4-4e50-48ff-ac05-ee8588be0dbe",
                "code": "electronics",
                "parent_id": null,
                "name": "Electronics",
                "created_at": "2024-12-13T06:42:10.919Z"
              },
              {
                "parent": {
                  "parent": null,
                  "id": "9b9b36f4-4e50-48ff-ac05-ee8588be0dbe",
                  "code": "electronics",
                  "parent_id": null,
                  "name": "Electronics",
                  "created_at": "2024-12-13T06:42:10.919Z"
                },
                "id": "ab794f96-49c0-4318-9ac8-91318b188e6c",
                "code": "laptops",
                "parent_id": "9b9b36f4-4e50-48ff-ac05-ee8588be0dbe",
                "name": "Laptops",
                "created_at": "2024-12-13T06:42:10.940Z"
              },
              {
                "parent": {
                  "parent": {
                    "parent": null,
                    "id": "9b9b36f4-4e50-48ff-ac05-ee8588be0dbe",
                    "code": "electronics",
                    "parent_id": null,
                    "name": "Electronics",
                    "created_at": "2024-12-13T06:42:10.919Z"
                  },
                  "id": "ab794f96-49c0-4318-9ac8-91318b188e6c",
                  "code": "laptops",
                  "parent_id": "9b9b36f4-4e50-48ff-ac05-ee8588be0dbe",
                  "name": "Laptops",
                  "created_at": "2024-12-13T06:42:10.940Z"
                },
                "id": "183f6097-70dd-4333-8dc4-f0c0cf43fa69",
                "code": "macbooks",
                "parent_id": "ab794f96-49c0-4318-9ac8-91318b188e6c",
                "name": "MacBooks",
                "created_at": "2024-12-13T06:42:10.948Z"
              }
            ],
            "id": "2323f4bd-21ad-45b7-ae3b-cadd84dcc935",
            "created_at": "2024-12-13T06:42:10.908Z",
            "code": "samchon",
            "name": "Samchon Shopping Mall"
          }
        ],
        "tags": [
          "macbook",
          "apple",
          "laptop",
          "electronics",
          "professional"
        ],
        "units": [
          {
            "stocks": [
              {
                "id": "6be68e95-2439-46a5-88f9-c1c9a11e0e1b",
                "name": "MacBook Pro - Space Gray, 64GB, 512GB, English",
                "price": {
                  "nominal": 3250000,
                  "real": 2925000
                },
                "quantity": 1,
                "inventory": {
                  "income": 500,
                  "outcome": 0
                },
                "choices": [
                  {
                    "id": "d148e162-b71d-424f-a951-edb3bc261cca",
                    "option": {
                      "id": "75cb1035-c68b-4f02-8398-c6449cabd358",
                      "type": "select",
                      "name": "Color",
                      "variable": true
                    },
                    "candidate": {
                      "id": "3ff5a928-126d-417a-88da-d7130f4cef66",
                      "name": "Space Gray"
                    },
                    "value": null
                  },
                  {
                    "id": "3cb4a4b1-4808-4e77-a6fe-f90bf55ffbd6",
                    "option": {
                      "id": "41a6ae10-aad9-4099-8f4f-cd47e9184ccc",
                      "type": "select",
                      "name": "RAM",
                      "variable": true
                    },
                    "candidate": {
                      "id": "1b4a3a48-17a6-4b42-808e-536323841c42",
                      "name": "64GB"
                    },
                    "value": null
                  },
                  {
                    "id": "245b3c2f-3973-465d-a7c4-27472b6358f9",
                    "option": {
                      "id": "9335f715-05ce-499c-8720-f770de65a934",
                      "type": "select",
                      "name": "SSD",
                      "variable": true
                    },
                    "candidate": {
                      "id": "b2276623-d8b6-4380-841c-48785b11a8a4",
                      "name": "512GB"
                    },
                    "value": null
                  },
                  {
                    "id": "cc8cbbc0-468a-4c63-bb49-d7a84e2a832b",
                    "option": {
                      "id": "642f45f4-2604-4ee6-aab5-ffce81831688",
                      "type": "select",
                      "name": "Keyboard Language",
                      "variable": true
                    },
                    "candidate": {
                      "id": "761726dc-0fc3-412f-a115-10e9f08fd6c5",
                      "name": "English"
                    },
                    "value": null
                  }
                ]
              }
            ],
            "id": "f6825138-1e94-42ef-90b2-f27d1ea5581c",
            "name": "MacBook M3 Pro 14inch Entity",
            "primary": true,
            "required": true
          },
          {
            "stocks": [
              {
                "id": "fc7552bb-2a74-44fe-891a-e5af66444694",
                "name": "Warranty Program",
                "price": {
                  "nominal": 100000,
                  "real": 89000
                },
                "quantity": 1,
                "inventory": {
                  "income": 10000,
                  "outcome": 0
                },
                "choices": []
              }
            ],
            "id": "461232cc-bd5b-48b8-a693-f2888ebb9266",
            "name": "Warranty Program",
            "primary": false,
            "required": false
          },
          {
            "stocks": [
              {
                "id": "6aa2fef3-d488-4f8c-8989-8b479f22bb74",
                "name": "Magnetic Keyboard",
                "price": {
                  "nominal": 200000,
                  "real": 169000
                },
                "quantity": 1,
                "inventory": {
                  "income": 8000,
                  "outcome": 0
                },
                "choices": []
              }
            ],
            "id": "f6ea807d-484f-4a37-be51-92cbb9fdc119",
            "name": "Magnetic Keyboard",
            "primary": false,
            "required": false
          }
        ],
        "created_at": "2024-12-13T06:42:11.347Z",
        "updated_at": "2024-12-13T06:42:11.346Z",
        "paused_at": null,
        "suspended_at": null,
        "opened_at": "2024-12-13T06:42:11.340Z",
        "closed_at": null
      },
      "orderable": true,
      "pseudo": false,
      "volume": 1,
      "price": {
        "nominal": 3550000,
        "real": 3183000
      },
      "created_at": "2024-12-13T06:42:13.112Z"
    }
  },
  {
    "name": "shoppings_customers_carts_commodities_post",
    "method": "post",
    "path": "/shoppings/customers/carts/commodities",
    "description": "Create a new commodity.\n\nCreate a new {@link IShoppingCartCommodity commodity} into a specific\nshopping cart.\n\nIf {@link IShoppingCartCommodity.ICreate.accumulate} has `true` value\nand there's some same commodity that composed with same\n{@link IShoppingSaleUnitStock.IInvert stocks and quantities},\nthen new commodity would not be created but the volume would be accumulated.\n\nBy the way, if the target {@link IShoppingSale sale} has been suspended or\n{@link IShoppingSaleUnitStockInventory out of stock}, then 410 gone error\nwould be thrown. Therefore, it would better to check the target sale and\n{@link IShoppingSaleUnitStock stock}'s status before.",
    "parameters": {
      "type": "object",
      "properties": {
        "body": {
          "description": "Creation information of a shopping cart commodity.\n\n------------------------------\n\nDescription of the current {@link IShoppingCartCommodity.ICreate} type:\n\n> Creation information of a shopping cart commodity.\n\n------------------------------\n\nDescription of the parent {@link IShoppingCartCommodity} type:\n\n> Item in a shopping cart.\n> \n> `IShoppingCartCommodity` is an entity that represents a\n> {@link IShoppingSaleSnapshot snapshot} of the items that\n> {@link IShoppingCustomer customer} has placed into his shopping cart with a\n> {@link IShoppingOrder purchase} in mind. And if the customer continues this\n> into an actual order in the future, `IShoppingCartCommodity` be changed to\n> {@link IShoppingOrderGood}.\n> \n> And while adding a sale snapshot to the shopping cart, the customer inevitably\n> selects specific {@link IShoppingSaleUnit units} and\n> {@link IShoppingSaleUnitStock final stocks} within the listing snapshot.\n> Information about these units and stocks is recorded in the subsidiary entity\n> {@link IShoppingCartCommodityStock}. Also, there is an attribute {@link volume}\n> that indicates how many sets of snapshots of the target commodity will be\n> purchased. This \"volume\" is a value that will be multiplied by\n> {@link IShoppingSaleUnitStock.IInvert.quantity}, the quantity for each\n> component.",
          "type": "object",
          "properties": {
            "sale_id": {
              "title": "Target sale's {@link IShoppingSale.id}",
              "description": "Target sale's {@link IShoppingSale.id}.",
              "type": "string",
              "format": "uuid"
            },
            "stocks": {
              "title": "List of the stocks to be purchased",
              "description": "List of the stocks to be purchased.",
              "type": "array",
              "items": {
                "description": "Creation information of the commodity stock of shopping cart.\n\nWhen record being created, its corresponding structure would be\n{@link IShoppingSaleSnapshotUnit.IInvert} and\n{@link IShoppingSaleSnapshotUnitStock.IInvert}.\n\n------------------------------\n\nDescription of the current {@link IShoppingCartCommodityStock.ICreate} type:\n\n> Creation information of the commodity stock of shopping cart.\n> \n> When record being created, its corresponding structure would be\n> {@link IShoppingSaleSnapshotUnit.IInvert} and\n> {@link IShoppingSaleSnapshotUnitStock.IInvert}.",
                "type": "object",
                "properties": {
                  "unit_id": {
                    "title": "Target unit's {@link IShoppingSaleUnit.id}",
                    "description": "Target unit's {@link IShoppingSaleUnit.id}.",
                    "type": "string",
                    "format": "uuid"
                  },
                  "stock_id": {
                    "title": "Target stock's {@link IShoppingSaleUnitStock.id}",
                    "description": "Target stock's {@link IShoppingSaleUnitStock.id}.\n\nIt must be matched with the {@link choices} property.",
                    "type": "string",
                    "format": "uuid"
                  },
                  "choices": {
                    "title": "Creation information of the choices for each option",
                    "description": "Creation information of the choices for each option.",
                    "type": "array",
                    "items": {
                      "description": "Creation information of the choice for each option.\n\nWhen record being created, its corresponding structure would be\n{@link IShoppingSaleUnitStockChoice.IInvert}.\n\n------------------------------\n\nDescription of the current {@link IShoppingCartCommodityStockChoice.ICreate} type:\n\n> Creation information of the choice for each option.\n> \n> When record being created, its corresponding structure would be\n> {@link IShoppingSaleUnitStockChoice.IInvert}.",
                      "type": "object",
                      "properties": {
                        "option_id": {
                          "title": "Target option's {@link IShoppingSaleUnitOption.id}",
                          "description": "Target option's {@link IShoppingSaleUnitOption.id}.",
                          "type": "string",
                          "format": "uuid"
                        },
                        "candidate_id": {
                          "title": "Target candidate's {@link IShoppingSaleUnitOptionCandidate.id}",
                          "description": "Target candidate's {@link IShoppingSaleUnitOptionCandidate.id}.\n\nWhen target option's type is `select`, then this attribute is not\n`null` but has a value.",
                          "oneOf": [
                            {
                              "type": "null"
                            },
                            {
                              "type": "string",
                              "format": "uuid"
                            }
                          ]
                        },
                        "value": {
                          "title": "Written value about the option",
                          "description": "Written value about the option.\n\nWhen target option's type is not `select`, but an atomic type value\nlike `boolean`, `number` or `string`, then this attribute is not\n`null` but has the matched atomic value.",
                          "oneOf": [
                            {
                              "type": "null"
                            },
                            {
                              "type": "string"
                            },
                            {
                              "type": "number"
                            },
                            {
                              "type": "boolean"
                            }
                          ]
                        }
                      },
                      "required": [
                        "option_id",
                        "candidate_id",
                        "value"
                      ]
                    }
                  },
                  "quantity": {
                    "title": "Quantity of the stock to purchase",
                    "description": "Quantity of the stock to purchase.\n\nThis value is multiplied by the {@link IShoppingCartCommodity.volume}.",
                    "type": "integer",
                    "minimum": 1
                  }
                },
                "required": [
                  "unit_id",
                  "stock_id",
                  "choices",
                  "quantity"
                ]
              },
              "minItems": 1
            },
            "volume": {
              "title": "Volume of the commodity to purchase",
              "description": "Volume of the commodity to purchase.\n\nA value indicating how many sets would be multiplied to the children\n{@link IShoppingSaleUnitStock.IInvert.quantity} values.",
              "type": "integer",
              "minimum": 1
            },
            "accumulate": {
              "title": "Whether to accumulate the volume or not",
              "description": "Whether to accumulate the volume or not.\n\nIf this attribute is not `false` and there's same commodity that\ncomposed with same stocks and options, then the volume will be\naccumulated to the existed one.\n\nOtherwise, duplicated commodity would be newly created.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "boolean"
                }
              ]
            }
          },
          "required": [
            "sale_id",
            "stocks",
            "volume",
            "accumulate"
          ]
        }
      },
      "additionalProperties": false,
      "required": [
        "body"
      ],
      "$defs": {
        "IShoppingChannelCategory.IInvert": {
          "description": "Invert category information with parent category.",
          "type": "object",
          "properties": {
            "parent": {
              "title": "Parent category info with recursive structure",
              "description": "Parent category info with recursive structure.\n\nIf no parent exists, then be `null`.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "$ref": "#/$defs/IShoppingChannelCategory.IInvert"
                }
              ]
            },
            "id": {
              "title": "Primary Key",
              "description": "Primary Key.",
              "type": "string",
              "format": "uuid"
            },
            "code": {
              "title": "Identifier code of the category",
              "description": "Identifier code of the category.\n\nThe code must be unique in the channel.",
              "type": "string"
            },
            "parent_id": {
              "title": "Parent category's ID",
              "description": "Parent category's ID.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "name": {
              "title": "Representative name of the category",
              "description": "Representative name of the category.\n\nThe name must be unique within the parent category. If no parent exists,\nthen the name must be unique within the channel between no parent\ncategories.",
              "type": "string"
            },
            "created_at": {
              "title": "Creation time of record",
              "description": "Creation time of record.",
              "type": "string",
              "format": "date-time"
            }
          },
          "required": [
            "parent",
            "id",
            "code",
            "parent_id",
            "name",
            "created_at"
          ]
        }
      }
    },
    "output": {
      "description": "Item in a shopping cart.\n\n`IShoppingCartCommodity` is an entity that represents a\n{@link IShoppingSaleSnapshot snapshot} of the items that\n{@link IShoppingCustomer customer} has placed into his shopping cart with a\n{@link IShoppingOrder purchase} in mind. And if the customer continues this\ninto an actual order in the future, `IShoppingCartCommodity` be changed to\n{@link IShoppingOrderGood}.\n\nAnd while adding a sale snapshot to the shopping cart, the customer inevitably\nselects specific {@link IShoppingSaleUnit units} and\n{@link IShoppingSaleUnitStock final stocks} within the listing snapshot.\nInformation about these units and stocks is recorded in the subsidiary entity\n{@link IShoppingCartCommodityStock}. Also, there is an attribute {@link volume}\nthat indicates how many sets of snapshots of the target commodity will be\npurchased. This \"volume\" is a value that will be multiplied by\n{@link IShoppingSaleUnitStock.IInvert.quantity}, the quantity for each\ncomponent.",
      "type": "object",
      "properties": {
        "id": {
          "title": "Primary Key",
          "description": "Primary Key.",
          "type": "string",
          "format": "uuid"
        },
        "sale": {
          "title": "Invert information of the sale (snapshot), in the perspective of commodity",
          "description": "Invert information of the sale snapshot, in the perspective of commodity.\n\n`IShoppingSaleSnapshot.IInvert` is a structure used to represent a\nsnapshot in the perspective of a {@link IShoppingCommodity}, corresponding\nto an {@link IShoppingCartCommodityStock} entity.\n\nTherefore, `IShoppingSaleSnapshot.IInvert` does not contain every\n{@link IShoppingSaleUnit units} and {@link IShoppingSaleUnitStock stocks}\nof the snapshot records, but only some of the records which are put\ninto the {@link IShoppingCartCommodity shopping cart}.\n\n------------------------------\n\nDescription of the current {@link IShoppingSaleSnapshot.IInvert} type:\n\n> Invert information of the sale snapshot, in the perspective of commodity.\n> \n> `IShoppingSaleSnapshot.IInvert` is a structure used to represent a\n> snapshot in the perspective of a {@link IShoppingCommodity}, corresponding\n> to an {@link IShoppingCartCommodityStock} entity.\n> \n> Therefore, `IShoppingSaleSnapshot.IInvert` does not contain every\n> {@link IShoppingSaleUnit units} and {@link IShoppingSaleUnitStock stocks}\n> of the snapshot records, but only some of the records which are put\n> into the {@link IShoppingCartCommodity shopping cart}.\n\n------------------------------\n\nDescription of the parent {@link IShoppingSaleSnapshot} type:\n\n> Snapshot record of sale.\n> \n> `IShoppingSaleSnapshot` is an entity that embodies a snapshot of a sale,\n> and the ERD (Entity Relationship Diagram) describes the role of the\n> `shopping_sale_snapshots` table as follows:\n> \n> > {@link IShoppingSale shopping_sales} is an entity that embodies\n> > \"product sales\" (sales) information registered by the\n> > {@link IShoppingSeller seller}. And the main information of the sale is\n> > recorded in the sub `shopping_sale_snapshots`, not in the main\n> > {@link IShoppingSale shopping_sales}. When a seller changes a previously\n> > registered item, the existing {@link IShoppingSale shopping_sales} record\n> > is not changed, but a new snapshot record is created.\n> >\n> > This is to preserve the {@link IShoppingCustomer customer}'s\n> > {@link IShoppingOrder purchase history} flawlessly after the customer\n> > purchases a specific item, even if the seller changes the components or price\n> > of the item. It is also intended to support sellers in so-called A/B testing,\n> > which involves changing components or prices and measuring the performance\n> > in each case.\n> \n> By the way, DTO (Data Transfer Object) level used by the front-end developer,\n> it does not distinguish {@link IShoppingSale} and `IShoppingSaleSnapshot`\n> strictly, and generally handles {@link IShoppingSale} and snapshot together.\n> \n> But even though the DTO level does not strictly distinguish them, the word and\n> concept of \"snapshot\" is still important, so it is recommended to understand\n> the concept of \"snapshot\" properly.",
          "type": "object",
          "properties": {
            "section": {
              "title": "Belonged section's information",
              "description": "Section information.\n\n`IShoppingSection` is a concept that refers to the spatial information of\nthe market.\n\nIf we compare the section mentioned here to the offline market, it means a\nspatially separated area within the store, such as the \"fruit corner\" or\n\"butcher corner\". Therefore, in the {@link IShoppingSale sale} entity, it is\nnot possible to classify multiple sections simultaneously, but only one section\ncan be classified.\n\nBy the way, if your shopping mall system requires only one section, then just\nuse only one. This concept is designed to be expandable in the future.",
              "type": "object",
              "properties": {
                "id": {
                  "title": "Primary Key",
                  "description": "Primary Key.",
                  "type": "string",
                  "format": "uuid"
                },
                "code": {
                  "title": "Identifier code",
                  "description": "Identifier code.",
                  "type": "string"
                },
                "name": {
                  "title": "Representative name of the section",
                  "description": "Representative name of the section.",
                  "type": "string"
                },
                "created_at": {
                  "title": "Creation time of record",
                  "description": "Creation time of record.",
                  "type": "string",
                  "format": "date-time"
                }
              },
              "required": [
                "id",
                "code",
                "name",
                "created_at"
              ]
            },
            "seller": {
              "title": "Seller who've registered the sale",
              "description": "Invert information starting from seller info.\n\nInstead of accessing to the seller information from the\n{@link IShoppingCustomer.member} -> {@link IShoppingMember.seller},\n`IShoppingSeller.IInvert` starts from the seller information\nand access to the customer, member and {@link IShoppingCitizen citizen}\ninformation inversely.\n\n------------------------------\n\nDescription of the current {@link IShoppingSeller.IInvert} type:\n\n> Invert information starting from seller info.\n> \n> Instead of accessing to the seller information from the\n> {@link IShoppingCustomer.member} -> {@link IShoppingMember.seller},\n> `IShoppingSeller.IInvert` starts from the seller information\n> and access to the customer, member and {@link IShoppingCitizen citizen}\n> information inversely.\n\n------------------------------\n\nDescription of the parent {@link IShoppingSeller} type:\n\n> Seller information.\n> \n> `IShoppingSeller` is an entity that embodies a person who registers\n> {@link IShoppingSale sales} to operate selling activities, with\n> {@link IShoppingMember membership} joining.\n> \n> For reference, unlike {@link IShoppingCustomer customers} which can\n> participate even without membership joining, seller must join membership\n> to operate sales. Also, seller must do the\n> {@link IShoppingCitizen real-name and mobile authentication}, too.",
              "type": "object",
              "properties": {
                "type": {
                  "title": "Discriminant for the type of customer",
                  "description": "Discriminant for the type of customer.",
                  "const": "seller"
                },
                "member": {
                  "title": "Membership joining information",
                  "description": "Invert information of member.\n\nThis invert member information has been designed to be used for another\ninvert information of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert}\n- {@link IShoppingAdministrator.IInvert}\n\n------------------------------\n\nDescription of the current {@link IShoppingMember.IInvert} type:\n\n> Invert information of member.\n> \n> This invert member information has been designed to be used for another\n> invert information of sellers and administrators like below.\n> \n> - {@link IShoppingSeller.IInvert}\n> - {@link IShoppingAdministrator.IInvert}\n\n------------------------------\n\nDescription of the parent {@link IShoppingMember} type:\n\n> Member Account.\n> \n> `IShoppingMember` is an entity that symbolizes the case when a\n> {@link IShoppingCustomer} signs up as a member of this shopping mall\n> system.\n> \n> If a `IShoppingMember` has seller or administrator property. it means that\n> the {@link IShoppingCustomer} has acting as a {@link IShoppingSeller seller}\n> or {@link IShoppingAdministrator administrator} at the same time.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "Primary Key",
                      "description": "Primary Key.",
                      "type": "string",
                      "format": "uuid"
                    },
                    "nickname": {
                      "title": "Nickname that uniquely identifies the member",
                      "description": "Nickname that uniquely identifies the member.",
                      "type": "string"
                    },
                    "emails": {
                      "title": "List of emails",
                      "description": "List of emails.",
                      "type": "array",
                      "items": {
                        "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "title": "Primary Key",
                            "description": "Primary Key.",
                            "type": "string",
                            "format": "uuid"
                          },
                          "value": {
                            "title": "Email address value",
                            "description": "Email address value.",
                            "type": "string",
                            "format": "email"
                          },
                          "created_at": {
                            "title": "Creation time of record",
                            "description": "Creation time of record.",
                            "type": "string",
                            "format": "date-time"
                          }
                        },
                        "required": [
                          "id",
                          "value",
                          "created_at"
                        ]
                      }
                    },
                    "created_at": {
                      "title": "Creation time of record",
                      "description": "Creation time of record.\n\nAnother words, the time when the member has signed up.",
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "required": [
                    "id",
                    "nickname",
                    "emails",
                    "created_at"
                  ]
                },
                "customer": {
                  "title": "Customer, the connection information",
                  "description": "Inverted customer informatino.\n\nThis inverted customer information has been designed to be used for\nanother invert information of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert}\n- {@link IShoppingAdministrator.IInvert}\n\n------------------------------\n\nDescription of the current {@link IShoppingCustomer.IInvert} type:\n\n> Inverted customer informatino.\n> \n> This inverted customer information has been designed to be used for\n> another invert information of sellers and administrators like below.\n> \n> - {@link IShoppingSeller.IInvert}\n> - {@link IShoppingAdministrator.IInvert}\n\n------------------------------\n\nDescription of the parent {@link IShoppingCustomer} type:\n\n> Customer information, but not a person but a connection basis.\n> \n> `IShoppingCustomer` is an entity that literally embodies the information of\n> those who participated in the market as customers. By the way, the\n> `IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\n> even if the same person connects to the shopping mall multiple, multiple\n> records are created in `IShoppingCustomer`.\n> \n> The first purpose of this is to track the customer's inflow path in detail,\n> and it is for cases where the same person enters as a non-member,\n> {@link IShoppingCartCommodity puts items in the shopping cart} in advance,\n> and only authenticates their {@link IShoppingCitizen real name} or\n> registers/logs in at the moment of {@link IShoppingOrderPublish payment}.\n> It is the second. Lastly, it is to accurately track the activities that\n> a person performs at the shopping mall in various ways like below.\n> \n> - Same person comes from an {@link IShoppingExternalUser external service}\n> - Same person creates multiple accounts\n> - Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n> - Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n> \n> Therefore, `IShoppingCustomer` can have multiple records with the same\n> {@link IShoppingCitizen}, {@link IShoppingMember}, and\n> {@link IShoppingExternalUser}. Additionally, if a customer signs up for\n> membership after verifying their real name or signs up for our service after\n> being a user of an external service, all related records are changed at once.\n> Therefore, identification and tracking of customers can be done very\n> systematically.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "Primary Key",
                      "description": "Primary Key.",
                      "type": "string",
                      "format": "uuid"
                    },
                    "channel": {
                      "title": "Belonged channel",
                      "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "title": "Primary Key",
                          "description": "Primary Key.",
                          "type": "string",
                          "format": "uuid"
                        },
                        "created_at": {
                          "title": "Creation time of record",
                          "description": "Creation time of record.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "code": {
                          "title": "Identifier code",
                          "description": "Identifier code.",
                          "type": "string"
                        },
                        "name": {
                          "title": "Name of the channel",
                          "description": "Name of the channel.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "created_at",
                        "code",
                        "name"
                      ]
                    },
                    "external_user": {
                      "title": "External user information",
                      "description": "External user information.\n\nWhen the customer has come frome an external service.",
                      "oneOf": [
                        {
                          "type": "null"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "title": "Primary Key",
                              "description": "Primary Key.",
                              "type": "string",
                              "format": "uuid"
                            },
                            "citizen": {
                              "title": "Citizen activation info",
                              "description": "Citizen activation info.",
                              "oneOf": [
                                {
                                  "type": "null"
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "title": "Primary Key",
                                      "description": "Primary Key.",
                                      "type": "string",
                                      "format": "uuid"
                                    },
                                    "created_at": {
                                      "title": "Creation time of record",
                                      "description": "Creation time of record.",
                                      "type": "string",
                                      "format": "date-time"
                                    },
                                    "mobile": {
                                      "title": "Mobile number",
                                      "description": "Mobile number.",
                                      "x-wrtn-payment-order-mobile": true,
                                      "type": "string",
                                      "pattern": "^[0-9]*$"
                                    },
                                    "name": {
                                      "title": "Real name, or equivalent nickname",
                                      "description": "Real name, or equivalent nickname.",
                                      "x-wrtn-payment-order-citizen": true,
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "created_at",
                                    "mobile",
                                    "name"
                                  ],
                                  "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile} input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                                }
                              ]
                            },
                            "created_at": {
                              "title": "Creation time of record",
                              "description": "Creation time of record.\n\nAnother word, first time when the external user connected.",
                              "type": "string",
                              "format": "date-time"
                            },
                            "uid": {
                              "title": "Identifier key of external user from the external system",
                              "description": "Identifier key of external user from the external system.",
                              "type": "string"
                            },
                            "application": {
                              "title": "Identifier code of the external service",
                              "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code} in common.",
                              "type": "string"
                            },
                            "nickname": {
                              "title": "Nickname of external user in the external system",
                              "description": "Nickname of external user in the external system.",
                              "type": "string"
                            },
                            "data": {
                              "description": "Additional information about external user from the external\nsystem."
                            }
                          },
                          "required": [
                            "id",
                            "citizen",
                            "created_at",
                            "uid",
                            "application",
                            "nickname",
                            "data"
                          ],
                          "description": "External user information.\n\n`IShoppingExternalUser` is an entity dsigned for when this system needs\nto connect with external services and welcome their users as\n{@link IShoppingCustomer customers} of this service.\n\nFor reference, customers who connect from an external service must have\nthis record, and the external service user is identified through the two\nattributes {@link application} and {@link uid}. If a customer connected\nfrom an external service completes\n{@link IShoppingCitizen real-name authentication} from this service, each\ntime the external service user reconnects to this service and issues a\nnew customer authentication token, real-name authentication begins with\ncompleted.\n\nAnd {@link password} is the password issued to the user by the external\nservice system (the so-called permanent user authentication token), and\nis never the actual user password. However, for customers who entered the\nsame application and uid as the current external system user, this is to\ndetermine whether to view this as a correct external system user or a\nviolation.\n\nIn addition, additional information received from external services can\nbe recorded in the data field in JSON format."
                        }
                      ]
                    },
                    "href": {
                      "title": "Connection address",
                      "description": "Connection address.\n\nSame with {@link window.location.href} of client.",
                      "type": "string",
                      "format": "uri"
                    },
                    "referrer": {
                      "title": "Referrer address",
                      "description": "Referrer address.\n\nSame with {@link window.document.referrer} of client.",
                      "oneOf": [
                        {
                          "type": "null"
                        },
                        {
                          "type": "string",
                          "format": "uri"
                        },
                        {
                          "type": "string",
                          "maxLength": 0
                        }
                      ]
                    },
                    "ip": {
                      "title": "Connection IP Address",
                      "description": "Connection IP Address.",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "ipv4"
                        },
                        {
                          "type": "string",
                          "format": "ipv6"
                        }
                      ]
                    },
                    "created_at": {
                      "title": "Creation time of the connection record",
                      "description": "Creation time of the connection record.",
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "required": [
                    "id",
                    "channel",
                    "external_user",
                    "href",
                    "referrer",
                    "ip",
                    "created_at"
                  ]
                },
                "citizen": {
                  "title": "Real-name and mobile number authentication information",
                  "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile} input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "Primary Key",
                      "description": "Primary Key.",
                      "type": "string",
                      "format": "uuid"
                    },
                    "created_at": {
                      "title": "Creation time of record",
                      "description": "Creation time of record.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "mobile": {
                      "title": "Mobile number",
                      "description": "Mobile number.",
                      "x-wrtn-payment-order-mobile": true,
                      "type": "string",
                      "pattern": "^[0-9]*$"
                    },
                    "name": {
                      "title": "Real name, or equivalent nickname",
                      "description": "Real name, or equivalent nickname.",
                      "x-wrtn-payment-order-citizen": true,
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "created_at",
                    "mobile",
                    "name"
                  ]
                },
                "id": {
                  "title": "Primary Key",
                  "description": "Primary Key.",
                  "type": "string",
                  "format": "uuid"
                },
                "created_at": {
                  "title": "Creation tmie of record",
                  "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up.",
                  "type": "string",
                  "format": "date-time"
                }
              },
              "required": [
                "type",
                "member",
                "customer",
                "citizen",
                "id",
                "created_at"
              ]
            },
            "id": {
              "title": "Primary Key of Sale",
              "description": "Primary Key of Sale.",
              "type": "string",
              "format": "uuid"
            },
            "snapshot_id": {
              "title": "Primary Key of Snapshot",
              "description": "Primary Key of Snapshot.",
              "type": "string",
              "format": "uuid"
            },
            "latest": {
              "title": "Whether the snapshot is the latest one or not",
              "description": "Whether the snapshot is the latest one or not.",
              "type": "boolean"
            },
            "content": {
              "title": "Description and image content describing the sale",
              "description": "Description of the current {@link IShoppingSaleContent} type:\n\n> Content information of sale snapshot.\n> \n> `IShoppingSaleContent` is an entity embodies the description contents\n> of {@link IShoppingSale}.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid"
                },
                "title": {
                  "type": "string"
                },
                "thumbnails": {
                  "type": "array",
                  "items": {
                    "description": "Attachment File.\n\nEvery attachment files that are managed in current system.\n\nFor reference, it is possible to omit one of file {@link name}\nor {@link extension} like `.gitignore` or `README` case, but not\npossible to omit both of them.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "title": "Primary Key",
                        "description": "Primary Key.",
                        "type": "string",
                        "format": "uuid"
                      },
                      "created_at": {
                        "title": "Creation time of attachment file",
                        "description": "Creation time of attachment file.",
                        "type": "string",
                        "format": "date-time"
                      },
                      "name": {
                        "title": "File name, except extension",
                        "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string.",
                        "type": "string",
                        "maxLength": 255
                      },
                      "extension": {
                        "title": "Extension",
                        "description": "Extension.\n\nPossible to omit like `README` case.",
                        "oneOf": [
                          {
                            "type": "null"
                          },
                          {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 8
                          }
                        ]
                      },
                      "url": {
                        "title": "URL path of the real file",
                        "description": "URL path of the real file.",
                        "type": "string",
                        "format": "uri",
                        "contentMediaType": "image/*"
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "name",
                      "extension",
                      "url"
                    ]
                  }
                }
              },
              "required": [
                "id",
                "title",
                "thumbnails"
              ]
            },
            "channels": {
              "title": "List of channels and categories",
              "description": "List of channels and categories.\n\nWhich channels and categories the sale is registered to.",
              "type": "array",
              "items": {
                "description": "Target channel (and categories) of sale to sell.\n\n`IShoppingSaleChannel` is an entity that expresses through which\n{@link IShoppingChannel channel} a listing {@link IShoppingSale} is sold.\n\nAlso, if {@link IShoppingChannelCategory categories} are specified, it also\nmeans that the sale be sold. Otherwise, none of the categories of the channel\nbeing specified, it means that every categories of the channel is listing the\ntarget sale.",
                "type": "object",
                "properties": {
                  "categories": {
                    "title": "List of categories of the channel listing the sale",
                    "description": "List of categories of the channel listing the sale.\n\nIf empty, it means all categories of the channel is listing the sale.",
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/IShoppingChannelCategory.IInvert"
                    }
                  },
                  "id": {
                    "title": "Primary Key",
                    "description": "Primary Key.",
                    "type": "string",
                    "format": "uuid"
                  },
                  "created_at": {
                    "title": "Creation time of record",
                    "description": "Creation time of record.",
                    "type": "string",
                    "format": "date-time"
                  },
                  "code": {
                    "title": "Identifier code",
                    "description": "Identifier code.",
                    "type": "string"
                  },
                  "name": {
                    "title": "Name of the channel",
                    "description": "Name of the channel.",
                    "type": "string"
                  }
                },
                "required": [
                  "categories",
                  "id",
                  "created_at",
                  "code",
                  "name"
                ]
              },
              "minItems": 1
            },
            "tags": {
              "title": "List of search tags",
              "description": "List of search tags.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "units": {
              "title": "List of units",
              "description": "List of units.\n\nRecords about individual product composition information that are sold\nin the sale. Each {@link IShoppingSaleUnit unit} record has configurable\n{@link IShoppingSaleUnitOption options},\n{@link IShoppingSaleUnitOptionCandidate candidate} values for each\noption, and {@link IShoppingSaleUnitStock final stocks} determined by\nselecting every candidate values of each option.",
              "type": "array",
              "items": {
                "description": "Description of the current {@link IShoppingSaleUnit} type:\n\n> Product composition information handled in the sale.\n> \n> `IShoppingSaleUnit` is an entity that embodies the \"individual product\"\n> information handled in the {@link IShoppingSale sale}.\n> \n> For reference, the reason why `IShoppingSaleUnit` is separated from\n> {@link IShoppingSaleSnapshot} by an algebraic relationship of 1: N is because\n> there are some cases where multiple products are sold in one listing. This is\n> the case with so-called \"bundled products\".\n> \n> - Bundle from regular product (Mackbook Set)\n>   - Main Body\n>   - Keyboard\n>   - Mouse\n>   - Apple Care (Free A/S Voucher)\n> \n> And again, `IShoppingSaleUnit` does not in itself refer to the\n> {@link IShoppingSaleUnitStock final stock} that the\n> {@link IShoppingCustomer customer} will {@link IShoppingOrder purchase}.\n> The final stock can be found only after selecting all given\n> {@link IShoppingSaleUnitOption options} and their\n> {@link IShoppingSaleUnitOptionCandidate candidate values}.\n> \n> For example, even if you buy a Macbook, the final stocks are determined only\n> after selecting all the options (CPU / RAM / SSD), etc.",
                "type": "object",
                "properties": {
                  "stocks": {
                    "title": "List of final stocks",
                    "description": "List of final stocks.",
                    "type": "array",
                    "items": {
                      "description": "Invert information from the cart.\n\n------------------------------\n\nDescription of the current {@link IShoppingSaleUnitStock.IInvert} type:\n\n> Invert information from the cart.\n\n------------------------------\n\nDescription of the parent {@link IShoppingSaleUnitStock} type:\n\n> Final component information on units for sale.\n> \n> `IShoppingSaleUnitStock` is a subsidiary entity of {@link IShoppingSaleUnit}\n> that represents a product catalog for sale, and is a kind of final stock that is\n> constructed by selecting all {@link IShoppingSaleUnitSelectableOption options}\n> (variable \"select\" type) and their\n> {@link IShoppingSaleUnitOptionCandidate candidate} values in the belonging unit.\n> It is the \"good\" itself that customers actually purchase.\n> \n> - Product Name) MacBook\n>   - Options\n>     - CPU: { i3, i5, i7, i9 }\n>     - RAM: { 8GB, 16GB, 32GB, 64GB, 96GB }\n>     - SSD: { 256GB, 512GB, 1TB }\n>   - Number of final stocks: 4 * 5 * 3 = 60\n> \n> For reference, the total number of `IShoppingSaleUnitStock` records in an\n> attribution unit can be obtained using Cartesian Product. In other words, the\n> value obtained by multiplying all the candidate values that each\n> (variable \"select\" type) option can have by the number of cases is the total\n> number of final stocks in the unit.\n> \n> Of course, without a single variable \"select\" type option, the final stocks\n> count in the unit is only 1.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "title": "Primary Key",
                          "description": "Primary Key.",
                          "type": "string",
                          "format": "uuid"
                        },
                        "name": {
                          "title": "Representative name of the stock",
                          "description": "Representative name of the stock.",
                          "type": "string"
                        },
                        "price": {
                          "title": "Price of the stock",
                          "description": "Shopping price interface.",
                          "type": "object",
                          "properties": {
                            "nominal": {
                              "title": "Nominal price",
                              "description": "Nominal price.\n\nThis is not {@link real real price} to pay, but just a nominal price to show.\nIf this value is greater than the {@link real real price}, it would be shown\nlike {@link IShoppingSeller seller} is giving a discount.",
                              "type": "number",
                              "minimum": 0
                            },
                            "real": {
                              "title": "Real price to pay",
                              "description": "Real price to pay.",
                              "type": "number",
                              "minimum": 0
                            }
                          },
                          "required": [
                            "nominal",
                            "real"
                          ]
                        },
                        "quantity": {
                          "title": "Quantity of the stock in the cart",
                          "description": "Quantity of the stock in the cart.",
                          "type": "integer",
                          "minimum": 1
                        },
                        "inventory": {
                          "title": "Current inventory status of the stock",
                          "description": "Inventory information of a final stock.",
                          "type": "object",
                          "properties": {
                            "income": {
                              "title": "Total income quantity",
                              "description": "Total income quantity.",
                              "type": "integer"
                            },
                            "outcome": {
                              "title": "Total outcome quantity",
                              "description": "Total outcome quantity.",
                              "type": "integer"
                            }
                          },
                          "required": [
                            "income",
                            "outcome"
                          ]
                        },
                        "choices": {
                          "title": "List of choices",
                          "description": "List of choices.\n\nWhich values being written for each option.",
                          "type": "array",
                          "items": {
                            "description": "Invert information from the cart.\n\n------------------------------\n\nDescription of the current {@link IShoppingSaleUnitStockChoice.IInvert} type:\n\n> Invert information from the cart.\n\n------------------------------\n\nDescription of the parent {@link IShoppingSaleUnitStockChoice} type:\n\n> Selection information of final stock.\n> \n> `IShoppingSaleUnitStockChoice` is an entity that represents which\n> {@link IShoppingSaleUnitSelectableOption option} of each variable \"select\"\n> type was selected for each {@link IShoppingSaleUnitStock stock} and which\n> {@link IShoppingSaleUnitOptionCandidate candidate value} was selected within\n> it.\n> \n> Of course, if the bound {@link IShoppingSaleUnit unit} does not have any\n> options, this entity can also be ignored.",
                            "type": "object",
                            "properties": {
                              "id": {
                                "title": "Primary Key",
                                "description": "Primary Key.",
                                "type": "string",
                                "format": "uuid"
                              },
                              "option": {
                                "title": "Target option",
                                "description": "Target option.",
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "title": "Primary Key",
                                        "description": "Primary Key.",
                                        "type": "string",
                                        "format": "uuid"
                                      },
                                      "type": {
                                        "title": "Discriminant for the type of selectable option",
                                        "description": "Discriminant for the type of selectable option.",
                                        "const": "select"
                                      },
                                      "name": {
                                        "title": "Represents the name of the option",
                                        "description": "Represents the name of the option.",
                                        "type": "string"
                                      },
                                      "variable": {
                                        "title": "Whether the option is variable or not",
                                        "description": "Whether the option is variable or not.\n\nWhen type of current option is \"select\", this attribute means whether\nselecting different candidate value affects the final stock or not.",
                                        "type": "boolean"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "type",
                                      "name",
                                      "variable"
                                    ],
                                    "description": "Description of the current {@link IShoppingSaleUnitSelectableOption} type:\n\n> Individual option information on units for sale.\n> \n> `IShoppingSaleUnitSelectableOption` is a subsidiary entity of\n> {@link IShoppingSaleUnit} that represents individual products in the\n> {@link IShoppingSale sale}, and is an entity designed to represent individual\n> selectable option information for the unit.\n> \n> - Examples of Options\n>   - selectable options\n>     - Computer: CPU, RAM, SSD, etc.\n>     - Clothes: size, color, style, etc.\n>   - descriptive options\n>     - Engrave\n>     - Simple question\n> \n> If the {@link variable} property value is `true`, the final stock that the\n> {@link IShoppingCustomer customer} will purchase changes depending on the\n> selection of the {@link IShoppingSaleUnitOptionCandidate candidate value}.\n> \n> Conversely, if it is a type other than \"select\", or if the {@link variable}\n> property value is \"false\", , this is an option that has no meaning beyond\n> simple information transfer. Therefore, no matter what value the customer\n> chooses when purchasing it, the option in this case does not affect the\n> {@link IShoppingSaleUnitStock final stock}."
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "title": "Primary Key",
                                        "description": "Primary Key.",
                                        "type": "string",
                                        "format": "uuid"
                                      },
                                      "type": {
                                        "title": "Type of descriptive option",
                                        "description": "Type of descriptive option.\n\nWhich typed value should be written when purchasing.",
                                        "oneOf": [
                                          {
                                            "const": "string"
                                          },
                                          {
                                            "const": "number"
                                          },
                                          {
                                            "const": "boolean"
                                          }
                                        ]
                                      },
                                      "name": {
                                        "title": "Readable name of the option",
                                        "description": "Readable name of the option.",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "type",
                                      "name"
                                    ],
                                    "description": "Descriptive option.\n\nWhen type of the option not `\"select\"`, it means the option is descriptive\nthat requiring {@link IShoppingCustomer customers} to write some value to\n{@link IShoppingOrder purchase}. Also, whatever customer writes about the\noption, it does not affect the {@link IShoppingSaleUnitStock final stock}.\n\nAnother words, the descriptive option is just for information transfer."
                                  }
                                ]
                              },
                              "candidate": {
                                "title": "Selected candidate value",
                                "description": "Selected candidate value.",
                                "oneOf": [
                                  {
                                    "type": "null"
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "title": "Primary Key",
                                        "description": "Primary Key.",
                                        "type": "string",
                                        "format": "uuid"
                                      },
                                      "name": {
                                        "title": "Represents the name of the candidate value",
                                        "description": "Represents the name of the candidate value.",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "name"
                                    ],
                                    "description": "Selectable candidate values within an option.\n\n`IShoppingSaleUnitOptionCandidate` is an entity that represents individual\ncandidate values that can be selected from\n{@link IShoppingSaleUnitSelectableOption options of the \"select\" type}.\n\n- Example\n  - RAM: 8GB, 16GB, 32GB\n  - GPU: RTX 3060, RTX 4080, TESLA\n  - License: Private, Commercial, Educatiion\n\nBy the way, if belonged option is not \"select\" type, this entity never\nbeing used."
                                  }
                                ]
                              },
                              "value": {
                                "title": "Written value",
                                "description": "Written value.",
                                "oneOf": [
                                  {
                                    "type": "null"
                                  },
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  },
                                  {
                                    "type": "boolean"
                                  }
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "option",
                              "candidate",
                              "value"
                            ]
                          }
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "price",
                        "quantity",
                        "inventory",
                        "choices"
                      ]
                    },
                    "minItems": 1
                  },
                  "id": {
                    "title": "Primary Key",
                    "description": "Primary Key.",
                    "type": "string",
                    "format": "uuid"
                  },
                  "name": {
                    "title": "Representative name of the unit",
                    "description": "Representative name of the unit.",
                    "type": "string"
                  },
                  "primary": {
                    "title": "Whether the unit is primary or not",
                    "description": "Whether the unit is primary or not.\n\nJust a labeling value.",
                    "type": "boolean"
                  },
                  "required": {
                    "title": "Whether the unit is required or not",
                    "description": "Whether the unit is required or not.\n\nWhen the unit is required, the customer must select the unit. If do not\nselect, customer can't buy it.\n\nFor example, if there's a sale \"Macbook Set\" and one of the unit is the\n\"Main Body\", is it possible to buy the \"Macbook Set\" without the\n\"Main Body\" unit? This property is for that case.",
                    "type": "boolean"
                  }
                },
                "required": [
                  "stocks",
                  "id",
                  "name",
                  "primary",
                  "required"
                ]
              },
              "minItems": 1
            },
            "created_at": {
              "title": "Creation time of the record",
              "description": "Creation time of the record.\n\nNote that, this property is different with {@link opened_at},\nwhich means the timepoint of the sale is opened.",
              "type": "string",
              "format": "date-time"
            },
            "updated_at": {
              "title": "Last updated time of the record",
              "description": "Last updated time of the record.\n\nIn another words, creation time of the last snapshot.",
              "type": "string",
              "format": "date-time"
            },
            "paused_at": {
              "title": "Paused time of the sale",
              "description": "Paused time of the sale.\n\nThe sale is paused by the seller, for some reason.\n\n{@link IShoppingCustomer Customers} can still see the sale on the\nboth list and detail pages, but the sale has a warning label\n\"The sale is paused by the seller\".",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "date-time"
                }
              ]
            },
            "suspended_at": {
              "title": "Suspended time of the sale",
              "description": "Suspended time of the sale.\n\nThe sale is suspended by the seller, for some reason.\n\n{@link IShoppingCustomer Customers} cannot see the sale on the\nboth list and detail pages. It is almost same with soft delettion,\nbut there's a little bit difference that the owner\n{@link IShoppingSeller seller} can still see the sale and resume it.\n\nOf course, the {@link IShoppingCustomer customers} who have\nalready purchased the sale can still see the sale on the\n{@link IShoppingOrder order} page.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "date-time"
                }
              ]
            },
            "opened_at": {
              "title": "Opening time of the sale",
              "description": "Opening time of the sale.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "date-time"
                }
              ]
            },
            "closed_at": {
              "title": "Closing time of the sale",
              "description": "Closing time of the sale.\n\nIf this value is `null`, the sale be continued forever.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "date-time"
                }
              ]
            }
          },
          "required": [
            "section",
            "seller",
            "id",
            "snapshot_id",
            "latest",
            "content",
            "channels",
            "tags",
            "units",
            "created_at",
            "updated_at",
            "paused_at",
            "suspended_at",
            "opened_at",
            "closed_at"
          ]
        },
        "orderable": {
          "title": "Whether current commodity is orderable or not",
          "description": "Whether current commodity is orderable or not.\n\nIf this attribute is `false`, then the commodity is not orderable, because\nit has already been ordered.",
          "type": "boolean"
        },
        "pseudo": {
          "title": "Whether current commodity is pseudo or not",
          "description": "Whether current commodity is pseudo or not.\n\nWhen this attribute is `true`, then the commodity is not the real one,\nbut just fake information only for calculating the discount effect by\n{@link IShoppingCoupon coupons}.",
          "type": "boolean"
        },
        "volume": {
          "title": "Volume of the commodity to purchase",
          "description": "Volume of the commodity to purchase.\n\nA value indicating how many sets would be multiplied to the children\n{@link IShoppingSaleUnitStock.IInvert.quantity} values.",
          "type": "integer",
          "minimum": 1
        },
        "price": {
          "title": "Price of the commodity",
          "description": "Shopping price interface.",
          "type": "object",
          "properties": {
            "nominal": {
              "title": "Nominal price",
              "description": "Nominal price.\n\nThis is not {@link real real price} to pay, but just a nominal price to show.\nIf this value is greater than the {@link real real price}, it would be shown\nlike {@link IShoppingSeller seller} is giving a discount.",
              "type": "number",
              "minimum": 0
            },
            "real": {
              "title": "Real price to pay",
              "description": "Real price to pay.",
              "type": "number",
              "minimum": 0
            }
          },
          "required": [
            "nominal",
            "real"
          ]
        },
        "created_at": {
          "title": "Creation time of the record",
          "description": "Creation time of the record.",
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "sale",
        "orderable",
        "pseudo",
        "volume",
        "price",
        "created_at"
      ]
    },
    "success": true,
    "arguments": {
      "type": {
        "host": "http://127.0.0.1:37001",
        "headers": {
          "Authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0YWJsZSI6InNob3BwaW5nX2N1c3RvbWVycyIsImlkIjoiMjVlYzg3ZjctODE1ZC00YjU3LTk1NzYtYzk1Mzk4NGJjMjhmIiwicmVhZG9ubHkiOmZhbHNlLCJleHBpcmVkX2F0IjoiMjAyNC0xMi0xM1QwOTo0MjoxMi41MzlaIiwicmVmcmVzaGFibGVfdW50aWwiOiIyMDI0LTEyLTI3VDA2OjQyOjEyLjUzOVoiLCJpYXQiOjE3MzQwNzIxMzJ9.zWZrU-d1bSW-MawmSo2RYRPk_73xtR_PxfFUrEpDJkc"
        }
      },
      "properties": {
        "sale_id": "ef43459e-edb6-4b2c-bce5-c74cc815a4f4",
        "stocks": [
          {
            "unit_id": "496ed199-3bf8-4de6-a38e-faf9267de621",
            "stock_id": "6711956d-8aec-488f-b5ce-bfb060c262b3",
            "choices": [
              {
                "option_id": "ecc25b78-a2e7-456a-a9e9-a0628855d2ff",
                "candidate_id": "2242ef1f-aff2-432a-8ff3-2de6e155f039",
                "value": null
              },
              {
                "option_id": "377c03e7-3da2-4082-a3a3-db735247ef58",
                "candidate_id": "34d16f7d-c322-42a4-b3fd-053aa28ea199",
                "value": null
              }
            ],
            "quantity": 1
          },
          {
            "unit_id": "36a2127c-9ed2-4adb-a116-1de93f7fb1ce",
            "stock_id": "9810c724-f965-4e06-87cd-971a5f4788c3",
            "choices": [],
            "quantity": 1
          },
          {
            "unit_id": "6aa653da-6ec2-4c9f-83a1-3e63958ef0d8",
            "stock_id": "c42c4acb-d77f-4b4c-8d5c-3d78532271f7",
            "choices": [],
            "quantity": 1
          }
        ],
        "volume": 1
      }
    },
    "value": {
      "id": "9f77d5b5-aa22-4820-8123-30c579cd3ff0",
      "sale": {
        "section": {
          "id": "a01c572c-3199-4929-ac67-ba7c31b2c808",
          "code": "general",
          "name": "General",
          "created_at": "2024-12-13T06:42:11.124Z"
        },
        "seller": {
          "type": "seller",
          "member": {
            "id": "a853492c-70b4-487f-9648-0f6109a0ad69",
            "nickname": "Robot",
            "emails": [
              {
                "id": "81ea73c4-b41e-4022-9384-d51d3215797e",
                "value": "robot@nestia.io",
                "created_at": "2024-12-13T06:42:11.227Z"
              }
            ],
            "created_at": "2024-12-13T06:42:11.227Z"
          },
          "customer": {
            "id": "aeb8583b-8bd9-4d29-adea-78779b405046",
            "channel": {
              "id": "2323f4bd-21ad-45b7-ae3b-cadd84dcc935",
              "created_at": "2024-12-13T06:42:10.908Z",
              "code": "samchon",
              "name": "Samchon Shopping Mall"
            },
            "external_user": null,
            "href": "http://127.0.0.1/TestAutomation",
            "referrer": "http://127.0.0.1/NodeJS",
            "ip": "127.0.0.1",
            "created_at": "2024-12-13T06:42:11.258Z"
          },
          "citizen": {
            "id": "43aedfea-6b2c-4c18-9f69-60373c9580dd",
            "created_at": "2024-12-13T06:42:11.157Z",
            "mobile": "01012345678",
            "name": "Robot"
          },
          "id": "addccb32-ac48-460e-9624-d9809da19d99",
          "created_at": "2024-12-13T06:42:11.241Z"
        },
        "id": "ef43459e-edb6-4b2c-bce5-c74cc815a4f4",
        "snapshot_id": "e13727ff-a31b-4460-ab6f-72e1dd3e1e2c",
        "latest": true,
        "content": {
          "id": "f2a6a47e-f72c-44b6-88ac-27ebbfa1eed0",
          "title": "Stanley Tumbler Collection",
          "thumbnails": [
            {
              "id": "c47319f2-bd60-49f5-8703-773a593e0775",
              "created_at": "2024-12-13T06:42:12.111Z",
              "name": "stanley-tumbler-collection-thumbnail",
              "extension": "jpeg",
              "url": "https://serpapi.com/searches/673d71322c566d56d9c20ceb/images/ce9a07f2aa831dbec8bb1c287299706e24a52a8e0c119fa162041805038957a7.jpeg"
            }
          ]
        },
        "channels": [
          {
            "categories": [
              {
                "parent": null,
                "id": "19f9099e-3a2f-4894-a2c7-36d8c2d7d9d7",
                "code": "accessories",
                "parent_id": null,
                "name": "Accessories",
                "created_at": "2024-12-13T06:42:11.060Z"
              },
              {
                "parent": null,
                "id": "e82fb84b-d443-441b-a140-9f45bd73e0ca",
                "code": "others",
                "parent_id": null,
                "name": "Others",
                "created_at": "2024-12-13T06:42:11.116Z"
              }
            ],
            "id": "2323f4bd-21ad-45b7-ae3b-cadd84dcc935",
            "created_at": "2024-12-13T06:42:10.908Z",
            "code": "samchon",
            "name": "Samchon Shopping Mall"
          }
        ],
        "tags": [
          "Stanley",
          "Tumbler",
          "Drinkware",
          "Eco-Friendly"
        ],
        "units": [
          {
            "stocks": [
              {
                "id": "6711956d-8aec-488f-b5ce-bfb060c262b3",
                "name": "Classic Tumbler - 24 oz Polar White",
                "price": {
                  "nominal": 60000,
                  "real": 54000
                },
                "quantity": 1,
                "inventory": {
                  "income": 2000,
                  "outcome": 0
                },
                "choices": [
                  {
                    "id": "403b57c0-1b4d-46a5-b5a1-2de2073dd2ce",
                    "option": {
                      "id": "ecc25b78-a2e7-456a-a9e9-a0628855d2ff",
                      "type": "select",
                      "name": "Capacity",
                      "variable": true
                    },
                    "candidate": {
                      "id": "2242ef1f-aff2-432a-8ff3-2de6e155f039",
                      "name": "24 oz"
                    },
                    "value": null
                  },
                  {
                    "id": "956bac55-940e-4a31-9bc5-3a56a5d53ba3",
                    "option": {
                      "id": "377c03e7-3da2-4082-a3a3-db735247ef58",
                      "type": "select",
                      "name": "Color",
                      "variable": true
                    },
                    "candidate": {
                      "id": "34d16f7d-c322-42a4-b3fd-053aa28ea199",
                      "name": "Polar White"
                    },
                    "value": null
                  }
                ]
              }
            ],
            "id": "496ed199-3bf8-4de6-a38e-faf9267de621",
            "name": "Classic Tumbler",
            "primary": true,
            "required": true
          },
          {
            "stocks": [
              {
                "id": "9810c724-f965-4e06-87cd-971a5f4788c3",
                "name": "Adventure Quencher Tumbler",
                "price": {
                  "nominal": 70000,
                  "real": 64000
                },
                "quantity": 1,
                "inventory": {
                  "income": 5000,
                  "outcome": 0
                },
                "choices": []
              }
            ],
            "id": "36a2127c-9ed2-4adb-a116-1de93f7fb1ce",
            "name": "Adventure Quencher Tumbler",
            "primary": false,
            "required": false
          },
          {
            "stocks": [
              {
                "id": "c42c4acb-d77f-4b4c-8d5c-3d78532271f7",
                "name": "Accessories Set",
                "price": {
                  "nominal": 20000,
                  "real": 18000
                },
                "quantity": 1,
                "inventory": {
                  "income": 10000,
                  "outcome": 0
                },
                "choices": []
              }
            ],
            "id": "6aa653da-6ec2-4c9f-83a1-3e63958ef0d8",
            "name": "Accessories Set",
            "primary": false,
            "required": false
          }
        ],
        "created_at": "2024-12-13T06:42:12.111Z",
        "updated_at": "2024-12-13T06:42:12.111Z",
        "paused_at": null,
        "suspended_at": null,
        "opened_at": "2024-12-13T06:42:12.108Z",
        "closed_at": null
      },
      "orderable": true,
      "pseudo": false,
      "volume": 1,
      "price": {
        "nominal": 150000,
        "real": 136000
      },
      "created_at": "2024-12-13T06:42:13.156Z"
    }
  },
  {
    "name": "shoppings_customers_orders_post",
    "method": "post",
    "path": "/shoppings/customers/orders",
    "description": "Create a new order application.\n\nCreate a new {@link IShoppingOrder order application} from a\n{@link IShoppingCartCommodity shopping cart} that has been composed by the\n{@link IShoppingCustomer}. Of course, do not need to put every commodities\nto the order, but possible to select some of them by the customer.\n\nBy the way, this function does not mean completion the order, but means\njust customer is applying the order. The order be completed only when customer\n{@link IShoppingOrderPublish.paid_at pays} the order.",
    "parameters": {
      "type": "object",
      "properties": {
        "body": {
          "description": "Creation information of the order appliance.\n\n------------------------------\n\nDescription of the current {@link IShoppingOrder.ICreate} type:\n\n> Creation information of the order appliance.\n\n------------------------------\n\nDescription of the parent {@link IShoppingOrder} type:\n\n> Order application information.\n> \n> `IShoppingOrder` is an entity that embodies {@link IShoppingCustomer customer}'s\n> order application information. However, please note that at this time, you are\n> still at the \"order application\" stage and not the \"order confirmation\" stage.\n> \n> And as soon as a customer applies for an order, all\n> {@link IShoppingCartCommodity commodities} in the target shopping cart are\n> promoted to {@link IShoppingOrderGood goods}, and those good records are created\n> under this `IShoppingOrder`.\n> \n> Of course, not all commodities in the target shopping cart become\n> {@link IShoppingOrderGood}, but only those selected by the customer become the\n> {@link IShoppingOrderGood}.",
          "type": "object",
          "properties": {
            "goods": {
              "title": "List of goods in the order",
              "description": "List of goods in the order.",
              "type": "array",
              "items": {
                "description": "Creation information of the good.\n\n------------------------------\n\nDescription of the current {@link IShoppingOrderGood.ICreate} type:\n\n> Creation information of the good.\n\n------------------------------\n\nDescription of the parent {@link IShoppingOrderGood} type:\n\n> Information about the individual goods that make up your order.\n> \n> `IShoppingOrderGood` is an entity that represents each good ordered by a\n> {@link IShoppingCustomer customer}, and the record is created in the process\n> of upgrading the product {@link IShoppingCartCommodity commodity} in the\n> shopping cart to a good due to the customer's {@link IShoppingOrder order}\n> request.\n> \n> And `IShoppingOrderGood`, like {@link IShoppingCartCommodity}, is a concept\n> that corresponds to the listing {@link IShoppingSaleSnapshot sale snapshot}.\n> \n> For reference, `IShoppingOrderGood` also contains {@link volume} information\n> separately from the belonging {@link IShoppingCartCommodity.volume}. This is\n> because there are some cases where you put 3 books in your shopping cart and\n> then change them to 4 during the actual order application process. This is to\n> increase the reusability of the shopping cart by changing the volume attribute\n> of the current entity rather than directly changing the commodity information.\n> \n> In addition, `IShoppingOrderGood` becomes the most basic unit for the post-order\n> process, that is, after service (A/S). For example, after receiving a\n> customer's product, confirming the order is recorded in the {@link confirmed_at}\n> attribute. Additionally, `IShoppingOrderGood` is the unit in which customers\n> issues or request exchanges or refunds for ordered products.",
                "type": "object",
                "properties": {
                  "commodity_id": {
                    "title": "Target commodity's {@link IShoppingCartCommodity.id}",
                    "description": "Target commodity's {@link IShoppingCartCommodity.id}.",
                    "type": "string",
                    "format": "uuid"
                  },
                  "volume": {
                    "title": "Volume of the good",
                    "description": "Volume of the good.\n\nThe value multiplied to {@link IShoppingCartCommodityStock.quantity}.\nIt's purpose is exactly same with {@link IShoppingCartCommodity.volume},\nbut rewritten because the {@link IShoppingCartCommodity} records are reusable\nuntil payment.",
                    "type": "integer"
                  }
                },
                "required": [
                  "commodity_id",
                  "volume"
                ]
              }
            },
            "name": {
              "title": "Representative name of the order",
              "description": "Representative name of the order.\n\nIf omit, the name will be generated automatically.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string"
                }
              ]
            }
          },
          "required": [
            "goods",
            "name"
          ]
        }
      },
      "additionalProperties": false,
      "required": [
        "body"
      ],
      "$defs": {
        "IShoppingChannelCategory.IInvert": {
          "description": "Invert category information with parent category.",
          "type": "object",
          "properties": {
            "parent": {
              "title": "Parent category info with recursive structure",
              "description": "Parent category info with recursive structure.\n\nIf no parent exists, then be `null`.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "$ref": "#/$defs/IShoppingChannelCategory.IInvert"
                }
              ]
            },
            "id": {
              "title": "Primary Key",
              "description": "Primary Key.",
              "type": "string",
              "format": "uuid"
            },
            "code": {
              "title": "Identifier code of the category",
              "description": "Identifier code of the category.\n\nThe code must be unique in the channel.",
              "type": "string"
            },
            "parent_id": {
              "title": "Parent category's ID",
              "description": "Parent category's ID.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "name": {
              "title": "Representative name of the category",
              "description": "Representative name of the category.\n\nThe name must be unique within the parent category. If no parent exists,\nthen the name must be unique within the channel between no parent\ncategories.",
              "type": "string"
            },
            "created_at": {
              "title": "Creation time of record",
              "description": "Creation time of record.",
              "type": "string",
              "format": "date-time"
            }
          },
          "required": [
            "parent",
            "id",
            "code",
            "parent_id",
            "name",
            "created_at"
          ]
        }
      }
    },
    "output": {
      "description": "Order application information.\n\n`IShoppingOrder` is an entity that embodies {@link IShoppingCustomer customer}'s\norder application information. However, please note that at this time, you are\nstill at the \"order application\" stage and not the \"order confirmation\" stage.\n\nAnd as soon as a customer applies for an order, all\n{@link IShoppingCartCommodity commodities} in the target shopping cart are\npromoted to {@link IShoppingOrderGood goods}, and those good records are created\nunder this `IShoppingOrder`.\n\nOf course, not all commodities in the target shopping cart become\n{@link IShoppingOrderGood}, but only those selected by the customer become the\n{@link IShoppingOrderGood}.",
      "type": "object",
      "properties": {
        "id": {
          "title": "Primary Key",
          "description": "Primary Key.",
          "x-wrtn-payment-order-id": true,
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "title": "Representative name of the order",
          "description": "Representative name of the order.",
          "x-wrtn-payment-order-name": true,
          "type": "string"
        },
        "customer": {
          "title": "Customer who've applied for the order",
          "description": "Customer information, but not a person but a connection basis.\n\n`IShoppingCustomer` is an entity that literally embodies the information of\nthose who participated in the market as customers. By the way, the\n`IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\neven if the same person connects to the shopping mall multiple, multiple\nrecords are created in `IShoppingCustomer`.\n\nThe first purpose of this is to track the customer's inflow path in detail,\nand it is for cases where the same person enters as a non-member,\n{@link IShoppingCartCommodity puts items in the shopping cart} in advance,\nand only authenticates their {@link IShoppingCitizen real name} or\nregisters/logs in at the moment of {@link IShoppingOrderPublish payment}.\nIt is the second. Lastly, it is to accurately track the activities that\na person performs at the shopping mall in various ways like below.\n\n- Same person comes from an {@link IShoppingExternalUser external service}\n- Same person creates multiple accounts\n- Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n- Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n\nTherefore, `IShoppingCustomer` can have multiple records with the same\n{@link IShoppingCitizen}, {@link IShoppingMember}, and\n{@link IShoppingExternalUser}. Additionally, if a customer signs up for\nmembership after verifying their real name or signs up for our service after\nbeing a user of an external service, all related records are changed at once.\nTherefore, identification and tracking of customers can be done very\nsystematically.",
          "type": "object",
          "properties": {
            "type": {
              "title": "Discriminant for the type of customer",
              "description": "Discriminant for the type of customer.",
              "const": "customer"
            },
            "member": {
              "title": "Membership information",
              "description": "Membership information.\n\nIf the customer has joined as a member.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "object",
                  "properties": {
                    "citizen": {
                      "title": "Citizen information",
                      "description": "Citizen information.\n\nOnly when has verified as a citizen, with mobile number and real name.\n\nFor reference, if the member has signed up as a seller or administrator,\nthis citizen information must be.",
                      "oneOf": [
                        {
                          "type": "null"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "title": "Primary Key",
                              "description": "Primary Key.",
                              "type": "string",
                              "format": "uuid"
                            },
                            "created_at": {
                              "title": "Creation time of record",
                              "description": "Creation time of record.",
                              "type": "string",
                              "format": "date-time"
                            },
                            "mobile": {
                              "title": "Mobile number",
                              "description": "Mobile number.",
                              "x-wrtn-payment-order-mobile": true,
                              "type": "string",
                              "pattern": "^[0-9]*$"
                            },
                            "name": {
                              "title": "Real name, or equivalent nickname",
                              "description": "Real name, or equivalent nickname.",
                              "x-wrtn-payment-order-citizen": true,
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "created_at",
                            "mobile",
                            "name"
                          ],
                          "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile} input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                        }
                      ]
                    },
                    "seller": {
                      "title": "Seller information",
                      "description": "Seller information.\n\nIf the member also signed up as a seller.",
                      "oneOf": [
                        {
                          "type": "null"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "title": "Primary Key",
                              "description": "Primary Key.",
                              "type": "string",
                              "format": "uuid"
                            },
                            "created_at": {
                              "title": "Creation tmie of record",
                              "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up.",
                              "type": "string",
                              "format": "date-time"
                            }
                          },
                          "required": [
                            "id",
                            "created_at"
                          ],
                          "description": "Seller information.\n\n`IShoppingSeller` is an entity that embodies a person who registers\n{@link IShoppingSale sales} to operate selling activities, with\n{@link IShoppingMember membership} joining.\n\nFor reference, unlike {@link IShoppingCustomer customers} which can\nparticipate even without membership joining, seller must join membership\nto operate sales. Also, seller must do the\n{@link IShoppingCitizen real-name and mobile authentication}, too."
                        }
                      ]
                    },
                    "administrator": {
                      "title": "Administrator information",
                      "description": "Administrator information.\n\nIf the member also signed up as an administrator.",
                      "oneOf": [
                        {
                          "type": "null"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "title": "Primary Key",
                              "description": "Primary Key.",
                              "type": "string",
                              "format": "uuid"
                            },
                            "created_at": {
                              "title": "Creation time of record",
                              "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up.",
                              "type": "string",
                              "format": "date-time"
                            }
                          },
                          "required": [
                            "id",
                            "created_at"
                          ],
                          "description": "Administrator account.\n\n`IShoppingAdministrator` is an entity that embodies a person who manages\nthe shopping mall system, with {@link IShoppingMember membership} joining.\n\nFor reference, unlike {@link IShoppingCustomer customers} which can participate\neven without membership joining, administrator must join membership to operate\nmanagements. Also, administrator must perform the\n{@link IShoppingCitizen real-name and mobile authentication}, too."
                        }
                      ]
                    },
                    "id": {
                      "title": "Primary Key",
                      "description": "Primary Key.",
                      "type": "string",
                      "format": "uuid"
                    },
                    "nickname": {
                      "title": "Nickname that uniquely identifies the member",
                      "description": "Nickname that uniquely identifies the member.",
                      "type": "string"
                    },
                    "emails": {
                      "title": "List of emails",
                      "description": "List of emails.",
                      "type": "array",
                      "items": {
                        "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "title": "Primary Key",
                            "description": "Primary Key.",
                            "type": "string",
                            "format": "uuid"
                          },
                          "value": {
                            "title": "Email address value",
                            "description": "Email address value.",
                            "type": "string",
                            "format": "email"
                          },
                          "created_at": {
                            "title": "Creation time of record",
                            "description": "Creation time of record.",
                            "type": "string",
                            "format": "date-time"
                          }
                        },
                        "required": [
                          "id",
                          "value",
                          "created_at"
                        ]
                      }
                    },
                    "created_at": {
                      "title": "Creation time of record",
                      "description": "Creation time of record.\n\nAnother words, the time when the member has signed up.",
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "required": [
                    "citizen",
                    "seller",
                    "administrator",
                    "id",
                    "nickname",
                    "emails",
                    "created_at"
                  ],
                  "description": "Member Account.\n\n`IShoppingMember` is an entity that symbolizes the case when a\n{@link IShoppingCustomer} signs up as a member of this shopping mall\nsystem.\n\nIf a `IShoppingMember` has seller or administrator property. it means that\nthe {@link IShoppingCustomer} has acting as a {@link IShoppingSeller seller}\nor {@link IShoppingAdministrator administrator} at the same time."
                }
              ]
            },
            "citizen": {
              "title": "Citizen information",
              "description": "Citizen information.\n\nIf the customer has verified his real name and mobile number.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "Primary Key",
                      "description": "Primary Key.",
                      "type": "string",
                      "format": "uuid"
                    },
                    "created_at": {
                      "title": "Creation time of record",
                      "description": "Creation time of record.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "mobile": {
                      "title": "Mobile number",
                      "description": "Mobile number.",
                      "x-wrtn-payment-order-mobile": true,
                      "type": "string",
                      "pattern": "^[0-9]*$"
                    },
                    "name": {
                      "title": "Real name, or equivalent nickname",
                      "description": "Real name, or equivalent nickname.",
                      "x-wrtn-payment-order-citizen": true,
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "created_at",
                    "mobile",
                    "name"
                  ],
                  "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile} input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                }
              ]
            },
            "id": {
              "title": "Primary Key",
              "description": "Primary Key.",
              "type": "string",
              "format": "uuid"
            },
            "channel": {
              "title": "Belonged channel",
              "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future.",
              "type": "object",
              "properties": {
                "id": {
                  "title": "Primary Key",
                  "description": "Primary Key.",
                  "type": "string",
                  "format": "uuid"
                },
                "created_at": {
                  "title": "Creation time of record",
                  "description": "Creation time of record.",
                  "type": "string",
                  "format": "date-time"
                },
                "code": {
                  "title": "Identifier code",
                  "description": "Identifier code.",
                  "type": "string"
                },
                "name": {
                  "title": "Name of the channel",
                  "description": "Name of the channel.",
                  "type": "string"
                }
              },
              "required": [
                "id",
                "created_at",
                "code",
                "name"
              ]
            },
            "external_user": {
              "title": "External user information",
              "description": "External user information.\n\nWhen the customer has come frome an external service.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "Primary Key",
                      "description": "Primary Key.",
                      "type": "string",
                      "format": "uuid"
                    },
                    "citizen": {
                      "title": "Citizen activation info",
                      "description": "Citizen activation info.",
                      "oneOf": [
                        {
                          "type": "null"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "title": "Primary Key",
                              "description": "Primary Key.",
                              "type": "string",
                              "format": "uuid"
                            },
                            "created_at": {
                              "title": "Creation time of record",
                              "description": "Creation time of record.",
                              "type": "string",
                              "format": "date-time"
                            },
                            "mobile": {
                              "title": "Mobile number",
                              "description": "Mobile number.",
                              "x-wrtn-payment-order-mobile": true,
                              "type": "string",
                              "pattern": "^[0-9]*$"
                            },
                            "name": {
                              "title": "Real name, or equivalent nickname",
                              "description": "Real name, or equivalent nickname.",
                              "x-wrtn-payment-order-citizen": true,
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "created_at",
                            "mobile",
                            "name"
                          ],
                          "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile} input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                        }
                      ]
                    },
                    "created_at": {
                      "title": "Creation time of record",
                      "description": "Creation time of record.\n\nAnother word, first time when the external user connected.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "uid": {
                      "title": "Identifier key of external user from the external system",
                      "description": "Identifier key of external user from the external system.",
                      "type": "string"
                    },
                    "application": {
                      "title": "Identifier code of the external service",
                      "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code} in common.",
                      "type": "string"
                    },
                    "nickname": {
                      "title": "Nickname of external user in the external system",
                      "description": "Nickname of external user in the external system.",
                      "type": "string"
                    },
                    "data": {
                      "description": "Additional information about external user from the external\nsystem."
                    }
                  },
                  "required": [
                    "id",
                    "citizen",
                    "created_at",
                    "uid",
                    "application",
                    "nickname",
                    "data"
                  ],
                  "description": "External user information.\n\n`IShoppingExternalUser` is an entity dsigned for when this system needs\nto connect with external services and welcome their users as\n{@link IShoppingCustomer customers} of this service.\n\nFor reference, customers who connect from an external service must have\nthis record, and the external service user is identified through the two\nattributes {@link application} and {@link uid}. If a customer connected\nfrom an external service completes\n{@link IShoppingCitizen real-name authentication} from this service, each\ntime the external service user reconnects to this service and issues a\nnew customer authentication token, real-name authentication begins with\ncompleted.\n\nAnd {@link password} is the password issued to the user by the external\nservice system (the so-called permanent user authentication token), and\nis never the actual user password. However, for customers who entered the\nsame application and uid as the current external system user, this is to\ndetermine whether to view this as a correct external system user or a\nviolation.\n\nIn addition, additional information received from external services can\nbe recorded in the data field in JSON format."
                }
              ]
            },
            "href": {
              "title": "Connection address",
              "description": "Connection address.\n\nSame with {@link window.location.href} of client.",
              "type": "string",
              "format": "uri"
            },
            "referrer": {
              "title": "Referrer address",
              "description": "Referrer address.\n\nSame with {@link window.document.referrer} of client.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "uri"
                },
                {
                  "type": "string",
                  "maxLength": 0
                }
              ]
            },
            "ip": {
              "title": "Connection IP Address",
              "description": "Connection IP Address.",
              "oneOf": [
                {
                  "type": "string",
                  "format": "ipv4"
                },
                {
                  "type": "string",
                  "format": "ipv6"
                }
              ]
            },
            "created_at": {
              "title": "Creation time of the connection record",
              "description": "Creation time of the connection record.",
              "type": "string",
              "format": "date-time"
            }
          },
          "required": [
            "type",
            "member",
            "citizen",
            "id",
            "channel",
            "external_user",
            "href",
            "referrer",
            "ip",
            "created_at"
          ]
        },
        "goods": {
          "title": "List of goods in the order",
          "description": "List of goods in the order.",
          "type": "array",
          "items": {
            "description": "Information about the individual goods that make up your order.\n\n`IShoppingOrderGood` is an entity that represents each good ordered by a\n{@link IShoppingCustomer customer}, and the record is created in the process\nof upgrading the product {@link IShoppingCartCommodity commodity} in the\nshopping cart to a good due to the customer's {@link IShoppingOrder order}\nrequest.\n\nAnd `IShoppingOrderGood`, like {@link IShoppingCartCommodity}, is a concept\nthat corresponds to the listing {@link IShoppingSaleSnapshot sale snapshot}.\n\nFor reference, `IShoppingOrderGood` also contains {@link volume} information\nseparately from the belonging {@link IShoppingCartCommodity.volume}. This is\nbecause there are some cases where you put 3 books in your shopping cart and\nthen change them to 4 during the actual order application process. This is to\nincrease the reusability of the shopping cart by changing the volume attribute\nof the current entity rather than directly changing the commodity information.\n\nIn addition, `IShoppingOrderGood` becomes the most basic unit for the post-order\nprocess, that is, after service (A/S). For example, after receiving a\ncustomer's product, confirming the order is recorded in the {@link confirmed_at}\nattribute. Additionally, `IShoppingOrderGood` is the unit in which customers\nissues or request exchanges or refunds for ordered products.",
            "type": "object",
            "properties": {
              "id": {
                "title": "Primary Key",
                "description": "Primary Key.",
                "type": "string",
                "format": "uuid"
              },
              "commodity": {
                "title": "Commodity that is the basis of the good",
                "description": "Item in a shopping cart.\n\n`IShoppingCartCommodity` is an entity that represents a\n{@link IShoppingSaleSnapshot snapshot} of the items that\n{@link IShoppingCustomer customer} has placed into his shopping cart with a\n{@link IShoppingOrder purchase} in mind. And if the customer continues this\ninto an actual order in the future, `IShoppingCartCommodity` be changed to\n{@link IShoppingOrderGood}.\n\nAnd while adding a sale snapshot to the shopping cart, the customer inevitably\nselects specific {@link IShoppingSaleUnit units} and\n{@link IShoppingSaleUnitStock final stocks} within the listing snapshot.\nInformation about these units and stocks is recorded in the subsidiary entity\n{@link IShoppingCartCommodityStock}. Also, there is an attribute {@link volume}\nthat indicates how many sets of snapshots of the target commodity will be\npurchased. This \"volume\" is a value that will be multiplied by\n{@link IShoppingSaleUnitStock.IInvert.quantity}, the quantity for each\ncomponent.",
                "type": "object",
                "properties": {
                  "id": {
                    "title": "Primary Key",
                    "description": "Primary Key.",
                    "type": "string",
                    "format": "uuid"
                  },
                  "sale": {
                    "title": "Invert information of the sale (snapshot), in the perspective of commodity",
                    "description": "Invert information of the sale snapshot, in the perspective of commodity.\n\n`IShoppingSaleSnapshot.IInvert` is a structure used to represent a\nsnapshot in the perspective of a {@link IShoppingCommodity}, corresponding\nto an {@link IShoppingCartCommodityStock} entity.\n\nTherefore, `IShoppingSaleSnapshot.IInvert` does not contain every\n{@link IShoppingSaleUnit units} and {@link IShoppingSaleUnitStock stocks}\nof the snapshot records, but only some of the records which are put\ninto the {@link IShoppingCartCommodity shopping cart}.\n\n------------------------------\n\nDescription of the current {@link IShoppingSaleSnapshot.IInvert} type:\n\n> Invert information of the sale snapshot, in the perspective of commodity.\n> \n> `IShoppingSaleSnapshot.IInvert` is a structure used to represent a\n> snapshot in the perspective of a {@link IShoppingCommodity}, corresponding\n> to an {@link IShoppingCartCommodityStock} entity.\n> \n> Therefore, `IShoppingSaleSnapshot.IInvert` does not contain every\n> {@link IShoppingSaleUnit units} and {@link IShoppingSaleUnitStock stocks}\n> of the snapshot records, but only some of the records which are put\n> into the {@link IShoppingCartCommodity shopping cart}.\n\n------------------------------\n\nDescription of the parent {@link IShoppingSaleSnapshot} type:\n\n> Snapshot record of sale.\n> \n> `IShoppingSaleSnapshot` is an entity that embodies a snapshot of a sale,\n> and the ERD (Entity Relationship Diagram) describes the role of the\n> `shopping_sale_snapshots` table as follows:\n> \n> > {@link IShoppingSale shopping_sales} is an entity that embodies\n> > \"product sales\" (sales) information registered by the\n> > {@link IShoppingSeller seller}. And the main information of the sale is\n> > recorded in the sub `shopping_sale_snapshots`, not in the main\n> > {@link IShoppingSale shopping_sales}. When a seller changes a previously\n> > registered item, the existing {@link IShoppingSale shopping_sales} record\n> > is not changed, but a new snapshot record is created.\n> >\n> > This is to preserve the {@link IShoppingCustomer customer}'s\n> > {@link IShoppingOrder purchase history} flawlessly after the customer\n> > purchases a specific item, even if the seller changes the components or price\n> > of the item. It is also intended to support sellers in so-called A/B testing,\n> > which involves changing components or prices and measuring the performance\n> > in each case.\n> \n> By the way, DTO (Data Transfer Object) level used by the front-end developer,\n> it does not distinguish {@link IShoppingSale} and `IShoppingSaleSnapshot`\n> strictly, and generally handles {@link IShoppingSale} and snapshot together.\n> \n> But even though the DTO level does not strictly distinguish them, the word and\n> concept of \"snapshot\" is still important, so it is recommended to understand\n> the concept of \"snapshot\" properly.",
                    "type": "object",
                    "properties": {
                      "section": {
                        "title": "Belonged section's information",
                        "description": "Section information.\n\n`IShoppingSection` is a concept that refers to the spatial information of\nthe market.\n\nIf we compare the section mentioned here to the offline market, it means a\nspatially separated area within the store, such as the \"fruit corner\" or\n\"butcher corner\". Therefore, in the {@link IShoppingSale sale} entity, it is\nnot possible to classify multiple sections simultaneously, but only one section\ncan be classified.\n\nBy the way, if your shopping mall system requires only one section, then just\nuse only one. This concept is designed to be expandable in the future.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "title": "Primary Key",
                            "description": "Primary Key.",
                            "type": "string",
                            "format": "uuid"
                          },
                          "code": {
                            "title": "Identifier code",
                            "description": "Identifier code.",
                            "type": "string"
                          },
                          "name": {
                            "title": "Representative name of the section",
                            "description": "Representative name of the section.",
                            "type": "string"
                          },
                          "created_at": {
                            "title": "Creation time of record",
                            "description": "Creation time of record.",
                            "type": "string",
                            "format": "date-time"
                          }
                        },
                        "required": [
                          "id",
                          "code",
                          "name",
                          "created_at"
                        ]
                      },
                      "seller": {
                        "title": "Seller who've registered the sale",
                        "description": "Invert information starting from seller info.\n\nInstead of accessing to the seller information from the\n{@link IShoppingCustomer.member} -> {@link IShoppingMember.seller},\n`IShoppingSeller.IInvert` starts from the seller information\nand access to the customer, member and {@link IShoppingCitizen citizen}\ninformation inversely.\n\n------------------------------\n\nDescription of the current {@link IShoppingSeller.IInvert} type:\n\n> Invert information starting from seller info.\n> \n> Instead of accessing to the seller information from the\n> {@link IShoppingCustomer.member} -> {@link IShoppingMember.seller},\n> `IShoppingSeller.IInvert` starts from the seller information\n> and access to the customer, member and {@link IShoppingCitizen citizen}\n> information inversely.\n\n------------------------------\n\nDescription of the parent {@link IShoppingSeller} type:\n\n> Seller information.\n> \n> `IShoppingSeller` is an entity that embodies a person who registers\n> {@link IShoppingSale sales} to operate selling activities, with\n> {@link IShoppingMember membership} joining.\n> \n> For reference, unlike {@link IShoppingCustomer customers} which can\n> participate even without membership joining, seller must join membership\n> to operate sales. Also, seller must do the\n> {@link IShoppingCitizen real-name and mobile authentication}, too.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "title": "Discriminant for the type of customer",
                            "description": "Discriminant for the type of customer.",
                            "const": "seller"
                          },
                          "member": {
                            "title": "Membership joining information",
                            "description": "Invert information of member.\n\nThis invert member information has been designed to be used for another\ninvert information of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert}\n- {@link IShoppingAdministrator.IInvert}\n\n------------------------------\n\nDescription of the current {@link IShoppingMember.IInvert} type:\n\n> Invert information of member.\n> \n> This invert member information has been designed to be used for another\n> invert information of sellers and administrators like below.\n> \n> - {@link IShoppingSeller.IInvert}\n> - {@link IShoppingAdministrator.IInvert}\n\n------------------------------\n\nDescription of the parent {@link IShoppingMember} type:\n\n> Member Account.\n> \n> `IShoppingMember` is an entity that symbolizes the case when a\n> {@link IShoppingCustomer} signs up as a member of this shopping mall\n> system.\n> \n> If a `IShoppingMember` has seller or administrator property. it means that\n> the {@link IShoppingCustomer} has acting as a {@link IShoppingSeller seller}\n> or {@link IShoppingAdministrator administrator} at the same time.",
                            "type": "object",
                            "properties": {
                              "id": {
                                "title": "Primary Key",
                                "description": "Primary Key.",
                                "type": "string",
                                "format": "uuid"
                              },
                              "nickname": {
                                "title": "Nickname that uniquely identifies the member",
                                "description": "Nickname that uniquely identifies the member.",
                                "type": "string"
                              },
                              "emails": {
                                "title": "List of emails",
                                "description": "List of emails.",
                                "type": "array",
                                "items": {
                                  "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one.",
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "title": "Primary Key",
                                      "description": "Primary Key.",
                                      "type": "string",
                                      "format": "uuid"
                                    },
                                    "value": {
                                      "title": "Email address value",
                                      "description": "Email address value.",
                                      "type": "string",
                                      "format": "email"
                                    },
                                    "created_at": {
                                      "title": "Creation time of record",
                                      "description": "Creation time of record.",
                                      "type": "string",
                                      "format": "date-time"
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "value",
                                    "created_at"
                                  ]
                                }
                              },
                              "created_at": {
                                "title": "Creation time of record",
                                "description": "Creation time of record.\n\nAnother words, the time when the member has signed up.",
                                "type": "string",
                                "format": "date-time"
                              }
                            },
                            "required": [
                              "id",
                              "nickname",
                              "emails",
                              "created_at"
                            ]
                          },
                          "customer": {
                            "title": "Customer, the connection information",
                            "description": "Inverted customer informatino.\n\nThis inverted customer information has been designed to be used for\nanother invert information of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert}\n- {@link IShoppingAdministrator.IInvert}\n\n------------------------------\n\nDescription of the current {@link IShoppingCustomer.IInvert} type:\n\n> Inverted customer informatino.\n> \n> This inverted customer information has been designed to be used for\n> another invert information of sellers and administrators like below.\n> \n> - {@link IShoppingSeller.IInvert}\n> - {@link IShoppingAdministrator.IInvert}\n\n------------------------------\n\nDescription of the parent {@link IShoppingCustomer} type:\n\n> Customer information, but not a person but a connection basis.\n> \n> `IShoppingCustomer` is an entity that literally embodies the information of\n> those who participated in the market as customers. By the way, the\n> `IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\n> even if the same person connects to the shopping mall multiple, multiple\n> records are created in `IShoppingCustomer`.\n> \n> The first purpose of this is to track the customer's inflow path in detail,\n> and it is for cases where the same person enters as a non-member,\n> {@link IShoppingCartCommodity puts items in the shopping cart} in advance,\n> and only authenticates their {@link IShoppingCitizen real name} or\n> registers/logs in at the moment of {@link IShoppingOrderPublish payment}.\n> It is the second. Lastly, it is to accurately track the activities that\n> a person performs at the shopping mall in various ways like below.\n> \n> - Same person comes from an {@link IShoppingExternalUser external service}\n> - Same person creates multiple accounts\n> - Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n> - Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n> \n> Therefore, `IShoppingCustomer` can have multiple records with the same\n> {@link IShoppingCitizen}, {@link IShoppingMember}, and\n> {@link IShoppingExternalUser}. Additionally, if a customer signs up for\n> membership after verifying their real name or signs up for our service after\n> being a user of an external service, all related records are changed at once.\n> Therefore, identification and tracking of customers can be done very\n> systematically.",
                            "type": "object",
                            "properties": {
                              "id": {
                                "title": "Primary Key",
                                "description": "Primary Key.",
                                "type": "string",
                                "format": "uuid"
                              },
                              "channel": {
                                "title": "Belonged channel",
                                "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "title": "Primary Key",
                                    "description": "Primary Key.",
                                    "type": "string",
                                    "format": "uuid"
                                  },
                                  "created_at": {
                                    "title": "Creation time of record",
                                    "description": "Creation time of record.",
                                    "type": "string",
                                    "format": "date-time"
                                  },
                                  "code": {
                                    "title": "Identifier code",
                                    "description": "Identifier code.",
                                    "type": "string"
                                  },
                                  "name": {
                                    "title": "Name of the channel",
                                    "description": "Name of the channel.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "id",
                                  "created_at",
                                  "code",
                                  "name"
                                ]
                              },
                              "external_user": {
                                "title": "External user information",
                                "description": "External user information.\n\nWhen the customer has come frome an external service.",
                                "oneOf": [
                                  {
                                    "type": "null"
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "title": "Primary Key",
                                        "description": "Primary Key.",
                                        "type": "string",
                                        "format": "uuid"
                                      },
                                      "citizen": {
                                        "title": "Citizen activation info",
                                        "description": "Citizen activation info.",
                                        "oneOf": [
                                          {
                                            "type": "null"
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "title": "Primary Key",
                                                "description": "Primary Key.",
                                                "type": "string",
                                                "format": "uuid"
                                              },
                                              "created_at": {
                                                "title": "Creation time of record",
                                                "description": "Creation time of record.",
                                                "type": "string",
                                                "format": "date-time"
                                              },
                                              "mobile": {
                                                "title": "Mobile number",
                                                "description": "Mobile number.",
                                                "x-wrtn-payment-order-mobile": true,
                                                "type": "string",
                                                "pattern": "^[0-9]*$"
                                              },
                                              "name": {
                                                "title": "Real name, or equivalent nickname",
                                                "description": "Real name, or equivalent nickname.",
                                                "x-wrtn-payment-order-citizen": true,
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "id",
                                              "created_at",
                                              "mobile",
                                              "name"
                                            ],
                                            "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile} input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                                          }
                                        ]
                                      },
                                      "created_at": {
                                        "title": "Creation time of record",
                                        "description": "Creation time of record.\n\nAnother word, first time when the external user connected.",
                                        "type": "string",
                                        "format": "date-time"
                                      },
                                      "uid": {
                                        "title": "Identifier key of external user from the external system",
                                        "description": "Identifier key of external user from the external system.",
                                        "type": "string"
                                      },
                                      "application": {
                                        "title": "Identifier code of the external service",
                                        "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code} in common.",
                                        "type": "string"
                                      },
                                      "nickname": {
                                        "title": "Nickname of external user in the external system",
                                        "description": "Nickname of external user in the external system.",
                                        "type": "string"
                                      },
                                      "data": {
                                        "description": "Additional information about external user from the external\nsystem."
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "citizen",
                                      "created_at",
                                      "uid",
                                      "application",
                                      "nickname",
                                      "data"
                                    ],
                                    "description": "External user information.\n\n`IShoppingExternalUser` is an entity dsigned for when this system needs\nto connect with external services and welcome their users as\n{@link IShoppingCustomer customers} of this service.\n\nFor reference, customers who connect from an external service must have\nthis record, and the external service user is identified through the two\nattributes {@link application} and {@link uid}. If a customer connected\nfrom an external service completes\n{@link IShoppingCitizen real-name authentication} from this service, each\ntime the external service user reconnects to this service and issues a\nnew customer authentication token, real-name authentication begins with\ncompleted.\n\nAnd {@link password} is the password issued to the user by the external\nservice system (the so-called permanent user authentication token), and\nis never the actual user password. However, for customers who entered the\nsame application and uid as the current external system user, this is to\ndetermine whether to view this as a correct external system user or a\nviolation.\n\nIn addition, additional information received from external services can\nbe recorded in the data field in JSON format."
                                  }
                                ]
                              },
                              "href": {
                                "title": "Connection address",
                                "description": "Connection address.\n\nSame with {@link window.location.href} of client.",
                                "type": "string",
                                "format": "uri"
                              },
                              "referrer": {
                                "title": "Referrer address",
                                "description": "Referrer address.\n\nSame with {@link window.document.referrer} of client.",
                                "oneOf": [
                                  {
                                    "type": "null"
                                  },
                                  {
                                    "type": "string",
                                    "format": "uri"
                                  },
                                  {
                                    "type": "string",
                                    "maxLength": 0
                                  }
                                ]
                              },
                              "ip": {
                                "title": "Connection IP Address",
                                "description": "Connection IP Address.",
                                "oneOf": [
                                  {
                                    "type": "string",
                                    "format": "ipv4"
                                  },
                                  {
                                    "type": "string",
                                    "format": "ipv6"
                                  }
                                ]
                              },
                              "created_at": {
                                "title": "Creation time of the connection record",
                                "description": "Creation time of the connection record.",
                                "type": "string",
                                "format": "date-time"
                              }
                            },
                            "required": [
                              "id",
                              "channel",
                              "external_user",
                              "href",
                              "referrer",
                              "ip",
                              "created_at"
                            ]
                          },
                          "citizen": {
                            "title": "Real-name and mobile number authentication information",
                            "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile} input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored.",
                            "type": "object",
                            "properties": {
                              "id": {
                                "title": "Primary Key",
                                "description": "Primary Key.",
                                "type": "string",
                                "format": "uuid"
                              },
                              "created_at": {
                                "title": "Creation time of record",
                                "description": "Creation time of record.",
                                "type": "string",
                                "format": "date-time"
                              },
                              "mobile": {
                                "title": "Mobile number",
                                "description": "Mobile number.",
                                "x-wrtn-payment-order-mobile": true,
                                "type": "string",
                                "pattern": "^[0-9]*$"
                              },
                              "name": {
                                "title": "Real name, or equivalent nickname",
                                "description": "Real name, or equivalent nickname.",
                                "x-wrtn-payment-order-citizen": true,
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "created_at",
                              "mobile",
                              "name"
                            ]
                          },
                          "id": {
                            "title": "Primary Key",
                            "description": "Primary Key.",
                            "type": "string",
                            "format": "uuid"
                          },
                          "created_at": {
                            "title": "Creation tmie of record",
                            "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up.",
                            "type": "string",
                            "format": "date-time"
                          }
                        },
                        "required": [
                          "type",
                          "member",
                          "customer",
                          "citizen",
                          "id",
                          "created_at"
                        ]
                      },
                      "id": {
                        "title": "Primary Key of Sale",
                        "description": "Primary Key of Sale.",
                        "type": "string",
                        "format": "uuid"
                      },
                      "snapshot_id": {
                        "title": "Primary Key of Snapshot",
                        "description": "Primary Key of Snapshot.",
                        "type": "string",
                        "format": "uuid"
                      },
                      "latest": {
                        "title": "Whether the snapshot is the latest one or not",
                        "description": "Whether the snapshot is the latest one or not.",
                        "type": "boolean"
                      },
                      "content": {
                        "title": "Description and image content describing the sale",
                        "description": "Description of the current {@link IShoppingSaleContent} type:\n\n> Content information of sale snapshot.\n> \n> `IShoppingSaleContent` is an entity embodies the description contents\n> of {@link IShoppingSale}.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "title": {
                            "type": "string"
                          },
                          "thumbnails": {
                            "type": "array",
                            "items": {
                              "description": "Attachment File.\n\nEvery attachment files that are managed in current system.\n\nFor reference, it is possible to omit one of file {@link name}\nor {@link extension} like `.gitignore` or `README` case, but not\npossible to omit both of them.",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "title": "Primary Key",
                                  "description": "Primary Key.",
                                  "type": "string",
                                  "format": "uuid"
                                },
                                "created_at": {
                                  "title": "Creation time of attachment file",
                                  "description": "Creation time of attachment file.",
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "name": {
                                  "title": "File name, except extension",
                                  "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string.",
                                  "type": "string",
                                  "maxLength": 255
                                },
                                "extension": {
                                  "title": "Extension",
                                  "description": "Extension.\n\nPossible to omit like `README` case.",
                                  "oneOf": [
                                    {
                                      "type": "null"
                                    },
                                    {
                                      "type": "string",
                                      "minLength": 1,
                                      "maxLength": 8
                                    }
                                  ]
                                },
                                "url": {
                                  "title": "URL path of the real file",
                                  "description": "URL path of the real file.",
                                  "type": "string",
                                  "format": "uri",
                                  "contentMediaType": "image/*"
                                }
                              },
                              "required": [
                                "id",
                                "created_at",
                                "name",
                                "extension",
                                "url"
                              ]
                            }
                          }
                        },
                        "required": [
                          "id",
                          "title",
                          "thumbnails"
                        ]
                      },
                      "channels": {
                        "title": "List of channels and categories",
                        "description": "List of channels and categories.\n\nWhich channels and categories the sale is registered to.",
                        "type": "array",
                        "items": {
                          "description": "Target channel (and categories) of sale to sell.\n\n`IShoppingSaleChannel` is an entity that expresses through which\n{@link IShoppingChannel channel} a listing {@link IShoppingSale} is sold.\n\nAlso, if {@link IShoppingChannelCategory categories} are specified, it also\nmeans that the sale be sold. Otherwise, none of the categories of the channel\nbeing specified, it means that every categories of the channel is listing the\ntarget sale.",
                          "type": "object",
                          "properties": {
                            "categories": {
                              "title": "List of categories of the channel listing the sale",
                              "description": "List of categories of the channel listing the sale.\n\nIf empty, it means all categories of the channel is listing the sale.",
                              "type": "array",
                              "items": {
                                "$ref": "#/$defs/IShoppingChannelCategory.IInvert"
                              }
                            },
                            "id": {
                              "title": "Primary Key",
                              "description": "Primary Key.",
                              "type": "string",
                              "format": "uuid"
                            },
                            "created_at": {
                              "title": "Creation time of record",
                              "description": "Creation time of record.",
                              "type": "string",
                              "format": "date-time"
                            },
                            "code": {
                              "title": "Identifier code",
                              "description": "Identifier code.",
                              "type": "string"
                            },
                            "name": {
                              "title": "Name of the channel",
                              "description": "Name of the channel.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "categories",
                            "id",
                            "created_at",
                            "code",
                            "name"
                          ]
                        },
                        "minItems": 1
                      },
                      "tags": {
                        "title": "List of search tags",
                        "description": "List of search tags.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "units": {
                        "title": "List of units",
                        "description": "List of units.\n\nRecords about individual product composition information that are sold\nin the sale. Each {@link IShoppingSaleUnit unit} record has configurable\n{@link IShoppingSaleUnitOption options},\n{@link IShoppingSaleUnitOptionCandidate candidate} values for each\noption, and {@link IShoppingSaleUnitStock final stocks} determined by\nselecting every candidate values of each option.",
                        "type": "array",
                        "items": {
                          "description": "Description of the current {@link IShoppingSaleUnit} type:\n\n> Product composition information handled in the sale.\n> \n> `IShoppingSaleUnit` is an entity that embodies the \"individual product\"\n> information handled in the {@link IShoppingSale sale}.\n> \n> For reference, the reason why `IShoppingSaleUnit` is separated from\n> {@link IShoppingSaleSnapshot} by an algebraic relationship of 1: N is because\n> there are some cases where multiple products are sold in one listing. This is\n> the case with so-called \"bundled products\".\n> \n> - Bundle from regular product (Mackbook Set)\n>   - Main Body\n>   - Keyboard\n>   - Mouse\n>   - Apple Care (Free A/S Voucher)\n> \n> And again, `IShoppingSaleUnit` does not in itself refer to the\n> {@link IShoppingSaleUnitStock final stock} that the\n> {@link IShoppingCustomer customer} will {@link IShoppingOrder purchase}.\n> The final stock can be found only after selecting all given\n> {@link IShoppingSaleUnitOption options} and their\n> {@link IShoppingSaleUnitOptionCandidate candidate values}.\n> \n> For example, even if you buy a Macbook, the final stocks are determined only\n> after selecting all the options (CPU / RAM / SSD), etc.",
                          "type": "object",
                          "properties": {
                            "stocks": {
                              "title": "List of final stocks",
                              "description": "List of final stocks.",
                              "type": "array",
                              "items": {
                                "description": "Invert information from the cart.\n\n------------------------------\n\nDescription of the current {@link IShoppingSaleUnitStock.IInvert} type:\n\n> Invert information from the cart.\n\n------------------------------\n\nDescription of the parent {@link IShoppingSaleUnitStock} type:\n\n> Final component information on units for sale.\n> \n> `IShoppingSaleUnitStock` is a subsidiary entity of {@link IShoppingSaleUnit}\n> that represents a product catalog for sale, and is a kind of final stock that is\n> constructed by selecting all {@link IShoppingSaleUnitSelectableOption options}\n> (variable \"select\" type) and their\n> {@link IShoppingSaleUnitOptionCandidate candidate} values in the belonging unit.\n> It is the \"good\" itself that customers actually purchase.\n> \n> - Product Name) MacBook\n>   - Options\n>     - CPU: { i3, i5, i7, i9 }\n>     - RAM: { 8GB, 16GB, 32GB, 64GB, 96GB }\n>     - SSD: { 256GB, 512GB, 1TB }\n>   - Number of final stocks: 4 * 5 * 3 = 60\n> \n> For reference, the total number of `IShoppingSaleUnitStock` records in an\n> attribution unit can be obtained using Cartesian Product. In other words, the\n> value obtained by multiplying all the candidate values that each\n> (variable \"select\" type) option can have by the number of cases is the total\n> number of final stocks in the unit.\n> \n> Of course, without a single variable \"select\" type option, the final stocks\n> count in the unit is only 1.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "title": "Primary Key",
                                    "description": "Primary Key.",
                                    "type": "string",
                                    "format": "uuid"
                                  },
                                  "name": {
                                    "title": "Representative name of the stock",
                                    "description": "Representative name of the stock.",
                                    "type": "string"
                                  },
                                  "price": {
                                    "title": "Price of the stock",
                                    "description": "Shopping price interface.",
                                    "type": "object",
                                    "properties": {
                                      "nominal": {
                                        "title": "Nominal price",
                                        "description": "Nominal price.\n\nThis is not {@link real real price} to pay, but just a nominal price to show.\nIf this value is greater than the {@link real real price}, it would be shown\nlike {@link IShoppingSeller seller} is giving a discount.",
                                        "type": "number",
                                        "minimum": 0
                                      },
                                      "real": {
                                        "title": "Real price to pay",
                                        "description": "Real price to pay.",
                                        "type": "number",
                                        "minimum": 0
                                      }
                                    },
                                    "required": [
                                      "nominal",
                                      "real"
                                    ]
                                  },
                                  "quantity": {
                                    "title": "Quantity of the stock in the cart",
                                    "description": "Quantity of the stock in the cart.",
                                    "type": "integer",
                                    "minimum": 1
                                  },
                                  "inventory": {
                                    "title": "Current inventory status of the stock",
                                    "description": "Inventory information of a final stock.",
                                    "type": "object",
                                    "properties": {
                                      "income": {
                                        "title": "Total income quantity",
                                        "description": "Total income quantity.",
                                        "type": "integer"
                                      },
                                      "outcome": {
                                        "title": "Total outcome quantity",
                                        "description": "Total outcome quantity.",
                                        "type": "integer"
                                      }
                                    },
                                    "required": [
                                      "income",
                                      "outcome"
                                    ]
                                  },
                                  "choices": {
                                    "title": "List of choices",
                                    "description": "List of choices.\n\nWhich values being written for each option.",
                                    "type": "array",
                                    "items": {
                                      "description": "Invert information from the cart.\n\n------------------------------\n\nDescription of the current {@link IShoppingSaleUnitStockChoice.IInvert} type:\n\n> Invert information from the cart.\n\n------------------------------\n\nDescription of the parent {@link IShoppingSaleUnitStockChoice} type:\n\n> Selection information of final stock.\n> \n> `IShoppingSaleUnitStockChoice` is an entity that represents which\n> {@link IShoppingSaleUnitSelectableOption option} of each variable \"select\"\n> type was selected for each {@link IShoppingSaleUnitStock stock} and which\n> {@link IShoppingSaleUnitOptionCandidate candidate value} was selected within\n> it.\n> \n> Of course, if the bound {@link IShoppingSaleUnit unit} does not have any\n> options, this entity can also be ignored.",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "title": "Primary Key",
                                          "description": "Primary Key.",
                                          "type": "string",
                                          "format": "uuid"
                                        },
                                        "option": {
                                          "title": "Target option",
                                          "description": "Target option.",
                                          "oneOf": [
                                            {
                                              "type": "object",
                                              "properties": {
                                                "id": {
                                                  "title": "Primary Key",
                                                  "description": "Primary Key.",
                                                  "type": "string",
                                                  "format": "uuid"
                                                },
                                                "type": {
                                                  "title": "Discriminant for the type of selectable option",
                                                  "description": "Discriminant for the type of selectable option.",
                                                  "const": "select"
                                                },
                                                "name": {
                                                  "title": "Represents the name of the option",
                                                  "description": "Represents the name of the option.",
                                                  "type": "string"
                                                },
                                                "variable": {
                                                  "title": "Whether the option is variable or not",
                                                  "description": "Whether the option is variable or not.\n\nWhen type of current option is \"select\", this attribute means whether\nselecting different candidate value affects the final stock or not.",
                                                  "type": "boolean"
                                                }
                                              },
                                              "required": [
                                                "id",
                                                "type",
                                                "name",
                                                "variable"
                                              ],
                                              "description": "Description of the current {@link IShoppingSaleUnitSelectableOption} type:\n\n> Individual option information on units for sale.\n> \n> `IShoppingSaleUnitSelectableOption` is a subsidiary entity of\n> {@link IShoppingSaleUnit} that represents individual products in the\n> {@link IShoppingSale sale}, and is an entity designed to represent individual\n> selectable option information for the unit.\n> \n> - Examples of Options\n>   - selectable options\n>     - Computer: CPU, RAM, SSD, etc.\n>     - Clothes: size, color, style, etc.\n>   - descriptive options\n>     - Engrave\n>     - Simple question\n> \n> If the {@link variable} property value is `true`, the final stock that the\n> {@link IShoppingCustomer customer} will purchase changes depending on the\n> selection of the {@link IShoppingSaleUnitOptionCandidate candidate value}.\n> \n> Conversely, if it is a type other than \"select\", or if the {@link variable}\n> property value is \"false\", , this is an option that has no meaning beyond\n> simple information transfer. Therefore, no matter what value the customer\n> chooses when purchasing it, the option in this case does not affect the\n> {@link IShoppingSaleUnitStock final stock}."
                                            },
                                            {
                                              "type": "object",
                                              "properties": {
                                                "id": {
                                                  "title": "Primary Key",
                                                  "description": "Primary Key.",
                                                  "type": "string",
                                                  "format": "uuid"
                                                },
                                                "type": {
                                                  "title": "Type of descriptive option",
                                                  "description": "Type of descriptive option.\n\nWhich typed value should be written when purchasing.",
                                                  "oneOf": [
                                                    {
                                                      "const": "string"
                                                    },
                                                    {
                                                      "const": "number"
                                                    },
                                                    {
                                                      "const": "boolean"
                                                    }
                                                  ]
                                                },
                                                "name": {
                                                  "title": "Readable name of the option",
                                                  "description": "Readable name of the option.",
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "id",
                                                "type",
                                                "name"
                                              ],
                                              "description": "Descriptive option.\n\nWhen type of the option not `\"select\"`, it means the option is descriptive\nthat requiring {@link IShoppingCustomer customers} to write some value to\n{@link IShoppingOrder purchase}. Also, whatever customer writes about the\noption, it does not affect the {@link IShoppingSaleUnitStock final stock}.\n\nAnother words, the descriptive option is just for information transfer."
                                            }
                                          ]
                                        },
                                        "candidate": {
                                          "title": "Selected candidate value",
                                          "description": "Selected candidate value.",
                                          "oneOf": [
                                            {
                                              "type": "null"
                                            },
                                            {
                                              "type": "object",
                                              "properties": {
                                                "id": {
                                                  "title": "Primary Key",
                                                  "description": "Primary Key.",
                                                  "type": "string",
                                                  "format": "uuid"
                                                },
                                                "name": {
                                                  "title": "Represents the name of the candidate value",
                                                  "description": "Represents the name of the candidate value.",
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "id",
                                                "name"
                                              ],
                                              "description": "Selectable candidate values within an option.\n\n`IShoppingSaleUnitOptionCandidate` is an entity that represents individual\ncandidate values that can be selected from\n{@link IShoppingSaleUnitSelectableOption options of the \"select\" type}.\n\n- Example\n  - RAM: 8GB, 16GB, 32GB\n  - GPU: RTX 3060, RTX 4080, TESLA\n  - License: Private, Commercial, Educatiion\n\nBy the way, if belonged option is not \"select\" type, this entity never\nbeing used."
                                            }
                                          ]
                                        },
                                        "value": {
                                          "title": "Written value",
                                          "description": "Written value.",
                                          "oneOf": [
                                            {
                                              "type": "null"
                                            },
                                            {
                                              "type": "string"
                                            },
                                            {
                                              "type": "number"
                                            },
                                            {
                                              "type": "boolean"
                                            }
                                          ]
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "option",
                                        "candidate",
                                        "value"
                                      ]
                                    }
                                  }
                                },
                                "required": [
                                  "id",
                                  "name",
                                  "price",
                                  "quantity",
                                  "inventory",
                                  "choices"
                                ]
                              },
                              "minItems": 1
                            },
                            "id": {
                              "title": "Primary Key",
                              "description": "Primary Key.",
                              "type": "string",
                              "format": "uuid"
                            },
                            "name": {
                              "title": "Representative name of the unit",
                              "description": "Representative name of the unit.",
                              "type": "string"
                            },
                            "primary": {
                              "title": "Whether the unit is primary or not",
                              "description": "Whether the unit is primary or not.\n\nJust a labeling value.",
                              "type": "boolean"
                            },
                            "required": {
                              "title": "Whether the unit is required or not",
                              "description": "Whether the unit is required or not.\n\nWhen the unit is required, the customer must select the unit. If do not\nselect, customer can't buy it.\n\nFor example, if there's a sale \"Macbook Set\" and one of the unit is the\n\"Main Body\", is it possible to buy the \"Macbook Set\" without the\n\"Main Body\" unit? This property is for that case.",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "stocks",
                            "id",
                            "name",
                            "primary",
                            "required"
                          ]
                        },
                        "minItems": 1
                      },
                      "created_at": {
                        "title": "Creation time of the record",
                        "description": "Creation time of the record.\n\nNote that, this property is different with {@link opened_at},\nwhich means the timepoint of the sale is opened.",
                        "type": "string",
                        "format": "date-time"
                      },
                      "updated_at": {
                        "title": "Last updated time of the record",
                        "description": "Last updated time of the record.\n\nIn another words, creation time of the last snapshot.",
                        "type": "string",
                        "format": "date-time"
                      },
                      "paused_at": {
                        "title": "Paused time of the sale",
                        "description": "Paused time of the sale.\n\nThe sale is paused by the seller, for some reason.\n\n{@link IShoppingCustomer Customers} can still see the sale on the\nboth list and detail pages, but the sale has a warning label\n\"The sale is paused by the seller\".",
                        "oneOf": [
                          {
                            "type": "null"
                          },
                          {
                            "type": "string",
                            "format": "date-time"
                          }
                        ]
                      },
                      "suspended_at": {
                        "title": "Suspended time of the sale",
                        "description": "Suspended time of the sale.\n\nThe sale is suspended by the seller, for some reason.\n\n{@link IShoppingCustomer Customers} cannot see the sale on the\nboth list and detail pages. It is almost same with soft delettion,\nbut there's a little bit difference that the owner\n{@link IShoppingSeller seller} can still see the sale and resume it.\n\nOf course, the {@link IShoppingCustomer customers} who have\nalready purchased the sale can still see the sale on the\n{@link IShoppingOrder order} page.",
                        "oneOf": [
                          {
                            "type": "null"
                          },
                          {
                            "type": "string",
                            "format": "date-time"
                          }
                        ]
                      },
                      "opened_at": {
                        "title": "Opening time of the sale",
                        "description": "Opening time of the sale.",
                        "oneOf": [
                          {
                            "type": "null"
                          },
                          {
                            "type": "string",
                            "format": "date-time"
                          }
                        ]
                      },
                      "closed_at": {
                        "title": "Closing time of the sale",
                        "description": "Closing time of the sale.\n\nIf this value is `null`, the sale be continued forever.",
                        "oneOf": [
                          {
                            "type": "null"
                          },
                          {
                            "type": "string",
                            "format": "date-time"
                          }
                        ]
                      }
                    },
                    "required": [
                      "section",
                      "seller",
                      "id",
                      "snapshot_id",
                      "latest",
                      "content",
                      "channels",
                      "tags",
                      "units",
                      "created_at",
                      "updated_at",
                      "paused_at",
                      "suspended_at",
                      "opened_at",
                      "closed_at"
                    ]
                  },
                  "orderable": {
                    "title": "Whether current commodity is orderable or not",
                    "description": "Whether current commodity is orderable or not.\n\nIf this attribute is `false`, then the commodity is not orderable, because\nit has already been ordered.",
                    "type": "boolean"
                  },
                  "pseudo": {
                    "title": "Whether current commodity is pseudo or not",
                    "description": "Whether current commodity is pseudo or not.\n\nWhen this attribute is `true`, then the commodity is not the real one,\nbut just fake information only for calculating the discount effect by\n{@link IShoppingCoupon coupons}.",
                    "type": "boolean"
                  },
                  "volume": {
                    "title": "Volume of the commodity to purchase",
                    "description": "Volume of the commodity to purchase.\n\nA value indicating how many sets would be multiplied to the children\n{@link IShoppingSaleUnitStock.IInvert.quantity} values.",
                    "type": "integer",
                    "minimum": 1
                  },
                  "price": {
                    "title": "Price of the commodity",
                    "description": "Shopping price interface.",
                    "type": "object",
                    "properties": {
                      "nominal": {
                        "title": "Nominal price",
                        "description": "Nominal price.\n\nThis is not {@link real real price} to pay, but just a nominal price to show.\nIf this value is greater than the {@link real real price}, it would be shown\nlike {@link IShoppingSeller seller} is giving a discount.",
                        "type": "number",
                        "minimum": 0
                      },
                      "real": {
                        "title": "Real price to pay",
                        "description": "Real price to pay.",
                        "type": "number",
                        "minimum": 0
                      }
                    },
                    "required": [
                      "nominal",
                      "real"
                    ]
                  },
                  "created_at": {
                    "title": "Creation time of the record",
                    "description": "Creation time of the record.",
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "required": [
                  "id",
                  "sale",
                  "orderable",
                  "pseudo",
                  "volume",
                  "price",
                  "created_at"
                ]
              },
              "volume": {
                "title": "Volume of the good",
                "description": "Volume of the good.\n\nThe value multiplied to {@link IShoppingCartCommodityStock.quantity}.\nIt's purpose is exactly same with {@link IShoppingCartCommodity.volume},\nbut rewritten because the {@link IShoppingCartCommodity} records are reusable\nuntil payment.",
                "type": "integer"
              },
              "price": {
                "title": "Price information including discounts and multipled volume",
                "description": "Summarized information of the order price.\n\n------------------------------\n\nDescription of the current {@link IShoppingOrderPrice.ISummary} type:\n\n> Summarized information of the order price.\n\n------------------------------\n\nDescription of the parent {@link IShoppingOrderPrice} type:\n\n> Price infromation of the order including discounts.",
                "type": "object",
                "properties": {
                  "cash": {
                    "title": "Amount of the cash payment",
                    "description": "Amount of the cash payment.",
                    "x-wrtn-payment-price": true,
                    "type": "number",
                    "minimum": 0
                  },
                  "deposit": {
                    "title": "Amount of the deposit payment",
                    "description": "Amount of the deposit payment.",
                    "type": "number",
                    "minimum": 0
                  },
                  "mileage": {
                    "title": "Amount of the mileage payment",
                    "description": "Amount of the mileage payment.",
                    "type": "number",
                    "minimum": 0
                  },
                  "ticket": {
                    "title": "Amount of the discount coupon ticket payment",
                    "description": "Amount of the discount coupon ticket payment.",
                    "type": "number",
                    "minimum": 0
                  },
                  "nominal": {
                    "title": "Nominal price",
                    "description": "Nominal price.\n\nThis is not {@link real real price} to pay, but just a nominal price to show.\nIf this value is greater than the {@link real real price}, it would be shown\nlike {@link IShoppingSeller seller} is giving a discount.",
                    "type": "number",
                    "minimum": 0
                  },
                  "real": {
                    "title": "Real price to pay",
                    "description": "Real price to pay.",
                    "type": "number",
                    "minimum": 0
                  }
                },
                "required": [
                  "cash",
                  "deposit",
                  "mileage",
                  "ticket",
                  "nominal",
                  "real"
                ]
              },
              "state": {
                "title": "State of delivery about the good",
                "description": "State of delivery about the good.",
                "oneOf": [
                  {
                    "type": "null"
                  },
                  {
                    "const": "none"
                  },
                  {
                    "const": "underway"
                  },
                  {
                    "const": "preparing"
                  },
                  {
                    "const": "manufacturing"
                  },
                  {
                    "const": "shipping"
                  },
                  {
                    "const": "delivering"
                  },
                  {
                    "const": "arrived"
                  }
                ]
              },
              "confirmed_at": {
                "title": "Confirmation time of order good",
                "description": "Confirmation time of order good.\n\nWhen be confirmed, customer can't request refund or exchange.\n\nThe confirmation be accomplished by following cases.\n\n- Customer does it directly.\n- 14 days after the delivery.",
                "oneOf": [
                  {
                    "type": "null"
                  },
                  {
                    "type": "string",
                    "format": "date-time"
                  }
                ]
              }
            },
            "required": [
              "id",
              "commodity",
              "volume",
              "price",
              "state",
              "confirmed_at"
            ]
          },
          "minItems": 1
        },
        "price": {
          "title": "Price information including discounts",
          "description": "Price infromation of the order including discounts.",
          "type": "object",
          "properties": {
            "ticket_payments": {
              "title": "List of discount coupon ticket payments",
              "description": "List of discount coupon ticket payments.",
              "type": "array",
              "items": {
                "description": "Discount coupon ticket payment details.\n\n`IShoppingCouponTicketPayment` is an entity that embodies the payment\ninformation for the {@link IShoppingOrder order} of\n{@link IShoppingCouponTicket}, and is used when a consumer uses the\ndiscount coupon ticket he or she was issued to order and has the payment\namount deducted.\n\nAnd since {@link IShoppingOrder} itself is not an entity used in\nsituations where an order is completed, but rather an entity designed to\nexpress an order request, the creation of this\n`IShoppingCouponTicketPayment` record does not actually mean that the\nattached ticket disappears. Until the {@link IShoppingCustomer customer}\n{@link IShoppingOrderPublish.paid_at completes the payment} and confirms\nthe order, the ticket can be understood as a kind of deposit.\n\nAdditionally, this record can be deleted by the customer reversing the\npayment of the ticket, but it can also be deleted when the attribution\norder itself is cancelled.",
                "type": "object",
                "properties": {
                  "id": {
                    "title": "Primary Key",
                    "description": "Primary Key.",
                    "type": "string",
                    "format": "uuid"
                  },
                  "ticket": {
                    "title": "Target ticket",
                    "description": "Discount coupon ticket issuance details.\n\n`IShoppingCouponTicket` is an entity that symbolizes\n{@link IShoppingCoupon discount coupon} tickets issued by\n{@link IShoppingCustomer customers}.\n\nAnd if the target discount coupon specification itself has an expiration\ndate, the expiration date is recorded in expired_at and is automatically\ndiscarded after that expiration date. Of course, it doesn't matter if you\nuse the discount coupon for your order within the deadline.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "title": "Primary Key",
                        "description": "Primary Key.",
                        "type": "string",
                        "format": "uuid"
                      },
                      "customer": {
                        "title": "Customer who've taken the coupon ticket",
                        "description": "Customer information, but not a person but a connection basis.\n\n`IShoppingCustomer` is an entity that literally embodies the information of\nthose who participated in the market as customers. By the way, the\n`IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\neven if the same person connects to the shopping mall multiple, multiple\nrecords are created in `IShoppingCustomer`.\n\nThe first purpose of this is to track the customer's inflow path in detail,\nand it is for cases where the same person enters as a non-member,\n{@link IShoppingCartCommodity puts items in the shopping cart} in advance,\nand only authenticates their {@link IShoppingCitizen real name} or\nregisters/logs in at the moment of {@link IShoppingOrderPublish payment}.\nIt is the second. Lastly, it is to accurately track the activities that\na person performs at the shopping mall in various ways like below.\n\n- Same person comes from an {@link IShoppingExternalUser external service}\n- Same person creates multiple accounts\n- Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n- Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n\nTherefore, `IShoppingCustomer` can have multiple records with the same\n{@link IShoppingCitizen}, {@link IShoppingMember}, and\n{@link IShoppingExternalUser}. Additionally, if a customer signs up for\nmembership after verifying their real name or signs up for our service after\nbeing a user of an external service, all related records are changed at once.\nTherefore, identification and tracking of customers can be done very\nsystematically.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "title": "Discriminant for the type of customer",
                            "description": "Discriminant for the type of customer.",
                            "const": "customer"
                          },
                          "member": {
                            "title": "Membership information",
                            "description": "Membership information.\n\nIf the customer has joined as a member.",
                            "oneOf": [
                              {
                                "type": "null"
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "citizen": {
                                    "title": "Citizen information",
                                    "description": "Citizen information.\n\nOnly when has verified as a citizen, with mobile number and real name.\n\nFor reference, if the member has signed up as a seller or administrator,\nthis citizen information must be.",
                                    "oneOf": [
                                      {
                                        "type": "null"
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "title": "Primary Key",
                                            "description": "Primary Key.",
                                            "type": "string",
                                            "format": "uuid"
                                          },
                                          "created_at": {
                                            "title": "Creation time of record",
                                            "description": "Creation time of record.",
                                            "type": "string",
                                            "format": "date-time"
                                          },
                                          "mobile": {
                                            "title": "Mobile number",
                                            "description": "Mobile number.",
                                            "x-wrtn-payment-order-mobile": true,
                                            "type": "string",
                                            "pattern": "^[0-9]*$"
                                          },
                                          "name": {
                                            "title": "Real name, or equivalent nickname",
                                            "description": "Real name, or equivalent nickname.",
                                            "x-wrtn-payment-order-citizen": true,
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "created_at",
                                          "mobile",
                                          "name"
                                        ],
                                        "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile} input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                                      }
                                    ]
                                  },
                                  "seller": {
                                    "title": "Seller information",
                                    "description": "Seller information.\n\nIf the member also signed up as a seller.",
                                    "oneOf": [
                                      {
                                        "type": "null"
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "title": "Primary Key",
                                            "description": "Primary Key.",
                                            "type": "string",
                                            "format": "uuid"
                                          },
                                          "created_at": {
                                            "title": "Creation tmie of record",
                                            "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up.",
                                            "type": "string",
                                            "format": "date-time"
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "created_at"
                                        ],
                                        "description": "Seller information.\n\n`IShoppingSeller` is an entity that embodies a person who registers\n{@link IShoppingSale sales} to operate selling activities, with\n{@link IShoppingMember membership} joining.\n\nFor reference, unlike {@link IShoppingCustomer customers} which can\nparticipate even without membership joining, seller must join membership\nto operate sales. Also, seller must do the\n{@link IShoppingCitizen real-name and mobile authentication}, too."
                                      }
                                    ]
                                  },
                                  "administrator": {
                                    "title": "Administrator information",
                                    "description": "Administrator information.\n\nIf the member also signed up as an administrator.",
                                    "oneOf": [
                                      {
                                        "type": "null"
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "title": "Primary Key",
                                            "description": "Primary Key.",
                                            "type": "string",
                                            "format": "uuid"
                                          },
                                          "created_at": {
                                            "title": "Creation time of record",
                                            "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up.",
                                            "type": "string",
                                            "format": "date-time"
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "created_at"
                                        ],
                                        "description": "Administrator account.\n\n`IShoppingAdministrator` is an entity that embodies a person who manages\nthe shopping mall system, with {@link IShoppingMember membership} joining.\n\nFor reference, unlike {@link IShoppingCustomer customers} which can participate\neven without membership joining, administrator must join membership to operate\nmanagements. Also, administrator must perform the\n{@link IShoppingCitizen real-name and mobile authentication}, too."
                                      }
                                    ]
                                  },
                                  "id": {
                                    "title": "Primary Key",
                                    "description": "Primary Key.",
                                    "type": "string",
                                    "format": "uuid"
                                  },
                                  "nickname": {
                                    "title": "Nickname that uniquely identifies the member",
                                    "description": "Nickname that uniquely identifies the member.",
                                    "type": "string"
                                  },
                                  "emails": {
                                    "title": "List of emails",
                                    "description": "List of emails.",
                                    "type": "array",
                                    "items": {
                                      "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one.",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "title": "Primary Key",
                                          "description": "Primary Key.",
                                          "type": "string",
                                          "format": "uuid"
                                        },
                                        "value": {
                                          "title": "Email address value",
                                          "description": "Email address value.",
                                          "type": "string",
                                          "format": "email"
                                        },
                                        "created_at": {
                                          "title": "Creation time of record",
                                          "description": "Creation time of record.",
                                          "type": "string",
                                          "format": "date-time"
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "value",
                                        "created_at"
                                      ]
                                    }
                                  },
                                  "created_at": {
                                    "title": "Creation time of record",
                                    "description": "Creation time of record.\n\nAnother words, the time when the member has signed up.",
                                    "type": "string",
                                    "format": "date-time"
                                  }
                                },
                                "required": [
                                  "citizen",
                                  "seller",
                                  "administrator",
                                  "id",
                                  "nickname",
                                  "emails",
                                  "created_at"
                                ],
                                "description": "Member Account.\n\n`IShoppingMember` is an entity that symbolizes the case when a\n{@link IShoppingCustomer} signs up as a member of this shopping mall\nsystem.\n\nIf a `IShoppingMember` has seller or administrator property. it means that\nthe {@link IShoppingCustomer} has acting as a {@link IShoppingSeller seller}\nor {@link IShoppingAdministrator administrator} at the same time."
                              }
                            ]
                          },
                          "citizen": {
                            "title": "Citizen information",
                            "description": "Citizen information.\n\nIf the customer has verified his real name and mobile number.",
                            "oneOf": [
                              {
                                "type": "null"
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "title": "Primary Key",
                                    "description": "Primary Key.",
                                    "type": "string",
                                    "format": "uuid"
                                  },
                                  "created_at": {
                                    "title": "Creation time of record",
                                    "description": "Creation time of record.",
                                    "type": "string",
                                    "format": "date-time"
                                  },
                                  "mobile": {
                                    "title": "Mobile number",
                                    "description": "Mobile number.",
                                    "x-wrtn-payment-order-mobile": true,
                                    "type": "string",
                                    "pattern": "^[0-9]*$"
                                  },
                                  "name": {
                                    "title": "Real name, or equivalent nickname",
                                    "description": "Real name, or equivalent nickname.",
                                    "x-wrtn-payment-order-citizen": true,
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "id",
                                  "created_at",
                                  "mobile",
                                  "name"
                                ],
                                "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile} input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                              }
                            ]
                          },
                          "id": {
                            "title": "Primary Key",
                            "description": "Primary Key.",
                            "type": "string",
                            "format": "uuid"
                          },
                          "channel": {
                            "title": "Belonged channel",
                            "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future.",
                            "type": "object",
                            "properties": {
                              "id": {
                                "title": "Primary Key",
                                "description": "Primary Key.",
                                "type": "string",
                                "format": "uuid"
                              },
                              "created_at": {
                                "title": "Creation time of record",
                                "description": "Creation time of record.",
                                "type": "string",
                                "format": "date-time"
                              },
                              "code": {
                                "title": "Identifier code",
                                "description": "Identifier code.",
                                "type": "string"
                              },
                              "name": {
                                "title": "Name of the channel",
                                "description": "Name of the channel.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "created_at",
                              "code",
                              "name"
                            ]
                          },
                          "external_user": {
                            "title": "External user information",
                            "description": "External user information.\n\nWhen the customer has come frome an external service.",
                            "oneOf": [
                              {
                                "type": "null"
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "title": "Primary Key",
                                    "description": "Primary Key.",
                                    "type": "string",
                                    "format": "uuid"
                                  },
                                  "citizen": {
                                    "title": "Citizen activation info",
                                    "description": "Citizen activation info.",
                                    "oneOf": [
                                      {
                                        "type": "null"
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "title": "Primary Key",
                                            "description": "Primary Key.",
                                            "type": "string",
                                            "format": "uuid"
                                          },
                                          "created_at": {
                                            "title": "Creation time of record",
                                            "description": "Creation time of record.",
                                            "type": "string",
                                            "format": "date-time"
                                          },
                                          "mobile": {
                                            "title": "Mobile number",
                                            "description": "Mobile number.",
                                            "x-wrtn-payment-order-mobile": true,
                                            "type": "string",
                                            "pattern": "^[0-9]*$"
                                          },
                                          "name": {
                                            "title": "Real name, or equivalent nickname",
                                            "description": "Real name, or equivalent nickname.",
                                            "x-wrtn-payment-order-citizen": true,
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "created_at",
                                          "mobile",
                                          "name"
                                        ],
                                        "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile} input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                                      }
                                    ]
                                  },
                                  "created_at": {
                                    "title": "Creation time of record",
                                    "description": "Creation time of record.\n\nAnother word, first time when the external user connected.",
                                    "type": "string",
                                    "format": "date-time"
                                  },
                                  "uid": {
                                    "title": "Identifier key of external user from the external system",
                                    "description": "Identifier key of external user from the external system.",
                                    "type": "string"
                                  },
                                  "application": {
                                    "title": "Identifier code of the external service",
                                    "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code} in common.",
                                    "type": "string"
                                  },
                                  "nickname": {
                                    "title": "Nickname of external user in the external system",
                                    "description": "Nickname of external user in the external system.",
                                    "type": "string"
                                  },
                                  "data": {
                                    "description": "Additional information about external user from the external\nsystem."
                                  }
                                },
                                "required": [
                                  "id",
                                  "citizen",
                                  "created_at",
                                  "uid",
                                  "application",
                                  "nickname",
                                  "data"
                                ],
                                "description": "External user information.\n\n`IShoppingExternalUser` is an entity dsigned for when this system needs\nto connect with external services and welcome their users as\n{@link IShoppingCustomer customers} of this service.\n\nFor reference, customers who connect from an external service must have\nthis record, and the external service user is identified through the two\nattributes {@link application} and {@link uid}. If a customer connected\nfrom an external service completes\n{@link IShoppingCitizen real-name authentication} from this service, each\ntime the external service user reconnects to this service and issues a\nnew customer authentication token, real-name authentication begins with\ncompleted.\n\nAnd {@link password} is the password issued to the user by the external\nservice system (the so-called permanent user authentication token), and\nis never the actual user password. However, for customers who entered the\nsame application and uid as the current external system user, this is to\ndetermine whether to view this as a correct external system user or a\nviolation.\n\nIn addition, additional information received from external services can\nbe recorded in the data field in JSON format."
                              }
                            ]
                          },
                          "href": {
                            "title": "Connection address",
                            "description": "Connection address.\n\nSame with {@link window.location.href} of client.",
                            "type": "string",
                            "format": "uri"
                          },
                          "referrer": {
                            "title": "Referrer address",
                            "description": "Referrer address.\n\nSame with {@link window.document.referrer} of client.",
                            "oneOf": [
                              {
                                "type": "null"
                              },
                              {
                                "type": "string",
                                "format": "uri"
                              },
                              {
                                "type": "string",
                                "maxLength": 0
                              }
                            ]
                          },
                          "ip": {
                            "title": "Connection IP Address",
                            "description": "Connection IP Address.",
                            "oneOf": [
                              {
                                "type": "string",
                                "format": "ipv4"
                              },
                              {
                                "type": "string",
                                "format": "ipv6"
                              }
                            ]
                          },
                          "created_at": {
                            "title": "Creation time of the connection record",
                            "description": "Creation time of the connection record.",
                            "type": "string",
                            "format": "date-time"
                          }
                        },
                        "required": [
                          "type",
                          "member",
                          "citizen",
                          "id",
                          "channel",
                          "external_user",
                          "href",
                          "referrer",
                          "ip",
                          "created_at"
                        ]
                      },
                      "coupon": {
                        "title": "Target coupon",
                        "description": "Discount coupon.\n\n`IShoppingCoupon` is an entity that symbolizes discount coupons at\na shopping mall.\n\nNote that, `IShoppingCoupon` only contains specification information\nabout discount coupons. Please keep in mind that this is a different\nconcept from {@link IShoppingCouponTicket}, which refers to the issuance\nof a discount coupon, or {@link IShoppingCouponTicketPayment}, which\nrefers to its payment.\n\nAdditionally, discount coupons are applied on an order-by-order basis,\nbut each has its own unique restrictions. For example, a coupon with\n{@link IShoppingCouponSellerCriteria} may or may not be used only for\n{@link IShoppingSale} of listings registered by the {@link IShoppingSeller}.\nAlso, there are restrictions such as\n{@link IShoppingCouponDiscount.threshold minimum amount restrictions} for\nusing discount coupons and\n{@link IShoppingCouponDiscount.limit maximum discount amount limits}.\n\nIn addition, you can set whether to issue discount coupons publicly or\ngive them only to people who know the specific issuing code. In addition,\nthere are restrictions such as issued discount coupons having an\n{@link IShoppingCouponRestriction.expired_at expiration date} or being\nissued only to customers who came in through a\n{@link IShoppingCouponFunnelCriteria specific funnel}.\n\nFor more information, please refer to the properties below and the\nsubsidiary entities described later.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "title": "Primary Key",
                            "description": "Primary Key.",
                            "type": "string",
                            "format": "uuid"
                          },
                          "designer": {
                            "title": "Designer who've made the coupon",
                            "description": "Designer who've made the coupon.",
                            "oneOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "title": "Primary Key",
                                    "description": "Primary Key.",
                                    "type": "string",
                                    "format": "uuid"
                                  },
                                  "created_at": {
                                    "title": "Creation time of record",
                                    "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up.",
                                    "type": "string",
                                    "format": "date-time"
                                  }
                                },
                                "required": [
                                  "id",
                                  "created_at"
                                ],
                                "description": "Administrator account.\n\n`IShoppingAdministrator` is an entity that embodies a person who manages\nthe shopping mall system, with {@link IShoppingMember membership} joining.\n\nFor reference, unlike {@link IShoppingCustomer customers} which can participate\neven without membership joining, administrator must join membership to operate\nmanagements. Also, administrator must perform the\n{@link IShoppingCitizen real-name and mobile authentication}, too."
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "title": "Primary Key",
                                    "description": "Primary Key.",
                                    "type": "string",
                                    "format": "uuid"
                                  },
                                  "created_at": {
                                    "title": "Creation tmie of record",
                                    "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up.",
                                    "type": "string",
                                    "format": "date-time"
                                  }
                                },
                                "required": [
                                  "id",
                                  "created_at"
                                ],
                                "description": "Seller information.\n\n`IShoppingSeller` is an entity that embodies a person who registers\n{@link IShoppingSale sales} to operate selling activities, with\n{@link IShoppingMember membership} joining.\n\nFor reference, unlike {@link IShoppingCustomer customers} which can\nparticipate even without membership joining, seller must join membership\nto operate sales. Also, seller must do the\n{@link IShoppingCitizen real-name and mobile authentication}, too."
                              }
                            ]
                          },
                          "inventory": {
                            "title": "Inventory information",
                            "description": "Inventory information of the coupon.\n\nIf a {@link IShoppingCoupon coupon} has been designed with limited\ninventory, this `IShoppingCouponInventory` structure represents the\nremaining inventory information.",
                            "type": "object",
                            "properties": {
                              "volume": {
                                "title": "Remaining volume for everyone",
                                "description": "Remaining volume for everyone.\n\nIf there is a limit to the quantity issued, it becomes impossible to\nissue tickets exceeding this value.\n\nIn other words, the concept of N coupons being issued on a first-come,\nfirst-served basis is created.",
                                "oneOf": [
                                  {
                                    "type": "null"
                                  },
                                  {
                                    "type": "integer"
                                  }
                                ]
                              },
                              "volume_per_citizen": {
                                "title": "Remaining volume per citizen",
                                "description": "Remaining volume per citizen.\n\nAs a limit to the total amount of issuance per person, it is common to\nassign 1 to limit duplicate issuance to the same citizen, or to use the\n`nul`` value to set no limit.\n\nOf course, by assigning a value of N, the total amount issued to the\nsame citizen can be limited.",
                                "oneOf": [
                                  {
                                    "type": "null"
                                  },
                                  {
                                    "type": "integer"
                                  }
                                ]
                              }
                            },
                            "required": [
                              "volume",
                              "volume_per_citizen"
                            ]
                          },
                          "criterias": {
                            "title": "List of criteria information",
                            "description": "List of criteria information.",
                            "type": "array",
                            "items": {
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "channels": {
                                      "title": "List of target channels and categories",
                                      "description": "List of target channels and categories.",
                                      "type": "array",
                                      "items": {
                                        "description": "Description of the current {@link IShoppingCouponChannelCriteria} type:\n\n> Conditions for channels of discount coupons.\n> \n> `ishoppingcouponchannelcriteria` is a subtype entity of\n> {@link IShoppingCouponCriteriaBase} and is used when setting conditions on\n> a specific {@link IShoppingChannel channel} or\n> {@link IShoppingChannelCategory category} of that channel.\n> \n> If the {@link direction} value is \"include\", the coupon can only be used\n> for the target channels (or categories). Conversely, if it is \"exclude\",\n> it is a coupon that cannot be used.",
                                        "type": "object",
                                        "properties": {
                                          "channel": {
                                            "title": "Target channel",
                                            "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future.",
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "title": "Primary Key",
                                                "description": "Primary Key.",
                                                "type": "string",
                                                "format": "uuid"
                                              },
                                              "created_at": {
                                                "title": "Creation time of record",
                                                "description": "Creation time of record.",
                                                "type": "string",
                                                "format": "date-time"
                                              },
                                              "code": {
                                                "title": "Identifier code",
                                                "description": "Identifier code.",
                                                "type": "string"
                                              },
                                              "name": {
                                                "title": "Name of the channel",
                                                "description": "Name of the channel.",
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "id",
                                              "created_at",
                                              "code",
                                              "name"
                                            ]
                                          },
                                          "categories": {
                                            "title": "List of target categories",
                                            "description": "List of target categories.",
                                            "oneOf": [
                                              {
                                                "type": "null"
                                              },
                                              {
                                                "type": "array",
                                                "items": {
                                                  "$ref": "#/$defs/IShoppingChannelCategory.IInvert"
                                                },
                                                "minItems": 1
                                              }
                                            ]
                                          }
                                        },
                                        "required": [
                                          "channel",
                                          "categories"
                                        ]
                                      },
                                      "minItems": 1
                                    },
                                    "type": {
                                      "title": "Descrimanator type",
                                      "description": "Descrimanator type.",
                                      "const": "channel"
                                    },
                                    "direction": {
                                      "title": "Direction of the criteria",
                                      "description": "Direction of the criteria.",
                                      "oneOf": [
                                        {
                                          "const": "include"
                                        },
                                        {
                                          "const": "exclude"
                                        }
                                      ]
                                    }
                                  },
                                  "required": [
                                    "channels",
                                    "type",
                                    "direction"
                                  ],
                                  "description": "Conditions for channels of discount coupons.\n\n`ishoppingcouponchannelcriteria` is a subtype entity of\n{@link IShoppingCouponCriteriaBase} and is used when setting conditions on\na specific {@link IShoppingChannel channel} or\n{@link IShoppingChannelCategory category} of that channel.\n\nIf the {@link direction} value is \"include\", the coupon can only be used\nfor the target channels (or categories). Conversely, if it is \"exclude\",\nit is a coupon that cannot be used."
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "sections": {
                                      "title": "Target sections to include or exclude",
                                      "description": "Target sections to include or exclude.",
                                      "type": "array",
                                      "items": {
                                        "description": "Section information.\n\n`IShoppingSection` is a concept that refers to the spatial information of\nthe market.\n\nIf we compare the section mentioned here to the offline market, it means a\nspatially separated area within the store, such as the \"fruit corner\" or\n\"butcher corner\". Therefore, in the {@link IShoppingSale sale} entity, it is\nnot possible to classify multiple sections simultaneously, but only one section\ncan be classified.\n\nBy the way, if your shopping mall system requires only one section, then just\nuse only one. This concept is designed to be expandable in the future.",
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "title": "Primary Key",
                                            "description": "Primary Key.",
                                            "type": "string",
                                            "format": "uuid"
                                          },
                                          "code": {
                                            "title": "Identifier code",
                                            "description": "Identifier code.",
                                            "type": "string"
                                          },
                                          "name": {
                                            "title": "Representative name of the section",
                                            "description": "Representative name of the section.",
                                            "type": "string"
                                          },
                                          "created_at": {
                                            "title": "Creation time of record",
                                            "description": "Creation time of record.",
                                            "type": "string",
                                            "format": "date-time"
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "code",
                                          "name",
                                          "created_at"
                                        ]
                                      },
                                      "minItems": 1
                                    },
                                    "type": {
                                      "title": "Descrimanator type",
                                      "description": "Descrimanator type.",
                                      "const": "section"
                                    },
                                    "direction": {
                                      "title": "Direction of the criteria",
                                      "description": "Direction of the criteria.",
                                      "oneOf": [
                                        {
                                          "const": "include"
                                        },
                                        {
                                          "const": "exclude"
                                        }
                                      ]
                                    }
                                  },
                                  "required": [
                                    "sections",
                                    "type",
                                    "direction"
                                  ],
                                  "description": "Conditions for sections of discount coupons.\n\n`IShoppingCouponSectionCriteria` is a subtype entity of\n{@link IShoppingCouponCriteriaBase} and is used when setting conditions\nfor a specific {@link IShoppingSection section}.\n\nIf the {@link direction} value is \"include\", the coupon can only be used\nfor the target {@link sections}. Conversely, if it is \"exclude\", the\ncoupon cannot be used."
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "sellers": {
                                      "title": "Target sellers to include or exclude",
                                      "description": "Target sellers to include or exclude.",
                                      "type": "array",
                                      "items": {
                                        "description": "Seller information.\n\n`IShoppingSeller` is an entity that embodies a person who registers\n{@link IShoppingSale sales} to operate selling activities, with\n{@link IShoppingMember membership} joining.\n\nFor reference, unlike {@link IShoppingCustomer customers} which can\nparticipate even without membership joining, seller must join membership\nto operate sales. Also, seller must do the\n{@link IShoppingCitizen real-name and mobile authentication}, too.",
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "title": "Primary Key",
                                            "description": "Primary Key.",
                                            "type": "string",
                                            "format": "uuid"
                                          },
                                          "created_at": {
                                            "title": "Creation tmie of record",
                                            "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up.",
                                            "type": "string",
                                            "format": "date-time"
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "created_at"
                                        ]
                                      },
                                      "minItems": 1
                                    },
                                    "type": {
                                      "title": "Descrimanator type",
                                      "description": "Descrimanator type.",
                                      "const": "seller"
                                    },
                                    "direction": {
                                      "title": "Direction of the criteria",
                                      "description": "Direction of the criteria.",
                                      "oneOf": [
                                        {
                                          "const": "include"
                                        },
                                        {
                                          "const": "exclude"
                                        }
                                      ]
                                    }
                                  },
                                  "required": [
                                    "sellers",
                                    "type",
                                    "direction"
                                  ],
                                  "description": "Conditions for sellers of discount coupons.\n\n`IShoppingCouponSellerCriteria` is a subtype entity of\n{@link IShoppingCouponCriteriaBase} and is used when setting conditions\nfor a specific {@link IShoppingSeller seller}.\n\nIf the {@link direction} value is \"include\", the coupon can only be used\nfor the target {@link sellers}. Conversely, if it is \"exclude\", the\ncoupon cannot be used."
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "sales": {
                                      "title": "Target sales to include or exclude",
                                      "description": "Target sales to include or exclude.",
                                      "type": "array",
                                      "items": {
                                        "description": "Summarized information of sale.\n\nThis summarized information being used for pagination.\n\n------------------------------\n\nDescription of the current {@link IShoppingSale.ISummary} type:\n\n> Summarized information of sale.\n> \n> This summarized information being used for pagination.\n\n------------------------------\n\nDescription of the parent {@link IShoppingSale} type:\n\n> Seller sales products.\n> \n> `IShoppingSale` is an entity that embodies \"product sales\" (sales)\n> information registered by the {@link ISoppingSeller seller}. And the main\n> information of the sale is recorded in the sub {@link IShoppingSaleSnapshot},\n> not in the main `IShoppingSale`. When a seller changes a previously registered\n> item, the existing `IShoppingSale` record is not changed, but a new\n> {@link IShoppingSaleSnapshot snapshot} record be created.\n> \n> This is to preserve the {@link IShoppingCustomer customer}'s\n> {@link IShoppingOrder purchase history} flawlessly after the customer\n> purchases a specific item, even if the seller changes the components or\n> price of the item. It is also intended to support sellers in so-called A/B\n> testing, which involves changing components or prices and measuring the\n> performance in each case.",
                                        "type": "object",
                                        "properties": {
                                          "section": {
                                            "title": "Belonged section",
                                            "description": "Section information.\n\n`IShoppingSection` is a concept that refers to the spatial information of\nthe market.\n\nIf we compare the section mentioned here to the offline market, it means a\nspatially separated area within the store, such as the \"fruit corner\" or\n\"butcher corner\". Therefore, in the {@link IShoppingSale sale} entity, it is\nnot possible to classify multiple sections simultaneously, but only one section\ncan be classified.\n\nBy the way, if your shopping mall system requires only one section, then just\nuse only one. This concept is designed to be expandable in the future.",
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "title": "Primary Key",
                                                "description": "Primary Key.",
                                                "type": "string",
                                                "format": "uuid"
                                              },
                                              "code": {
                                                "title": "Identifier code",
                                                "description": "Identifier code.",
                                                "type": "string"
                                              },
                                              "name": {
                                                "title": "Representative name of the section",
                                                "description": "Representative name of the section.",
                                                "type": "string"
                                              },
                                              "created_at": {
                                                "title": "Creation time of record",
                                                "description": "Creation time of record.",
                                                "type": "string",
                                                "format": "date-time"
                                              }
                                            },
                                            "required": [
                                              "id",
                                              "code",
                                              "name",
                                              "created_at"
                                            ]
                                          },
                                          "seller": {
                                            "title": "Seller who has registered the sale",
                                            "description": "Invert information starting from seller info.\n\nInstead of accessing to the seller information from the\n{@link IShoppingCustomer.member} -> {@link IShoppingMember.seller},\n`IShoppingSeller.IInvert` starts from the seller information\nand access to the customer, member and {@link IShoppingCitizen citizen}\ninformation inversely.\n\n------------------------------\n\nDescription of the current {@link IShoppingSeller.IInvert} type:\n\n> Invert information starting from seller info.\n> \n> Instead of accessing to the seller information from the\n> {@link IShoppingCustomer.member} -> {@link IShoppingMember.seller},\n> `IShoppingSeller.IInvert` starts from the seller information\n> and access to the customer, member and {@link IShoppingCitizen citizen}\n> information inversely.\n\n------------------------------\n\nDescription of the parent {@link IShoppingSeller} type:\n\n> Seller information.\n> \n> `IShoppingSeller` is an entity that embodies a person who registers\n> {@link IShoppingSale sales} to operate selling activities, with\n> {@link IShoppingMember membership} joining.\n> \n> For reference, unlike {@link IShoppingCustomer customers} which can\n> participate even without membership joining, seller must join membership\n> to operate sales. Also, seller must do the\n> {@link IShoppingCitizen real-name and mobile authentication}, too.",
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "title": "Discriminant for the type of customer",
                                                "description": "Discriminant for the type of customer.",
                                                "const": "seller"
                                              },
                                              "member": {
                                                "title": "Membership joining information",
                                                "description": "Invert information of member.\n\nThis invert member information has been designed to be used for another\ninvert information of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert}\n- {@link IShoppingAdministrator.IInvert}\n\n------------------------------\n\nDescription of the current {@link IShoppingMember.IInvert} type:\n\n> Invert information of member.\n> \n> This invert member information has been designed to be used for another\n> invert information of sellers and administrators like below.\n> \n> - {@link IShoppingSeller.IInvert}\n> - {@link IShoppingAdministrator.IInvert}\n\n------------------------------\n\nDescription of the parent {@link IShoppingMember} type:\n\n> Member Account.\n> \n> `IShoppingMember` is an entity that symbolizes the case when a\n> {@link IShoppingCustomer} signs up as a member of this shopping mall\n> system.\n> \n> If a `IShoppingMember` has seller or administrator property. it means that\n> the {@link IShoppingCustomer} has acting as a {@link IShoppingSeller seller}\n> or {@link IShoppingAdministrator administrator} at the same time.",
                                                "type": "object",
                                                "properties": {
                                                  "id": {
                                                    "title": "Primary Key",
                                                    "description": "Primary Key.",
                                                    "type": "string",
                                                    "format": "uuid"
                                                  },
                                                  "nickname": {
                                                    "title": "Nickname that uniquely identifies the member",
                                                    "description": "Nickname that uniquely identifies the member.",
                                                    "type": "string"
                                                  },
                                                  "emails": {
                                                    "title": "List of emails",
                                                    "description": "List of emails.",
                                                    "type": "array",
                                                    "items": {
                                                      "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one.",
                                                      "type": "object",
                                                      "properties": {
                                                        "id": {
                                                          "title": "Primary Key",
                                                          "description": "Primary Key.",
                                                          "type": "string",
                                                          "format": "uuid"
                                                        },
                                                        "value": {
                                                          "title": "Email address value",
                                                          "description": "Email address value.",
                                                          "type": "string",
                                                          "format": "email"
                                                        },
                                                        "created_at": {
                                                          "title": "Creation time of record",
                                                          "description": "Creation time of record.",
                                                          "type": "string",
                                                          "format": "date-time"
                                                        }
                                                      },
                                                      "required": [
                                                        "id",
                                                        "value",
                                                        "created_at"
                                                      ]
                                                    }
                                                  },
                                                  "created_at": {
                                                    "title": "Creation time of record",
                                                    "description": "Creation time of record.\n\nAnother words, the time when the member has signed up.",
                                                    "type": "string",
                                                    "format": "date-time"
                                                  }
                                                },
                                                "required": [
                                                  "id",
                                                  "nickname",
                                                  "emails",
                                                  "created_at"
                                                ]
                                              },
                                              "customer": {
                                                "title": "Customer, the connection information",
                                                "description": "Inverted customer informatino.\n\nThis inverted customer information has been designed to be used for\nanother invert information of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert}\n- {@link IShoppingAdministrator.IInvert}\n\n------------------------------\n\nDescription of the current {@link IShoppingCustomer.IInvert} type:\n\n> Inverted customer informatino.\n> \n> This inverted customer information has been designed to be used for\n> another invert information of sellers and administrators like below.\n> \n> - {@link IShoppingSeller.IInvert}\n> - {@link IShoppingAdministrator.IInvert}\n\n------------------------------\n\nDescription of the parent {@link IShoppingCustomer} type:\n\n> Customer information, but not a person but a connection basis.\n> \n> `IShoppingCustomer` is an entity that literally embodies the information of\n> those who participated in the market as customers. By the way, the\n> `IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\n> even if the same person connects to the shopping mall multiple, multiple\n> records are created in `IShoppingCustomer`.\n> \n> The first purpose of this is to track the customer's inflow path in detail,\n> and it is for cases where the same person enters as a non-member,\n> {@link IShoppingCartCommodity puts items in the shopping cart} in advance,\n> and only authenticates their {@link IShoppingCitizen real name} or\n> registers/logs in at the moment of {@link IShoppingOrderPublish payment}.\n> It is the second. Lastly, it is to accurately track the activities that\n> a person performs at the shopping mall in various ways like below.\n> \n> - Same person comes from an {@link IShoppingExternalUser external service}\n> - Same person creates multiple accounts\n> - Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n> - Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n> \n> Therefore, `IShoppingCustomer` can have multiple records with the same\n> {@link IShoppingCitizen}, {@link IShoppingMember}, and\n> {@link IShoppingExternalUser}. Additionally, if a customer signs up for\n> membership after verifying their real name or signs up for our service after\n> being a user of an external service, all related records are changed at once.\n> Therefore, identification and tracking of customers can be done very\n> systematically.",
                                                "type": "object",
                                                "properties": {
                                                  "id": {
                                                    "title": "Primary Key",
                                                    "description": "Primary Key.",
                                                    "type": "string",
                                                    "format": "uuid"
                                                  },
                                                  "channel": {
                                                    "title": "Belonged channel",
                                                    "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future.",
                                                    "type": "object",
                                                    "properties": {
                                                      "id": {
                                                        "title": "Primary Key",
                                                        "description": "Primary Key.",
                                                        "type": "string",
                                                        "format": "uuid"
                                                      },
                                                      "created_at": {
                                                        "title": "Creation time of record",
                                                        "description": "Creation time of record.",
                                                        "type": "string",
                                                        "format": "date-time"
                                                      },
                                                      "code": {
                                                        "title": "Identifier code",
                                                        "description": "Identifier code.",
                                                        "type": "string"
                                                      },
                                                      "name": {
                                                        "title": "Name of the channel",
                                                        "description": "Name of the channel.",
                                                        "type": "string"
                                                      }
                                                    },
                                                    "required": [
                                                      "id",
                                                      "created_at",
                                                      "code",
                                                      "name"
                                                    ]
                                                  },
                                                  "external_user": {
                                                    "title": "External user information",
                                                    "description": "External user information.\n\nWhen the customer has come frome an external service.",
                                                    "oneOf": [
                                                      {
                                                        "type": "null"
                                                      },
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "id": {
                                                            "title": "Primary Key",
                                                            "description": "Primary Key.",
                                                            "type": "string",
                                                            "format": "uuid"
                                                          },
                                                          "citizen": {
                                                            "title": "Citizen activation info",
                                                            "description": "Citizen activation info.",
                                                            "oneOf": [
                                                              {
                                                                "type": "null"
                                                              },
                                                              {
                                                                "type": "object",
                                                                "properties": {
                                                                  "id": {
                                                                    "title": "Primary Key",
                                                                    "description": "Primary Key.",
                                                                    "type": "string",
                                                                    "format": "uuid"
                                                                  },
                                                                  "created_at": {
                                                                    "title": "Creation time of record",
                                                                    "description": "Creation time of record.",
                                                                    "type": "string",
                                                                    "format": "date-time"
                                                                  },
                                                                  "mobile": {
                                                                    "title": "Mobile number",
                                                                    "description": "Mobile number.",
                                                                    "x-wrtn-payment-order-mobile": true,
                                                                    "type": "string",
                                                                    "pattern": "^[0-9]*$"
                                                                  },
                                                                  "name": {
                                                                    "title": "Real name, or equivalent nickname",
                                                                    "description": "Real name, or equivalent nickname.",
                                                                    "x-wrtn-payment-order-citizen": true,
                                                                    "type": "string"
                                                                  }
                                                                },
                                                                "required": [
                                                                  "id",
                                                                  "created_at",
                                                                  "mobile",
                                                                  "name"
                                                                ],
                                                                "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile} input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                                                              }
                                                            ]
                                                          },
                                                          "created_at": {
                                                            "title": "Creation time of record",
                                                            "description": "Creation time of record.\n\nAnother word, first time when the external user connected.",
                                                            "type": "string",
                                                            "format": "date-time"
                                                          },
                                                          "uid": {
                                                            "title": "Identifier key of external user from the external system",
                                                            "description": "Identifier key of external user from the external system.",
                                                            "type": "string"
                                                          },
                                                          "application": {
                                                            "title": "Identifier code of the external service",
                                                            "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code} in common.",
                                                            "type": "string"
                                                          },
                                                          "nickname": {
                                                            "title": "Nickname of external user in the external system",
                                                            "description": "Nickname of external user in the external system.",
                                                            "type": "string"
                                                          },
                                                          "data": {
                                                            "description": "Additional information about external user from the external\nsystem."
                                                          }
                                                        },
                                                        "required": [
                                                          "id",
                                                          "citizen",
                                                          "created_at",
                                                          "uid",
                                                          "application",
                                                          "nickname",
                                                          "data"
                                                        ],
                                                        "description": "External user information.\n\n`IShoppingExternalUser` is an entity dsigned for when this system needs\nto connect with external services and welcome their users as\n{@link IShoppingCustomer customers} of this service.\n\nFor reference, customers who connect from an external service must have\nthis record, and the external service user is identified through the two\nattributes {@link application} and {@link uid}. If a customer connected\nfrom an external service completes\n{@link IShoppingCitizen real-name authentication} from this service, each\ntime the external service user reconnects to this service and issues a\nnew customer authentication token, real-name authentication begins with\ncompleted.\n\nAnd {@link password} is the password issued to the user by the external\nservice system (the so-called permanent user authentication token), and\nis never the actual user password. However, for customers who entered the\nsame application and uid as the current external system user, this is to\ndetermine whether to view this as a correct external system user or a\nviolation.\n\nIn addition, additional information received from external services can\nbe recorded in the data field in JSON format."
                                                      }
                                                    ]
                                                  },
                                                  "href": {
                                                    "title": "Connection address",
                                                    "description": "Connection address.\n\nSame with {@link window.location.href} of client.",
                                                    "type": "string",
                                                    "format": "uri"
                                                  },
                                                  "referrer": {
                                                    "title": "Referrer address",
                                                    "description": "Referrer address.\n\nSame with {@link window.document.referrer} of client.",
                                                    "oneOf": [
                                                      {
                                                        "type": "null"
                                                      },
                                                      {
                                                        "type": "string",
                                                        "format": "uri"
                                                      },
                                                      {
                                                        "type": "string",
                                                        "maxLength": 0
                                                      }
                                                    ]
                                                  },
                                                  "ip": {
                                                    "title": "Connection IP Address",
                                                    "description": "Connection IP Address.",
                                                    "oneOf": [
                                                      {
                                                        "type": "string",
                                                        "format": "ipv4"
                                                      },
                                                      {
                                                        "type": "string",
                                                        "format": "ipv6"
                                                      }
                                                    ]
                                                  },
                                                  "created_at": {
                                                    "title": "Creation time of the connection record",
                                                    "description": "Creation time of the connection record.",
                                                    "type": "string",
                                                    "format": "date-time"
                                                  }
                                                },
                                                "required": [
                                                  "id",
                                                  "channel",
                                                  "external_user",
                                                  "href",
                                                  "referrer",
                                                  "ip",
                                                  "created_at"
                                                ]
                                              },
                                              "citizen": {
                                                "title": "Real-name and mobile number authentication information",
                                                "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile} input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored.",
                                                "type": "object",
                                                "properties": {
                                                  "id": {
                                                    "title": "Primary Key",
                                                    "description": "Primary Key.",
                                                    "type": "string",
                                                    "format": "uuid"
                                                  },
                                                  "created_at": {
                                                    "title": "Creation time of record",
                                                    "description": "Creation time of record.",
                                                    "type": "string",
                                                    "format": "date-time"
                                                  },
                                                  "mobile": {
                                                    "title": "Mobile number",
                                                    "description": "Mobile number.",
                                                    "x-wrtn-payment-order-mobile": true,
                                                    "type": "string",
                                                    "pattern": "^[0-9]*$"
                                                  },
                                                  "name": {
                                                    "title": "Real name, or equivalent nickname",
                                                    "description": "Real name, or equivalent nickname.",
                                                    "x-wrtn-payment-order-citizen": true,
                                                    "type": "string"
                                                  }
                                                },
                                                "required": [
                                                  "id",
                                                  "created_at",
                                                  "mobile",
                                                  "name"
                                                ]
                                              },
                                              "id": {
                                                "title": "Primary Key",
                                                "description": "Primary Key.",
                                                "type": "string",
                                                "format": "uuid"
                                              },
                                              "created_at": {
                                                "title": "Creation tmie of record",
                                                "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up.",
                                                "type": "string",
                                                "format": "date-time"
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "member",
                                              "customer",
                                              "citizen",
                                              "id",
                                              "created_at"
                                            ]
                                          },
                                          "price_range": {
                                            "title": "Price range of the unit",
                                            "type": "object",
                                            "properties": {
                                              "lowest": {
                                                "description": "Shopping price interface.",
                                                "type": "object",
                                                "properties": {
                                                  "nominal": {
                                                    "title": "Nominal price",
                                                    "description": "Nominal price.\n\nThis is not {@link real real price} to pay, but just a nominal price to show.\nIf this value is greater than the {@link real real price}, it would be shown\nlike {@link IShoppingSeller seller} is giving a discount.",
                                                    "type": "number",
                                                    "minimum": 0
                                                  },
                                                  "real": {
                                                    "title": "Real price to pay",
                                                    "description": "Real price to pay.",
                                                    "type": "number",
                                                    "minimum": 0
                                                  }
                                                },
                                                "required": [
                                                  "nominal",
                                                  "real"
                                                ]
                                              },
                                              "highest": {
                                                "description": "Shopping price interface.",
                                                "type": "object",
                                                "properties": {
                                                  "nominal": {
                                                    "title": "Nominal price",
                                                    "description": "Nominal price.\n\nThis is not {@link real real price} to pay, but just a nominal price to show.\nIf this value is greater than the {@link real real price}, it would be shown\nlike {@link IShoppingSeller seller} is giving a discount.",
                                                    "type": "number",
                                                    "minimum": 0
                                                  },
                                                  "real": {
                                                    "title": "Real price to pay",
                                                    "description": "Real price to pay.",
                                                    "type": "number",
                                                    "minimum": 0
                                                  }
                                                },
                                                "required": [
                                                  "nominal",
                                                  "real"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "lowest",
                                              "highest"
                                            ]
                                          },
                                          "id": {
                                            "title": "Primary Key of Sale",
                                            "description": "Primary Key of Sale.",
                                            "type": "string",
                                            "format": "uuid"
                                          },
                                          "snapshot_id": {
                                            "title": "Primary Key of Snapshot",
                                            "description": "Primary Key of Snapshot.",
                                            "type": "string",
                                            "format": "uuid"
                                          },
                                          "latest": {
                                            "title": "Whether the snapshot is the latest one or not",
                                            "description": "Whether the snapshot is the latest one or not.",
                                            "type": "boolean"
                                          },
                                          "content": {
                                            "title": "Description and image content describing the sale",
                                            "description": "Description of the current {@link IShoppingSaleContent} type:\n\n> Content information of sale snapshot.\n> \n> `IShoppingSaleContent` is an entity embodies the description contents\n> of {@link IShoppingSale}.",
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "type": "string",
                                                "format": "uuid"
                                              },
                                              "title": {
                                                "type": "string"
                                              },
                                              "thumbnails": {
                                                "type": "array",
                                                "items": {
                                                  "description": "Attachment File.\n\nEvery attachment files that are managed in current system.\n\nFor reference, it is possible to omit one of file {@link name}\nor {@link extension} like `.gitignore` or `README` case, but not\npossible to omit both of them.",
                                                  "type": "object",
                                                  "properties": {
                                                    "id": {
                                                      "title": "Primary Key",
                                                      "description": "Primary Key.",
                                                      "type": "string",
                                                      "format": "uuid"
                                                    },
                                                    "created_at": {
                                                      "title": "Creation time of attachment file",
                                                      "description": "Creation time of attachment file.",
                                                      "type": "string",
                                                      "format": "date-time"
                                                    },
                                                    "name": {
                                                      "title": "File name, except extension",
                                                      "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string.",
                                                      "type": "string",
                                                      "maxLength": 255
                                                    },
                                                    "extension": {
                                                      "title": "Extension",
                                                      "description": "Extension.\n\nPossible to omit like `README` case.",
                                                      "oneOf": [
                                                        {
                                                          "type": "null"
                                                        },
                                                        {
                                                          "type": "string",
                                                          "minLength": 1,
                                                          "maxLength": 8
                                                        }
                                                      ]
                                                    },
                                                    "url": {
                                                      "title": "URL path of the real file",
                                                      "description": "URL path of the real file.",
                                                      "type": "string",
                                                      "format": "uri",
                                                      "contentMediaType": "image/*"
                                                    }
                                                  },
                                                  "required": [
                                                    "id",
                                                    "created_at",
                                                    "name",
                                                    "extension",
                                                    "url"
                                                  ]
                                                }
                                              }
                                            },
                                            "required": [
                                              "id",
                                              "title",
                                              "thumbnails"
                                            ]
                                          },
                                          "channels": {
                                            "title": "List of channels and categories",
                                            "description": "List of channels and categories.\n\nWhich channels and categories the sale is registered to.",
                                            "type": "array",
                                            "items": {
                                              "description": "Target channel (and categories) of sale to sell.\n\n`IShoppingSaleChannel` is an entity that expresses through which\n{@link IShoppingChannel channel} a listing {@link IShoppingSale} is sold.\n\nAlso, if {@link IShoppingChannelCategory categories} are specified, it also\nmeans that the sale be sold. Otherwise, none of the categories of the channel\nbeing specified, it means that every categories of the channel is listing the\ntarget sale.",
                                              "type": "object",
                                              "properties": {
                                                "categories": {
                                                  "title": "List of categories of the channel listing the sale",
                                                  "description": "List of categories of the channel listing the sale.\n\nIf empty, it means all categories of the channel is listing the sale.",
                                                  "type": "array",
                                                  "items": {
                                                    "$ref": "#/$defs/IShoppingChannelCategory.IInvert"
                                                  }
                                                },
                                                "id": {
                                                  "title": "Primary Key",
                                                  "description": "Primary Key.",
                                                  "type": "string",
                                                  "format": "uuid"
                                                },
                                                "created_at": {
                                                  "title": "Creation time of record",
                                                  "description": "Creation time of record.",
                                                  "type": "string",
                                                  "format": "date-time"
                                                },
                                                "code": {
                                                  "title": "Identifier code",
                                                  "description": "Identifier code.",
                                                  "type": "string"
                                                },
                                                "name": {
                                                  "title": "Name of the channel",
                                                  "description": "Name of the channel.",
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "categories",
                                                "id",
                                                "created_at",
                                                "code",
                                                "name"
                                              ]
                                            },
                                            "minItems": 1
                                          },
                                          "tags": {
                                            "title": "List of search tags",
                                            "description": "List of search tags.",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "units": {
                                            "title": "List of units",
                                            "description": "List of units.\n\nRecords about individual product composition information that are sold\nin the sale. Each {@link IShoppingSaleUnit unit} record has configurable\n{@link IShoppingSaleUnitOption options},\n{@link IShoppingSaleUnitOptionCandidate candidate} values for each\noption, and {@link IShoppingSaleUnitStock final stocks} determined by\nselecting every candidate values of each option.",
                                            "type": "array",
                                            "items": {
                                              "description": "Description of the current {@link IShoppingSaleUnit} type:\n\n> Product composition information handled in the sale.\n> \n> `IShoppingSaleUnit` is an entity that embodies the \"individual product\"\n> information handled in the {@link IShoppingSale sale}.\n> \n> For reference, the reason why `IShoppingSaleUnit` is separated from\n> {@link IShoppingSaleSnapshot} by an algebraic relationship of 1: N is because\n> there are some cases where multiple products are sold in one listing. This is\n> the case with so-called \"bundled products\".\n> \n> - Bundle from regular product (Mackbook Set)\n>   - Main Body\n>   - Keyboard\n>   - Mouse\n>   - Apple Care (Free A/S Voucher)\n> \n> And again, `IShoppingSaleUnit` does not in itself refer to the\n> {@link IShoppingSaleUnitStock final stock} that the\n> {@link IShoppingCustomer customer} will {@link IShoppingOrder purchase}.\n> The final stock can be found only after selecting all given\n> {@link IShoppingSaleUnitOption options} and their\n> {@link IShoppingSaleUnitOptionCandidate candidate values}.\n> \n> For example, even if you buy a Macbook, the final stocks are determined only\n> after selecting all the options (CPU / RAM / SSD), etc.",
                                              "type": "object",
                                              "properties": {
                                                "price_range": {
                                                  "type": "object",
                                                  "properties": {
                                                    "lowest": {
                                                      "description": "Shopping price interface.",
                                                      "type": "object",
                                                      "properties": {
                                                        "nominal": {
                                                          "title": "Nominal price",
                                                          "description": "Nominal price.\n\nThis is not {@link real real price} to pay, but just a nominal price to show.\nIf this value is greater than the {@link real real price}, it would be shown\nlike {@link IShoppingSeller seller} is giving a discount.",
                                                          "type": "number",
                                                          "minimum": 0
                                                        },
                                                        "real": {
                                                          "title": "Real price to pay",
                                                          "description": "Real price to pay.",
                                                          "type": "number",
                                                          "minimum": 0
                                                        }
                                                      },
                                                      "required": [
                                                        "nominal",
                                                        "real"
                                                      ]
                                                    },
                                                    "highest": {
                                                      "description": "Shopping price interface.",
                                                      "type": "object",
                                                      "properties": {
                                                        "nominal": {
                                                          "title": "Nominal price",
                                                          "description": "Nominal price.\n\nThis is not {@link real real price} to pay, but just a nominal price to show.\nIf this value is greater than the {@link real real price}, it would be shown\nlike {@link IShoppingSeller seller} is giving a discount.",
                                                          "type": "number",
                                                          "minimum": 0
                                                        },
                                                        "real": {
                                                          "title": "Real price to pay",
                                                          "description": "Real price to pay.",
                                                          "type": "number",
                                                          "minimum": 0
                                                        }
                                                      },
                                                      "required": [
                                                        "nominal",
                                                        "real"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "lowest",
                                                    "highest"
                                                  ]
                                                },
                                                "id": {
                                                  "title": "Primary Key",
                                                  "description": "Primary Key.",
                                                  "type": "string",
                                                  "format": "uuid"
                                                },
                                                "name": {
                                                  "title": "Representative name of the unit",
                                                  "description": "Representative name of the unit.",
                                                  "type": "string"
                                                },
                                                "primary": {
                                                  "title": "Whether the unit is primary or not",
                                                  "description": "Whether the unit is primary or not.\n\nJust a labeling value.",
                                                  "type": "boolean"
                                                },
                                                "required": {
                                                  "title": "Whether the unit is required or not",
                                                  "description": "Whether the unit is required or not.\n\nWhen the unit is required, the customer must select the unit. If do not\nselect, customer can't buy it.\n\nFor example, if there's a sale \"Macbook Set\" and one of the unit is the\n\"Main Body\", is it possible to buy the \"Macbook Set\" without the\n\"Main Body\" unit? This property is for that case.",
                                                  "type": "boolean"
                                                }
                                              },
                                              "required": [
                                                "price_range",
                                                "id",
                                                "name",
                                                "primary",
                                                "required"
                                              ]
                                            },
                                            "minItems": 1
                                          },
                                          "created_at": {
                                            "title": "Creation time of the record",
                                            "description": "Creation time of the record.\n\nNote that, this property is different with {@link opened_at},\nwhich means the timepoint of the sale is opened.",
                                            "type": "string",
                                            "format": "date-time"
                                          },
                                          "updated_at": {
                                            "title": "Last updated time of the record",
                                            "description": "Last updated time of the record.\n\nIn another words, creation time of the last snapshot.",
                                            "type": "string",
                                            "format": "date-time"
                                          },
                                          "paused_at": {
                                            "title": "Paused time of the sale",
                                            "description": "Paused time of the sale.\n\nThe sale is paused by the seller, for some reason.\n\n{@link IShoppingCustomer Customers} can still see the sale on the\nboth list and detail pages, but the sale has a warning label\n\"The sale is paused by the seller\".",
                                            "oneOf": [
                                              {
                                                "type": "null"
                                              },
                                              {
                                                "type": "string",
                                                "format": "date-time"
                                              }
                                            ]
                                          },
                                          "suspended_at": {
                                            "title": "Suspended time of the sale",
                                            "description": "Suspended time of the sale.\n\nThe sale is suspended by the seller, for some reason.\n\n{@link IShoppingCustomer Customers} cannot see the sale on the\nboth list and detail pages. It is almost same with soft delettion,\nbut there's a little bit difference that the owner\n{@link IShoppingSeller seller} can still see the sale and resume it.\n\nOf course, the {@link IShoppingCustomer customers} who have\nalready purchased the sale can still see the sale on the\n{@link IShoppingOrder order} page.",
                                            "oneOf": [
                                              {
                                                "type": "null"
                                              },
                                              {
                                                "type": "string",
                                                "format": "date-time"
                                              }
                                            ]
                                          },
                                          "opened_at": {
                                            "title": "Opening time of the sale",
                                            "description": "Opening time of the sale.",
                                            "oneOf": [
                                              {
                                                "type": "null"
                                              },
                                              {
                                                "type": "string",
                                                "format": "date-time"
                                              }
                                            ]
                                          },
                                          "closed_at": {
                                            "title": "Closing time of the sale",
                                            "description": "Closing time of the sale.\n\nIf this value is `null`, the sale be continued forever.",
                                            "oneOf": [
                                              {
                                                "type": "null"
                                              },
                                              {
                                                "type": "string",
                                                "format": "date-time"
                                              }
                                            ]
                                          }
                                        },
                                        "required": [
                                          "section",
                                          "seller",
                                          "price_range",
                                          "id",
                                          "snapshot_id",
                                          "latest",
                                          "content",
                                          "channels",
                                          "tags",
                                          "units",
                                          "created_at",
                                          "updated_at",
                                          "paused_at",
                                          "suspended_at",
                                          "opened_at",
                                          "closed_at"
                                        ]
                                      },
                                      "minItems": 1
                                    },
                                    "type": {
                                      "title": "Descrimanator type",
                                      "description": "Descrimanator type.",
                                      "const": "sale"
                                    },
                                    "direction": {
                                      "title": "Direction of the criteria",
                                      "description": "Direction of the criteria.",
                                      "oneOf": [
                                        {
                                          "const": "include"
                                        },
                                        {
                                          "const": "exclude"
                                        }
                                      ]
                                    }
                                  },
                                  "required": [
                                    "sales",
                                    "type",
                                    "direction"
                                  ],
                                  "description": "Conditions for sales of discount coupons.\n\n`IShoppingCouponSaleCriteria` is a subtype entity of\n{@link IShoppingCouponCriteriaBase} and is used when setting conditions\nfor a specific {@link IShoppingSale sale}.\n\nIf the {@link direction} value is \"include\", the coupon can only be used\nfor the target {@link sales}. Conversely, if it is \"exclude\", the\ncoupon cannot be used."
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "funnels": {
                                      "title": "List of target funnels",
                                      "description": "List of target funnels.",
                                      "type": "array",
                                      "items": {
                                        "oneOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "kind": {
                                                "title": "Kind of funnel restriction",
                                                "description": "Kind of funnel restriction.",
                                                "oneOf": [
                                                  {
                                                    "const": "url"
                                                  },
                                                  {
                                                    "const": "referrer"
                                                  }
                                                ]
                                              },
                                              "value": {
                                                "title": "Target value",
                                                "description": "Target value.",
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "kind",
                                              "value"
                                            ],
                                            "description": "Kind of funnel restriction by a value.\n\n------------------------------\n\nDescription of the current {@link IShoppingCouponFunnelCriteria.IValueFunnel} type:\n\n> Kind of funnel restriction by a value.\n\n------------------------------\n\nDescription of the parent {@link IShoppingCouponFunnelCriteria} type:\n\n> Limit the funnel of discount coupons.\n> \n> `ishoppingcouponfunnelcriteria` is a subtype entity of\n> {@link IShoppingCouponCriteria}, and is used when you want to issue or\n> exclude discount coupons only to {@link IShoppingCustomer customers} who\n> came from a specific path.\n> \n> And funnel restrictions are possible in 3 ways: The first is\n> {@link IShoppingCustomer.referrer}, and by parsing\n> {@link IShoppingCustomer.href}, which records the customer's access\n> address, restrictions can be made in units of specific URLs or variables."
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "kind": {
                                                "title": "Kind of funnel restriction",
                                                "description": "Kind of funnel restriction.",
                                                "const": "variable"
                                              },
                                              "key": {
                                                "title": "Target variable's key",
                                                "description": "Target variable's key.",
                                                "type": "string"
                                              },
                                              "value": {
                                                "title": "Target variable's value",
                                                "description": "Target variable's value.",
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "kind",
                                              "key",
                                              "value"
                                            ],
                                            "description": "Kind of funnel restriction by a variable.\n\n------------------------------\n\nDescription of the current {@link IShoppingCouponFunnelCriteria.IVariableFunnel} type:\n\n> Kind of funnel restriction by a variable.\n\n------------------------------\n\nDescription of the parent {@link IShoppingCouponFunnelCriteria} type:\n\n> Limit the funnel of discount coupons.\n> \n> `ishoppingcouponfunnelcriteria` is a subtype entity of\n> {@link IShoppingCouponCriteria}, and is used when you want to issue or\n> exclude discount coupons only to {@link IShoppingCustomer customers} who\n> came from a specific path.\n> \n> And funnel restrictions are possible in 3 ways: The first is\n> {@link IShoppingCustomer.referrer}, and by parsing\n> {@link IShoppingCustomer.href}, which records the customer's access\n> address, restrictions can be made in units of specific URLs or variables."
                                          }
                                        ]
                                      },
                                      "minItems": 1
                                    },
                                    "type": {
                                      "title": "Descrimanator type",
                                      "description": "Descrimanator type.",
                                      "const": "funnel"
                                    },
                                    "direction": {
                                      "title": "Direction of the criteria",
                                      "description": "Direction of the criteria.",
                                      "oneOf": [
                                        {
                                          "const": "include"
                                        },
                                        {
                                          "const": "exclude"
                                        }
                                      ]
                                    }
                                  },
                                  "required": [
                                    "funnels",
                                    "type",
                                    "direction"
                                  ],
                                  "description": "Limit the funnel of discount coupons.\n\n`ishoppingcouponfunnelcriteria` is a subtype entity of\n{@link IShoppingCouponCriteria}, and is used when you want to issue or\nexclude discount coupons only to {@link IShoppingCustomer customers} who\ncame from a specific path.\n\nAnd funnel restrictions are possible in 3 ways: The first is\n{@link IShoppingCustomer.referrer}, and by parsing\n{@link IShoppingCustomer.href}, which records the customer's access\naddress, restrictions can be made in units of specific URLs or variables."
                                }
                              ]
                            }
                          },
                          "discount": {
                            "title": "Discount information",
                            "description": "Discount information.",
                            "oneOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "unit": {
                                    "title": "Discount unit as amount",
                                    "description": "Discount unit as amount.\n\nIt means the order price would be discounted by the amount value.",
                                    "const": "amount"
                                  },
                                  "value": {
                                    "title": "Discount value as amount",
                                    "description": "Discount value as amount.",
                                    "type": "number"
                                  },
                                  "threshold": {
                                    "title": "Minimum purchase amount for discount",
                                    "description": "Minimum purchase amount for discount.\n\nWhen setting this value, discount coupons cannot be applied to\norder totals that are less than this value.",
                                    "oneOf": [
                                      {
                                        "type": "null"
                                      },
                                      {
                                        "type": "number",
                                        "minimum": 0
                                      }
                                    ]
                                  },
                                  "limit": {
                                    "title": "Maximum amount available for discount",
                                    "description": "Maximum amount available for discount.\n\nWhen this value is set, no further discount will be given no\nmatter how much you order. This property would be meaningful\nonly when the {@link multiplicative} is `true`.",
                                    "oneOf": [
                                      {
                                        "type": "null"
                                      },
                                      {
                                        "type": "number",
                                        "exclusiveMinimum": true,
                                        "minimum": 0
                                      }
                                    ]
                                  },
                                  "multiplicative": {
                                    "title": "Multiplicative or not",
                                    "description": "Multiplicative or not.\n\nIf this property is `true`, the discount value would be multiplied\nto the {@link IShoppingCartCommodity.volume} or\n{@link IShoppingOrderGood.volume} value. Also, in that case,\nthe {@link limit} property would be meaningful.",
                                    "type": "boolean"
                                  }
                                },
                                "required": [
                                  "unit",
                                  "value",
                                  "threshold",
                                  "limit",
                                  "multiplicative"
                                ],
                                "description": "Discount information with amount unit.\n\n------------------------------\n\nDescription of the current {@link IShoppingCouponDiscount.IAmount} type:\n\n> Discount information with amount unit."
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "unit": {
                                    "title": "Discount unit as percent",
                                    "description": "Discount unit as percent.\n\nIt means the order price would be discounted by the percent value.",
                                    "const": "percent"
                                  },
                                  "value": {
                                    "title": "Discount value as percent",
                                    "description": "Discount value as percent.",
                                    "type": "number",
                                    "minimum": 0,
                                    "maximum": 100
                                  },
                                  "threshold": {
                                    "title": "Minimum purchase amount for discount",
                                    "description": "Minimum purchase amount for discount.\n\nWhen setting this value, discount coupons cannot be applied to\norder totals that are less than this value.",
                                    "oneOf": [
                                      {
                                        "type": "null"
                                      },
                                      {
                                        "type": "number",
                                        "minimum": 0
                                      }
                                    ]
                                  },
                                  "limit": {
                                    "title": "Maximum amount available for discount",
                                    "description": "Maximum amount available for discount.\n\nWhen this value is set, no further discount will be given no\nmatter how much you order.",
                                    "oneOf": [
                                      {
                                        "type": "null"
                                      },
                                      {
                                        "type": "number",
                                        "exclusiveMinimum": true,
                                        "minimum": 0
                                      }
                                    ]
                                  }
                                },
                                "required": [
                                  "unit",
                                  "value",
                                  "threshold",
                                  "limit"
                                ],
                                "description": "Discount information with percent unit.\n\n------------------------------\n\nDescription of the current {@link IShoppingCouponDiscount.IPercent} type:\n\n> Discount information with percent unit."
                              }
                            ]
                          },
                          "restriction": {
                            "title": "Restriction information",
                            "description": "Restriction information of the coupon.",
                            "type": "object",
                            "properties": {
                              "access": {
                                "title": "Access level of coupon",
                                "description": "Access level of coupon.\n\n- public: possible to find from public API\n- private: unable to find from public API\n  - arbitrarily assigned by the seller or administrator\n  - issued from one-time link",
                                "oneOf": [
                                  {
                                    "const": "public"
                                  },
                                  {
                                    "const": "private"
                                  }
                                ]
                              },
                              "exclusive": {
                                "title": "Exclusivity or not",
                                "description": "Exclusivity or not.\n\nAn exclusive discount coupon refers to a discount coupon that has an\nexclusive relationship with other discount coupons and can only be\nused alone. That is, when an exclusive discount coupon is used, no\nother discount coupon can be used for the same\n{@link IShoppingOrder order} or {@link IShoppingOrderGood good}.\n\nPlease note that this exclusive attribute is a very different concept\nfrom multiplicative, which means whether the same coupon can be\nmultiplied and applied to multiple coupons of the same order, so\nplease do not confuse them.",
                                "type": "boolean"
                              },
                              "volume": {
                                "title": "Limited quantity issued",
                                "description": "Limited quantity issued.\n\nIf there is a limit to the quantity issued, it becomes impossible to issue tickets exceeding this value.\n\nIn other words, the concept of N coupons being issued on a first-come, first-served basis is created.",
                                "oneOf": [
                                  {
                                    "type": "null"
                                  },
                                  {
                                    "type": "integer"
                                  }
                                ]
                              },
                              "volume_per_citizen": {
                                "title": "Limited quantity issued per person",
                                "description": "Limited quantity issued per person.\n\nAs a limit to the total amount of issuance per person, it is common to assign 1 to limit duplicate issuance to the same citizen, or to use the NULL value to set no limit.\n\nOf course, by assigning a value of N, the total amount issued to the same citizen can be limited.",
                                "oneOf": [
                                  {
                                    "type": "null"
                                  },
                                  {
                                    "type": "integer"
                                  }
                                ]
                              },
                              "expired_in": {
                                "title": "Expiration day(s) value",
                                "description": "Expiration day(s) value.\n\nThe concept of expiring N days after a discount coupon ticket is issued.\n\nTherefore, customers must use the ticket within N days, if possible, from the time it is issued.",
                                "oneOf": [
                                  {
                                    "type": "null"
                                  },
                                  {
                                    "type": "integer"
                                  }
                                ]
                              },
                              "expired_at": {
                                "title": "Expiration date",
                                "description": "Expiration date.\n\nA concept that expires after YYYY-MM-DD after a discount coupon ticket is issued.\n\nDouble restrictions are possible with expired_in, of which the one with the shorter expiration date is used.",
                                "oneOf": [
                                  {
                                    "type": "null"
                                  },
                                  {
                                    "type": "string",
                                    "format": "date-time"
                                  }
                                ]
                              }
                            },
                            "required": [
                              "access",
                              "exclusive",
                              "volume",
                              "volume_per_citizen",
                              "expired_in",
                              "expired_at"
                            ]
                          },
                          "name": {
                            "title": "Representative name of the coupon",
                            "description": "Representative name of the coupon.",
                            "type": "string"
                          },
                          "opened_at": {
                            "title": "Opening time of the coupon",
                            "description": "Opening time of the coupon.",
                            "oneOf": [
                              {
                                "type": "null"
                              },
                              {
                                "type": "string",
                                "format": "date-time"
                              }
                            ]
                          },
                          "closed_at": {
                            "title": "Closing time of the coupon",
                            "description": "Closing time of the coupon.\n\nTickets cannot be issued after this time.\n\nHowever, previously issued tickets can still be used until their\nexpiration date.",
                            "oneOf": [
                              {
                                "type": "null"
                              },
                              {
                                "type": "string",
                                "format": "date-time"
                              }
                            ]
                          },
                          "created_at": {
                            "title": "Creation tie of the record",
                            "description": "Creation tie of the record.",
                            "type": "string",
                            "format": "date-time"
                          }
                        },
                        "required": [
                          "id",
                          "designer",
                          "inventory",
                          "criterias",
                          "discount",
                          "restriction",
                          "name",
                          "opened_at",
                          "closed_at",
                          "created_at"
                        ]
                      },
                      "created_at": {
                        "title": "Creation time of the record",
                        "description": "Creation time of the record.",
                        "type": "string",
                        "format": "date-time"
                      },
                      "expired_at": {
                        "title": "Expiration time of the ticket",
                        "description": "Expiration time of the ticket.",
                        "oneOf": [
                          {
                            "type": "null"
                          },
                          {
                            "type": "string",
                            "format": "date-time"
                          }
                        ]
                      }
                    },
                    "required": [
                      "id",
                      "customer",
                      "coupon",
                      "created_at",
                      "expired_at"
                    ]
                  },
                  "created_at": {
                    "title": "Creation time of the record",
                    "description": "Creation time of the record.",
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "required": [
                  "id",
                  "ticket",
                  "created_at"
                ]
              }
            },
            "cash": {
              "title": "Amount of the cash payment",
              "description": "Amount of the cash payment.",
              "x-wrtn-payment-price": true,
              "type": "number",
              "minimum": 0
            },
            "deposit": {
              "title": "Amount of the deposit payment",
              "description": "Amount of the deposit payment.",
              "type": "number",
              "minimum": 0
            },
            "mileage": {
              "title": "Amount of the mileage payment",
              "description": "Amount of the mileage payment.",
              "type": "number",
              "minimum": 0
            },
            "ticket": {
              "title": "Amount of the discount coupon ticket payment",
              "description": "Amount of the discount coupon ticket payment.",
              "type": "number",
              "minimum": 0
            },
            "nominal": {
              "title": "Nominal price",
              "description": "Nominal price.\n\nThis is not {@link real real price} to pay, but just a nominal price to show.\nIf this value is greater than the {@link real real price}, it would be shown\nlike {@link IShoppingSeller seller} is giving a discount.",
              "type": "number",
              "minimum": 0
            },
            "real": {
              "title": "Real price to pay",
              "description": "Real price to pay.",
              "type": "number",
              "minimum": 0
            }
          },
          "required": [
            "ticket_payments",
            "cash",
            "deposit",
            "mileage",
            "ticket",
            "nominal",
            "real"
          ]
        },
        "publish": {
          "title": "Order completion and payment information",
          "description": "Order completion and payment information.",
          "oneOf": [
            {
              "type": "null"
            },
            {
              "type": "object",
              "properties": {
                "deliveries": {
                  "title": "List of deliveries",
                  "description": "List of deliveries.\n\nAn {@link IShoppingOrder order} can be delivered in multiple times.\nOf course, the opposite case is also possible, that a\n{@link IShoppingDelivery delivery} can be composed of multiple orders.",
                  "type": "array",
                  "items": {
                    "description": "Delivery information.\n\nWhen delivering {@link IShoppingOrderGood goods} to\n{@link IShoppingCustomer customer}, {@link IShoppingSeller seller} can deliver\nmultiple {@link IShoppingSaleUnitStock stocks}, goods at once. Also, it is\npossible to deliver a stock or good in multiple times due to physical restriction\nlike volume or weight problem.\n\nAs you can see from above, the relationship between delivery with\n{@link IShoppingOrder order} (or {@link IShoppingOrderGood good}) is not 1: 1 or\nN: 1, but M: N. Entity `IShoppingDelivery` has been designed to represent such\nrelationship, by referencing target stocks or goods through subsidiary entity\n{@link IShoppingDeliveryPiece}.\n\nAlso, delivery does not end with only one step. It has multiple processes like\nmanufacturing, planning, shipping and delivering. Those steps are represented by\nanother subsidiary entity {@link IShoppingDeliveryJourney}.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "title": "Primary Key",
                        "description": "Primary Key.",
                        "type": "string",
                        "format": "uuid"
                      },
                      "seller": {
                        "title": "Seller who've delivered the goods",
                        "description": "Seller information.\n\n`IShoppingSeller` is an entity that embodies a person who registers\n{@link IShoppingSale sales} to operate selling activities, with\n{@link IShoppingMember membership} joining.\n\nFor reference, unlike {@link IShoppingCustomer customers} which can\nparticipate even without membership joining, seller must join membership\nto operate sales. Also, seller must do the\n{@link IShoppingCitizen real-name and mobile authentication}, too.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "title": "Primary Key",
                            "description": "Primary Key.",
                            "type": "string",
                            "format": "uuid"
                          },
                          "created_at": {
                            "title": "Creation tmie of record",
                            "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up.",
                            "type": "string",
                            "format": "date-time"
                          }
                        },
                        "required": [
                          "id",
                          "created_at"
                        ]
                      },
                      "journeys": {
                        "title": "List of journeys of the delivery",
                        "description": "List of journeys of the delivery.",
                        "type": "array",
                        "items": {
                          "description": "Journey of delivery.\n\n`IShoppingDeliveryJourney` is a subsidiary entity of {@link IShoppingDelivery},\ndescribing each journey of the delivery. For reference, the word journey\nmeans each step of the delivery process, such as preparing, shipping, and\ndelivering {@link IShoppingOrderGood goods} to the\n{@link IShoppingCustomer customer}.",
                          "type": "object",
                          "properties": {
                            "id": {
                              "title": "Primary Key",
                              "description": "Primary Key.",
                              "type": "string",
                              "format": "uuid"
                            },
                            "created_at": {
                              "title": "Creation time of the record",
                              "description": "Creation time of the record.",
                              "type": "string",
                              "format": "date-time"
                            },
                            "deleted_at": {
                              "title": "Deletion time of the record",
                              "description": "Deletion time of the record.",
                              "oneOf": [
                                {
                                  "type": "null"
                                },
                                {
                                  "type": "string",
                                  "format": "date-time"
                                }
                              ]
                            },
                            "type": {
                              "title": "Type of journey",
                              "description": "Type of journey.\n\n- preparing\n- manufacturing\n- shipping\n- delivering",
                              "oneOf": [
                                {
                                  "const": "preparing"
                                },
                                {
                                  "const": "manufacturing"
                                },
                                {
                                  "const": "shipping"
                                },
                                {
                                  "const": "delivering"
                                }
                              ]
                            },
                            "title": {
                              "title": "Title of journey",
                              "description": "Title of journey.",
                              "oneOf": [
                                {
                                  "type": "null"
                                },
                                {
                                  "type": "string"
                                }
                              ]
                            },
                            "description": {
                              "title": "Description of journey",
                              "description": "Description of journey.",
                              "oneOf": [
                                {
                                  "type": "null"
                                },
                                {
                                  "type": "string"
                                }
                              ]
                            },
                            "started_at": {
                              "title": "Start time of the journey",
                              "description": "Start time of the journey.",
                              "oneOf": [
                                {
                                  "type": "null"
                                },
                                {
                                  "type": "string",
                                  "format": "date-time"
                                }
                              ]
                            },
                            "completed_at": {
                              "title": "Completion time of the journey",
                              "description": "Completion time of the journey.",
                              "oneOf": [
                                {
                                  "type": "null"
                                },
                                {
                                  "type": "string",
                                  "format": "date-time"
                                }
                              ]
                            }
                          },
                          "required": [
                            "id",
                            "created_at",
                            "deleted_at",
                            "type",
                            "title",
                            "description",
                            "started_at",
                            "completed_at"
                          ]
                        }
                      },
                      "pieces": {
                        "title": "List of pieces of the delivery",
                        "description": "List of pieces of the delivery.",
                        "type": "array",
                        "items": {
                          "description": "Which stocks are delivered.\n\n`IShoppingDeliveryPiece` is a subsidiary entity of {@link IShoppingDelivery},\ndescribing how much quantity is delivered for each\n{@link IShoppingSaleUnitStock stock} in {@link IShoppingOrder}.\n\nFor reference, as an order can be delivered in multiple times due to volume\nor weight problem, it is possible to have multiple `IShoppingDeliveryPiece`\nrecords for a single stock.",
                          "type": "object",
                          "properties": {
                            "id": {
                              "title": "Primary Key",
                              "description": "Primary Key.",
                              "type": "string",
                              "format": "uuid"
                            },
                            "publish_id": {
                              "title": "Target order's {@link IShoppingOrderPublish.id}",
                              "description": "Target order's {@link IShoppingOrderPublish.id}.",
                              "type": "string",
                              "format": "uuid"
                            },
                            "good_id": {
                              "title": "Target good's {@link IShoppingOrderGood.id}",
                              "description": "Target good's {@link IShoppingOrderGood.id}.",
                              "type": "string",
                              "format": "uuid"
                            },
                            "stock_id": {
                              "title": "Target stock's {@link IShoppingSaleUnitStock.id}",
                              "description": "Target stock's {@link IShoppingSaleUnitStock.id}.",
                              "type": "string",
                              "format": "uuid"
                            },
                            "quantity": {
                              "title": "Quantity of the stock",
                              "description": "Quantity of the stock.\n\nIt can be precision value to express split shipping.",
                              "type": "number",
                              "minimum": 0
                            }
                          },
                          "required": [
                            "id",
                            "publish_id",
                            "good_id",
                            "stock_id",
                            "quantity"
                          ]
                        },
                        "minItems": 1
                      },
                      "shippers": {
                        "title": "List of shippers of the delivery",
                        "description": "List of shippers of the delivery.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid"
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "company": {
                              "oneOf": [
                                {
                                  "type": "null"
                                },
                                {
                                  "type": "string"
                                }
                              ]
                            },
                            "name": {
                              "type": "string"
                            },
                            "mobile": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "created_at",
                            "company",
                            "name",
                            "mobile"
                          ]
                        }
                      },
                      "state": {
                        "title": "State of the delivery",
                        "description": "State of the delivery.",
                        "oneOf": [
                          {
                            "const": "none"
                          },
                          {
                            "const": "underway"
                          },
                          {
                            "const": "preparing"
                          },
                          {
                            "const": "manufacturing"
                          },
                          {
                            "const": "shipping"
                          },
                          {
                            "const": "delivering"
                          },
                          {
                            "const": "arrived"
                          }
                        ]
                      },
                      "created_at": {
                        "title": "Creation time of the record",
                        "description": "Creation time of the record.",
                        "type": "string",
                        "format": "date-time"
                      }
                    },
                    "required": [
                      "id",
                      "seller",
                      "journeys",
                      "pieces",
                      "shippers",
                      "state",
                      "created_at"
                    ]
                  }
                },
                "state": {
                  "title": "State of the order, about the deliveries",
                  "description": "State of the order, about the deliveries.",
                  "oneOf": [
                    {
                      "const": "none"
                    },
                    {
                      "const": "underway"
                    },
                    {
                      "const": "preparing"
                    },
                    {
                      "const": "manufacturing"
                    },
                    {
                      "const": "shipping"
                    },
                    {
                      "const": "delivering"
                    },
                    {
                      "const": "arrived"
                    }
                  ]
                },
                "id": {
                  "title": "Primary Key",
                  "description": "Primary Key.",
                  "type": "string",
                  "format": "uuid"
                },
                "created_at": {
                  "title": "Creation time of the record",
                  "description": "Creation time of the record.",
                  "type": "string",
                  "format": "date-time"
                },
                "paid_at": {
                  "title": "Time when the order was paid",
                  "description": "Time when the order was paid.",
                  "oneOf": [
                    {
                      "type": "null"
                    },
                    {
                      "type": "string",
                      "format": "date-time"
                    }
                  ]
                },
                "cancelled_at": {
                  "title": "Time when the payment was cancelled",
                  "description": "Time when the payment was cancelled.",
                  "oneOf": [
                    {
                      "type": "null"
                    },
                    {
                      "type": "string",
                      "format": "date-time"
                    }
                  ]
                },
                "address": {
                  "title": "Address where the {@link IShoppingOrderGood goods} to be delivered",
                  "description": "The address information.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "Primary Key",
                      "description": "Primary Key.",
                      "type": "string",
                      "format": "uuid"
                    },
                    "created_at": {
                      "title": "Creation time of record",
                      "description": "Creation time of record.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "mobile": {
                      "title": "Mobile number to contact",
                      "description": "Mobile number to contact.",
                      "type": "string",
                      "pattern": "^[0-9]*$"
                    },
                    "name": {
                      "title": "Representative name of the address",
                      "description": "Representative name of the address.\n\nSometimes be receiver's name, and sometimes be place name.",
                      "type": "string"
                    },
                    "country": {
                      "title": "Country name",
                      "description": "Country name.",
                      "type": "string"
                    },
                    "province": {
                      "title": "Province name",
                      "description": "Province name.",
                      "type": "string"
                    },
                    "city": {
                      "title": "City name",
                      "description": "City name.",
                      "type": "string"
                    },
                    "department": {
                      "title": "Department name",
                      "description": "Department name.",
                      "type": "string"
                    },
                    "possession": {
                      "title": "Detailed address containing street name, building number, and room number",
                      "description": "Detailed address containing street name, building number, and room number.",
                      "type": "string"
                    },
                    "zip_code": {
                      "title": "Zip code, or postal code",
                      "description": "Zip code, or postal code.",
                      "type": "string"
                    },
                    "special_note": {
                      "title": "Special description if required",
                      "description": "Special description if required.",
                      "oneOf": [
                        {
                          "type": "null"
                        },
                        {
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "created_at",
                    "mobile",
                    "name",
                    "country",
                    "province",
                    "city",
                    "department",
                    "possession",
                    "zip_code",
                    "special_note"
                  ]
                }
              },
              "required": [
                "deliveries",
                "state",
                "id",
                "created_at",
                "paid_at",
                "cancelled_at",
                "address"
              ],
              "description": "Order completion and payment information.\n\n`IShoppingOrderPublish` is an entity that embodies the series of processes\nin which a {@link IShoppingCustomer customer} pays for his or her\n{@link IShoppingOrder order}, thereby completing the order. And only after\nthe order is {@link paid_at completed}, can the {@link IShoppingSeller seller}\nrecognize that the customer has purchased his product.\n\nBy the way, please note that just because the `IShoppingOrderPublish` record\nexists, it does not mean that the payment has been completed. Of course, with\n\"credit cards\" and \"Google Pay\", payment application and payment occur at the\nsame time. However, there are some cases where payment is made after the\npayment application, such as \"bank transfer\" or \"virtual account payment\".\nTherefore, to see the completion of payment, be sure to check the\n{@link paid_at} property.\n\nIn addition, even after payment has been made, there may be cases where it is\nsuddenly cancelled, so please be aware of this as well."
            }
          ]
        },
        "created_at": {
          "title": "Creation time of the record",
          "description": "Creation time of the record.",
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "name",
        "customer",
        "goods",
        "price",
        "publish",
        "created_at"
      ]
    },
    "success": true,
    "arguments": {
      "type": {
        "host": "http://127.0.0.1:37001",
        "headers": {
          "Authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0YWJsZSI6InNob3BwaW5nX2N1c3RvbWVycyIsImlkIjoiMjVlYzg3ZjctODE1ZC00YjU3LTk1NzYtYzk1Mzk4NGJjMjhmIiwicmVhZG9ubHkiOmZhbHNlLCJleHBpcmVkX2F0IjoiMjAyNC0xMi0xM1QwOTo0MjoxMi41MzlaIiwicmVmcmVzaGFibGVfdW50aWwiOiIyMDI0LTEyLTI3VDA2OjQyOjEyLjUzOVoiLCJpYXQiOjE3MzQwNzIxMzJ9.zWZrU-d1bSW-MawmSo2RYRPk_73xtR_PxfFUrEpDJkc"
        }
      },
      "properties": {
        "goods": [
          {
            "commodity_id": "eb8b8bd3-0ccb-409f-b85a-d6314b76e3fd",
            "volume": 1
          },
          {
            "commodity_id": "c276d7b6-91ec-4db8-a8c3-4687626efaf5",
            "volume": 1
          },
          {
            "commodity_id": "dc2835cf-f179-4294-8246-0f43a70e6a12",
            "volume": 1
          },
          {
            "commodity_id": "9f77d5b5-aa22-4820-8123-30c579cd3ff0",
            "volume": 1
          }
        ]
      }
    },
    "value": {
      "id": "d81d15a2-911d-4049-a56d-8355844c0009",
      "name": "Stanley Tumbler Collection and 3 more goods",
      "customer": {
        "type": "customer",
        "member": {
          "citizen": {
            "id": "552ac832-7852-48ae-9919-95e07bb53c4a",
            "created_at": "2024-12-13T06:42:12.562Z",
            "mobile": "01011387079",
            "name": "agijp mgqjxv"
          },
          "seller": null,
          "administrator": null,
          "id": "91711abe-14a6-4b3e-8a09-b86f1eaef7a5",
          "nickname": "yequwvg czzid",
          "emails": [
            {
              "id": "65eeceda-1a74-424c-96c0-713855c89cb2",
              "value": "5fiouhttyq7e170v@nestia.io",
              "created_at": "2024-12-13T06:42:12.624Z"
            }
          ],
          "created_at": "2024-12-13T06:42:12.624Z"
        },
        "citizen": {
          "id": "552ac832-7852-48ae-9919-95e07bb53c4a",
          "created_at": "2024-12-13T06:42:12.562Z",
          "mobile": "01011387079",
          "name": "agijp mgqjxv"
        },
        "id": "25ec87f7-815d-4b57-9576-c953984bc28f",
        "channel": {
          "id": "2323f4bd-21ad-45b7-ae3b-cadd84dcc935",
          "created_at": "2024-12-13T06:42:10.908Z",
          "code": "samchon",
          "name": "Samchon Shopping Mall"
        },
        "external_user": null,
        "href": "http://127.0.0.1/TestAutomation",
        "referrer": "http://127.0.0.1/NodeJS",
        "ip": "127.0.0.1",
        "created_at": "2024-12-13T06:42:12.535Z"
      },
      "goods": [
        {
          "id": "cc465192-724b-4d96-a644-4a13b1730ab8",
          "commodity": {
            "id": "9f77d5b5-aa22-4820-8123-30c579cd3ff0",
            "sale": {
              "section": {
                "id": "a01c572c-3199-4929-ac67-ba7c31b2c808",
                "code": "general",
                "name": "General",
                "created_at": "2024-12-13T06:42:11.124Z"
              },
              "seller": {
                "type": "seller",
                "member": {
                  "id": "a853492c-70b4-487f-9648-0f6109a0ad69",
                  "nickname": "Robot",
                  "emails": [
                    {
                      "id": "81ea73c4-b41e-4022-9384-d51d3215797e",
                      "value": "robot@nestia.io",
                      "created_at": "2024-12-13T06:42:11.227Z"
                    }
                  ],
                  "created_at": "2024-12-13T06:42:11.227Z"
                },
                "customer": {
                  "id": "aeb8583b-8bd9-4d29-adea-78779b405046",
                  "channel": {
                    "id": "2323f4bd-21ad-45b7-ae3b-cadd84dcc935",
                    "created_at": "2024-12-13T06:42:10.908Z",
                    "code": "samchon",
                    "name": "Samchon Shopping Mall"
                  },
                  "external_user": null,
                  "href": "http://127.0.0.1/TestAutomation",
                  "referrer": "http://127.0.0.1/NodeJS",
                  "ip": "127.0.0.1",
                  "created_at": "2024-12-13T06:42:11.258Z"
                },
                "citizen": {
                  "id": "43aedfea-6b2c-4c18-9f69-60373c9580dd",
                  "created_at": "2024-12-13T06:42:11.157Z",
                  "mobile": "01012345678",
                  "name": "Robot"
                },
                "id": "addccb32-ac48-460e-9624-d9809da19d99",
                "created_at": "2024-12-13T06:42:11.241Z"
              },
              "id": "ef43459e-edb6-4b2c-bce5-c74cc815a4f4",
              "snapshot_id": "e13727ff-a31b-4460-ab6f-72e1dd3e1e2c",
              "latest": true,
              "content": {
                "id": "f2a6a47e-f72c-44b6-88ac-27ebbfa1eed0",
                "title": "Stanley Tumbler Collection",
                "thumbnails": [
                  {
                    "id": "c47319f2-bd60-49f5-8703-773a593e0775",
                    "created_at": "2024-12-13T06:42:12.111Z",
                    "name": "stanley-tumbler-collection-thumbnail",
                    "extension": "jpeg",
                    "url": "https://serpapi.com/searches/673d71322c566d56d9c20ceb/images/ce9a07f2aa831dbec8bb1c287299706e24a52a8e0c119fa162041805038957a7.jpeg"
                  }
                ]
              },
              "channels": [
                {
                  "categories": [
                    {
                      "parent": null,
                      "id": "19f9099e-3a2f-4894-a2c7-36d8c2d7d9d7",
                      "code": "accessories",
                      "parent_id": null,
                      "name": "Accessories",
                      "created_at": "2024-12-13T06:42:11.060Z"
                    },
                    {
                      "parent": null,
                      "id": "e82fb84b-d443-441b-a140-9f45bd73e0ca",
                      "code": "others",
                      "parent_id": null,
                      "name": "Others",
                      "created_at": "2024-12-13T06:42:11.116Z"
                    }
                  ],
                  "id": "2323f4bd-21ad-45b7-ae3b-cadd84dcc935",
                  "created_at": "2024-12-13T06:42:10.908Z",
                  "code": "samchon",
                  "name": "Samchon Shopping Mall"
                }
              ],
              "tags": [
                "Stanley",
                "Tumbler",
                "Drinkware",
                "Eco-Friendly"
              ],
              "units": [
                {
                  "stocks": [
                    {
                      "id": "6711956d-8aec-488f-b5ce-bfb060c262b3",
                      "name": "Classic Tumbler - 24 oz Polar White",
                      "price": {
                        "nominal": 60000,
                        "real": 54000
                      },
                      "quantity": 1,
                      "inventory": {
                        "income": 2000,
                        "outcome": 0
                      },
                      "choices": [
                        {
                          "id": "403b57c0-1b4d-46a5-b5a1-2de2073dd2ce",
                          "option": {
                            "id": "ecc25b78-a2e7-456a-a9e9-a0628855d2ff",
                            "type": "select",
                            "name": "Capacity",
                            "variable": true
                          },
                          "candidate": {
                            "id": "2242ef1f-aff2-432a-8ff3-2de6e155f039",
                            "name": "24 oz"
                          },
                          "value": null
                        },
                        {
                          "id": "956bac55-940e-4a31-9bc5-3a56a5d53ba3",
                          "option": {
                            "id": "377c03e7-3da2-4082-a3a3-db735247ef58",
                            "type": "select",
                            "name": "Color",
                            "variable": true
                          },
                          "candidate": {
                            "id": "34d16f7d-c322-42a4-b3fd-053aa28ea199",
                            "name": "Polar White"
                          },
                          "value": null
                        }
                      ]
                    }
                  ],
                  "id": "496ed199-3bf8-4de6-a38e-faf9267de621",
                  "name": "Classic Tumbler",
                  "primary": true,
                  "required": true
                },
                {
                  "stocks": [
                    {
                      "id": "9810c724-f965-4e06-87cd-971a5f4788c3",
                      "name": "Adventure Quencher Tumbler",
                      "price": {
                        "nominal": 70000,
                        "real": 64000
                      },
                      "quantity": 1,
                      "inventory": {
                        "income": 5000,
                        "outcome": 0
                      },
                      "choices": []
                    }
                  ],
                  "id": "36a2127c-9ed2-4adb-a116-1de93f7fb1ce",
                  "name": "Adventure Quencher Tumbler",
                  "primary": false,
                  "required": false
                },
                {
                  "stocks": [
                    {
                      "id": "c42c4acb-d77f-4b4c-8d5c-3d78532271f7",
                      "name": "Accessories Set",
                      "price": {
                        "nominal": 20000,
                        "real": 18000
                      },
                      "quantity": 1,
                      "inventory": {
                        "income": 10000,
                        "outcome": 0
                      },
                      "choices": []
                    }
                  ],
                  "id": "6aa653da-6ec2-4c9f-83a1-3e63958ef0d8",
                  "name": "Accessories Set",
                  "primary": false,
                  "required": false
                }
              ],
              "created_at": "2024-12-13T06:42:12.111Z",
              "updated_at": "2024-12-13T06:42:12.111Z",
              "paused_at": null,
              "suspended_at": null,
              "opened_at": "2024-12-13T06:42:12.108Z",
              "closed_at": null
            },
            "orderable": true,
            "pseudo": false,
            "volume": 1,
            "price": {
              "nominal": 150000,
              "real": 136000
            },
            "created_at": "2024-12-13T06:42:13.156Z"
          },
          "volume": 1,
          "price": {
            "cash": 136000,
            "deposit": 0,
            "mileage": 0,
            "ticket": 0,
            "nominal": 150000,
            "real": 136000
          },
          "state": null,
          "confirmed_at": null
        },
        {
          "id": "28f4795b-b5d3-4d9a-8aa2-fcfd92e8777a",
          "commodity": {
            "id": "dc2835cf-f179-4294-8246-0f43a70e6a12",
            "sale": {
              "section": {
                "id": "a01c572c-3199-4929-ac67-ba7c31b2c808",
                "code": "general",
                "name": "General",
                "created_at": "2024-12-13T06:42:11.124Z"
              },
              "seller": {
                "type": "seller",
                "member": {
                  "id": "a853492c-70b4-487f-9648-0f6109a0ad69",
                  "nickname": "Robot",
                  "emails": [
                    {
                      "id": "81ea73c4-b41e-4022-9384-d51d3215797e",
                      "value": "robot@nestia.io",
                      "created_at": "2024-12-13T06:42:11.227Z"
                    }
                  ],
                  "created_at": "2024-12-13T06:42:11.227Z"
                },
                "customer": {
                  "id": "aeb8583b-8bd9-4d29-adea-78779b405046",
                  "channel": {
                    "id": "2323f4bd-21ad-45b7-ae3b-cadd84dcc935",
                    "created_at": "2024-12-13T06:42:10.908Z",
                    "code": "samchon",
                    "name": "Samchon Shopping Mall"
                  },
                  "external_user": null,
                  "href": "http://127.0.0.1/TestAutomation",
                  "referrer": "http://127.0.0.1/NodeJS",
                  "ip": "127.0.0.1",
                  "created_at": "2024-12-13T06:42:11.258Z"
                },
                "citizen": {
                  "id": "43aedfea-6b2c-4c18-9f69-60373c9580dd",
                  "created_at": "2024-12-13T06:42:11.157Z",
                  "mobile": "01012345678",
                  "name": "Robot"
                },
                "id": "addccb32-ac48-460e-9624-d9809da19d99",
                "created_at": "2024-12-13T06:42:11.241Z"
              },
              "id": "2338cfa2-6e52-46e9-9d0c-a706425962e9",
              "snapshot_id": "bab8605c-d6a6-41e5-b3c8-0e7caf4b3fe0",
              "latest": true,
              "content": {
                "id": "32765e09-6001-4cdb-9db2-af3a9c018a17",
                "title": "Apple MacBook Pro",
                "thumbnails": [
                  {
                    "id": "fb222d61-315f-45c7-a276-ca7524452863",
                    "created_at": "2024-12-13T06:42:11.345Z",
                    "name": "apple-iphone-thumbnail",
                    "extension": "jpeg",
                    "url": "https://store.storeimages.cdn-apple.com/8756/as-images.apple.com/is/mbp14-spaceblack-gallery1-202410?wid=4000&hei=3074&fmt=jpeg&qlt=90&.v=1729264981617"
                  }
                ]
              },
              "channels": [
                {
                  "categories": [
                    {
                      "parent": null,
                      "id": "9b9b36f4-4e50-48ff-ac05-ee8588be0dbe",
                      "code": "electronics",
                      "parent_id": null,
                      "name": "Electronics",
                      "created_at": "2024-12-13T06:42:10.919Z"
                    },
                    {
                      "parent": {
                        "parent": null,
                        "id": "9b9b36f4-4e50-48ff-ac05-ee8588be0dbe",
                        "code": "electronics",
                        "parent_id": null,
                        "name": "Electronics",
                        "created_at": "2024-12-13T06:42:10.919Z"
                      },
                      "id": "ab794f96-49c0-4318-9ac8-91318b188e6c",
                      "code": "laptops",
                      "parent_id": "9b9b36f4-4e50-48ff-ac05-ee8588be0dbe",
                      "name": "Laptops",
                      "created_at": "2024-12-13T06:42:10.940Z"
                    },
                    {
                      "parent": {
                        "parent": {
                          "parent": null,
                          "id": "9b9b36f4-4e50-48ff-ac05-ee8588be0dbe",
                          "code": "electronics",
                          "parent_id": null,
                          "name": "Electronics",
                          "created_at": "2024-12-13T06:42:10.919Z"
                        },
                        "id": "ab794f96-49c0-4318-9ac8-91318b188e6c",
                        "code": "laptops",
                        "parent_id": "9b9b36f4-4e50-48ff-ac05-ee8588be0dbe",
                        "name": "Laptops",
                        "created_at": "2024-12-13T06:42:10.940Z"
                      },
                      "id": "183f6097-70dd-4333-8dc4-f0c0cf43fa69",
                      "code": "macbooks",
                      "parent_id": "ab794f96-49c0-4318-9ac8-91318b188e6c",
                      "name": "MacBooks",
                      "created_at": "2024-12-13T06:42:10.948Z"
                    }
                  ],
                  "id": "2323f4bd-21ad-45b7-ae3b-cadd84dcc935",
                  "created_at": "2024-12-13T06:42:10.908Z",
                  "code": "samchon",
                  "name": "Samchon Shopping Mall"
                }
              ],
              "tags": [
                "macbook",
                "apple",
                "laptop",
                "electronics",
                "professional"
              ],
              "units": [
                {
                  "stocks": [
                    {
                      "id": "6be68e95-2439-46a5-88f9-c1c9a11e0e1b",
                      "name": "MacBook Pro - Space Gray, 64GB, 512GB, English",
                      "price": {
                        "nominal": 3250000,
                        "real": 2925000
                      },
                      "quantity": 1,
                      "inventory": {
                        "income": 500,
                        "outcome": 0
                      },
                      "choices": [
                        {
                          "id": "d148e162-b71d-424f-a951-edb3bc261cca",
                          "option": {
                            "id": "75cb1035-c68b-4f02-8398-c6449cabd358",
                            "type": "select",
                            "name": "Color",
                            "variable": true
                          },
                          "candidate": {
                            "id": "3ff5a928-126d-417a-88da-d7130f4cef66",
                            "name": "Space Gray"
                          },
                          "value": null
                        },
                        {
                          "id": "3cb4a4b1-4808-4e77-a6fe-f90bf55ffbd6",
                          "option": {
                            "id": "41a6ae10-aad9-4099-8f4f-cd47e9184ccc",
                            "type": "select",
                            "name": "RAM",
                            "variable": true
                          },
                          "candidate": {
                            "id": "1b4a3a48-17a6-4b42-808e-536323841c42",
                            "name": "64GB"
                          },
                          "value": null
                        },
                        {
                          "id": "245b3c2f-3973-465d-a7c4-27472b6358f9",
                          "option": {
                            "id": "9335f715-05ce-499c-8720-f770de65a934",
                            "type": "select",
                            "name": "SSD",
                            "variable": true
                          },
                          "candidate": {
                            "id": "b2276623-d8b6-4380-841c-48785b11a8a4",
                            "name": "512GB"
                          },
                          "value": null
                        },
                        {
                          "id": "cc8cbbc0-468a-4c63-bb49-d7a84e2a832b",
                          "option": {
                            "id": "642f45f4-2604-4ee6-aab5-ffce81831688",
                            "type": "select",
                            "name": "Keyboard Language",
                            "variable": true
                          },
                          "candidate": {
                            "id": "761726dc-0fc3-412f-a115-10e9f08fd6c5",
                            "name": "English"
                          },
                          "value": null
                        }
                      ]
                    }
                  ],
                  "id": "f6825138-1e94-42ef-90b2-f27d1ea5581c",
                  "name": "MacBook M3 Pro 14inch Entity",
                  "primary": true,
                  "required": true
                },
                {
                  "stocks": [
                    {
                      "id": "fc7552bb-2a74-44fe-891a-e5af66444694",
                      "name": "Warranty Program",
                      "price": {
                        "nominal": 100000,
                        "real": 89000
                      },
                      "quantity": 1,
                      "inventory": {
                        "income": 10000,
                        "outcome": 0
                      },
                      "choices": []
                    }
                  ],
                  "id": "461232cc-bd5b-48b8-a693-f2888ebb9266",
                  "name": "Warranty Program",
                  "primary": false,
                  "required": false
                },
                {
                  "stocks": [
                    {
                      "id": "6aa2fef3-d488-4f8c-8989-8b479f22bb74",
                      "name": "Magnetic Keyboard",
                      "price": {
                        "nominal": 200000,
                        "real": 169000
                      },
                      "quantity": 1,
                      "inventory": {
                        "income": 8000,
                        "outcome": 0
                      },
                      "choices": []
                    }
                  ],
                  "id": "f6ea807d-484f-4a37-be51-92cbb9fdc119",
                  "name": "Magnetic Keyboard",
                  "primary": false,
                  "required": false
                }
              ],
              "created_at": "2024-12-13T06:42:11.347Z",
              "updated_at": "2024-12-13T06:42:11.346Z",
              "paused_at": null,
              "suspended_at": null,
              "opened_at": "2024-12-13T06:42:11.340Z",
              "closed_at": null
            },
            "orderable": true,
            "pseudo": false,
            "volume": 1,
            "price": {
              "nominal": 3550000,
              "real": 3183000
            },
            "created_at": "2024-12-13T06:42:13.112Z"
          },
          "volume": 1,
          "price": {
            "cash": 3183000,
            "deposit": 0,
            "mileage": 0,
            "ticket": 0,
            "nominal": 3550000,
            "real": 3183000
          },
          "state": null,
          "confirmed_at": null
        },
        {
          "id": "f8f5797c-33b2-44d8-8cef-b96f4020f404",
          "commodity": {
            "id": "c276d7b6-91ec-4db8-a8c3-4687626efaf5",
            "sale": {
              "section": {
                "id": "a01c572c-3199-4929-ac67-ba7c31b2c808",
                "code": "general",
                "name": "General",
                "created_at": "2024-12-13T06:42:11.124Z"
              },
              "seller": {
                "type": "seller",
                "member": {
                  "id": "a853492c-70b4-487f-9648-0f6109a0ad69",
                  "nickname": "Robot",
                  "emails": [
                    {
                      "id": "81ea73c4-b41e-4022-9384-d51d3215797e",
                      "value": "robot@nestia.io",
                      "created_at": "2024-12-13T06:42:11.227Z"
                    }
                  ],
                  "created_at": "2024-12-13T06:42:11.227Z"
                },
                "customer": {
                  "id": "aeb8583b-8bd9-4d29-adea-78779b405046",
                  "channel": {
                    "id": "2323f4bd-21ad-45b7-ae3b-cadd84dcc935",
                    "created_at": "2024-12-13T06:42:10.908Z",
                    "code": "samchon",
                    "name": "Samchon Shopping Mall"
                  },
                  "external_user": null,
                  "href": "http://127.0.0.1/TestAutomation",
                  "referrer": "http://127.0.0.1/NodeJS",
                  "ip": "127.0.0.1",
                  "created_at": "2024-12-13T06:42:11.258Z"
                },
                "citizen": {
                  "id": "43aedfea-6b2c-4c18-9f69-60373c9580dd",
                  "created_at": "2024-12-13T06:42:11.157Z",
                  "mobile": "01012345678",
                  "name": "Robot"
                },
                "id": "addccb32-ac48-460e-9624-d9809da19d99",
                "created_at": "2024-12-13T06:42:11.241Z"
              },
              "id": "6b0c6399-17f6-420e-a693-c453c8fd155d",
              "snapshot_id": "fae10058-fb6b-4a87-bbc9-4e1cf1746a5d",
              "latest": true,
              "content": {
                "id": "5cb7834c-6867-4553-bdea-072d986a9435",
                "title": "Apple MacBook Pro",
                "thumbnails": [
                  {
                    "id": "cbb4e2a3-19bc-47d9-941e-5394fe49540a",
                    "created_at": "2024-12-13T06:42:11.584Z",
                    "name": "apple-macbook-pro-thumbnail",
                    "extension": "png",
                    "url": "https://store.storeimages.cdn-apple.com/8756/as-images.apple.com/is/mbp14-spaceblack-gallery1-202410?wid=4000&hei=3074&fmt=jpeg&qlt=90&.v=1729264981617"
                  }
                ]
              },
              "channels": [
                {
                  "categories": [
                    {
                      "parent": null,
                      "id": "9b9b36f4-4e50-48ff-ac05-ee8588be0dbe",
                      "code": "electronics",
                      "parent_id": null,
                      "name": "Electronics",
                      "created_at": "2024-12-13T06:42:10.919Z"
                    },
                    {
                      "parent": {
                        "parent": {
                          "parent": null,
                          "id": "9b9b36f4-4e50-48ff-ac05-ee8588be0dbe",
                          "code": "electronics",
                          "parent_id": null,
                          "name": "Electronics",
                          "created_at": "2024-12-13T06:42:10.919Z"
                        },
                        "id": "ab794f96-49c0-4318-9ac8-91318b188e6c",
                        "code": "laptops",
                        "parent_id": "9b9b36f4-4e50-48ff-ac05-ee8588be0dbe",
                        "name": "Laptops",
                        "created_at": "2024-12-13T06:42:10.940Z"
                      },
                      "id": "183f6097-70dd-4333-8dc4-f0c0cf43fa69",
                      "code": "macbooks",
                      "parent_id": "ab794f96-49c0-4318-9ac8-91318b188e6c",
                      "name": "MacBooks",
                      "created_at": "2024-12-13T06:42:10.948Z"
                    }
                  ],
                  "id": "2323f4bd-21ad-45b7-ae3b-cadd84dcc935",
                  "created_at": "2024-12-13T06:42:10.908Z",
                  "code": "samchon",
                  "name": "Samchon Shopping Mall"
                }
              ],
              "tags": [],
              "units": [
                {
                  "stocks": [
                    {
                      "id": "b516162c-3a58-4997-8ebf-9054ff3b1397",
                      "name": "MacBook Pro (Silver, 16GB, 512GB, Korean)",
                      "price": {
                        "nominal": 2000000,
                        "real": 1800000
                      },
                      "quantity": 1,
                      "inventory": {
                        "income": 10000,
                        "outcome": 0
                      },
                      "choices": [
                        {
                          "id": "e9d063f3-d6e2-4871-a58a-b5b86d44518b",
                          "option": {
                            "id": "2a67e9ec-aed5-4d7e-a316-fa73602c6d41",
                            "type": "select",
                            "name": "Color",
                            "variable": true
                          },
                          "candidate": {
                            "id": "e70b406e-9bc6-41a4-bb1c-d92e69ce4b0b",
                            "name": "Silver"
                          },
                          "value": null
                        },
                        {
                          "id": "f7067a64-195f-4c60-be2c-0c0038b09e63",
                          "option": {
                            "id": "7433b627-940f-403f-bd4a-6a9107792c81",
                            "type": "select",
                            "name": "RAM",
                            "variable": true
                          },
                          "candidate": {
                            "id": "ec823002-ff99-4419-bdd4-6e880d7082eb",
                            "name": "16GB"
                          },
                          "value": null
                        },
                        {
                          "id": "f0a90d96-4994-42f4-8c5e-36c24635eb1d",
                          "option": {
                            "id": "487827f7-9e48-4c00-a24e-75c90b457953",
                            "type": "select",
                            "name": "SSD",
                            "variable": true
                          },
                          "candidate": {
                            "id": "cfc02936-1db5-4d3c-a43b-0825d394d4e2",
                            "name": "512GB"
                          },
                          "value": null
                        },
                        {
                          "id": "99c4b677-f44c-49be-99fa-dcea0d6f7f13",
                          "option": {
                            "id": "d5dcafea-3953-4ad5-b471-b45dcee2103b",
                            "type": "select",
                            "name": "Keyboard Language",
                            "variable": true
                          },
                          "candidate": {
                            "id": "6ad47447-c28e-4e98-9f44-d86f37b4222c",
                            "name": "Korean"
                          },
                          "value": null
                        }
                      ]
                    }
                  ],
                  "id": "bf0794e6-1c99-4a7d-be11-5e6a5bf690b0",
                  "name": "MacBook M3 Pro 14inch Entity",
                  "primary": false,
                  "required": true
                },
                {
                  "stocks": [
                    {
                      "id": "149fbf9b-f6fa-403a-8438-3a2d7ce8c0ca",
                      "name": "Warranty Program",
                      "price": {
                        "nominal": 100000,
                        "real": 89000
                      },
                      "quantity": 1,
                      "inventory": {
                        "income": 10000,
                        "outcome": 0
                      },
                      "choices": []
                    }
                  ],
                  "id": "aeb2a291-ec9e-4527-b3cd-d6d686676a58",
                  "name": "Warranty Program",
                  "primary": false,
                  "required": false
                },
                {
                  "stocks": [
                    {
                      "id": "f2548de0-2168-46b1-985d-a2b56c9e878e",
                      "name": "Magnetic Keyboard",
                      "price": {
                        "nominal": 200000,
                        "real": 169000
                      },
                      "quantity": 1,
                      "inventory": {
                        "income": 8000,
                        "outcome": 0
                      },
                      "choices": []
                    }
                  ],
                  "id": "54eb903a-eb2e-4d60-9ddc-786a47999dda",
                  "name": "Magnetic Keyboard",
                  "primary": false,
                  "required": false
                }
              ],
              "created_at": "2024-12-13T06:42:11.585Z",
              "updated_at": "2024-12-13T06:42:11.585Z",
              "paused_at": null,
              "suspended_at": null,
              "opened_at": "2024-12-13T06:42:11.580Z",
              "closed_at": null
            },
            "orderable": true,
            "pseudo": false,
            "volume": 1,
            "price": {
              "nominal": 2300000,
              "real": 2058000
            },
            "created_at": "2024-12-13T06:42:13.069Z"
          },
          "volume": 1,
          "price": {
            "cash": 2058000,
            "deposit": 0,
            "mileage": 0,
            "ticket": 0,
            "nominal": 2300000,
            "real": 2058000
          },
          "state": null,
          "confirmed_at": null
        },
        {
          "id": "d852835d-fb2d-4ec3-8cdc-e81ddc72ec3f",
          "commodity": {
            "id": "eb8b8bd3-0ccb-409f-b85a-d6314b76e3fd",
            "sale": {
              "section": {
                "id": "a01c572c-3199-4929-ac67-ba7c31b2c808",
                "code": "general",
                "name": "General",
                "created_at": "2024-12-13T06:42:11.124Z"
              },
              "seller": {
                "type": "seller",
                "member": {
                  "id": "a853492c-70b4-487f-9648-0f6109a0ad69",
                  "nickname": "Robot",
                  "emails": [
                    {
                      "id": "81ea73c4-b41e-4022-9384-d51d3215797e",
                      "value": "robot@nestia.io",
                      "created_at": "2024-12-13T06:42:11.227Z"
                    }
                  ],
                  "created_at": "2024-12-13T06:42:11.227Z"
                },
                "customer": {
                  "id": "aeb8583b-8bd9-4d29-adea-78779b405046",
                  "channel": {
                    "id": "2323f4bd-21ad-45b7-ae3b-cadd84dcc935",
                    "created_at": "2024-12-13T06:42:10.908Z",
                    "code": "samchon",
                    "name": "Samchon Shopping Mall"
                  },
                  "external_user": null,
                  "href": "http://127.0.0.1/TestAutomation",
                  "referrer": "http://127.0.0.1/NodeJS",
                  "ip": "127.0.0.1",
                  "created_at": "2024-12-13T06:42:11.258Z"
                },
                "citizen": {
                  "id": "43aedfea-6b2c-4c18-9f69-60373c9580dd",
                  "created_at": "2024-12-13T06:42:11.157Z",
                  "mobile": "01012345678",
                  "name": "Robot"
                },
                "id": "addccb32-ac48-460e-9624-d9809da19d99",
                "created_at": "2024-12-13T06:42:11.241Z"
              },
              "id": "601228f3-1314-4fbe-b460-918250e9ffa1",
              "snapshot_id": "fe375776-9933-4d97-a0c8-8d46aca01bd1",
              "latest": true,
              "content": {
                "id": "c4566bf9-2544-492d-88d7-0e769e9614f2",
                "title": "Leica M6 (2022 Reissue): The Return of a Legend",
                "thumbnails": [
                  {
                    "id": "62203ee2-c174-430c-aa79-a936d752a3ca",
                    "created_at": "2024-12-13T06:42:12.008Z",
                    "name": "leica-m6-thumbnail-2",
                    "extension": "webp",
                    "url": "https://leica-camera.com/sites/default/files/styles/r_media_fullscreen/public/2022-09/leica_m6_packaging_ambient_3840x2160.jpg.webp?itok=lig4kkiB"
                  },
                  {
                    "id": "ae058b66-9388-442d-bdc8-934aae2f0686",
                    "created_at": "2024-12-13T06:42:12.008Z",
                    "name": "leica-m6-thumbnail-1",
                    "extension": "png",
                    "url": "https://leica-camera.com/sites/default/files/styles/r_media_medium_desktop_4_3/public/pm-84724-10557_leica_m6_black_front_1.png?itok=SpVHc0cq"
                  }
                ]
              },
              "channels": [
                {
                  "categories": [
                    {
                      "parent": {
                        "parent": null,
                        "id": "9b9b36f4-4e50-48ff-ac05-ee8588be0dbe",
                        "code": "electronics",
                        "parent_id": null,
                        "name": "Electronics",
                        "created_at": "2024-12-13T06:42:10.919Z"
                      },
                      "id": "c2c9da5a-7d89-40f6-9021-0255073b87eb",
                      "code": "cameras",
                      "parent_id": "9b9b36f4-4e50-48ff-ac05-ee8588be0dbe",
                      "name": "Cameras",
                      "created_at": "2024-12-13T06:42:11.008Z"
                    }
                  ],
                  "id": "2323f4bd-21ad-45b7-ae3b-cadd84dcc935",
                  "created_at": "2024-12-13T06:42:10.908Z",
                  "code": "samchon",
                  "name": "Samchon Shopping Mall"
                }
              ],
              "tags": [
                "Leica M6",
                "Film Camera",
                "Photography",
                "Analog",
                "Camera Reissue",
                "Classic Design",
                "Collector's Item",
                "Camera Lens"
              ],
              "units": [
                {
                  "stocks": [
                    {
                      "id": "f1f8f95b-4b18-44c0-90b2-786900e3c29f",
                      "name": "Leica M6 Body (Black Paint Finish)",
                      "price": {
                        "nominal": 7200000,
                        "real": 6899000
                      },
                      "quantity": 1,
                      "inventory": {
                        "income": 500,
                        "outcome": 0
                      },
                      "choices": [
                        {
                          "id": "cefa06cb-6f19-46b5-a11e-9bb849f89a00",
                          "option": {
                            "id": "5b9e6404-6a29-4ed2-afe1-76951c0f6383",
                            "type": "select",
                            "name": "Finish",
                            "variable": true
                          },
                          "candidate": {
                            "id": "b95602d5-804c-450f-ae98-ab1f5446f056",
                            "name": "Black Paint Finish"
                          },
                          "value": null
                        }
                      ]
                    }
                  ],
                  "id": "2e54e102-92d8-4f15-8f35-5ab43b0217e1",
                  "name": "Leica M6 Body (2022 Reissue)",
                  "primary": true,
                  "required": true
                },
                {
                  "stocks": [
                    {
                      "id": "fde6c137-5aa1-4817-8e33-b68ae5404ec4",
                      "name": "50mm Summilux Lens",
                      "price": {
                        "nominal": 5200000,
                        "real": 4999000
                      },
                      "quantity": 1,
                      "inventory": {
                        "income": 1000,
                        "outcome": 0
                      },
                      "choices": []
                    }
                  ],
                  "id": "b46d4dd3-162c-4eb2-9968-dffa70910631",
                  "name": "50mm Summilux Lens",
                  "primary": false,
                  "required": false
                }
              ],
              "created_at": "2024-12-13T06:42:12.008Z",
              "updated_at": "2024-12-13T06:42:12.008Z",
              "paused_at": null,
              "suspended_at": null,
              "opened_at": "2024-12-13T06:42:12.005Z",
              "closed_at": null
            },
            "orderable": true,
            "pseudo": false,
            "volume": 1,
            "price": {
              "nominal": 12400000,
              "real": 11898000
            },
            "created_at": "2024-12-13T06:42:13.028Z"
          },
          "volume": 1,
          "price": {
            "cash": 11898000,
            "deposit": 0,
            "mileage": 0,
            "ticket": 0,
            "nominal": 12400000,
            "real": 11898000
          },
          "state": null,
          "confirmed_at": null
        }
      ],
      "price": {
        "ticket_payments": [],
        "cash": 17275000,
        "deposit": 0,
        "mileage": 0,
        "ticket": 0,
        "nominal": 18400000,
        "real": 17275000
      },
      "publish": null,
      "created_at": "2024-12-13T06:42:13.227Z"
    }
  },
  {
    "name": "shoppings_admins_coupons_post",
    "method": "post",
    "path": "/shoppings/admins/coupons",
    "description": "Create a new coupon.\n\nCreate a new {@link IShoppingCoupon coupon} with given information.\n\nBy the way, if you are a {@link IShoppingSeller seller}, you have to\nadd include direction's {@link IShoppingCouponSellerCriteria} or\n{@link IShoppingCouponSaleCriteria} condition. This is because only\n{@link IShoppingAdministrator administrators} can create a coupon\nwhich can be used throughout the market. Seller must limit the usage\nrange by his/her {@link IShoppingSale sale(s)}.\n\nOf course, when administrator is planning to make a general coupon\nthat can be used throughout the market, the administrator must\nget agree from the sellers who are going to be affected.",
    "parameters": {
      "type": "object",
      "properties": {
        "body": {
          "description": "Creation information of the coupon.\n\n------------------------------\n\nDescription of the current {@link IShoppingCoupon.ICreate} type:\n\n> Creation information of the coupon.\n\n------------------------------\n\nDescription of the parent {@link IShoppingCoupon} type:\n\n> Discount coupon.\n> \n> `IShoppingCoupon` is an entity that symbolizes discount coupons at\n> a shopping mall.\n> \n> Note that, `IShoppingCoupon` only contains specification information\n> about discount coupons. Please keep in mind that this is a different\n> concept from {@link IShoppingCouponTicket}, which refers to the issuance\n> of a discount coupon, or {@link IShoppingCouponTicketPayment}, which\n> refers to its payment.\n> \n> Additionally, discount coupons are applied on an order-by-order basis,\n> but each has its own unique restrictions. For example, a coupon with\n> {@link IShoppingCouponSellerCriteria} may or may not be used only for\n> {@link IShoppingSale} of listings registered by the {@link IShoppingSeller}.\n> Also, there are restrictions such as\n> {@link IShoppingCouponDiscount.threshold minimum amount restrictions} for\n> using discount coupons and\n> {@link IShoppingCouponDiscount.limit maximum discount amount limits}.\n> \n> In addition, you can set whether to issue discount coupons publicly or\n> give them only to people who know the specific issuing code. In addition,\n> there are restrictions such as issued discount coupons having an\n> {@link IShoppingCouponRestriction.expired_at expiration date} or being\n> issued only to customers who came in through a\n> {@link IShoppingCouponFunnelCriteria specific funnel}.\n> \n> For more information, please refer to the properties below and the\n> subsidiary entities described later.",
          "type": "object",
          "properties": {
            "discount": {
              "title": "Discount information",
              "description": "Discount information.",
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "unit": {
                      "title": "Discount unit as amount",
                      "description": "Discount unit as amount.\n\nIt means the order price would be discounted by the amount value.",
                      "const": "amount"
                    },
                    "value": {
                      "title": "Discount value as amount",
                      "description": "Discount value as amount.",
                      "type": "number"
                    },
                    "threshold": {
                      "title": "Minimum purchase amount for discount",
                      "description": "Minimum purchase amount for discount.\n\nWhen setting this value, discount coupons cannot be applied to\norder totals that are less than this value.",
                      "oneOf": [
                        {
                          "type": "null"
                        },
                        {
                          "type": "number",
                          "minimum": 0
                        }
                      ]
                    },
                    "limit": {
                      "title": "Maximum amount available for discount",
                      "description": "Maximum amount available for discount.\n\nWhen this value is set, no further discount will be given no\nmatter how much you order. This property would be meaningful\nonly when the {@link multiplicative} is `true`.",
                      "oneOf": [
                        {
                          "type": "null"
                        },
                        {
                          "type": "number",
                          "exclusiveMinimum": true,
                          "minimum": 0
                        }
                      ]
                    },
                    "multiplicative": {
                      "title": "Multiplicative or not",
                      "description": "Multiplicative or not.\n\nIf this property is `true`, the discount value would be multiplied\nto the {@link IShoppingCartCommodity.volume} or\n{@link IShoppingOrderGood.volume} value. Also, in that case,\nthe {@link limit} property would be meaningful.",
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "unit",
                    "value",
                    "threshold",
                    "limit",
                    "multiplicative"
                  ],
                  "description": "Discount information with amount unit.\n\n------------------------------\n\nDescription of the current {@link IShoppingCouponDiscount.IAmount} type:\n\n> Discount information with amount unit."
                },
                {
                  "type": "object",
                  "properties": {
                    "unit": {
                      "title": "Discount unit as percent",
                      "description": "Discount unit as percent.\n\nIt means the order price would be discounted by the percent value.",
                      "const": "percent"
                    },
                    "value": {
                      "title": "Discount value as percent",
                      "description": "Discount value as percent.",
                      "type": "number",
                      "minimum": 0,
                      "maximum": 100
                    },
                    "threshold": {
                      "title": "Minimum purchase amount for discount",
                      "description": "Minimum purchase amount for discount.\n\nWhen setting this value, discount coupons cannot be applied to\norder totals that are less than this value.",
                      "oneOf": [
                        {
                          "type": "null"
                        },
                        {
                          "type": "number",
                          "minimum": 0
                        }
                      ]
                    },
                    "limit": {
                      "title": "Maximum amount available for discount",
                      "description": "Maximum amount available for discount.\n\nWhen this value is set, no further discount will be given no\nmatter how much you order.",
                      "oneOf": [
                        {
                          "type": "null"
                        },
                        {
                          "type": "number",
                          "exclusiveMinimum": true,
                          "minimum": 0
                        }
                      ]
                    }
                  },
                  "required": [
                    "unit",
                    "value",
                    "threshold",
                    "limit"
                  ],
                  "description": "Discount information with percent unit.\n\n------------------------------\n\nDescription of the current {@link IShoppingCouponDiscount.IPercent} type:\n\n> Discount information with percent unit."
                }
              ]
            },
            "restriction": {
              "title": "Restriction information",
              "description": "Restriction information of the coupon.",
              "type": "object",
              "properties": {
                "access": {
                  "title": "Access level of coupon",
                  "description": "Access level of coupon.\n\n- public: possible to find from public API\n- private: unable to find from public API\n  - arbitrarily assigned by the seller or administrator\n  - issued from one-time link",
                  "oneOf": [
                    {
                      "const": "public"
                    },
                    {
                      "const": "private"
                    }
                  ]
                },
                "exclusive": {
                  "title": "Exclusivity or not",
                  "description": "Exclusivity or not.\n\nAn exclusive discount coupon refers to a discount coupon that has an\nexclusive relationship with other discount coupons and can only be\nused alone. That is, when an exclusive discount coupon is used, no\nother discount coupon can be used for the same\n{@link IShoppingOrder order} or {@link IShoppingOrderGood good}.\n\nPlease note that this exclusive attribute is a very different concept\nfrom multiplicative, which means whether the same coupon can be\nmultiplied and applied to multiple coupons of the same order, so\nplease do not confuse them.",
                  "type": "boolean"
                },
                "volume": {
                  "title": "Limited quantity issued",
                  "description": "Limited quantity issued.\n\nIf there is a limit to the quantity issued, it becomes impossible to issue tickets exceeding this value.\n\nIn other words, the concept of N coupons being issued on a first-come, first-served basis is created.",
                  "oneOf": [
                    {
                      "type": "null"
                    },
                    {
                      "type": "integer"
                    }
                  ]
                },
                "volume_per_citizen": {
                  "title": "Limited quantity issued per person",
                  "description": "Limited quantity issued per person.\n\nAs a limit to the total amount of issuance per person, it is common to assign 1 to limit duplicate issuance to the same citizen, or to use the NULL value to set no limit.\n\nOf course, by assigning a value of N, the total amount issued to the same citizen can be limited.",
                  "oneOf": [
                    {
                      "type": "null"
                    },
                    {
                      "type": "integer"
                    }
                  ]
                },
                "expired_in": {
                  "title": "Expiration day(s) value",
                  "description": "Expiration day(s) value.\n\nThe concept of expiring N days after a discount coupon ticket is issued.\n\nTherefore, customers must use the ticket within N days, if possible, from the time it is issued.",
                  "oneOf": [
                    {
                      "type": "null"
                    },
                    {
                      "type": "integer"
                    }
                  ]
                },
                "expired_at": {
                  "title": "Expiration date",
                  "description": "Expiration date.\n\nA concept that expires after YYYY-MM-DD after a discount coupon ticket is issued.\n\nDouble restrictions are possible with expired_in, of which the one with the shorter expiration date is used.",
                  "oneOf": [
                    {
                      "type": "null"
                    },
                    {
                      "type": "string",
                      "format": "date-time"
                    }
                  ]
                }
              },
              "required": [
                "access",
                "exclusive",
                "volume",
                "volume_per_citizen",
                "expired_in",
                "expired_at"
              ]
            },
            "criterias": {
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "channels": {
                        "title": "List of target channels and categories",
                        "description": "List of target channels and categories.",
                        "type": "array",
                        "items": {
                          "description": "Target channel and categories.\n\n------------------------------\n\nDescription of the current {@link IShoppingCouponChannelCriteria.IChannelTo.ICreate} type:\n\n> Target channel and categories.\n\n------------------------------\n\nDescription of the parent {@link IShoppingCouponChannelCriteria} type:\n\n> Conditions for channels of discount coupons.\n> \n> `ishoppingcouponchannelcriteria` is a subtype entity of\n> {@link IShoppingCouponCriteriaBase} and is used when setting conditions on\n> a specific {@link IShoppingChannel channel} or\n> {@link IShoppingChannelCategory category} of that channel.\n> \n> If the {@link direction} value is \"include\", the coupon can only be used\n> for the target channels (or categories). Conversely, if it is \"exclude\",\n> it is a coupon that cannot be used.",
                          "type": "object",
                          "properties": {
                            "channel_code": {
                              "title": "Target channel's {@link IShoppingChannel.code}",
                              "description": "Target channel's {@link IShoppingChannel.code}.",
                              "type": "string"
                            },
                            "category_ids": {
                              "title": "Target categories' {@link IShoppingChannelCategory.id}s",
                              "description": "Target categories' {@link IShoppingChannelCategory.id}s.",
                              "oneOf": [
                                {
                                  "type": "null"
                                },
                                {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "format": "uuid"
                                  }
                                }
                              ]
                            }
                          },
                          "required": [
                            "channel_code",
                            "category_ids"
                          ]
                        },
                        "minItems": 1
                      },
                      "type": {
                        "const": "channel"
                      },
                      "direction": {
                        "oneOf": [
                          {
                            "const": "include"
                          },
                          {
                            "const": "exclude"
                          }
                        ]
                      }
                    },
                    "required": [
                      "channels",
                      "type",
                      "direction"
                    ],
                    "description": "Creation information of the channel criteria.\n\n------------------------------\n\nDescription of the current {@link IShoppingCouponChannelCriteria.ICreate} type:\n\n> Creation information of the channel criteria.\n\n------------------------------\n\nDescription of the parent {@link IShoppingCouponChannelCriteria} type:\n\n> Conditions for channels of discount coupons.\n> \n> `ishoppingcouponchannelcriteria` is a subtype entity of\n> {@link IShoppingCouponCriteriaBase} and is used when setting conditions on\n> a specific {@link IShoppingChannel channel} or\n> {@link IShoppingChannelCategory category} of that channel.\n> \n> If the {@link direction} value is \"include\", the coupon can only be used\n> for the target channels (or categories). Conversely, if it is \"exclude\",\n> it is a coupon that cannot be used."
                  },
                  {
                    "type": "object",
                    "properties": {
                      "section_codes": {
                        "title": "List of target section's {@link IShoppingSection.code}s",
                        "description": "List of target section's {@link IShoppingSection.code}s.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "minItems": 1
                      },
                      "type": {
                        "const": "section"
                      },
                      "direction": {
                        "oneOf": [
                          {
                            "const": "include"
                          },
                          {
                            "const": "exclude"
                          }
                        ]
                      }
                    },
                    "required": [
                      "section_codes",
                      "type",
                      "direction"
                    ],
                    "description": "Creation information of the section criteria.\n\n------------------------------\n\nDescription of the current {@link IShoppingCouponSectionCriteria.ICreate} type:\n\n> Creation information of the section criteria.\n\n------------------------------\n\nDescription of the parent {@link IShoppingCouponSectionCriteria} type:\n\n> Conditions for sections of discount coupons.\n> \n> `IShoppingCouponSectionCriteria` is a subtype entity of\n> {@link IShoppingCouponCriteriaBase} and is used when setting conditions\n> for a specific {@link IShoppingSection section}.\n> \n> If the {@link direction} value is \"include\", the coupon can only be used\n> for the target {@link sections}. Conversely, if it is \"exclude\", the\n> coupon cannot be used."
                  },
                  {
                    "type": "object",
                    "properties": {
                      "seller_ids": {
                        "title": "List of target seller's {@link IShoppingSeller.id}s",
                        "description": "List of target seller's {@link IShoppingSeller.id}s.",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "minItems": 1
                      },
                      "type": {
                        "const": "seller"
                      },
                      "direction": {
                        "oneOf": [
                          {
                            "const": "include"
                          },
                          {
                            "const": "exclude"
                          }
                        ]
                      }
                    },
                    "required": [
                      "seller_ids",
                      "type",
                      "direction"
                    ],
                    "description": "Creation information of the seller criteria.\n\n------------------------------\n\nDescription of the current {@link IShoppingCouponSellerCriteria.ICreate} type:\n\n> Creation information of the seller criteria.\n\n------------------------------\n\nDescription of the parent {@link IShoppingCouponSellerCriteria} type:\n\n> Conditions for sellers of discount coupons.\n> \n> `IShoppingCouponSellerCriteria` is a subtype entity of\n> {@link IShoppingCouponCriteriaBase} and is used when setting conditions\n> for a specific {@link IShoppingSeller seller}.\n> \n> If the {@link direction} value is \"include\", the coupon can only be used\n> for the target {@link sellers}. Conversely, if it is \"exclude\", the\n> coupon cannot be used."
                  },
                  {
                    "type": "object",
                    "properties": {
                      "sale_ids": {
                        "title": "List of target sale's {@link IShoppingSale.id}s",
                        "description": "List of target sale's {@link IShoppingSale.id}s.",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "minItems": 1
                      },
                      "type": {
                        "const": "sale"
                      },
                      "direction": {
                        "oneOf": [
                          {
                            "const": "include"
                          },
                          {
                            "const": "exclude"
                          }
                        ]
                      }
                    },
                    "required": [
                      "sale_ids",
                      "type",
                      "direction"
                    ],
                    "description": "Creation information of the sale criteria.\n\n------------------------------\n\nDescription of the current {@link IShoppingCouponSaleCriteria.ICreate} type:\n\n> Creation information of the sale criteria.\n\n------------------------------\n\nDescription of the parent {@link IShoppingCouponSaleCriteria} type:\n\n> Conditions for sales of discount coupons.\n> \n> `IShoppingCouponSaleCriteria` is a subtype entity of\n> {@link IShoppingCouponCriteriaBase} and is used when setting conditions\n> for a specific {@link IShoppingSale sale}.\n> \n> If the {@link direction} value is \"include\", the coupon can only be used\n> for the target {@link sales}. Conversely, if it is \"exclude\", the\n> coupon cannot be used."
                  },
                  {
                    "type": "object",
                    "properties": {
                      "funnels": {
                        "title": "List of target funnels",
                        "description": "List of target funnels.",
                        "type": "array",
                        "items": {
                          "oneOf": [
                            {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "title": "Kind of funnel restriction",
                                  "description": "Kind of funnel restriction.",
                                  "oneOf": [
                                    {
                                      "const": "url"
                                    },
                                    {
                                      "const": "referrer"
                                    }
                                  ]
                                },
                                "value": {
                                  "title": "Target value",
                                  "description": "Target value.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "kind",
                                "value"
                              ],
                              "description": "Kind of funnel restriction by a value.\n\n------------------------------\n\nDescription of the current {@link IShoppingCouponFunnelCriteria.IValueFunnel} type:\n\n> Kind of funnel restriction by a value.\n\n------------------------------\n\nDescription of the parent {@link IShoppingCouponFunnelCriteria} type:\n\n> Limit the funnel of discount coupons.\n> \n> `ishoppingcouponfunnelcriteria` is a subtype entity of\n> {@link IShoppingCouponCriteria}, and is used when you want to issue or\n> exclude discount coupons only to {@link IShoppingCustomer customers} who\n> came from a specific path.\n> \n> And funnel restrictions are possible in 3 ways: The first is\n> {@link IShoppingCustomer.referrer}, and by parsing\n> {@link IShoppingCustomer.href}, which records the customer's access\n> address, restrictions can be made in units of specific URLs or variables."
                            },
                            {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "title": "Kind of funnel restriction",
                                  "description": "Kind of funnel restriction.",
                                  "const": "variable"
                                },
                                "key": {
                                  "title": "Target variable's key",
                                  "description": "Target variable's key.",
                                  "type": "string"
                                },
                                "value": {
                                  "title": "Target variable's value",
                                  "description": "Target variable's value.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "kind",
                                "key",
                                "value"
                              ],
                              "description": "Kind of funnel restriction by a variable.\n\n------------------------------\n\nDescription of the current {@link IShoppingCouponFunnelCriteria.IVariableFunnel} type:\n\n> Kind of funnel restriction by a variable.\n\n------------------------------\n\nDescription of the parent {@link IShoppingCouponFunnelCriteria} type:\n\n> Limit the funnel of discount coupons.\n> \n> `ishoppingcouponfunnelcriteria` is a subtype entity of\n> {@link IShoppingCouponCriteria}, and is used when you want to issue or\n> exclude discount coupons only to {@link IShoppingCustomer customers} who\n> came from a specific path.\n> \n> And funnel restrictions are possible in 3 ways: The first is\n> {@link IShoppingCustomer.referrer}, and by parsing\n> {@link IShoppingCustomer.href}, which records the customer's access\n> address, restrictions can be made in units of specific URLs or variables."
                            }
                          ]
                        },
                        "minItems": 1
                      },
                      "type": {
                        "const": "funnel"
                      },
                      "direction": {
                        "oneOf": [
                          {
                            "const": "include"
                          },
                          {
                            "const": "exclude"
                          }
                        ]
                      }
                    },
                    "required": [
                      "funnels",
                      "type",
                      "direction"
                    ],
                    "description": "Creation information of the funnel criteria.\n\n------------------------------\n\nDescription of the current {@link IShoppingCouponFunnelCriteria.ICreate} type:\n\n> Creation information of the funnel criteria.\n\n------------------------------\n\nDescription of the parent {@link IShoppingCouponFunnelCriteria} type:\n\n> Limit the funnel of discount coupons.\n> \n> `ishoppingcouponfunnelcriteria` is a subtype entity of\n> {@link IShoppingCouponCriteria}, and is used when you want to issue or\n> exclude discount coupons only to {@link IShoppingCustomer customers} who\n> came from a specific path.\n> \n> And funnel restrictions are possible in 3 ways: The first is\n> {@link IShoppingCustomer.referrer}, and by parsing\n> {@link IShoppingCustomer.href}, which records the customer's access\n> address, restrictions can be made in units of specific URLs or variables."
                  }
                ]
              }
            },
            "disposable_codes": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": {
              "title": "Representative name of the coupon",
              "description": "Representative name of the coupon.",
              "type": "string"
            },
            "opened_at": {
              "title": "Opening time of the coupon",
              "description": "Opening time of the coupon.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "date-time"
                }
              ]
            },
            "closed_at": {
              "title": "Closing time of the coupon",
              "description": "Closing time of the coupon.\n\nTickets cannot be issued after this time.\n\nHowever, previously issued tickets can still be used until their\nexpiration date.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "date-time"
                }
              ]
            }
          },
          "required": [
            "discount",
            "restriction",
            "criterias",
            "disposable_codes",
            "name",
            "opened_at",
            "closed_at"
          ]
        }
      },
      "additionalProperties": false,
      "required": [
        "body"
      ],
      "$defs": {
        "IShoppingChannelCategory.IInvert": {
          "description": "Invert category information with parent category.",
          "type": "object",
          "properties": {
            "parent": {
              "title": "Parent category info with recursive structure",
              "description": "Parent category info with recursive structure.\n\nIf no parent exists, then be `null`.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "$ref": "#/$defs/IShoppingChannelCategory.IInvert"
                }
              ]
            },
            "id": {
              "title": "Primary Key",
              "description": "Primary Key.",
              "type": "string",
              "format": "uuid"
            },
            "code": {
              "title": "Identifier code of the category",
              "description": "Identifier code of the category.\n\nThe code must be unique in the channel.",
              "type": "string"
            },
            "parent_id": {
              "title": "Parent category's ID",
              "description": "Parent category's ID.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "name": {
              "title": "Representative name of the category",
              "description": "Representative name of the category.\n\nThe name must be unique within the parent category. If no parent exists,\nthen the name must be unique within the channel between no parent\ncategories.",
              "type": "string"
            },
            "created_at": {
              "title": "Creation time of record",
              "description": "Creation time of record.",
              "type": "string",
              "format": "date-time"
            }
          },
          "required": [
            "parent",
            "id",
            "code",
            "parent_id",
            "name",
            "created_at"
          ]
        }
      }
    },
    "output": {
      "description": "Discount coupon.\n\n`IShoppingCoupon` is an entity that symbolizes discount coupons at\na shopping mall.\n\nNote that, `IShoppingCoupon` only contains specification information\nabout discount coupons. Please keep in mind that this is a different\nconcept from {@link IShoppingCouponTicket}, which refers to the issuance\nof a discount coupon, or {@link IShoppingCouponTicketPayment}, which\nrefers to its payment.\n\nAdditionally, discount coupons are applied on an order-by-order basis,\nbut each has its own unique restrictions. For example, a coupon with\n{@link IShoppingCouponSellerCriteria} may or may not be used only for\n{@link IShoppingSale} of listings registered by the {@link IShoppingSeller}.\nAlso, there are restrictions such as\n{@link IShoppingCouponDiscount.threshold minimum amount restrictions} for\nusing discount coupons and\n{@link IShoppingCouponDiscount.limit maximum discount amount limits}.\n\nIn addition, you can set whether to issue discount coupons publicly or\ngive them only to people who know the specific issuing code. In addition,\nthere are restrictions such as issued discount coupons having an\n{@link IShoppingCouponRestriction.expired_at expiration date} or being\nissued only to customers who came in through a\n{@link IShoppingCouponFunnelCriteria specific funnel}.\n\nFor more information, please refer to the properties below and the\nsubsidiary entities described later.",
      "type": "object",
      "properties": {
        "id": {
          "title": "Primary Key",
          "description": "Primary Key.",
          "type": "string",
          "format": "uuid"
        },
        "designer": {
          "title": "Designer who've made the coupon",
          "description": "Designer who've made the coupon.",
          "oneOf": [
            {
              "type": "object",
              "properties": {
                "id": {
                  "title": "Primary Key",
                  "description": "Primary Key.",
                  "type": "string",
                  "format": "uuid"
                },
                "created_at": {
                  "title": "Creation time of record",
                  "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up.",
                  "type": "string",
                  "format": "date-time"
                }
              },
              "required": [
                "id",
                "created_at"
              ],
              "description": "Administrator account.\n\n`IShoppingAdministrator` is an entity that embodies a person who manages\nthe shopping mall system, with {@link IShoppingMember membership} joining.\n\nFor reference, unlike {@link IShoppingCustomer customers} which can participate\neven without membership joining, administrator must join membership to operate\nmanagements. Also, administrator must perform the\n{@link IShoppingCitizen real-name and mobile authentication}, too."
            },
            {
              "type": "object",
              "properties": {
                "id": {
                  "title": "Primary Key",
                  "description": "Primary Key.",
                  "type": "string",
                  "format": "uuid"
                },
                "created_at": {
                  "title": "Creation tmie of record",
                  "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up.",
                  "type": "string",
                  "format": "date-time"
                }
              },
              "required": [
                "id",
                "created_at"
              ],
              "description": "Seller information.\n\n`IShoppingSeller` is an entity that embodies a person who registers\n{@link IShoppingSale sales} to operate selling activities, with\n{@link IShoppingMember membership} joining.\n\nFor reference, unlike {@link IShoppingCustomer customers} which can\nparticipate even without membership joining, seller must join membership\nto operate sales. Also, seller must do the\n{@link IShoppingCitizen real-name and mobile authentication}, too."
            }
          ]
        },
        "inventory": {
          "title": "Inventory information",
          "description": "Inventory information of the coupon.\n\nIf a {@link IShoppingCoupon coupon} has been designed with limited\ninventory, this `IShoppingCouponInventory` structure represents the\nremaining inventory information.",
          "type": "object",
          "properties": {
            "volume": {
              "title": "Remaining volume for everyone",
              "description": "Remaining volume for everyone.\n\nIf there is a limit to the quantity issued, it becomes impossible to\nissue tickets exceeding this value.\n\nIn other words, the concept of N coupons being issued on a first-come,\nfirst-served basis is created.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "volume_per_citizen": {
              "title": "Remaining volume per citizen",
              "description": "Remaining volume per citizen.\n\nAs a limit to the total amount of issuance per person, it is common to\nassign 1 to limit duplicate issuance to the same citizen, or to use the\n`nul`` value to set no limit.\n\nOf course, by assigning a value of N, the total amount issued to the\nsame citizen can be limited.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "required": [
            "volume",
            "volume_per_citizen"
          ]
        },
        "criterias": {
          "title": "List of criteria information",
          "description": "List of criteria information.",
          "type": "array",
          "items": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "channels": {
                    "title": "List of target channels and categories",
                    "description": "List of target channels and categories.",
                    "type": "array",
                    "items": {
                      "description": "Description of the current {@link IShoppingCouponChannelCriteria} type:\n\n> Conditions for channels of discount coupons.\n> \n> `ishoppingcouponchannelcriteria` is a subtype entity of\n> {@link IShoppingCouponCriteriaBase} and is used when setting conditions on\n> a specific {@link IShoppingChannel channel} or\n> {@link IShoppingChannelCategory category} of that channel.\n> \n> If the {@link direction} value is \"include\", the coupon can only be used\n> for the target channels (or categories). Conversely, if it is \"exclude\",\n> it is a coupon that cannot be used.",
                      "type": "object",
                      "properties": {
                        "channel": {
                          "title": "Target channel",
                          "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future.",
                          "type": "object",
                          "properties": {
                            "id": {
                              "title": "Primary Key",
                              "description": "Primary Key.",
                              "type": "string",
                              "format": "uuid"
                            },
                            "created_at": {
                              "title": "Creation time of record",
                              "description": "Creation time of record.",
                              "type": "string",
                              "format": "date-time"
                            },
                            "code": {
                              "title": "Identifier code",
                              "description": "Identifier code.",
                              "type": "string"
                            },
                            "name": {
                              "title": "Name of the channel",
                              "description": "Name of the channel.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "created_at",
                            "code",
                            "name"
                          ]
                        },
                        "categories": {
                          "title": "List of target categories",
                          "description": "List of target categories.",
                          "oneOf": [
                            {
                              "type": "null"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/$defs/IShoppingChannelCategory.IInvert"
                              },
                              "minItems": 1
                            }
                          ]
                        }
                      },
                      "required": [
                        "channel",
                        "categories"
                      ]
                    },
                    "minItems": 1
                  },
                  "type": {
                    "title": "Descrimanator type",
                    "description": "Descrimanator type.",
                    "const": "channel"
                  },
                  "direction": {
                    "title": "Direction of the criteria",
                    "description": "Direction of the criteria.",
                    "oneOf": [
                      {
                        "const": "include"
                      },
                      {
                        "const": "exclude"
                      }
                    ]
                  }
                },
                "required": [
                  "channels",
                  "type",
                  "direction"
                ],
                "description": "Conditions for channels of discount coupons.\n\n`ishoppingcouponchannelcriteria` is a subtype entity of\n{@link IShoppingCouponCriteriaBase} and is used when setting conditions on\na specific {@link IShoppingChannel channel} or\n{@link IShoppingChannelCategory category} of that channel.\n\nIf the {@link direction} value is \"include\", the coupon can only be used\nfor the target channels (or categories). Conversely, if it is \"exclude\",\nit is a coupon that cannot be used."
              },
              {
                "type": "object",
                "properties": {
                  "sections": {
                    "title": "Target sections to include or exclude",
                    "description": "Target sections to include or exclude.",
                    "type": "array",
                    "items": {
                      "description": "Section information.\n\n`IShoppingSection` is a concept that refers to the spatial information of\nthe market.\n\nIf we compare the section mentioned here to the offline market, it means a\nspatially separated area within the store, such as the \"fruit corner\" or\n\"butcher corner\". Therefore, in the {@link IShoppingSale sale} entity, it is\nnot possible to classify multiple sections simultaneously, but only one section\ncan be classified.\n\nBy the way, if your shopping mall system requires only one section, then just\nuse only one. This concept is designed to be expandable in the future.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "title": "Primary Key",
                          "description": "Primary Key.",
                          "type": "string",
                          "format": "uuid"
                        },
                        "code": {
                          "title": "Identifier code",
                          "description": "Identifier code.",
                          "type": "string"
                        },
                        "name": {
                          "title": "Representative name of the section",
                          "description": "Representative name of the section.",
                          "type": "string"
                        },
                        "created_at": {
                          "title": "Creation time of record",
                          "description": "Creation time of record.",
                          "type": "string",
                          "format": "date-time"
                        }
                      },
                      "required": [
                        "id",
                        "code",
                        "name",
                        "created_at"
                      ]
                    },
                    "minItems": 1
                  },
                  "type": {
                    "title": "Descrimanator type",
                    "description": "Descrimanator type.",
                    "const": "section"
                  },
                  "direction": {
                    "title": "Direction of the criteria",
                    "description": "Direction of the criteria.",
                    "oneOf": [
                      {
                        "const": "include"
                      },
                      {
                        "const": "exclude"
                      }
                    ]
                  }
                },
                "required": [
                  "sections",
                  "type",
                  "direction"
                ],
                "description": "Conditions for sections of discount coupons.\n\n`IShoppingCouponSectionCriteria` is a subtype entity of\n{@link IShoppingCouponCriteriaBase} and is used when setting conditions\nfor a specific {@link IShoppingSection section}.\n\nIf the {@link direction} value is \"include\", the coupon can only be used\nfor the target {@link sections}. Conversely, if it is \"exclude\", the\ncoupon cannot be used."
              },
              {
                "type": "object",
                "properties": {
                  "sellers": {
                    "title": "Target sellers to include or exclude",
                    "description": "Target sellers to include or exclude.",
                    "type": "array",
                    "items": {
                      "description": "Seller information.\n\n`IShoppingSeller` is an entity that embodies a person who registers\n{@link IShoppingSale sales} to operate selling activities, with\n{@link IShoppingMember membership} joining.\n\nFor reference, unlike {@link IShoppingCustomer customers} which can\nparticipate even without membership joining, seller must join membership\nto operate sales. Also, seller must do the\n{@link IShoppingCitizen real-name and mobile authentication}, too.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "title": "Primary Key",
                          "description": "Primary Key.",
                          "type": "string",
                          "format": "uuid"
                        },
                        "created_at": {
                          "title": "Creation tmie of record",
                          "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up.",
                          "type": "string",
                          "format": "date-time"
                        }
                      },
                      "required": [
                        "id",
                        "created_at"
                      ]
                    },
                    "minItems": 1
                  },
                  "type": {
                    "title": "Descrimanator type",
                    "description": "Descrimanator type.",
                    "const": "seller"
                  },
                  "direction": {
                    "title": "Direction of the criteria",
                    "description": "Direction of the criteria.",
                    "oneOf": [
                      {
                        "const": "include"
                      },
                      {
                        "const": "exclude"
                      }
                    ]
                  }
                },
                "required": [
                  "sellers",
                  "type",
                  "direction"
                ],
                "description": "Conditions for sellers of discount coupons.\n\n`IShoppingCouponSellerCriteria` is a subtype entity of\n{@link IShoppingCouponCriteriaBase} and is used when setting conditions\nfor a specific {@link IShoppingSeller seller}.\n\nIf the {@link direction} value is \"include\", the coupon can only be used\nfor the target {@link sellers}. Conversely, if it is \"exclude\", the\ncoupon cannot be used."
              },
              {
                "type": "object",
                "properties": {
                  "sales": {
                    "title": "Target sales to include or exclude",
                    "description": "Target sales to include or exclude.",
                    "type": "array",
                    "items": {
                      "description": "Summarized information of sale.\n\nThis summarized information being used for pagination.\n\n------------------------------\n\nDescription of the current {@link IShoppingSale.ISummary} type:\n\n> Summarized information of sale.\n> \n> This summarized information being used for pagination.\n\n------------------------------\n\nDescription of the parent {@link IShoppingSale} type:\n\n> Seller sales products.\n> \n> `IShoppingSale` is an entity that embodies \"product sales\" (sales)\n> information registered by the {@link ISoppingSeller seller}. And the main\n> information of the sale is recorded in the sub {@link IShoppingSaleSnapshot},\n> not in the main `IShoppingSale`. When a seller changes a previously registered\n> item, the existing `IShoppingSale` record is not changed, but a new\n> {@link IShoppingSaleSnapshot snapshot} record be created.\n> \n> This is to preserve the {@link IShoppingCustomer customer}'s\n> {@link IShoppingOrder purchase history} flawlessly after the customer\n> purchases a specific item, even if the seller changes the components or\n> price of the item. It is also intended to support sellers in so-called A/B\n> testing, which involves changing components or prices and measuring the\n> performance in each case.",
                      "type": "object",
                      "properties": {
                        "section": {
                          "title": "Belonged section",
                          "description": "Section information.\n\n`IShoppingSection` is a concept that refers to the spatial information of\nthe market.\n\nIf we compare the section mentioned here to the offline market, it means a\nspatially separated area within the store, such as the \"fruit corner\" or\n\"butcher corner\". Therefore, in the {@link IShoppingSale sale} entity, it is\nnot possible to classify multiple sections simultaneously, but only one section\ncan be classified.\n\nBy the way, if your shopping mall system requires only one section, then just\nuse only one. This concept is designed to be expandable in the future.",
                          "type": "object",
                          "properties": {
                            "id": {
                              "title": "Primary Key",
                              "description": "Primary Key.",
                              "type": "string",
                              "format": "uuid"
                            },
                            "code": {
                              "title": "Identifier code",
                              "description": "Identifier code.",
                              "type": "string"
                            },
                            "name": {
                              "title": "Representative name of the section",
                              "description": "Representative name of the section.",
                              "type": "string"
                            },
                            "created_at": {
                              "title": "Creation time of record",
                              "description": "Creation time of record.",
                              "type": "string",
                              "format": "date-time"
                            }
                          },
                          "required": [
                            "id",
                            "code",
                            "name",
                            "created_at"
                          ]
                        },
                        "seller": {
                          "title": "Seller who has registered the sale",
                          "description": "Invert information starting from seller info.\n\nInstead of accessing to the seller information from the\n{@link IShoppingCustomer.member} -> {@link IShoppingMember.seller},\n`IShoppingSeller.IInvert` starts from the seller information\nand access to the customer, member and {@link IShoppingCitizen citizen}\ninformation inversely.\n\n------------------------------\n\nDescription of the current {@link IShoppingSeller.IInvert} type:\n\n> Invert information starting from seller info.\n> \n> Instead of accessing to the seller information from the\n> {@link IShoppingCustomer.member} -> {@link IShoppingMember.seller},\n> `IShoppingSeller.IInvert` starts from the seller information\n> and access to the customer, member and {@link IShoppingCitizen citizen}\n> information inversely.\n\n------------------------------\n\nDescription of the parent {@link IShoppingSeller} type:\n\n> Seller information.\n> \n> `IShoppingSeller` is an entity that embodies a person who registers\n> {@link IShoppingSale sales} to operate selling activities, with\n> {@link IShoppingMember membership} joining.\n> \n> For reference, unlike {@link IShoppingCustomer customers} which can\n> participate even without membership joining, seller must join membership\n> to operate sales. Also, seller must do the\n> {@link IShoppingCitizen real-name and mobile authentication}, too.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "title": "Discriminant for the type of customer",
                              "description": "Discriminant for the type of customer.",
                              "const": "seller"
                            },
                            "member": {
                              "title": "Membership joining information",
                              "description": "Invert information of member.\n\nThis invert member information has been designed to be used for another\ninvert information of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert}\n- {@link IShoppingAdministrator.IInvert}\n\n------------------------------\n\nDescription of the current {@link IShoppingMember.IInvert} type:\n\n> Invert information of member.\n> \n> This invert member information has been designed to be used for another\n> invert information of sellers and administrators like below.\n> \n> - {@link IShoppingSeller.IInvert}\n> - {@link IShoppingAdministrator.IInvert}\n\n------------------------------\n\nDescription of the parent {@link IShoppingMember} type:\n\n> Member Account.\n> \n> `IShoppingMember` is an entity that symbolizes the case when a\n> {@link IShoppingCustomer} signs up as a member of this shopping mall\n> system.\n> \n> If a `IShoppingMember` has seller or administrator property. it means that\n> the {@link IShoppingCustomer} has acting as a {@link IShoppingSeller seller}\n> or {@link IShoppingAdministrator administrator} at the same time.",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "title": "Primary Key",
                                  "description": "Primary Key.",
                                  "type": "string",
                                  "format": "uuid"
                                },
                                "nickname": {
                                  "title": "Nickname that uniquely identifies the member",
                                  "description": "Nickname that uniquely identifies the member.",
                                  "type": "string"
                                },
                                "emails": {
                                  "title": "List of emails",
                                  "description": "List of emails.",
                                  "type": "array",
                                  "items": {
                                    "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one.",
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "title": "Primary Key",
                                        "description": "Primary Key.",
                                        "type": "string",
                                        "format": "uuid"
                                      },
                                      "value": {
                                        "title": "Email address value",
                                        "description": "Email address value.",
                                        "type": "string",
                                        "format": "email"
                                      },
                                      "created_at": {
                                        "title": "Creation time of record",
                                        "description": "Creation time of record.",
                                        "type": "string",
                                        "format": "date-time"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "value",
                                      "created_at"
                                    ]
                                  }
                                },
                                "created_at": {
                                  "title": "Creation time of record",
                                  "description": "Creation time of record.\n\nAnother words, the time when the member has signed up.",
                                  "type": "string",
                                  "format": "date-time"
                                }
                              },
                              "required": [
                                "id",
                                "nickname",
                                "emails",
                                "created_at"
                              ]
                            },
                            "customer": {
                              "title": "Customer, the connection information",
                              "description": "Inverted customer informatino.\n\nThis inverted customer information has been designed to be used for\nanother invert information of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert}\n- {@link IShoppingAdministrator.IInvert}\n\n------------------------------\n\nDescription of the current {@link IShoppingCustomer.IInvert} type:\n\n> Inverted customer informatino.\n> \n> This inverted customer information has been designed to be used for\n> another invert information of sellers and administrators like below.\n> \n> - {@link IShoppingSeller.IInvert}\n> - {@link IShoppingAdministrator.IInvert}\n\n------------------------------\n\nDescription of the parent {@link IShoppingCustomer} type:\n\n> Customer information, but not a person but a connection basis.\n> \n> `IShoppingCustomer` is an entity that literally embodies the information of\n> those who participated in the market as customers. By the way, the\n> `IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\n> even if the same person connects to the shopping mall multiple, multiple\n> records are created in `IShoppingCustomer`.\n> \n> The first purpose of this is to track the customer's inflow path in detail,\n> and it is for cases where the same person enters as a non-member,\n> {@link IShoppingCartCommodity puts items in the shopping cart} in advance,\n> and only authenticates their {@link IShoppingCitizen real name} or\n> registers/logs in at the moment of {@link IShoppingOrderPublish payment}.\n> It is the second. Lastly, it is to accurately track the activities that\n> a person performs at the shopping mall in various ways like below.\n> \n> - Same person comes from an {@link IShoppingExternalUser external service}\n> - Same person creates multiple accounts\n> - Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n> - Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n> \n> Therefore, `IShoppingCustomer` can have multiple records with the same\n> {@link IShoppingCitizen}, {@link IShoppingMember}, and\n> {@link IShoppingExternalUser}. Additionally, if a customer signs up for\n> membership after verifying their real name or signs up for our service after\n> being a user of an external service, all related records are changed at once.\n> Therefore, identification and tracking of customers can be done very\n> systematically.",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "title": "Primary Key",
                                  "description": "Primary Key.",
                                  "type": "string",
                                  "format": "uuid"
                                },
                                "channel": {
                                  "title": "Belonged channel",
                                  "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future.",
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "title": "Primary Key",
                                      "description": "Primary Key.",
                                      "type": "string",
                                      "format": "uuid"
                                    },
                                    "created_at": {
                                      "title": "Creation time of record",
                                      "description": "Creation time of record.",
                                      "type": "string",
                                      "format": "date-time"
                                    },
                                    "code": {
                                      "title": "Identifier code",
                                      "description": "Identifier code.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "title": "Name of the channel",
                                      "description": "Name of the channel.",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "created_at",
                                    "code",
                                    "name"
                                  ]
                                },
                                "external_user": {
                                  "title": "External user information",
                                  "description": "External user information.\n\nWhen the customer has come frome an external service.",
                                  "oneOf": [
                                    {
                                      "type": "null"
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "title": "Primary Key",
                                          "description": "Primary Key.",
                                          "type": "string",
                                          "format": "uuid"
                                        },
                                        "citizen": {
                                          "title": "Citizen activation info",
                                          "description": "Citizen activation info.",
                                          "oneOf": [
                                            {
                                              "type": "null"
                                            },
                                            {
                                              "type": "object",
                                              "properties": {
                                                "id": {
                                                  "title": "Primary Key",
                                                  "description": "Primary Key.",
                                                  "type": "string",
                                                  "format": "uuid"
                                                },
                                                "created_at": {
                                                  "title": "Creation time of record",
                                                  "description": "Creation time of record.",
                                                  "type": "string",
                                                  "format": "date-time"
                                                },
                                                "mobile": {
                                                  "title": "Mobile number",
                                                  "description": "Mobile number.",
                                                  "x-wrtn-payment-order-mobile": true,
                                                  "type": "string",
                                                  "pattern": "^[0-9]*$"
                                                },
                                                "name": {
                                                  "title": "Real name, or equivalent nickname",
                                                  "description": "Real name, or equivalent nickname.",
                                                  "x-wrtn-payment-order-citizen": true,
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "id",
                                                "created_at",
                                                "mobile",
                                                "name"
                                              ],
                                              "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile} input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                                            }
                                          ]
                                        },
                                        "created_at": {
                                          "title": "Creation time of record",
                                          "description": "Creation time of record.\n\nAnother word, first time when the external user connected.",
                                          "type": "string",
                                          "format": "date-time"
                                        },
                                        "uid": {
                                          "title": "Identifier key of external user from the external system",
                                          "description": "Identifier key of external user from the external system.",
                                          "type": "string"
                                        },
                                        "application": {
                                          "title": "Identifier code of the external service",
                                          "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code} in common.",
                                          "type": "string"
                                        },
                                        "nickname": {
                                          "title": "Nickname of external user in the external system",
                                          "description": "Nickname of external user in the external system.",
                                          "type": "string"
                                        },
                                        "data": {
                                          "description": "Additional information about external user from the external\nsystem."
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "citizen",
                                        "created_at",
                                        "uid",
                                        "application",
                                        "nickname",
                                        "data"
                                      ],
                                      "description": "External user information.\n\n`IShoppingExternalUser` is an entity dsigned for when this system needs\nto connect with external services and welcome their users as\n{@link IShoppingCustomer customers} of this service.\n\nFor reference, customers who connect from an external service must have\nthis record, and the external service user is identified through the two\nattributes {@link application} and {@link uid}. If a customer connected\nfrom an external service completes\n{@link IShoppingCitizen real-name authentication} from this service, each\ntime the external service user reconnects to this service and issues a\nnew customer authentication token, real-name authentication begins with\ncompleted.\n\nAnd {@link password} is the password issued to the user by the external\nservice system (the so-called permanent user authentication token), and\nis never the actual user password. However, for customers who entered the\nsame application and uid as the current external system user, this is to\ndetermine whether to view this as a correct external system user or a\nviolation.\n\nIn addition, additional information received from external services can\nbe recorded in the data field in JSON format."
                                    }
                                  ]
                                },
                                "href": {
                                  "title": "Connection address",
                                  "description": "Connection address.\n\nSame with {@link window.location.href} of client.",
                                  "type": "string",
                                  "format": "uri"
                                },
                                "referrer": {
                                  "title": "Referrer address",
                                  "description": "Referrer address.\n\nSame with {@link window.document.referrer} of client.",
                                  "oneOf": [
                                    {
                                      "type": "null"
                                    },
                                    {
                                      "type": "string",
                                      "format": "uri"
                                    },
                                    {
                                      "type": "string",
                                      "maxLength": 0
                                    }
                                  ]
                                },
                                "ip": {
                                  "title": "Connection IP Address",
                                  "description": "Connection IP Address.",
                                  "oneOf": [
                                    {
                                      "type": "string",
                                      "format": "ipv4"
                                    },
                                    {
                                      "type": "string",
                                      "format": "ipv6"
                                    }
                                  ]
                                },
                                "created_at": {
                                  "title": "Creation time of the connection record",
                                  "description": "Creation time of the connection record.",
                                  "type": "string",
                                  "format": "date-time"
                                }
                              },
                              "required": [
                                "id",
                                "channel",
                                "external_user",
                                "href",
                                "referrer",
                                "ip",
                                "created_at"
                              ]
                            },
                            "citizen": {
                              "title": "Real-name and mobile number authentication information",
                              "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile} input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored.",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "title": "Primary Key",
                                  "description": "Primary Key.",
                                  "type": "string",
                                  "format": "uuid"
                                },
                                "created_at": {
                                  "title": "Creation time of record",
                                  "description": "Creation time of record.",
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "mobile": {
                                  "title": "Mobile number",
                                  "description": "Mobile number.",
                                  "x-wrtn-payment-order-mobile": true,
                                  "type": "string",
                                  "pattern": "^[0-9]*$"
                                },
                                "name": {
                                  "title": "Real name, or equivalent nickname",
                                  "description": "Real name, or equivalent nickname.",
                                  "x-wrtn-payment-order-citizen": true,
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "created_at",
                                "mobile",
                                "name"
                              ]
                            },
                            "id": {
                              "title": "Primary Key",
                              "description": "Primary Key.",
                              "type": "string",
                              "format": "uuid"
                            },
                            "created_at": {
                              "title": "Creation tmie of record",
                              "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up.",
                              "type": "string",
                              "format": "date-time"
                            }
                          },
                          "required": [
                            "type",
                            "member",
                            "customer",
                            "citizen",
                            "id",
                            "created_at"
                          ]
                        },
                        "price_range": {
                          "title": "Price range of the unit",
                          "type": "object",
                          "properties": {
                            "lowest": {
                              "description": "Shopping price interface.",
                              "type": "object",
                              "properties": {
                                "nominal": {
                                  "title": "Nominal price",
                                  "description": "Nominal price.\n\nThis is not {@link real real price} to pay, but just a nominal price to show.\nIf this value is greater than the {@link real real price}, it would be shown\nlike {@link IShoppingSeller seller} is giving a discount.",
                                  "type": "number",
                                  "minimum": 0
                                },
                                "real": {
                                  "title": "Real price to pay",
                                  "description": "Real price to pay.",
                                  "type": "number",
                                  "minimum": 0
                                }
                              },
                              "required": [
                                "nominal",
                                "real"
                              ]
                            },
                            "highest": {
                              "description": "Shopping price interface.",
                              "type": "object",
                              "properties": {
                                "nominal": {
                                  "title": "Nominal price",
                                  "description": "Nominal price.\n\nThis is not {@link real real price} to pay, but just a nominal price to show.\nIf this value is greater than the {@link real real price}, it would be shown\nlike {@link IShoppingSeller seller} is giving a discount.",
                                  "type": "number",
                                  "minimum": 0
                                },
                                "real": {
                                  "title": "Real price to pay",
                                  "description": "Real price to pay.",
                                  "type": "number",
                                  "minimum": 0
                                }
                              },
                              "required": [
                                "nominal",
                                "real"
                              ]
                            }
                          },
                          "required": [
                            "lowest",
                            "highest"
                          ]
                        },
                        "id": {
                          "title": "Primary Key of Sale",
                          "description": "Primary Key of Sale.",
                          "type": "string",
                          "format": "uuid"
                        },
                        "snapshot_id": {
                          "title": "Primary Key of Snapshot",
                          "description": "Primary Key of Snapshot.",
                          "type": "string",
                          "format": "uuid"
                        },
                        "latest": {
                          "title": "Whether the snapshot is the latest one or not",
                          "description": "Whether the snapshot is the latest one or not.",
                          "type": "boolean"
                        },
                        "content": {
                          "title": "Description and image content describing the sale",
                          "description": "Description of the current {@link IShoppingSaleContent} type:\n\n> Content information of sale snapshot.\n> \n> `IShoppingSaleContent` is an entity embodies the description contents\n> of {@link IShoppingSale}.",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid"
                            },
                            "title": {
                              "type": "string"
                            },
                            "thumbnails": {
                              "type": "array",
                              "items": {
                                "description": "Attachment File.\n\nEvery attachment files that are managed in current system.\n\nFor reference, it is possible to omit one of file {@link name}\nor {@link extension} like `.gitignore` or `README` case, but not\npossible to omit both of them.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "title": "Primary Key",
                                    "description": "Primary Key.",
                                    "type": "string",
                                    "format": "uuid"
                                  },
                                  "created_at": {
                                    "title": "Creation time of attachment file",
                                    "description": "Creation time of attachment file.",
                                    "type": "string",
                                    "format": "date-time"
                                  },
                                  "name": {
                                    "title": "File name, except extension",
                                    "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string.",
                                    "type": "string",
                                    "maxLength": 255
                                  },
                                  "extension": {
                                    "title": "Extension",
                                    "description": "Extension.\n\nPossible to omit like `README` case.",
                                    "oneOf": [
                                      {
                                        "type": "null"
                                      },
                                      {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 8
                                      }
                                    ]
                                  },
                                  "url": {
                                    "title": "URL path of the real file",
                                    "description": "URL path of the real file.",
                                    "type": "string",
                                    "format": "uri",
                                    "contentMediaType": "image/*"
                                  }
                                },
                                "required": [
                                  "id",
                                  "created_at",
                                  "name",
                                  "extension",
                                  "url"
                                ]
                              }
                            }
                          },
                          "required": [
                            "id",
                            "title",
                            "thumbnails"
                          ]
                        },
                        "channels": {
                          "title": "List of channels and categories",
                          "description": "List of channels and categories.\n\nWhich channels and categories the sale is registered to.",
                          "type": "array",
                          "items": {
                            "description": "Target channel (and categories) of sale to sell.\n\n`IShoppingSaleChannel` is an entity that expresses through which\n{@link IShoppingChannel channel} a listing {@link IShoppingSale} is sold.\n\nAlso, if {@link IShoppingChannelCategory categories} are specified, it also\nmeans that the sale be sold. Otherwise, none of the categories of the channel\nbeing specified, it means that every categories of the channel is listing the\ntarget sale.",
                            "type": "object",
                            "properties": {
                              "categories": {
                                "title": "List of categories of the channel listing the sale",
                                "description": "List of categories of the channel listing the sale.\n\nIf empty, it means all categories of the channel is listing the sale.",
                                "type": "array",
                                "items": {
                                  "$ref": "#/$defs/IShoppingChannelCategory.IInvert"
                                }
                              },
                              "id": {
                                "title": "Primary Key",
                                "description": "Primary Key.",
                                "type": "string",
                                "format": "uuid"
                              },
                              "created_at": {
                                "title": "Creation time of record",
                                "description": "Creation time of record.",
                                "type": "string",
                                "format": "date-time"
                              },
                              "code": {
                                "title": "Identifier code",
                                "description": "Identifier code.",
                                "type": "string"
                              },
                              "name": {
                                "title": "Name of the channel",
                                "description": "Name of the channel.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "categories",
                              "id",
                              "created_at",
                              "code",
                              "name"
                            ]
                          },
                          "minItems": 1
                        },
                        "tags": {
                          "title": "List of search tags",
                          "description": "List of search tags.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "units": {
                          "title": "List of units",
                          "description": "List of units.\n\nRecords about individual product composition information that are sold\nin the sale. Each {@link IShoppingSaleUnit unit} record has configurable\n{@link IShoppingSaleUnitOption options},\n{@link IShoppingSaleUnitOptionCandidate candidate} values for each\noption, and {@link IShoppingSaleUnitStock final stocks} determined by\nselecting every candidate values of each option.",
                          "type": "array",
                          "items": {
                            "description": "Description of the current {@link IShoppingSaleUnit} type:\n\n> Product composition information handled in the sale.\n> \n> `IShoppingSaleUnit` is an entity that embodies the \"individual product\"\n> information handled in the {@link IShoppingSale sale}.\n> \n> For reference, the reason why `IShoppingSaleUnit` is separated from\n> {@link IShoppingSaleSnapshot} by an algebraic relationship of 1: N is because\n> there are some cases where multiple products are sold in one listing. This is\n> the case with so-called \"bundled products\".\n> \n> - Bundle from regular product (Mackbook Set)\n>   - Main Body\n>   - Keyboard\n>   - Mouse\n>   - Apple Care (Free A/S Voucher)\n> \n> And again, `IShoppingSaleUnit` does not in itself refer to the\n> {@link IShoppingSaleUnitStock final stock} that the\n> {@link IShoppingCustomer customer} will {@link IShoppingOrder purchase}.\n> The final stock can be found only after selecting all given\n> {@link IShoppingSaleUnitOption options} and their\n> {@link IShoppingSaleUnitOptionCandidate candidate values}.\n> \n> For example, even if you buy a Macbook, the final stocks are determined only\n> after selecting all the options (CPU / RAM / SSD), etc.",
                            "type": "object",
                            "properties": {
                              "price_range": {
                                "type": "object",
                                "properties": {
                                  "lowest": {
                                    "description": "Shopping price interface.",
                                    "type": "object",
                                    "properties": {
                                      "nominal": {
                                        "title": "Nominal price",
                                        "description": "Nominal price.\n\nThis is not {@link real real price} to pay, but just a nominal price to show.\nIf this value is greater than the {@link real real price}, it would be shown\nlike {@link IShoppingSeller seller} is giving a discount.",
                                        "type": "number",
                                        "minimum": 0
                                      },
                                      "real": {
                                        "title": "Real price to pay",
                                        "description": "Real price to pay.",
                                        "type": "number",
                                        "minimum": 0
                                      }
                                    },
                                    "required": [
                                      "nominal",
                                      "real"
                                    ]
                                  },
                                  "highest": {
                                    "description": "Shopping price interface.",
                                    "type": "object",
                                    "properties": {
                                      "nominal": {
                                        "title": "Nominal price",
                                        "description": "Nominal price.\n\nThis is not {@link real real price} to pay, but just a nominal price to show.\nIf this value is greater than the {@link real real price}, it would be shown\nlike {@link IShoppingSeller seller} is giving a discount.",
                                        "type": "number",
                                        "minimum": 0
                                      },
                                      "real": {
                                        "title": "Real price to pay",
                                        "description": "Real price to pay.",
                                        "type": "number",
                                        "minimum": 0
                                      }
                                    },
                                    "required": [
                                      "nominal",
                                      "real"
                                    ]
                                  }
                                },
                                "required": [
                                  "lowest",
                                  "highest"
                                ]
                              },
                              "id": {
                                "title": "Primary Key",
                                "description": "Primary Key.",
                                "type": "string",
                                "format": "uuid"
                              },
                              "name": {
                                "title": "Representative name of the unit",
                                "description": "Representative name of the unit.",
                                "type": "string"
                              },
                              "primary": {
                                "title": "Whether the unit is primary or not",
                                "description": "Whether the unit is primary or not.\n\nJust a labeling value.",
                                "type": "boolean"
                              },
                              "required": {
                                "title": "Whether the unit is required or not",
                                "description": "Whether the unit is required or not.\n\nWhen the unit is required, the customer must select the unit. If do not\nselect, customer can't buy it.\n\nFor example, if there's a sale \"Macbook Set\" and one of the unit is the\n\"Main Body\", is it possible to buy the \"Macbook Set\" without the\n\"Main Body\" unit? This property is for that case.",
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "price_range",
                              "id",
                              "name",
                              "primary",
                              "required"
                            ]
                          },
                          "minItems": 1
                        },
                        "created_at": {
                          "title": "Creation time of the record",
                          "description": "Creation time of the record.\n\nNote that, this property is different with {@link opened_at},\nwhich means the timepoint of the sale is opened.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "updated_at": {
                          "title": "Last updated time of the record",
                          "description": "Last updated time of the record.\n\nIn another words, creation time of the last snapshot.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "paused_at": {
                          "title": "Paused time of the sale",
                          "description": "Paused time of the sale.\n\nThe sale is paused by the seller, for some reason.\n\n{@link IShoppingCustomer Customers} can still see the sale on the\nboth list and detail pages, but the sale has a warning label\n\"The sale is paused by the seller\".",
                          "oneOf": [
                            {
                              "type": "null"
                            },
                            {
                              "type": "string",
                              "format": "date-time"
                            }
                          ]
                        },
                        "suspended_at": {
                          "title": "Suspended time of the sale",
                          "description": "Suspended time of the sale.\n\nThe sale is suspended by the seller, for some reason.\n\n{@link IShoppingCustomer Customers} cannot see the sale on the\nboth list and detail pages. It is almost same with soft delettion,\nbut there's a little bit difference that the owner\n{@link IShoppingSeller seller} can still see the sale and resume it.\n\nOf course, the {@link IShoppingCustomer customers} who have\nalready purchased the sale can still see the sale on the\n{@link IShoppingOrder order} page.",
                          "oneOf": [
                            {
                              "type": "null"
                            },
                            {
                              "type": "string",
                              "format": "date-time"
                            }
                          ]
                        },
                        "opened_at": {
                          "title": "Opening time of the sale",
                          "description": "Opening time of the sale.",
                          "oneOf": [
                            {
                              "type": "null"
                            },
                            {
                              "type": "string",
                              "format": "date-time"
                            }
                          ]
                        },
                        "closed_at": {
                          "title": "Closing time of the sale",
                          "description": "Closing time of the sale.\n\nIf this value is `null`, the sale be continued forever.",
                          "oneOf": [
                            {
                              "type": "null"
                            },
                            {
                              "type": "string",
                              "format": "date-time"
                            }
                          ]
                        }
                      },
                      "required": [
                        "section",
                        "seller",
                        "price_range",
                        "id",
                        "snapshot_id",
                        "latest",
                        "content",
                        "channels",
                        "tags",
                        "units",
                        "created_at",
                        "updated_at",
                        "paused_at",
                        "suspended_at",
                        "opened_at",
                        "closed_at"
                      ]
                    },
                    "minItems": 1
                  },
                  "type": {
                    "title": "Descrimanator type",
                    "description": "Descrimanator type.",
                    "const": "sale"
                  },
                  "direction": {
                    "title": "Direction of the criteria",
                    "description": "Direction of the criteria.",
                    "oneOf": [
                      {
                        "const": "include"
                      },
                      {
                        "const": "exclude"
                      }
                    ]
                  }
                },
                "required": [
                  "sales",
                  "type",
                  "direction"
                ],
                "description": "Conditions for sales of discount coupons.\n\n`IShoppingCouponSaleCriteria` is a subtype entity of\n{@link IShoppingCouponCriteriaBase} and is used when setting conditions\nfor a specific {@link IShoppingSale sale}.\n\nIf the {@link direction} value is \"include\", the coupon can only be used\nfor the target {@link sales}. Conversely, if it is \"exclude\", the\ncoupon cannot be used."
              },
              {
                "type": "object",
                "properties": {
                  "funnels": {
                    "title": "List of target funnels",
                    "description": "List of target funnels.",
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "type": "object",
                          "properties": {
                            "kind": {
                              "title": "Kind of funnel restriction",
                              "description": "Kind of funnel restriction.",
                              "oneOf": [
                                {
                                  "const": "url"
                                },
                                {
                                  "const": "referrer"
                                }
                              ]
                            },
                            "value": {
                              "title": "Target value",
                              "description": "Target value.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "kind",
                            "value"
                          ],
                          "description": "Kind of funnel restriction by a value.\n\n------------------------------\n\nDescription of the current {@link IShoppingCouponFunnelCriteria.IValueFunnel} type:\n\n> Kind of funnel restriction by a value.\n\n------------------------------\n\nDescription of the parent {@link IShoppingCouponFunnelCriteria} type:\n\n> Limit the funnel of discount coupons.\n> \n> `ishoppingcouponfunnelcriteria` is a subtype entity of\n> {@link IShoppingCouponCriteria}, and is used when you want to issue or\n> exclude discount coupons only to {@link IShoppingCustomer customers} who\n> came from a specific path.\n> \n> And funnel restrictions are possible in 3 ways: The first is\n> {@link IShoppingCustomer.referrer}, and by parsing\n> {@link IShoppingCustomer.href}, which records the customer's access\n> address, restrictions can be made in units of specific URLs or variables."
                        },
                        {
                          "type": "object",
                          "properties": {
                            "kind": {
                              "title": "Kind of funnel restriction",
                              "description": "Kind of funnel restriction.",
                              "const": "variable"
                            },
                            "key": {
                              "title": "Target variable's key",
                              "description": "Target variable's key.",
                              "type": "string"
                            },
                            "value": {
                              "title": "Target variable's value",
                              "description": "Target variable's value.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "kind",
                            "key",
                            "value"
                          ],
                          "description": "Kind of funnel restriction by a variable.\n\n------------------------------\n\nDescription of the current {@link IShoppingCouponFunnelCriteria.IVariableFunnel} type:\n\n> Kind of funnel restriction by a variable.\n\n------------------------------\n\nDescription of the parent {@link IShoppingCouponFunnelCriteria} type:\n\n> Limit the funnel of discount coupons.\n> \n> `ishoppingcouponfunnelcriteria` is a subtype entity of\n> {@link IShoppingCouponCriteria}, and is used when you want to issue or\n> exclude discount coupons only to {@link IShoppingCustomer customers} who\n> came from a specific path.\n> \n> And funnel restrictions are possible in 3 ways: The first is\n> {@link IShoppingCustomer.referrer}, and by parsing\n> {@link IShoppingCustomer.href}, which records the customer's access\n> address, restrictions can be made in units of specific URLs or variables."
                        }
                      ]
                    },
                    "minItems": 1
                  },
                  "type": {
                    "title": "Descrimanator type",
                    "description": "Descrimanator type.",
                    "const": "funnel"
                  },
                  "direction": {
                    "title": "Direction of the criteria",
                    "description": "Direction of the criteria.",
                    "oneOf": [
                      {
                        "const": "include"
                      },
                      {
                        "const": "exclude"
                      }
                    ]
                  }
                },
                "required": [
                  "funnels",
                  "type",
                  "direction"
                ],
                "description": "Limit the funnel of discount coupons.\n\n`ishoppingcouponfunnelcriteria` is a subtype entity of\n{@link IShoppingCouponCriteria}, and is used when you want to issue or\nexclude discount coupons only to {@link IShoppingCustomer customers} who\ncame from a specific path.\n\nAnd funnel restrictions are possible in 3 ways: The first is\n{@link IShoppingCustomer.referrer}, and by parsing\n{@link IShoppingCustomer.href}, which records the customer's access\naddress, restrictions can be made in units of specific URLs or variables."
              }
            ]
          }
        },
        "discount": {
          "title": "Discount information",
          "description": "Discount information.",
          "oneOf": [
            {
              "type": "object",
              "properties": {
                "unit": {
                  "title": "Discount unit as amount",
                  "description": "Discount unit as amount.\n\nIt means the order price would be discounted by the amount value.",
                  "const": "amount"
                },
                "value": {
                  "title": "Discount value as amount",
                  "description": "Discount value as amount.",
                  "type": "number"
                },
                "threshold": {
                  "title": "Minimum purchase amount for discount",
                  "description": "Minimum purchase amount for discount.\n\nWhen setting this value, discount coupons cannot be applied to\norder totals that are less than this value.",
                  "oneOf": [
                    {
                      "type": "null"
                    },
                    {
                      "type": "number",
                      "minimum": 0
                    }
                  ]
                },
                "limit": {
                  "title": "Maximum amount available for discount",
                  "description": "Maximum amount available for discount.\n\nWhen this value is set, no further discount will be given no\nmatter how much you order. This property would be meaningful\nonly when the {@link multiplicative} is `true`.",
                  "oneOf": [
                    {
                      "type": "null"
                    },
                    {
                      "type": "number",
                      "exclusiveMinimum": true,
                      "minimum": 0
                    }
                  ]
                },
                "multiplicative": {
                  "title": "Multiplicative or not",
                  "description": "Multiplicative or not.\n\nIf this property is `true`, the discount value would be multiplied\nto the {@link IShoppingCartCommodity.volume} or\n{@link IShoppingOrderGood.volume} value. Also, in that case,\nthe {@link limit} property would be meaningful.",
                  "type": "boolean"
                }
              },
              "required": [
                "unit",
                "value",
                "threshold",
                "limit",
                "multiplicative"
              ],
              "description": "Discount information with amount unit.\n\n------------------------------\n\nDescription of the current {@link IShoppingCouponDiscount.IAmount} type:\n\n> Discount information with amount unit."
            },
            {
              "type": "object",
              "properties": {
                "unit": {
                  "title": "Discount unit as percent",
                  "description": "Discount unit as percent.\n\nIt means the order price would be discounted by the percent value.",
                  "const": "percent"
                },
                "value": {
                  "title": "Discount value as percent",
                  "description": "Discount value as percent.",
                  "type": "number",
                  "minimum": 0,
                  "maximum": 100
                },
                "threshold": {
                  "title": "Minimum purchase amount for discount",
                  "description": "Minimum purchase amount for discount.\n\nWhen setting this value, discount coupons cannot be applied to\norder totals that are less than this value.",
                  "oneOf": [
                    {
                      "type": "null"
                    },
                    {
                      "type": "number",
                      "minimum": 0
                    }
                  ]
                },
                "limit": {
                  "title": "Maximum amount available for discount",
                  "description": "Maximum amount available for discount.\n\nWhen this value is set, no further discount will be given no\nmatter how much you order.",
                  "oneOf": [
                    {
                      "type": "null"
                    },
                    {
                      "type": "number",
                      "exclusiveMinimum": true,
                      "minimum": 0
                    }
                  ]
                }
              },
              "required": [
                "unit",
                "value",
                "threshold",
                "limit"
              ],
              "description": "Discount information with percent unit.\n\n------------------------------\n\nDescription of the current {@link IShoppingCouponDiscount.IPercent} type:\n\n> Discount information with percent unit."
            }
          ]
        },
        "restriction": {
          "title": "Restriction information",
          "description": "Restriction information of the coupon.",
          "type": "object",
          "properties": {
            "access": {
              "title": "Access level of coupon",
              "description": "Access level of coupon.\n\n- public: possible to find from public API\n- private: unable to find from public API\n  - arbitrarily assigned by the seller or administrator\n  - issued from one-time link",
              "oneOf": [
                {
                  "const": "public"
                },
                {
                  "const": "private"
                }
              ]
            },
            "exclusive": {
              "title": "Exclusivity or not",
              "description": "Exclusivity or not.\n\nAn exclusive discount coupon refers to a discount coupon that has an\nexclusive relationship with other discount coupons and can only be\nused alone. That is, when an exclusive discount coupon is used, no\nother discount coupon can be used for the same\n{@link IShoppingOrder order} or {@link IShoppingOrderGood good}.\n\nPlease note that this exclusive attribute is a very different concept\nfrom multiplicative, which means whether the same coupon can be\nmultiplied and applied to multiple coupons of the same order, so\nplease do not confuse them.",
              "type": "boolean"
            },
            "volume": {
              "title": "Limited quantity issued",
              "description": "Limited quantity issued.\n\nIf there is a limit to the quantity issued, it becomes impossible to issue tickets exceeding this value.\n\nIn other words, the concept of N coupons being issued on a first-come, first-served basis is created.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "volume_per_citizen": {
              "title": "Limited quantity issued per person",
              "description": "Limited quantity issued per person.\n\nAs a limit to the total amount of issuance per person, it is common to assign 1 to limit duplicate issuance to the same citizen, or to use the NULL value to set no limit.\n\nOf course, by assigning a value of N, the total amount issued to the same citizen can be limited.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "expired_in": {
              "title": "Expiration day(s) value",
              "description": "Expiration day(s) value.\n\nThe concept of expiring N days after a discount coupon ticket is issued.\n\nTherefore, customers must use the ticket within N days, if possible, from the time it is issued.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "expired_at": {
              "title": "Expiration date",
              "description": "Expiration date.\n\nA concept that expires after YYYY-MM-DD after a discount coupon ticket is issued.\n\nDouble restrictions are possible with expired_in, of which the one with the shorter expiration date is used.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "date-time"
                }
              ]
            }
          },
          "required": [
            "access",
            "exclusive",
            "volume",
            "volume_per_citizen",
            "expired_in",
            "expired_at"
          ]
        },
        "name": {
          "title": "Representative name of the coupon",
          "description": "Representative name of the coupon.",
          "type": "string"
        },
        "opened_at": {
          "title": "Opening time of the coupon",
          "description": "Opening time of the coupon.",
          "oneOf": [
            {
              "type": "null"
            },
            {
              "type": "string",
              "format": "date-time"
            }
          ]
        },
        "closed_at": {
          "title": "Closing time of the coupon",
          "description": "Closing time of the coupon.\n\nTickets cannot be issued after this time.\n\nHowever, previously issued tickets can still be used until their\nexpiration date.",
          "oneOf": [
            {
              "type": "null"
            },
            {
              "type": "string",
              "format": "date-time"
            }
          ]
        },
        "created_at": {
          "title": "Creation tie of the record",
          "description": "Creation tie of the record.",
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "designer",
        "inventory",
        "criterias",
        "discount",
        "restriction",
        "name",
        "opened_at",
        "closed_at",
        "created_at"
      ]
    },
    "success": true,
    "arguments": {
      "type": {
        "host": "http://127.0.0.1:37001",
        "headers": {
          "Authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0YWJsZSI6InNob3BwaW5nX2N1c3RvbWVycyIsImlkIjoiZTM3OWExOGQtMjdlMy00OWU2LWJkYjQtMTRkNjkyYWE2MWZiIiwicmVhZG9ubHkiOmZhbHNlLCJleHBpcmVkX2F0IjoiMjAyNC0xMi0xM1QwOTo0MjoxMi42NDNaIiwicmVmcmVzaGFibGVfdW50aWwiOiIyMDI0LTEyLTI3VDA2OjQyOjEyLjY0M1oiLCJpYXQiOjE3MzQwNzIxMzJ9.BZGtMTMbCUZQquQyv9yMxTtI9nuYpQkMS3ydsu4UfEc"
        }
      },
      "properties": {
        "name": "10% Discount for every sales",
        "opened_at": "2024-12-13T06:42:13.274Z",
        "closed_at": null,
        "disposable_codes": [],
        "discount": {
          "unit": "percent",
          "value": 10,
          "threshold": null,
          "limit": null
        },
        "restriction": {
          "access": "public",
          "volume": 10000,
          "volume_per_citizen": 5,
          "exclusive": true,
          "expired_in": 15,
          "expired_at": null
        },
        "criterias": [
          {
            "type": "channel",
            "direction": "include",
            "channels": [
              {
                "channel_code": "samchon",
                "category_ids": null
              }
            ]
          }
        ]
      }
    },
    "value": {
      "id": "ff93beb2-51d2-4a42-9ddc-ceb671efdfba",
      "designer": {
        "id": "bd215cfc-2b1c-4a5b-a9f3-3076cdd9bed5",
        "created_at": "2024-12-13T06:42:11.239Z"
      },
      "inventory": {
        "volume": 10000,
        "volume_per_citizen": 5
      },
      "criterias": [
        {
          "channels": [
            {
              "channel": {
                "id": "2323f4bd-21ad-45b7-ae3b-cadd84dcc935",
                "created_at": "2024-12-13T06:42:10.908Z",
                "code": "samchon",
                "name": "Samchon Shopping Mall"
              },
              "categories": null
            }
          ],
          "type": "channel",
          "direction": "include"
        }
      ],
      "discount": {
        "unit": "percent",
        "value": 10,
        "threshold": null,
        "limit": null
      },
      "restriction": {
        "access": "public",
        "exclusive": true,
        "volume": 10000,
        "volume_per_citizen": 5,
        "expired_in": 15,
        "expired_at": null
      },
      "name": "10% Discount for every sales",
      "opened_at": "2024-12-13T06:42:13.274Z",
      "closed_at": null,
      "created_at": "2024-12-13T06:42:13.279Z"
    }
  },
  {
    "name": "shoppings_customers_orders_discountable_patchById",
    "method": "patch",
    "path": "/shoppings/customers/orders/{id}/discountable",
    "description": "Get discountable info.\n\nCompute discountable features about the {@link IShoppingOrder}.\n\nReturned {@link IShoppingOrderDiscountable} contains including\ncombinations of adjustable {@link IShoppingCoupon coupons},\nwithdrawable {@link IShoppingDepositHistory deposits}\nand {@link IShoppingMileageHistory mileages}.\n\nOf course, returned features are valid only when the order has not\nbeen {@link IShoppingOrderPublish published} yet. If the order has\nalready been published, then no way to discount the price more.",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "description": " Target order's {@link IShoppingOrder.id }",
          "type": "string",
          "format": "uuid"
        },
        "body": {
          "type": "object",
          "properties": {
            "good_ids": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              ]
            }
          },
          "required": [
            "good_ids"
          ]
        }
      },
      "additionalProperties": false,
      "required": [
        "id",
        "body"
      ],
      "$defs": {
        "IShoppingChannelCategory.IInvert": {
          "description": "Invert category information with parent category.",
          "type": "object",
          "properties": {
            "parent": {
              "title": "Parent category info with recursive structure",
              "description": "Parent category info with recursive structure.\n\nIf no parent exists, then be `null`.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "$ref": "#/$defs/IShoppingChannelCategory.IInvert"
                }
              ]
            },
            "id": {
              "title": "Primary Key",
              "description": "Primary Key.",
              "type": "string",
              "format": "uuid"
            },
            "code": {
              "title": "Identifier code of the category",
              "description": "Identifier code of the category.\n\nThe code must be unique in the channel.",
              "type": "string"
            },
            "parent_id": {
              "title": "Parent category's ID",
              "description": "Parent category's ID.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "name": {
              "title": "Representative name of the category",
              "description": "Representative name of the category.\n\nThe name must be unique within the parent category. If no parent exists,\nthen the name must be unique within the channel between no parent\ncategories.",
              "type": "string"
            },
            "created_at": {
              "title": "Creation time of record",
              "description": "Creation time of record.",
              "type": "string",
              "format": "date-time"
            }
          },
          "required": [
            "parent",
            "id",
            "code",
            "parent_id",
            "name",
            "created_at"
          ]
        }
      }
    },
    "output": {
      "type": "object",
      "properties": {
        "deposit": {
          "type": "number"
        },
        "mileage": {
          "type": "number"
        },
        "combinations": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "coupons": {
                "type": "array",
                "items": {
                  "description": "Discount coupon.\n\n`IShoppingCoupon` is an entity that symbolizes discount coupons at\na shopping mall.\n\nNote that, `IShoppingCoupon` only contains specification information\nabout discount coupons. Please keep in mind that this is a different\nconcept from {@link IShoppingCouponTicket}, which refers to the issuance\nof a discount coupon, or {@link IShoppingCouponTicketPayment}, which\nrefers to its payment.\n\nAdditionally, discount coupons are applied on an order-by-order basis,\nbut each has its own unique restrictions. For example, a coupon with\n{@link IShoppingCouponSellerCriteria} may or may not be used only for\n{@link IShoppingSale} of listings registered by the {@link IShoppingSeller}.\nAlso, there are restrictions such as\n{@link IShoppingCouponDiscount.threshold minimum amount restrictions} for\nusing discount coupons and\n{@link IShoppingCouponDiscount.limit maximum discount amount limits}.\n\nIn addition, you can set whether to issue discount coupons publicly or\ngive them only to people who know the specific issuing code. In addition,\nthere are restrictions such as issued discount coupons having an\n{@link IShoppingCouponRestriction.expired_at expiration date} or being\nissued only to customers who came in through a\n{@link IShoppingCouponFunnelCriteria specific funnel}.\n\nFor more information, please refer to the properties below and the\nsubsidiary entities described later.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "Primary Key",
                      "description": "Primary Key.",
                      "type": "string",
                      "format": "uuid"
                    },
                    "designer": {
                      "title": "Designer who've made the coupon",
                      "description": "Designer who've made the coupon.",
                      "oneOf": [
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "title": "Primary Key",
                              "description": "Primary Key.",
                              "type": "string",
                              "format": "uuid"
                            },
                            "created_at": {
                              "title": "Creation time of record",
                              "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up.",
                              "type": "string",
                              "format": "date-time"
                            }
                          },
                          "required": [
                            "id",
                            "created_at"
                          ],
                          "description": "Administrator account.\n\n`IShoppingAdministrator` is an entity that embodies a person who manages\nthe shopping mall system, with {@link IShoppingMember membership} joining.\n\nFor reference, unlike {@link IShoppingCustomer customers} which can participate\neven without membership joining, administrator must join membership to operate\nmanagements. Also, administrator must perform the\n{@link IShoppingCitizen real-name and mobile authentication}, too."
                        },
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "title": "Primary Key",
                              "description": "Primary Key.",
                              "type": "string",
                              "format": "uuid"
                            },
                            "created_at": {
                              "title": "Creation tmie of record",
                              "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up.",
                              "type": "string",
                              "format": "date-time"
                            }
                          },
                          "required": [
                            "id",
                            "created_at"
                          ],
                          "description": "Seller information.\n\n`IShoppingSeller` is an entity that embodies a person who registers\n{@link IShoppingSale sales} to operate selling activities, with\n{@link IShoppingMember membership} joining.\n\nFor reference, unlike {@link IShoppingCustomer customers} which can\nparticipate even without membership joining, seller must join membership\nto operate sales. Also, seller must do the\n{@link IShoppingCitizen real-name and mobile authentication}, too."
                        }
                      ]
                    },
                    "inventory": {
                      "title": "Inventory information",
                      "description": "Inventory information of the coupon.\n\nIf a {@link IShoppingCoupon coupon} has been designed with limited\ninventory, this `IShoppingCouponInventory` structure represents the\nremaining inventory information.",
                      "type": "object",
                      "properties": {
                        "volume": {
                          "title": "Remaining volume for everyone",
                          "description": "Remaining volume for everyone.\n\nIf there is a limit to the quantity issued, it becomes impossible to\nissue tickets exceeding this value.\n\nIn other words, the concept of N coupons being issued on a first-come,\nfirst-served basis is created.",
                          "oneOf": [
                            {
                              "type": "null"
                            },
                            {
                              "type": "integer"
                            }
                          ]
                        },
                        "volume_per_citizen": {
                          "title": "Remaining volume per citizen",
                          "description": "Remaining volume per citizen.\n\nAs a limit to the total amount of issuance per person, it is common to\nassign 1 to limit duplicate issuance to the same citizen, or to use the\n`nul`` value to set no limit.\n\nOf course, by assigning a value of N, the total amount issued to the\nsame citizen can be limited.",
                          "oneOf": [
                            {
                              "type": "null"
                            },
                            {
                              "type": "integer"
                            }
                          ]
                        }
                      },
                      "required": [
                        "volume",
                        "volume_per_citizen"
                      ]
                    },
                    "criterias": {
                      "title": "List of criteria information",
                      "description": "List of criteria information.",
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "type": "object",
                            "properties": {
                              "channels": {
                                "title": "List of target channels and categories",
                                "description": "List of target channels and categories.",
                                "type": "array",
                                "items": {
                                  "description": "Description of the current {@link IShoppingCouponChannelCriteria} type:\n\n> Conditions for channels of discount coupons.\n> \n> `ishoppingcouponchannelcriteria` is a subtype entity of\n> {@link IShoppingCouponCriteriaBase} and is used when setting conditions on\n> a specific {@link IShoppingChannel channel} or\n> {@link IShoppingChannelCategory category} of that channel.\n> \n> If the {@link direction} value is \"include\", the coupon can only be used\n> for the target channels (or categories). Conversely, if it is \"exclude\",\n> it is a coupon that cannot be used.",
                                  "type": "object",
                                  "properties": {
                                    "channel": {
                                      "title": "Target channel",
                                      "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future.",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "title": "Primary Key",
                                          "description": "Primary Key.",
                                          "type": "string",
                                          "format": "uuid"
                                        },
                                        "created_at": {
                                          "title": "Creation time of record",
                                          "description": "Creation time of record.",
                                          "type": "string",
                                          "format": "date-time"
                                        },
                                        "code": {
                                          "title": "Identifier code",
                                          "description": "Identifier code.",
                                          "type": "string"
                                        },
                                        "name": {
                                          "title": "Name of the channel",
                                          "description": "Name of the channel.",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "created_at",
                                        "code",
                                        "name"
                                      ]
                                    },
                                    "categories": {
                                      "title": "List of target categories",
                                      "description": "List of target categories.",
                                      "oneOf": [
                                        {
                                          "type": "null"
                                        },
                                        {
                                          "type": "array",
                                          "items": {
                                            "$ref": "#/$defs/IShoppingChannelCategory.IInvert"
                                          },
                                          "minItems": 1
                                        }
                                      ]
                                    }
                                  },
                                  "required": [
                                    "channel",
                                    "categories"
                                  ]
                                },
                                "minItems": 1
                              },
                              "type": {
                                "title": "Descrimanator type",
                                "description": "Descrimanator type.",
                                "const": "channel"
                              },
                              "direction": {
                                "title": "Direction of the criteria",
                                "description": "Direction of the criteria.",
                                "oneOf": [
                                  {
                                    "const": "include"
                                  },
                                  {
                                    "const": "exclude"
                                  }
                                ]
                              }
                            },
                            "required": [
                              "channels",
                              "type",
                              "direction"
                            ],
                            "description": "Conditions for channels of discount coupons.\n\n`ishoppingcouponchannelcriteria` is a subtype entity of\n{@link IShoppingCouponCriteriaBase} and is used when setting conditions on\na specific {@link IShoppingChannel channel} or\n{@link IShoppingChannelCategory category} of that channel.\n\nIf the {@link direction} value is \"include\", the coupon can only be used\nfor the target channels (or categories). Conversely, if it is \"exclude\",\nit is a coupon that cannot be used."
                          },
                          {
                            "type": "object",
                            "properties": {
                              "sections": {
                                "title": "Target sections to include or exclude",
                                "description": "Target sections to include or exclude.",
                                "type": "array",
                                "items": {
                                  "description": "Section information.\n\n`IShoppingSection` is a concept that refers to the spatial information of\nthe market.\n\nIf we compare the section mentioned here to the offline market, it means a\nspatially separated area within the store, such as the \"fruit corner\" or\n\"butcher corner\". Therefore, in the {@link IShoppingSale sale} entity, it is\nnot possible to classify multiple sections simultaneously, but only one section\ncan be classified.\n\nBy the way, if your shopping mall system requires only one section, then just\nuse only one. This concept is designed to be expandable in the future.",
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "title": "Primary Key",
                                      "description": "Primary Key.",
                                      "type": "string",
                                      "format": "uuid"
                                    },
                                    "code": {
                                      "title": "Identifier code",
                                      "description": "Identifier code.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "title": "Representative name of the section",
                                      "description": "Representative name of the section.",
                                      "type": "string"
                                    },
                                    "created_at": {
                                      "title": "Creation time of record",
                                      "description": "Creation time of record.",
                                      "type": "string",
                                      "format": "date-time"
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "code",
                                    "name",
                                    "created_at"
                                  ]
                                },
                                "minItems": 1
                              },
                              "type": {
                                "title": "Descrimanator type",
                                "description": "Descrimanator type.",
                                "const": "section"
                              },
                              "direction": {
                                "title": "Direction of the criteria",
                                "description": "Direction of the criteria.",
                                "oneOf": [
                                  {
                                    "const": "include"
                                  },
                                  {
                                    "const": "exclude"
                                  }
                                ]
                              }
                            },
                            "required": [
                              "sections",
                              "type",
                              "direction"
                            ],
                            "description": "Conditions for sections of discount coupons.\n\n`IShoppingCouponSectionCriteria` is a subtype entity of\n{@link IShoppingCouponCriteriaBase} and is used when setting conditions\nfor a specific {@link IShoppingSection section}.\n\nIf the {@link direction} value is \"include\", the coupon can only be used\nfor the target {@link sections}. Conversely, if it is \"exclude\", the\ncoupon cannot be used."
                          },
                          {
                            "type": "object",
                            "properties": {
                              "sellers": {
                                "title": "Target sellers to include or exclude",
                                "description": "Target sellers to include or exclude.",
                                "type": "array",
                                "items": {
                                  "description": "Seller information.\n\n`IShoppingSeller` is an entity that embodies a person who registers\n{@link IShoppingSale sales} to operate selling activities, with\n{@link IShoppingMember membership} joining.\n\nFor reference, unlike {@link IShoppingCustomer customers} which can\nparticipate even without membership joining, seller must join membership\nto operate sales. Also, seller must do the\n{@link IShoppingCitizen real-name and mobile authentication}, too.",
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "title": "Primary Key",
                                      "description": "Primary Key.",
                                      "type": "string",
                                      "format": "uuid"
                                    },
                                    "created_at": {
                                      "title": "Creation tmie of record",
                                      "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up.",
                                      "type": "string",
                                      "format": "date-time"
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "created_at"
                                  ]
                                },
                                "minItems": 1
                              },
                              "type": {
                                "title": "Descrimanator type",
                                "description": "Descrimanator type.",
                                "const": "seller"
                              },
                              "direction": {
                                "title": "Direction of the criteria",
                                "description": "Direction of the criteria.",
                                "oneOf": [
                                  {
                                    "const": "include"
                                  },
                                  {
                                    "const": "exclude"
                                  }
                                ]
                              }
                            },
                            "required": [
                              "sellers",
                              "type",
                              "direction"
                            ],
                            "description": "Conditions for sellers of discount coupons.\n\n`IShoppingCouponSellerCriteria` is a subtype entity of\n{@link IShoppingCouponCriteriaBase} and is used when setting conditions\nfor a specific {@link IShoppingSeller seller}.\n\nIf the {@link direction} value is \"include\", the coupon can only be used\nfor the target {@link sellers}. Conversely, if it is \"exclude\", the\ncoupon cannot be used."
                          },
                          {
                            "type": "object",
                            "properties": {
                              "sales": {
                                "title": "Target sales to include or exclude",
                                "description": "Target sales to include or exclude.",
                                "type": "array",
                                "items": {
                                  "description": "Summarized information of sale.\n\nThis summarized information being used for pagination.\n\n------------------------------\n\nDescription of the current {@link IShoppingSale.ISummary} type:\n\n> Summarized information of sale.\n> \n> This summarized information being used for pagination.\n\n------------------------------\n\nDescription of the parent {@link IShoppingSale} type:\n\n> Seller sales products.\n> \n> `IShoppingSale` is an entity that embodies \"product sales\" (sales)\n> information registered by the {@link ISoppingSeller seller}. And the main\n> information of the sale is recorded in the sub {@link IShoppingSaleSnapshot},\n> not in the main `IShoppingSale`. When a seller changes a previously registered\n> item, the existing `IShoppingSale` record is not changed, but a new\n> {@link IShoppingSaleSnapshot snapshot} record be created.\n> \n> This is to preserve the {@link IShoppingCustomer customer}'s\n> {@link IShoppingOrder purchase history} flawlessly after the customer\n> purchases a specific item, even if the seller changes the components or\n> price of the item. It is also intended to support sellers in so-called A/B\n> testing, which involves changing components or prices and measuring the\n> performance in each case.",
                                  "type": "object",
                                  "properties": {
                                    "section": {
                                      "title": "Belonged section",
                                      "description": "Section information.\n\n`IShoppingSection` is a concept that refers to the spatial information of\nthe market.\n\nIf we compare the section mentioned here to the offline market, it means a\nspatially separated area within the store, such as the \"fruit corner\" or\n\"butcher corner\". Therefore, in the {@link IShoppingSale sale} entity, it is\nnot possible to classify multiple sections simultaneously, but only one section\ncan be classified.\n\nBy the way, if your shopping mall system requires only one section, then just\nuse only one. This concept is designed to be expandable in the future.",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "title": "Primary Key",
                                          "description": "Primary Key.",
                                          "type": "string",
                                          "format": "uuid"
                                        },
                                        "code": {
                                          "title": "Identifier code",
                                          "description": "Identifier code.",
                                          "type": "string"
                                        },
                                        "name": {
                                          "title": "Representative name of the section",
                                          "description": "Representative name of the section.",
                                          "type": "string"
                                        },
                                        "created_at": {
                                          "title": "Creation time of record",
                                          "description": "Creation time of record.",
                                          "type": "string",
                                          "format": "date-time"
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "code",
                                        "name",
                                        "created_at"
                                      ]
                                    },
                                    "seller": {
                                      "title": "Seller who has registered the sale",
                                      "description": "Invert information starting from seller info.\n\nInstead of accessing to the seller information from the\n{@link IShoppingCustomer.member} -> {@link IShoppingMember.seller},\n`IShoppingSeller.IInvert` starts from the seller information\nand access to the customer, member and {@link IShoppingCitizen citizen}\ninformation inversely.\n\n------------------------------\n\nDescription of the current {@link IShoppingSeller.IInvert} type:\n\n> Invert information starting from seller info.\n> \n> Instead of accessing to the seller information from the\n> {@link IShoppingCustomer.member} -> {@link IShoppingMember.seller},\n> `IShoppingSeller.IInvert` starts from the seller information\n> and access to the customer, member and {@link IShoppingCitizen citizen}\n> information inversely.\n\n------------------------------\n\nDescription of the parent {@link IShoppingSeller} type:\n\n> Seller information.\n> \n> `IShoppingSeller` is an entity that embodies a person who registers\n> {@link IShoppingSale sales} to operate selling activities, with\n> {@link IShoppingMember membership} joining.\n> \n> For reference, unlike {@link IShoppingCustomer customers} which can\n> participate even without membership joining, seller must join membership\n> to operate sales. Also, seller must do the\n> {@link IShoppingCitizen real-name and mobile authentication}, too.",
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "title": "Discriminant for the type of customer",
                                          "description": "Discriminant for the type of customer.",
                                          "const": "seller"
                                        },
                                        "member": {
                                          "title": "Membership joining information",
                                          "description": "Invert information of member.\n\nThis invert member information has been designed to be used for another\ninvert information of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert}\n- {@link IShoppingAdministrator.IInvert}\n\n------------------------------\n\nDescription of the current {@link IShoppingMember.IInvert} type:\n\n> Invert information of member.\n> \n> This invert member information has been designed to be used for another\n> invert information of sellers and administrators like below.\n> \n> - {@link IShoppingSeller.IInvert}\n> - {@link IShoppingAdministrator.IInvert}\n\n------------------------------\n\nDescription of the parent {@link IShoppingMember} type:\n\n> Member Account.\n> \n> `IShoppingMember` is an entity that symbolizes the case when a\n> {@link IShoppingCustomer} signs up as a member of this shopping mall\n> system.\n> \n> If a `IShoppingMember` has seller or administrator property. it means that\n> the {@link IShoppingCustomer} has acting as a {@link IShoppingSeller seller}\n> or {@link IShoppingAdministrator administrator} at the same time.",
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "title": "Primary Key",
                                              "description": "Primary Key.",
                                              "type": "string",
                                              "format": "uuid"
                                            },
                                            "nickname": {
                                              "title": "Nickname that uniquely identifies the member",
                                              "description": "Nickname that uniquely identifies the member.",
                                              "type": "string"
                                            },
                                            "emails": {
                                              "title": "List of emails",
                                              "description": "List of emails.",
                                              "type": "array",
                                              "items": {
                                                "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one.",
                                                "type": "object",
                                                "properties": {
                                                  "id": {
                                                    "title": "Primary Key",
                                                    "description": "Primary Key.",
                                                    "type": "string",
                                                    "format": "uuid"
                                                  },
                                                  "value": {
                                                    "title": "Email address value",
                                                    "description": "Email address value.",
                                                    "type": "string",
                                                    "format": "email"
                                                  },
                                                  "created_at": {
                                                    "title": "Creation time of record",
                                                    "description": "Creation time of record.",
                                                    "type": "string",
                                                    "format": "date-time"
                                                  }
                                                },
                                                "required": [
                                                  "id",
                                                  "value",
                                                  "created_at"
                                                ]
                                              }
                                            },
                                            "created_at": {
                                              "title": "Creation time of record",
                                              "description": "Creation time of record.\n\nAnother words, the time when the member has signed up.",
                                              "type": "string",
                                              "format": "date-time"
                                            }
                                          },
                                          "required": [
                                            "id",
                                            "nickname",
                                            "emails",
                                            "created_at"
                                          ]
                                        },
                                        "customer": {
                                          "title": "Customer, the connection information",
                                          "description": "Inverted customer informatino.\n\nThis inverted customer information has been designed to be used for\nanother invert information of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert}\n- {@link IShoppingAdministrator.IInvert}\n\n------------------------------\n\nDescription of the current {@link IShoppingCustomer.IInvert} type:\n\n> Inverted customer informatino.\n> \n> This inverted customer information has been designed to be used for\n> another invert information of sellers and administrators like below.\n> \n> - {@link IShoppingSeller.IInvert}\n> - {@link IShoppingAdministrator.IInvert}\n\n------------------------------\n\nDescription of the parent {@link IShoppingCustomer} type:\n\n> Customer information, but not a person but a connection basis.\n> \n> `IShoppingCustomer` is an entity that literally embodies the information of\n> those who participated in the market as customers. By the way, the\n> `IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\n> even if the same person connects to the shopping mall multiple, multiple\n> records are created in `IShoppingCustomer`.\n> \n> The first purpose of this is to track the customer's inflow path in detail,\n> and it is for cases where the same person enters as a non-member,\n> {@link IShoppingCartCommodity puts items in the shopping cart} in advance,\n> and only authenticates their {@link IShoppingCitizen real name} or\n> registers/logs in at the moment of {@link IShoppingOrderPublish payment}.\n> It is the second. Lastly, it is to accurately track the activities that\n> a person performs at the shopping mall in various ways like below.\n> \n> - Same person comes from an {@link IShoppingExternalUser external service}\n> - Same person creates multiple accounts\n> - Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n> - Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n> \n> Therefore, `IShoppingCustomer` can have multiple records with the same\n> {@link IShoppingCitizen}, {@link IShoppingMember}, and\n> {@link IShoppingExternalUser}. Additionally, if a customer signs up for\n> membership after verifying their real name or signs up for our service after\n> being a user of an external service, all related records are changed at once.\n> Therefore, identification and tracking of customers can be done very\n> systematically.",
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "title": "Primary Key",
                                              "description": "Primary Key.",
                                              "type": "string",
                                              "format": "uuid"
                                            },
                                            "channel": {
                                              "title": "Belonged channel",
                                              "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future.",
                                              "type": "object",
                                              "properties": {
                                                "id": {
                                                  "title": "Primary Key",
                                                  "description": "Primary Key.",
                                                  "type": "string",
                                                  "format": "uuid"
                                                },
                                                "created_at": {
                                                  "title": "Creation time of record",
                                                  "description": "Creation time of record.",
                                                  "type": "string",
                                                  "format": "date-time"
                                                },
                                                "code": {
                                                  "title": "Identifier code",
                                                  "description": "Identifier code.",
                                                  "type": "string"
                                                },
                                                "name": {
                                                  "title": "Name of the channel",
                                                  "description": "Name of the channel.",
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "id",
                                                "created_at",
                                                "code",
                                                "name"
                                              ]
                                            },
                                            "external_user": {
                                              "title": "External user information",
                                              "description": "External user information.\n\nWhen the customer has come frome an external service.",
                                              "oneOf": [
                                                {
                                                  "type": "null"
                                                },
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "id": {
                                                      "title": "Primary Key",
                                                      "description": "Primary Key.",
                                                      "type": "string",
                                                      "format": "uuid"
                                                    },
                                                    "citizen": {
                                                      "title": "Citizen activation info",
                                                      "description": "Citizen activation info.",
                                                      "oneOf": [
                                                        {
                                                          "type": "null"
                                                        },
                                                        {
                                                          "type": "object",
                                                          "properties": {
                                                            "id": {
                                                              "title": "Primary Key",
                                                              "description": "Primary Key.",
                                                              "type": "string",
                                                              "format": "uuid"
                                                            },
                                                            "created_at": {
                                                              "title": "Creation time of record",
                                                              "description": "Creation time of record.",
                                                              "type": "string",
                                                              "format": "date-time"
                                                            },
                                                            "mobile": {
                                                              "title": "Mobile number",
                                                              "description": "Mobile number.",
                                                              "x-wrtn-payment-order-mobile": true,
                                                              "type": "string",
                                                              "pattern": "^[0-9]*$"
                                                            },
                                                            "name": {
                                                              "title": "Real name, or equivalent nickname",
                                                              "description": "Real name, or equivalent nickname.",
                                                              "x-wrtn-payment-order-citizen": true,
                                                              "type": "string"
                                                            }
                                                          },
                                                          "required": [
                                                            "id",
                                                            "created_at",
                                                            "mobile",
                                                            "name"
                                                          ],
                                                          "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile} input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                                                        }
                                                      ]
                                                    },
                                                    "created_at": {
                                                      "title": "Creation time of record",
                                                      "description": "Creation time of record.\n\nAnother word, first time when the external user connected.",
                                                      "type": "string",
                                                      "format": "date-time"
                                                    },
                                                    "uid": {
                                                      "title": "Identifier key of external user from the external system",
                                                      "description": "Identifier key of external user from the external system.",
                                                      "type": "string"
                                                    },
                                                    "application": {
                                                      "title": "Identifier code of the external service",
                                                      "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code} in common.",
                                                      "type": "string"
                                                    },
                                                    "nickname": {
                                                      "title": "Nickname of external user in the external system",
                                                      "description": "Nickname of external user in the external system.",
                                                      "type": "string"
                                                    },
                                                    "data": {
                                                      "description": "Additional information about external user from the external\nsystem."
                                                    }
                                                  },
                                                  "required": [
                                                    "id",
                                                    "citizen",
                                                    "created_at",
                                                    "uid",
                                                    "application",
                                                    "nickname",
                                                    "data"
                                                  ],
                                                  "description": "External user information.\n\n`IShoppingExternalUser` is an entity dsigned for when this system needs\nto connect with external services and welcome their users as\n{@link IShoppingCustomer customers} of this service.\n\nFor reference, customers who connect from an external service must have\nthis record, and the external service user is identified through the two\nattributes {@link application} and {@link uid}. If a customer connected\nfrom an external service completes\n{@link IShoppingCitizen real-name authentication} from this service, each\ntime the external service user reconnects to this service and issues a\nnew customer authentication token, real-name authentication begins with\ncompleted.\n\nAnd {@link password} is the password issued to the user by the external\nservice system (the so-called permanent user authentication token), and\nis never the actual user password. However, for customers who entered the\nsame application and uid as the current external system user, this is to\ndetermine whether to view this as a correct external system user or a\nviolation.\n\nIn addition, additional information received from external services can\nbe recorded in the data field in JSON format."
                                                }
                                              ]
                                            },
                                            "href": {
                                              "title": "Connection address",
                                              "description": "Connection address.\n\nSame with {@link window.location.href} of client.",
                                              "type": "string",
                                              "format": "uri"
                                            },
                                            "referrer": {
                                              "title": "Referrer address",
                                              "description": "Referrer address.\n\nSame with {@link window.document.referrer} of client.",
                                              "oneOf": [
                                                {
                                                  "type": "null"
                                                },
                                                {
                                                  "type": "string",
                                                  "format": "uri"
                                                },
                                                {
                                                  "type": "string",
                                                  "maxLength": 0
                                                }
                                              ]
                                            },
                                            "ip": {
                                              "title": "Connection IP Address",
                                              "description": "Connection IP Address.",
                                              "oneOf": [
                                                {
                                                  "type": "string",
                                                  "format": "ipv4"
                                                },
                                                {
                                                  "type": "string",
                                                  "format": "ipv6"
                                                }
                                              ]
                                            },
                                            "created_at": {
                                              "title": "Creation time of the connection record",
                                              "description": "Creation time of the connection record.",
                                              "type": "string",
                                              "format": "date-time"
                                            }
                                          },
                                          "required": [
                                            "id",
                                            "channel",
                                            "external_user",
                                            "href",
                                            "referrer",
                                            "ip",
                                            "created_at"
                                          ]
                                        },
                                        "citizen": {
                                          "title": "Real-name and mobile number authentication information",
                                          "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile} input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored.",
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "title": "Primary Key",
                                              "description": "Primary Key.",
                                              "type": "string",
                                              "format": "uuid"
                                            },
                                            "created_at": {
                                              "title": "Creation time of record",
                                              "description": "Creation time of record.",
                                              "type": "string",
                                              "format": "date-time"
                                            },
                                            "mobile": {
                                              "title": "Mobile number",
                                              "description": "Mobile number.",
                                              "x-wrtn-payment-order-mobile": true,
                                              "type": "string",
                                              "pattern": "^[0-9]*$"
                                            },
                                            "name": {
                                              "title": "Real name, or equivalent nickname",
                                              "description": "Real name, or equivalent nickname.",
                                              "x-wrtn-payment-order-citizen": true,
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "id",
                                            "created_at",
                                            "mobile",
                                            "name"
                                          ]
                                        },
                                        "id": {
                                          "title": "Primary Key",
                                          "description": "Primary Key.",
                                          "type": "string",
                                          "format": "uuid"
                                        },
                                        "created_at": {
                                          "title": "Creation tmie of record",
                                          "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up.",
                                          "type": "string",
                                          "format": "date-time"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "member",
                                        "customer",
                                        "citizen",
                                        "id",
                                        "created_at"
                                      ]
                                    },
                                    "price_range": {
                                      "title": "Price range of the unit",
                                      "type": "object",
                                      "properties": {
                                        "lowest": {
                                          "description": "Shopping price interface.",
                                          "type": "object",
                                          "properties": {
                                            "nominal": {
                                              "title": "Nominal price",
                                              "description": "Nominal price.\n\nThis is not {@link real real price} to pay, but just a nominal price to show.\nIf this value is greater than the {@link real real price}, it would be shown\nlike {@link IShoppingSeller seller} is giving a discount.",
                                              "type": "number",
                                              "minimum": 0
                                            },
                                            "real": {
                                              "title": "Real price to pay",
                                              "description": "Real price to pay.",
                                              "type": "number",
                                              "minimum": 0
                                            }
                                          },
                                          "required": [
                                            "nominal",
                                            "real"
                                          ]
                                        },
                                        "highest": {
                                          "description": "Shopping price interface.",
                                          "type": "object",
                                          "properties": {
                                            "nominal": {
                                              "title": "Nominal price",
                                              "description": "Nominal price.\n\nThis is not {@link real real price} to pay, but just a nominal price to show.\nIf this value is greater than the {@link real real price}, it would be shown\nlike {@link IShoppingSeller seller} is giving a discount.",
                                              "type": "number",
                                              "minimum": 0
                                            },
                                            "real": {
                                              "title": "Real price to pay",
                                              "description": "Real price to pay.",
                                              "type": "number",
                                              "minimum": 0
                                            }
                                          },
                                          "required": [
                                            "nominal",
                                            "real"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "lowest",
                                        "highest"
                                      ]
                                    },
                                    "id": {
                                      "title": "Primary Key of Sale",
                                      "description": "Primary Key of Sale.",
                                      "type": "string",
                                      "format": "uuid"
                                    },
                                    "snapshot_id": {
                                      "title": "Primary Key of Snapshot",
                                      "description": "Primary Key of Snapshot.",
                                      "type": "string",
                                      "format": "uuid"
                                    },
                                    "latest": {
                                      "title": "Whether the snapshot is the latest one or not",
                                      "description": "Whether the snapshot is the latest one or not.",
                                      "type": "boolean"
                                    },
                                    "content": {
                                      "title": "Description and image content describing the sale",
                                      "description": "Description of the current {@link IShoppingSaleContent} type:\n\n> Content information of sale snapshot.\n> \n> `IShoppingSaleContent` is an entity embodies the description contents\n> of {@link IShoppingSale}.",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "format": "uuid"
                                        },
                                        "title": {
                                          "type": "string"
                                        },
                                        "thumbnails": {
                                          "type": "array",
                                          "items": {
                                            "description": "Attachment File.\n\nEvery attachment files that are managed in current system.\n\nFor reference, it is possible to omit one of file {@link name}\nor {@link extension} like `.gitignore` or `README` case, but not\npossible to omit both of them.",
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "title": "Primary Key",
                                                "description": "Primary Key.",
                                                "type": "string",
                                                "format": "uuid"
                                              },
                                              "created_at": {
                                                "title": "Creation time of attachment file",
                                                "description": "Creation time of attachment file.",
                                                "type": "string",
                                                "format": "date-time"
                                              },
                                              "name": {
                                                "title": "File name, except extension",
                                                "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string.",
                                                "type": "string",
                                                "maxLength": 255
                                              },
                                              "extension": {
                                                "title": "Extension",
                                                "description": "Extension.\n\nPossible to omit like `README` case.",
                                                "oneOf": [
                                                  {
                                                    "type": "null"
                                                  },
                                                  {
                                                    "type": "string",
                                                    "minLength": 1,
                                                    "maxLength": 8
                                                  }
                                                ]
                                              },
                                              "url": {
                                                "title": "URL path of the real file",
                                                "description": "URL path of the real file.",
                                                "type": "string",
                                                "format": "uri",
                                                "contentMediaType": "image/*"
                                              }
                                            },
                                            "required": [
                                              "id",
                                              "created_at",
                                              "name",
                                              "extension",
                                              "url"
                                            ]
                                          }
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "title",
                                        "thumbnails"
                                      ]
                                    },
                                    "channels": {
                                      "title": "List of channels and categories",
                                      "description": "List of channels and categories.\n\nWhich channels and categories the sale is registered to.",
                                      "type": "array",
                                      "items": {
                                        "description": "Target channel (and categories) of sale to sell.\n\n`IShoppingSaleChannel` is an entity that expresses through which\n{@link IShoppingChannel channel} a listing {@link IShoppingSale} is sold.\n\nAlso, if {@link IShoppingChannelCategory categories} are specified, it also\nmeans that the sale be sold. Otherwise, none of the categories of the channel\nbeing specified, it means that every categories of the channel is listing the\ntarget sale.",
                                        "type": "object",
                                        "properties": {
                                          "categories": {
                                            "title": "List of categories of the channel listing the sale",
                                            "description": "List of categories of the channel listing the sale.\n\nIf empty, it means all categories of the channel is listing the sale.",
                                            "type": "array",
                                            "items": {
                                              "$ref": "#/$defs/IShoppingChannelCategory.IInvert"
                                            }
                                          },
                                          "id": {
                                            "title": "Primary Key",
                                            "description": "Primary Key.",
                                            "type": "string",
                                            "format": "uuid"
                                          },
                                          "created_at": {
                                            "title": "Creation time of record",
                                            "description": "Creation time of record.",
                                            "type": "string",
                                            "format": "date-time"
                                          },
                                          "code": {
                                            "title": "Identifier code",
                                            "description": "Identifier code.",
                                            "type": "string"
                                          },
                                          "name": {
                                            "title": "Name of the channel",
                                            "description": "Name of the channel.",
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "categories",
                                          "id",
                                          "created_at",
                                          "code",
                                          "name"
                                        ]
                                      },
                                      "minItems": 1
                                    },
                                    "tags": {
                                      "title": "List of search tags",
                                      "description": "List of search tags.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "units": {
                                      "title": "List of units",
                                      "description": "List of units.\n\nRecords about individual product composition information that are sold\nin the sale. Each {@link IShoppingSaleUnit unit} record has configurable\n{@link IShoppingSaleUnitOption options},\n{@link IShoppingSaleUnitOptionCandidate candidate} values for each\noption, and {@link IShoppingSaleUnitStock final stocks} determined by\nselecting every candidate values of each option.",
                                      "type": "array",
                                      "items": {
                                        "description": "Description of the current {@link IShoppingSaleUnit} type:\n\n> Product composition information handled in the sale.\n> \n> `IShoppingSaleUnit` is an entity that embodies the \"individual product\"\n> information handled in the {@link IShoppingSale sale}.\n> \n> For reference, the reason why `IShoppingSaleUnit` is separated from\n> {@link IShoppingSaleSnapshot} by an algebraic relationship of 1: N is because\n> there are some cases where multiple products are sold in one listing. This is\n> the case with so-called \"bundled products\".\n> \n> - Bundle from regular product (Mackbook Set)\n>   - Main Body\n>   - Keyboard\n>   - Mouse\n>   - Apple Care (Free A/S Voucher)\n> \n> And again, `IShoppingSaleUnit` does not in itself refer to the\n> {@link IShoppingSaleUnitStock final stock} that the\n> {@link IShoppingCustomer customer} will {@link IShoppingOrder purchase}.\n> The final stock can be found only after selecting all given\n> {@link IShoppingSaleUnitOption options} and their\n> {@link IShoppingSaleUnitOptionCandidate candidate values}.\n> \n> For example, even if you buy a Macbook, the final stocks are determined only\n> after selecting all the options (CPU / RAM / SSD), etc.",
                                        "type": "object",
                                        "properties": {
                                          "price_range": {
                                            "type": "object",
                                            "properties": {
                                              "lowest": {
                                                "description": "Shopping price interface.",
                                                "type": "object",
                                                "properties": {
                                                  "nominal": {
                                                    "title": "Nominal price",
                                                    "description": "Nominal price.\n\nThis is not {@link real real price} to pay, but just a nominal price to show.\nIf this value is greater than the {@link real real price}, it would be shown\nlike {@link IShoppingSeller seller} is giving a discount.",
                                                    "type": "number",
                                                    "minimum": 0
                                                  },
                                                  "real": {
                                                    "title": "Real price to pay",
                                                    "description": "Real price to pay.",
                                                    "type": "number",
                                                    "minimum": 0
                                                  }
                                                },
                                                "required": [
                                                  "nominal",
                                                  "real"
                                                ]
                                              },
                                              "highest": {
                                                "description": "Shopping price interface.",
                                                "type": "object",
                                                "properties": {
                                                  "nominal": {
                                                    "title": "Nominal price",
                                                    "description": "Nominal price.\n\nThis is not {@link real real price} to pay, but just a nominal price to show.\nIf this value is greater than the {@link real real price}, it would be shown\nlike {@link IShoppingSeller seller} is giving a discount.",
                                                    "type": "number",
                                                    "minimum": 0
                                                  },
                                                  "real": {
                                                    "title": "Real price to pay",
                                                    "description": "Real price to pay.",
                                                    "type": "number",
                                                    "minimum": 0
                                                  }
                                                },
                                                "required": [
                                                  "nominal",
                                                  "real"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "lowest",
                                              "highest"
                                            ]
                                          },
                                          "id": {
                                            "title": "Primary Key",
                                            "description": "Primary Key.",
                                            "type": "string",
                                            "format": "uuid"
                                          },
                                          "name": {
                                            "title": "Representative name of the unit",
                                            "description": "Representative name of the unit.",
                                            "type": "string"
                                          },
                                          "primary": {
                                            "title": "Whether the unit is primary or not",
                                            "description": "Whether the unit is primary or not.\n\nJust a labeling value.",
                                            "type": "boolean"
                                          },
                                          "required": {
                                            "title": "Whether the unit is required or not",
                                            "description": "Whether the unit is required or not.\n\nWhen the unit is required, the customer must select the unit. If do not\nselect, customer can't buy it.\n\nFor example, if there's a sale \"Macbook Set\" and one of the unit is the\n\"Main Body\", is it possible to buy the \"Macbook Set\" without the\n\"Main Body\" unit? This property is for that case.",
                                            "type": "boolean"
                                          }
                                        },
                                        "required": [
                                          "price_range",
                                          "id",
                                          "name",
                                          "primary",
                                          "required"
                                        ]
                                      },
                                      "minItems": 1
                                    },
                                    "created_at": {
                                      "title": "Creation time of the record",
                                      "description": "Creation time of the record.\n\nNote that, this property is different with {@link opened_at},\nwhich means the timepoint of the sale is opened.",
                                      "type": "string",
                                      "format": "date-time"
                                    },
                                    "updated_at": {
                                      "title": "Last updated time of the record",
                                      "description": "Last updated time of the record.\n\nIn another words, creation time of the last snapshot.",
                                      "type": "string",
                                      "format": "date-time"
                                    },
                                    "paused_at": {
                                      "title": "Paused time of the sale",
                                      "description": "Paused time of the sale.\n\nThe sale is paused by the seller, for some reason.\n\n{@link IShoppingCustomer Customers} can still see the sale on the\nboth list and detail pages, but the sale has a warning label\n\"The sale is paused by the seller\".",
                                      "oneOf": [
                                        {
                                          "type": "null"
                                        },
                                        {
                                          "type": "string",
                                          "format": "date-time"
                                        }
                                      ]
                                    },
                                    "suspended_at": {
                                      "title": "Suspended time of the sale",
                                      "description": "Suspended time of the sale.\n\nThe sale is suspended by the seller, for some reason.\n\n{@link IShoppingCustomer Customers} cannot see the sale on the\nboth list and detail pages. It is almost same with soft delettion,\nbut there's a little bit difference that the owner\n{@link IShoppingSeller seller} can still see the sale and resume it.\n\nOf course, the {@link IShoppingCustomer customers} who have\nalready purchased the sale can still see the sale on the\n{@link IShoppingOrder order} page.",
                                      "oneOf": [
                                        {
                                          "type": "null"
                                        },
                                        {
                                          "type": "string",
                                          "format": "date-time"
                                        }
                                      ]
                                    },
                                    "opened_at": {
                                      "title": "Opening time of the sale",
                                      "description": "Opening time of the sale.",
                                      "oneOf": [
                                        {
                                          "type": "null"
                                        },
                                        {
                                          "type": "string",
                                          "format": "date-time"
                                        }
                                      ]
                                    },
                                    "closed_at": {
                                      "title": "Closing time of the sale",
                                      "description": "Closing time of the sale.\n\nIf this value is `null`, the sale be continued forever.",
                                      "oneOf": [
                                        {
                                          "type": "null"
                                        },
                                        {
                                          "type": "string",
                                          "format": "date-time"
                                        }
                                      ]
                                    }
                                  },
                                  "required": [
                                    "section",
                                    "seller",
                                    "price_range",
                                    "id",
                                    "snapshot_id",
                                    "latest",
                                    "content",
                                    "channels",
                                    "tags",
                                    "units",
                                    "created_at",
                                    "updated_at",
                                    "paused_at",
                                    "suspended_at",
                                    "opened_at",
                                    "closed_at"
                                  ]
                                },
                                "minItems": 1
                              },
                              "type": {
                                "title": "Descrimanator type",
                                "description": "Descrimanator type.",
                                "const": "sale"
                              },
                              "direction": {
                                "title": "Direction of the criteria",
                                "description": "Direction of the criteria.",
                                "oneOf": [
                                  {
                                    "const": "include"
                                  },
                                  {
                                    "const": "exclude"
                                  }
                                ]
                              }
                            },
                            "required": [
                              "sales",
                              "type",
                              "direction"
                            ],
                            "description": "Conditions for sales of discount coupons.\n\n`IShoppingCouponSaleCriteria` is a subtype entity of\n{@link IShoppingCouponCriteriaBase} and is used when setting conditions\nfor a specific {@link IShoppingSale sale}.\n\nIf the {@link direction} value is \"include\", the coupon can only be used\nfor the target {@link sales}. Conversely, if it is \"exclude\", the\ncoupon cannot be used."
                          },
                          {
                            "type": "object",
                            "properties": {
                              "funnels": {
                                "title": "List of target funnels",
                                "description": "List of target funnels.",
                                "type": "array",
                                "items": {
                                  "oneOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "kind": {
                                          "title": "Kind of funnel restriction",
                                          "description": "Kind of funnel restriction.",
                                          "oneOf": [
                                            {
                                              "const": "url"
                                            },
                                            {
                                              "const": "referrer"
                                            }
                                          ]
                                        },
                                        "value": {
                                          "title": "Target value",
                                          "description": "Target value.",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "kind",
                                        "value"
                                      ],
                                      "description": "Kind of funnel restriction by a value.\n\n------------------------------\n\nDescription of the current {@link IShoppingCouponFunnelCriteria.IValueFunnel} type:\n\n> Kind of funnel restriction by a value.\n\n------------------------------\n\nDescription of the parent {@link IShoppingCouponFunnelCriteria} type:\n\n> Limit the funnel of discount coupons.\n> \n> `ishoppingcouponfunnelcriteria` is a subtype entity of\n> {@link IShoppingCouponCriteria}, and is used when you want to issue or\n> exclude discount coupons only to {@link IShoppingCustomer customers} who\n> came from a specific path.\n> \n> And funnel restrictions are possible in 3 ways: The first is\n> {@link IShoppingCustomer.referrer}, and by parsing\n> {@link IShoppingCustomer.href}, which records the customer's access\n> address, restrictions can be made in units of specific URLs or variables."
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "kind": {
                                          "title": "Kind of funnel restriction",
                                          "description": "Kind of funnel restriction.",
                                          "const": "variable"
                                        },
                                        "key": {
                                          "title": "Target variable's key",
                                          "description": "Target variable's key.",
                                          "type": "string"
                                        },
                                        "value": {
                                          "title": "Target variable's value",
                                          "description": "Target variable's value.",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "kind",
                                        "key",
                                        "value"
                                      ],
                                      "description": "Kind of funnel restriction by a variable.\n\n------------------------------\n\nDescription of the current {@link IShoppingCouponFunnelCriteria.IVariableFunnel} type:\n\n> Kind of funnel restriction by a variable.\n\n------------------------------\n\nDescription of the parent {@link IShoppingCouponFunnelCriteria} type:\n\n> Limit the funnel of discount coupons.\n> \n> `ishoppingcouponfunnelcriteria` is a subtype entity of\n> {@link IShoppingCouponCriteria}, and is used when you want to issue or\n> exclude discount coupons only to {@link IShoppingCustomer customers} who\n> came from a specific path.\n> \n> And funnel restrictions are possible in 3 ways: The first is\n> {@link IShoppingCustomer.referrer}, and by parsing\n> {@link IShoppingCustomer.href}, which records the customer's access\n> address, restrictions can be made in units of specific URLs or variables."
                                    }
                                  ]
                                },
                                "minItems": 1
                              },
                              "type": {
                                "title": "Descrimanator type",
                                "description": "Descrimanator type.",
                                "const": "funnel"
                              },
                              "direction": {
                                "title": "Direction of the criteria",
                                "description": "Direction of the criteria.",
                                "oneOf": [
                                  {
                                    "const": "include"
                                  },
                                  {
                                    "const": "exclude"
                                  }
                                ]
                              }
                            },
                            "required": [
                              "funnels",
                              "type",
                              "direction"
                            ],
                            "description": "Limit the funnel of discount coupons.\n\n`ishoppingcouponfunnelcriteria` is a subtype entity of\n{@link IShoppingCouponCriteria}, and is used when you want to issue or\nexclude discount coupons only to {@link IShoppingCustomer customers} who\ncame from a specific path.\n\nAnd funnel restrictions are possible in 3 ways: The first is\n{@link IShoppingCustomer.referrer}, and by parsing\n{@link IShoppingCustomer.href}, which records the customer's access\naddress, restrictions can be made in units of specific URLs or variables."
                          }
                        ]
                      }
                    },
                    "discount": {
                      "title": "Discount information",
                      "description": "Discount information.",
                      "oneOf": [
                        {
                          "type": "object",
                          "properties": {
                            "unit": {
                              "title": "Discount unit as amount",
                              "description": "Discount unit as amount.\n\nIt means the order price would be discounted by the amount value.",
                              "const": "amount"
                            },
                            "value": {
                              "title": "Discount value as amount",
                              "description": "Discount value as amount.",
                              "type": "number"
                            },
                            "threshold": {
                              "title": "Minimum purchase amount for discount",
                              "description": "Minimum purchase amount for discount.\n\nWhen setting this value, discount coupons cannot be applied to\norder totals that are less than this value.",
                              "oneOf": [
                                {
                                  "type": "null"
                                },
                                {
                                  "type": "number",
                                  "minimum": 0
                                }
                              ]
                            },
                            "limit": {
                              "title": "Maximum amount available for discount",
                              "description": "Maximum amount available for discount.\n\nWhen this value is set, no further discount will be given no\nmatter how much you order. This property would be meaningful\nonly when the {@link multiplicative} is `true`.",
                              "oneOf": [
                                {
                                  "type": "null"
                                },
                                {
                                  "type": "number",
                                  "exclusiveMinimum": true,
                                  "minimum": 0
                                }
                              ]
                            },
                            "multiplicative": {
                              "title": "Multiplicative or not",
                              "description": "Multiplicative or not.\n\nIf this property is `true`, the discount value would be multiplied\nto the {@link IShoppingCartCommodity.volume} or\n{@link IShoppingOrderGood.volume} value. Also, in that case,\nthe {@link limit} property would be meaningful.",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "unit",
                            "value",
                            "threshold",
                            "limit",
                            "multiplicative"
                          ],
                          "description": "Discount information with amount unit.\n\n------------------------------\n\nDescription of the current {@link IShoppingCouponDiscount.IAmount} type:\n\n> Discount information with amount unit."
                        },
                        {
                          "type": "object",
                          "properties": {
                            "unit": {
                              "title": "Discount unit as percent",
                              "description": "Discount unit as percent.\n\nIt means the order price would be discounted by the percent value.",
                              "const": "percent"
                            },
                            "value": {
                              "title": "Discount value as percent",
                              "description": "Discount value as percent.",
                              "type": "number",
                              "minimum": 0,
                              "maximum": 100
                            },
                            "threshold": {
                              "title": "Minimum purchase amount for discount",
                              "description": "Minimum purchase amount for discount.\n\nWhen setting this value, discount coupons cannot be applied to\norder totals that are less than this value.",
                              "oneOf": [
                                {
                                  "type": "null"
                                },
                                {
                                  "type": "number",
                                  "minimum": 0
                                }
                              ]
                            },
                            "limit": {
                              "title": "Maximum amount available for discount",
                              "description": "Maximum amount available for discount.\n\nWhen this value is set, no further discount will be given no\nmatter how much you order.",
                              "oneOf": [
                                {
                                  "type": "null"
                                },
                                {
                                  "type": "number",
                                  "exclusiveMinimum": true,
                                  "minimum": 0
                                }
                              ]
                            }
                          },
                          "required": [
                            "unit",
                            "value",
                            "threshold",
                            "limit"
                          ],
                          "description": "Discount information with percent unit.\n\n------------------------------\n\nDescription of the current {@link IShoppingCouponDiscount.IPercent} type:\n\n> Discount information with percent unit."
                        }
                      ]
                    },
                    "restriction": {
                      "title": "Restriction information",
                      "description": "Restriction information of the coupon.",
                      "type": "object",
                      "properties": {
                        "access": {
                          "title": "Access level of coupon",
                          "description": "Access level of coupon.\n\n- public: possible to find from public API\n- private: unable to find from public API\n  - arbitrarily assigned by the seller or administrator\n  - issued from one-time link",
                          "oneOf": [
                            {
                              "const": "public"
                            },
                            {
                              "const": "private"
                            }
                          ]
                        },
                        "exclusive": {
                          "title": "Exclusivity or not",
                          "description": "Exclusivity or not.\n\nAn exclusive discount coupon refers to a discount coupon that has an\nexclusive relationship with other discount coupons and can only be\nused alone. That is, when an exclusive discount coupon is used, no\nother discount coupon can be used for the same\n{@link IShoppingOrder order} or {@link IShoppingOrderGood good}.\n\nPlease note that this exclusive attribute is a very different concept\nfrom multiplicative, which means whether the same coupon can be\nmultiplied and applied to multiple coupons of the same order, so\nplease do not confuse them.",
                          "type": "boolean"
                        },
                        "volume": {
                          "title": "Limited quantity issued",
                          "description": "Limited quantity issued.\n\nIf there is a limit to the quantity issued, it becomes impossible to issue tickets exceeding this value.\n\nIn other words, the concept of N coupons being issued on a first-come, first-served basis is created.",
                          "oneOf": [
                            {
                              "type": "null"
                            },
                            {
                              "type": "integer"
                            }
                          ]
                        },
                        "volume_per_citizen": {
                          "title": "Limited quantity issued per person",
                          "description": "Limited quantity issued per person.\n\nAs a limit to the total amount of issuance per person, it is common to assign 1 to limit duplicate issuance to the same citizen, or to use the NULL value to set no limit.\n\nOf course, by assigning a value of N, the total amount issued to the same citizen can be limited.",
                          "oneOf": [
                            {
                              "type": "null"
                            },
                            {
                              "type": "integer"
                            }
                          ]
                        },
                        "expired_in": {
                          "title": "Expiration day(s) value",
                          "description": "Expiration day(s) value.\n\nThe concept of expiring N days after a discount coupon ticket is issued.\n\nTherefore, customers must use the ticket within N days, if possible, from the time it is issued.",
                          "oneOf": [
                            {
                              "type": "null"
                            },
                            {
                              "type": "integer"
                            }
                          ]
                        },
                        "expired_at": {
                          "title": "Expiration date",
                          "description": "Expiration date.\n\nA concept that expires after YYYY-MM-DD after a discount coupon ticket is issued.\n\nDouble restrictions are possible with expired_in, of which the one with the shorter expiration date is used.",
                          "oneOf": [
                            {
                              "type": "null"
                            },
                            {
                              "type": "string",
                              "format": "date-time"
                            }
                          ]
                        }
                      },
                      "required": [
                        "access",
                        "exclusive",
                        "volume",
                        "volume_per_citizen",
                        "expired_in",
                        "expired_at"
                      ]
                    },
                    "name": {
                      "title": "Representative name of the coupon",
                      "description": "Representative name of the coupon.",
                      "type": "string"
                    },
                    "opened_at": {
                      "title": "Opening time of the coupon",
                      "description": "Opening time of the coupon.",
                      "oneOf": [
                        {
                          "type": "null"
                        },
                        {
                          "type": "string",
                          "format": "date-time"
                        }
                      ]
                    },
                    "closed_at": {
                      "title": "Closing time of the coupon",
                      "description": "Closing time of the coupon.\n\nTickets cannot be issued after this time.\n\nHowever, previously issued tickets can still be used until their\nexpiration date.",
                      "oneOf": [
                        {
                          "type": "null"
                        },
                        {
                          "type": "string",
                          "format": "date-time"
                        }
                      ]
                    },
                    "created_at": {
                      "title": "Creation tie of the record",
                      "description": "Creation tie of the record.",
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "required": [
                    "id",
                    "designer",
                    "inventory",
                    "criterias",
                    "discount",
                    "restriction",
                    "name",
                    "opened_at",
                    "closed_at",
                    "created_at"
                  ]
                }
              },
              "tickets": {
                "type": "array",
                "items": {
                  "description": "Discount coupon ticket issuance details.\n\n`IShoppingCouponTicket` is an entity that symbolizes\n{@link IShoppingCoupon discount coupon} tickets issued by\n{@link IShoppingCustomer customers}.\n\nAnd if the target discount coupon specification itself has an expiration\ndate, the expiration date is recorded in expired_at and is automatically\ndiscarded after that expiration date. Of course, it doesn't matter if you\nuse the discount coupon for your order within the deadline.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "Primary Key",
                      "description": "Primary Key.",
                      "type": "string",
                      "format": "uuid"
                    },
                    "customer": {
                      "title": "Customer who've taken the coupon ticket",
                      "description": "Customer information, but not a person but a connection basis.\n\n`IShoppingCustomer` is an entity that literally embodies the information of\nthose who participated in the market as customers. By the way, the\n`IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\neven if the same person connects to the shopping mall multiple, multiple\nrecords are created in `IShoppingCustomer`.\n\nThe first purpose of this is to track the customer's inflow path in detail,\nand it is for cases where the same person enters as a non-member,\n{@link IShoppingCartCommodity puts items in the shopping cart} in advance,\nand only authenticates their {@link IShoppingCitizen real name} or\nregisters/logs in at the moment of {@link IShoppingOrderPublish payment}.\nIt is the second. Lastly, it is to accurately track the activities that\na person performs at the shopping mall in various ways like below.\n\n- Same person comes from an {@link IShoppingExternalUser external service}\n- Same person creates multiple accounts\n- Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n- Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n\nTherefore, `IShoppingCustomer` can have multiple records with the same\n{@link IShoppingCitizen}, {@link IShoppingMember}, and\n{@link IShoppingExternalUser}. Additionally, if a customer signs up for\nmembership after verifying their real name or signs up for our service after\nbeing a user of an external service, all related records are changed at once.\nTherefore, identification and tracking of customers can be done very\nsystematically.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "title": "Discriminant for the type of customer",
                          "description": "Discriminant for the type of customer.",
                          "const": "customer"
                        },
                        "member": {
                          "title": "Membership information",
                          "description": "Membership information.\n\nIf the customer has joined as a member.",
                          "oneOf": [
                            {
                              "type": "null"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "citizen": {
                                  "title": "Citizen information",
                                  "description": "Citizen information.\n\nOnly when has verified as a citizen, with mobile number and real name.\n\nFor reference, if the member has signed up as a seller or administrator,\nthis citizen information must be.",
                                  "oneOf": [
                                    {
                                      "type": "null"
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "title": "Primary Key",
                                          "description": "Primary Key.",
                                          "type": "string",
                                          "format": "uuid"
                                        },
                                        "created_at": {
                                          "title": "Creation time of record",
                                          "description": "Creation time of record.",
                                          "type": "string",
                                          "format": "date-time"
                                        },
                                        "mobile": {
                                          "title": "Mobile number",
                                          "description": "Mobile number.",
                                          "x-wrtn-payment-order-mobile": true,
                                          "type": "string",
                                          "pattern": "^[0-9]*$"
                                        },
                                        "name": {
                                          "title": "Real name, or equivalent nickname",
                                          "description": "Real name, or equivalent nickname.",
                                          "x-wrtn-payment-order-citizen": true,
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "created_at",
                                        "mobile",
                                        "name"
                                      ],
                                      "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile} input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                                    }
                                  ]
                                },
                                "seller": {
                                  "title": "Seller information",
                                  "description": "Seller information.\n\nIf the member also signed up as a seller.",
                                  "oneOf": [
                                    {
                                      "type": "null"
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "title": "Primary Key",
                                          "description": "Primary Key.",
                                          "type": "string",
                                          "format": "uuid"
                                        },
                                        "created_at": {
                                          "title": "Creation tmie of record",
                                          "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up.",
                                          "type": "string",
                                          "format": "date-time"
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "created_at"
                                      ],
                                      "description": "Seller information.\n\n`IShoppingSeller` is an entity that embodies a person who registers\n{@link IShoppingSale sales} to operate selling activities, with\n{@link IShoppingMember membership} joining.\n\nFor reference, unlike {@link IShoppingCustomer customers} which can\nparticipate even without membership joining, seller must join membership\nto operate sales. Also, seller must do the\n{@link IShoppingCitizen real-name and mobile authentication}, too."
                                    }
                                  ]
                                },
                                "administrator": {
                                  "title": "Administrator information",
                                  "description": "Administrator information.\n\nIf the member also signed up as an administrator.",
                                  "oneOf": [
                                    {
                                      "type": "null"
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "title": "Primary Key",
                                          "description": "Primary Key.",
                                          "type": "string",
                                          "format": "uuid"
                                        },
                                        "created_at": {
                                          "title": "Creation time of record",
                                          "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up.",
                                          "type": "string",
                                          "format": "date-time"
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "created_at"
                                      ],
                                      "description": "Administrator account.\n\n`IShoppingAdministrator` is an entity that embodies a person who manages\nthe shopping mall system, with {@link IShoppingMember membership} joining.\n\nFor reference, unlike {@link IShoppingCustomer customers} which can participate\neven without membership joining, administrator must join membership to operate\nmanagements. Also, administrator must perform the\n{@link IShoppingCitizen real-name and mobile authentication}, too."
                                    }
                                  ]
                                },
                                "id": {
                                  "title": "Primary Key",
                                  "description": "Primary Key.",
                                  "type": "string",
                                  "format": "uuid"
                                },
                                "nickname": {
                                  "title": "Nickname that uniquely identifies the member",
                                  "description": "Nickname that uniquely identifies the member.",
                                  "type": "string"
                                },
                                "emails": {
                                  "title": "List of emails",
                                  "description": "List of emails.",
                                  "type": "array",
                                  "items": {
                                    "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one.",
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "title": "Primary Key",
                                        "description": "Primary Key.",
                                        "type": "string",
                                        "format": "uuid"
                                      },
                                      "value": {
                                        "title": "Email address value",
                                        "description": "Email address value.",
                                        "type": "string",
                                        "format": "email"
                                      },
                                      "created_at": {
                                        "title": "Creation time of record",
                                        "description": "Creation time of record.",
                                        "type": "string",
                                        "format": "date-time"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "value",
                                      "created_at"
                                    ]
                                  }
                                },
                                "created_at": {
                                  "title": "Creation time of record",
                                  "description": "Creation time of record.\n\nAnother words, the time when the member has signed up.",
                                  "type": "string",
                                  "format": "date-time"
                                }
                              },
                              "required": [
                                "citizen",
                                "seller",
                                "administrator",
                                "id",
                                "nickname",
                                "emails",
                                "created_at"
                              ],
                              "description": "Member Account.\n\n`IShoppingMember` is an entity that symbolizes the case when a\n{@link IShoppingCustomer} signs up as a member of this shopping mall\nsystem.\n\nIf a `IShoppingMember` has seller or administrator property. it means that\nthe {@link IShoppingCustomer} has acting as a {@link IShoppingSeller seller}\nor {@link IShoppingAdministrator administrator} at the same time."
                            }
                          ]
                        },
                        "citizen": {
                          "title": "Citizen information",
                          "description": "Citizen information.\n\nIf the customer has verified his real name and mobile number.",
                          "oneOf": [
                            {
                              "type": "null"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "title": "Primary Key",
                                  "description": "Primary Key.",
                                  "type": "string",
                                  "format": "uuid"
                                },
                                "created_at": {
                                  "title": "Creation time of record",
                                  "description": "Creation time of record.",
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "mobile": {
                                  "title": "Mobile number",
                                  "description": "Mobile number.",
                                  "x-wrtn-payment-order-mobile": true,
                                  "type": "string",
                                  "pattern": "^[0-9]*$"
                                },
                                "name": {
                                  "title": "Real name, or equivalent nickname",
                                  "description": "Real name, or equivalent nickname.",
                                  "x-wrtn-payment-order-citizen": true,
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "created_at",
                                "mobile",
                                "name"
                              ],
                              "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile} input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                            }
                          ]
                        },
                        "id": {
                          "title": "Primary Key",
                          "description": "Primary Key.",
                          "type": "string",
                          "format": "uuid"
                        },
                        "channel": {
                          "title": "Belonged channel",
                          "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future.",
                          "type": "object",
                          "properties": {
                            "id": {
                              "title": "Primary Key",
                              "description": "Primary Key.",
                              "type": "string",
                              "format": "uuid"
                            },
                            "created_at": {
                              "title": "Creation time of record",
                              "description": "Creation time of record.",
                              "type": "string",
                              "format": "date-time"
                            },
                            "code": {
                              "title": "Identifier code",
                              "description": "Identifier code.",
                              "type": "string"
                            },
                            "name": {
                              "title": "Name of the channel",
                              "description": "Name of the channel.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "created_at",
                            "code",
                            "name"
                          ]
                        },
                        "external_user": {
                          "title": "External user information",
                          "description": "External user information.\n\nWhen the customer has come frome an external service.",
                          "oneOf": [
                            {
                              "type": "null"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "title": "Primary Key",
                                  "description": "Primary Key.",
                                  "type": "string",
                                  "format": "uuid"
                                },
                                "citizen": {
                                  "title": "Citizen activation info",
                                  "description": "Citizen activation info.",
                                  "oneOf": [
                                    {
                                      "type": "null"
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "title": "Primary Key",
                                          "description": "Primary Key.",
                                          "type": "string",
                                          "format": "uuid"
                                        },
                                        "created_at": {
                                          "title": "Creation time of record",
                                          "description": "Creation time of record.",
                                          "type": "string",
                                          "format": "date-time"
                                        },
                                        "mobile": {
                                          "title": "Mobile number",
                                          "description": "Mobile number.",
                                          "x-wrtn-payment-order-mobile": true,
                                          "type": "string",
                                          "pattern": "^[0-9]*$"
                                        },
                                        "name": {
                                          "title": "Real name, or equivalent nickname",
                                          "description": "Real name, or equivalent nickname.",
                                          "x-wrtn-payment-order-citizen": true,
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "created_at",
                                        "mobile",
                                        "name"
                                      ],
                                      "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile} input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                                    }
                                  ]
                                },
                                "created_at": {
                                  "title": "Creation time of record",
                                  "description": "Creation time of record.\n\nAnother word, first time when the external user connected.",
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "uid": {
                                  "title": "Identifier key of external user from the external system",
                                  "description": "Identifier key of external user from the external system.",
                                  "type": "string"
                                },
                                "application": {
                                  "title": "Identifier code of the external service",
                                  "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code} in common.",
                                  "type": "string"
                                },
                                "nickname": {
                                  "title": "Nickname of external user in the external system",
                                  "description": "Nickname of external user in the external system.",
                                  "type": "string"
                                },
                                "data": {
                                  "description": "Additional information about external user from the external\nsystem."
                                }
                              },
                              "required": [
                                "id",
                                "citizen",
                                "created_at",
                                "uid",
                                "application",
                                "nickname",
                                "data"
                              ],
                              "description": "External user information.\n\n`IShoppingExternalUser` is an entity dsigned for when this system needs\nto connect with external services and welcome their users as\n{@link IShoppingCustomer customers} of this service.\n\nFor reference, customers who connect from an external service must have\nthis record, and the external service user is identified through the two\nattributes {@link application} and {@link uid}. If a customer connected\nfrom an external service completes\n{@link IShoppingCitizen real-name authentication} from this service, each\ntime the external service user reconnects to this service and issues a\nnew customer authentication token, real-name authentication begins with\ncompleted.\n\nAnd {@link password} is the password issued to the user by the external\nservice system (the so-called permanent user authentication token), and\nis never the actual user password. However, for customers who entered the\nsame application and uid as the current external system user, this is to\ndetermine whether to view this as a correct external system user or a\nviolation.\n\nIn addition, additional information received from external services can\nbe recorded in the data field in JSON format."
                            }
                          ]
                        },
                        "href": {
                          "title": "Connection address",
                          "description": "Connection address.\n\nSame with {@link window.location.href} of client.",
                          "type": "string",
                          "format": "uri"
                        },
                        "referrer": {
                          "title": "Referrer address",
                          "description": "Referrer address.\n\nSame with {@link window.document.referrer} of client.",
                          "oneOf": [
                            {
                              "type": "null"
                            },
                            {
                              "type": "string",
                              "format": "uri"
                            },
                            {
                              "type": "string",
                              "maxLength": 0
                            }
                          ]
                        },
                        "ip": {
                          "title": "Connection IP Address",
                          "description": "Connection IP Address.",
                          "oneOf": [
                            {
                              "type": "string",
                              "format": "ipv4"
                            },
                            {
                              "type": "string",
                              "format": "ipv6"
                            }
                          ]
                        },
                        "created_at": {
                          "title": "Creation time of the connection record",
                          "description": "Creation time of the connection record.",
                          "type": "string",
                          "format": "date-time"
                        }
                      },
                      "required": [
                        "type",
                        "member",
                        "citizen",
                        "id",
                        "channel",
                        "external_user",
                        "href",
                        "referrer",
                        "ip",
                        "created_at"
                      ]
                    },
                    "coupon": {
                      "title": "Target coupon",
                      "description": "Discount coupon.\n\n`IShoppingCoupon` is an entity that symbolizes discount coupons at\na shopping mall.\n\nNote that, `IShoppingCoupon` only contains specification information\nabout discount coupons. Please keep in mind that this is a different\nconcept from {@link IShoppingCouponTicket}, which refers to the issuance\nof a discount coupon, or {@link IShoppingCouponTicketPayment}, which\nrefers to its payment.\n\nAdditionally, discount coupons are applied on an order-by-order basis,\nbut each has its own unique restrictions. For example, a coupon with\n{@link IShoppingCouponSellerCriteria} may or may not be used only for\n{@link IShoppingSale} of listings registered by the {@link IShoppingSeller}.\nAlso, there are restrictions such as\n{@link IShoppingCouponDiscount.threshold minimum amount restrictions} for\nusing discount coupons and\n{@link IShoppingCouponDiscount.limit maximum discount amount limits}.\n\nIn addition, you can set whether to issue discount coupons publicly or\ngive them only to people who know the specific issuing code. In addition,\nthere are restrictions such as issued discount coupons having an\n{@link IShoppingCouponRestriction.expired_at expiration date} or being\nissued only to customers who came in through a\n{@link IShoppingCouponFunnelCriteria specific funnel}.\n\nFor more information, please refer to the properties below and the\nsubsidiary entities described later.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "title": "Primary Key",
                          "description": "Primary Key.",
                          "type": "string",
                          "format": "uuid"
                        },
                        "designer": {
                          "title": "Designer who've made the coupon",
                          "description": "Designer who've made the coupon.",
                          "oneOf": [
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "title": "Primary Key",
                                  "description": "Primary Key.",
                                  "type": "string",
                                  "format": "uuid"
                                },
                                "created_at": {
                                  "title": "Creation time of record",
                                  "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up.",
                                  "type": "string",
                                  "format": "date-time"
                                }
                              },
                              "required": [
                                "id",
                                "created_at"
                              ],
                              "description": "Administrator account.\n\n`IShoppingAdministrator` is an entity that embodies a person who manages\nthe shopping mall system, with {@link IShoppingMember membership} joining.\n\nFor reference, unlike {@link IShoppingCustomer customers} which can participate\neven without membership joining, administrator must join membership to operate\nmanagements. Also, administrator must perform the\n{@link IShoppingCitizen real-name and mobile authentication}, too."
                            },
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "title": "Primary Key",
                                  "description": "Primary Key.",
                                  "type": "string",
                                  "format": "uuid"
                                },
                                "created_at": {
                                  "title": "Creation tmie of record",
                                  "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up.",
                                  "type": "string",
                                  "format": "date-time"
                                }
                              },
                              "required": [
                                "id",
                                "created_at"
                              ],
                              "description": "Seller information.\n\n`IShoppingSeller` is an entity that embodies a person who registers\n{@link IShoppingSale sales} to operate selling activities, with\n{@link IShoppingMember membership} joining.\n\nFor reference, unlike {@link IShoppingCustomer customers} which can\nparticipate even without membership joining, seller must join membership\nto operate sales. Also, seller must do the\n{@link IShoppingCitizen real-name and mobile authentication}, too."
                            }
                          ]
                        },
                        "inventory": {
                          "title": "Inventory information",
                          "description": "Inventory information of the coupon.\n\nIf a {@link IShoppingCoupon coupon} has been designed with limited\ninventory, this `IShoppingCouponInventory` structure represents the\nremaining inventory information.",
                          "type": "object",
                          "properties": {
                            "volume": {
                              "title": "Remaining volume for everyone",
                              "description": "Remaining volume for everyone.\n\nIf there is a limit to the quantity issued, it becomes impossible to\nissue tickets exceeding this value.\n\nIn other words, the concept of N coupons being issued on a first-come,\nfirst-served basis is created.",
                              "oneOf": [
                                {
                                  "type": "null"
                                },
                                {
                                  "type": "integer"
                                }
                              ]
                            },
                            "volume_per_citizen": {
                              "title": "Remaining volume per citizen",
                              "description": "Remaining volume per citizen.\n\nAs a limit to the total amount of issuance per person, it is common to\nassign 1 to limit duplicate issuance to the same citizen, or to use the\n`nul`` value to set no limit.\n\nOf course, by assigning a value of N, the total amount issued to the\nsame citizen can be limited.",
                              "oneOf": [
                                {
                                  "type": "null"
                                },
                                {
                                  "type": "integer"
                                }
                              ]
                            }
                          },
                          "required": [
                            "volume",
                            "volume_per_citizen"
                          ]
                        },
                        "criterias": {
                          "title": "List of criteria information",
                          "description": "List of criteria information.",
                          "type": "array",
                          "items": {
                            "oneOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "channels": {
                                    "title": "List of target channels and categories",
                                    "description": "List of target channels and categories.",
                                    "type": "array",
                                    "items": {
                                      "description": "Description of the current {@link IShoppingCouponChannelCriteria} type:\n\n> Conditions for channels of discount coupons.\n> \n> `ishoppingcouponchannelcriteria` is a subtype entity of\n> {@link IShoppingCouponCriteriaBase} and is used when setting conditions on\n> a specific {@link IShoppingChannel channel} or\n> {@link IShoppingChannelCategory category} of that channel.\n> \n> If the {@link direction} value is \"include\", the coupon can only be used\n> for the target channels (or categories). Conversely, if it is \"exclude\",\n> it is a coupon that cannot be used.",
                                      "type": "object",
                                      "properties": {
                                        "channel": {
                                          "title": "Target channel",
                                          "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future.",
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "title": "Primary Key",
                                              "description": "Primary Key.",
                                              "type": "string",
                                              "format": "uuid"
                                            },
                                            "created_at": {
                                              "title": "Creation time of record",
                                              "description": "Creation time of record.",
                                              "type": "string",
                                              "format": "date-time"
                                            },
                                            "code": {
                                              "title": "Identifier code",
                                              "description": "Identifier code.",
                                              "type": "string"
                                            },
                                            "name": {
                                              "title": "Name of the channel",
                                              "description": "Name of the channel.",
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "id",
                                            "created_at",
                                            "code",
                                            "name"
                                          ]
                                        },
                                        "categories": {
                                          "title": "List of target categories",
                                          "description": "List of target categories.",
                                          "oneOf": [
                                            {
                                              "type": "null"
                                            },
                                            {
                                              "type": "array",
                                              "items": {
                                                "$ref": "#/$defs/IShoppingChannelCategory.IInvert"
                                              },
                                              "minItems": 1
                                            }
                                          ]
                                        }
                                      },
                                      "required": [
                                        "channel",
                                        "categories"
                                      ]
                                    },
                                    "minItems": 1
                                  },
                                  "type": {
                                    "title": "Descrimanator type",
                                    "description": "Descrimanator type.",
                                    "const": "channel"
                                  },
                                  "direction": {
                                    "title": "Direction of the criteria",
                                    "description": "Direction of the criteria.",
                                    "oneOf": [
                                      {
                                        "const": "include"
                                      },
                                      {
                                        "const": "exclude"
                                      }
                                    ]
                                  }
                                },
                                "required": [
                                  "channels",
                                  "type",
                                  "direction"
                                ],
                                "description": "Conditions for channels of discount coupons.\n\n`ishoppingcouponchannelcriteria` is a subtype entity of\n{@link IShoppingCouponCriteriaBase} and is used when setting conditions on\na specific {@link IShoppingChannel channel} or\n{@link IShoppingChannelCategory category} of that channel.\n\nIf the {@link direction} value is \"include\", the coupon can only be used\nfor the target channels (or categories). Conversely, if it is \"exclude\",\nit is a coupon that cannot be used."
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "sections": {
                                    "title": "Target sections to include or exclude",
                                    "description": "Target sections to include or exclude.",
                                    "type": "array",
                                    "items": {
                                      "description": "Section information.\n\n`IShoppingSection` is a concept that refers to the spatial information of\nthe market.\n\nIf we compare the section mentioned here to the offline market, it means a\nspatially separated area within the store, such as the \"fruit corner\" or\n\"butcher corner\". Therefore, in the {@link IShoppingSale sale} entity, it is\nnot possible to classify multiple sections simultaneously, but only one section\ncan be classified.\n\nBy the way, if your shopping mall system requires only one section, then just\nuse only one. This concept is designed to be expandable in the future.",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "title": "Primary Key",
                                          "description": "Primary Key.",
                                          "type": "string",
                                          "format": "uuid"
                                        },
                                        "code": {
                                          "title": "Identifier code",
                                          "description": "Identifier code.",
                                          "type": "string"
                                        },
                                        "name": {
                                          "title": "Representative name of the section",
                                          "description": "Representative name of the section.",
                                          "type": "string"
                                        },
                                        "created_at": {
                                          "title": "Creation time of record",
                                          "description": "Creation time of record.",
                                          "type": "string",
                                          "format": "date-time"
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "code",
                                        "name",
                                        "created_at"
                                      ]
                                    },
                                    "minItems": 1
                                  },
                                  "type": {
                                    "title": "Descrimanator type",
                                    "description": "Descrimanator type.",
                                    "const": "section"
                                  },
                                  "direction": {
                                    "title": "Direction of the criteria",
                                    "description": "Direction of the criteria.",
                                    "oneOf": [
                                      {
                                        "const": "include"
                                      },
                                      {
                                        "const": "exclude"
                                      }
                                    ]
                                  }
                                },
                                "required": [
                                  "sections",
                                  "type",
                                  "direction"
                                ],
                                "description": "Conditions for sections of discount coupons.\n\n`IShoppingCouponSectionCriteria` is a subtype entity of\n{@link IShoppingCouponCriteriaBase} and is used when setting conditions\nfor a specific {@link IShoppingSection section}.\n\nIf the {@link direction} value is \"include\", the coupon can only be used\nfor the target {@link sections}. Conversely, if it is \"exclude\", the\ncoupon cannot be used."
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "sellers": {
                                    "title": "Target sellers to include or exclude",
                                    "description": "Target sellers to include or exclude.",
                                    "type": "array",
                                    "items": {
                                      "description": "Seller information.\n\n`IShoppingSeller` is an entity that embodies a person who registers\n{@link IShoppingSale sales} to operate selling activities, with\n{@link IShoppingMember membership} joining.\n\nFor reference, unlike {@link IShoppingCustomer customers} which can\nparticipate even without membership joining, seller must join membership\nto operate sales. Also, seller must do the\n{@link IShoppingCitizen real-name and mobile authentication}, too.",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "title": "Primary Key",
                                          "description": "Primary Key.",
                                          "type": "string",
                                          "format": "uuid"
                                        },
                                        "created_at": {
                                          "title": "Creation tmie of record",
                                          "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up.",
                                          "type": "string",
                                          "format": "date-time"
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "created_at"
                                      ]
                                    },
                                    "minItems": 1
                                  },
                                  "type": {
                                    "title": "Descrimanator type",
                                    "description": "Descrimanator type.",
                                    "const": "seller"
                                  },
                                  "direction": {
                                    "title": "Direction of the criteria",
                                    "description": "Direction of the criteria.",
                                    "oneOf": [
                                      {
                                        "const": "include"
                                      },
                                      {
                                        "const": "exclude"
                                      }
                                    ]
                                  }
                                },
                                "required": [
                                  "sellers",
                                  "type",
                                  "direction"
                                ],
                                "description": "Conditions for sellers of discount coupons.\n\n`IShoppingCouponSellerCriteria` is a subtype entity of\n{@link IShoppingCouponCriteriaBase} and is used when setting conditions\nfor a specific {@link IShoppingSeller seller}.\n\nIf the {@link direction} value is \"include\", the coupon can only be used\nfor the target {@link sellers}. Conversely, if it is \"exclude\", the\ncoupon cannot be used."
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "sales": {
                                    "title": "Target sales to include or exclude",
                                    "description": "Target sales to include or exclude.",
                                    "type": "array",
                                    "items": {
                                      "description": "Summarized information of sale.\n\nThis summarized information being used for pagination.\n\n------------------------------\n\nDescription of the current {@link IShoppingSale.ISummary} type:\n\n> Summarized information of sale.\n> \n> This summarized information being used for pagination.\n\n------------------------------\n\nDescription of the parent {@link IShoppingSale} type:\n\n> Seller sales products.\n> \n> `IShoppingSale` is an entity that embodies \"product sales\" (sales)\n> information registered by the {@link ISoppingSeller seller}. And the main\n> information of the sale is recorded in the sub {@link IShoppingSaleSnapshot},\n> not in the main `IShoppingSale`. When a seller changes a previously registered\n> item, the existing `IShoppingSale` record is not changed, but a new\n> {@link IShoppingSaleSnapshot snapshot} record be created.\n> \n> This is to preserve the {@link IShoppingCustomer customer}'s\n> {@link IShoppingOrder purchase history} flawlessly after the customer\n> purchases a specific item, even if the seller changes the components or\n> price of the item. It is also intended to support sellers in so-called A/B\n> testing, which involves changing components or prices and measuring the\n> performance in each case.",
                                      "type": "object",
                                      "properties": {
                                        "section": {
                                          "title": "Belonged section",
                                          "description": "Section information.\n\n`IShoppingSection` is a concept that refers to the spatial information of\nthe market.\n\nIf we compare the section mentioned here to the offline market, it means a\nspatially separated area within the store, such as the \"fruit corner\" or\n\"butcher corner\". Therefore, in the {@link IShoppingSale sale} entity, it is\nnot possible to classify multiple sections simultaneously, but only one section\ncan be classified.\n\nBy the way, if your shopping mall system requires only one section, then just\nuse only one. This concept is designed to be expandable in the future.",
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "title": "Primary Key",
                                              "description": "Primary Key.",
                                              "type": "string",
                                              "format": "uuid"
                                            },
                                            "code": {
                                              "title": "Identifier code",
                                              "description": "Identifier code.",
                                              "type": "string"
                                            },
                                            "name": {
                                              "title": "Representative name of the section",
                                              "description": "Representative name of the section.",
                                              "type": "string"
                                            },
                                            "created_at": {
                                              "title": "Creation time of record",
                                              "description": "Creation time of record.",
                                              "type": "string",
                                              "format": "date-time"
                                            }
                                          },
                                          "required": [
                                            "id",
                                            "code",
                                            "name",
                                            "created_at"
                                          ]
                                        },
                                        "seller": {
                                          "title": "Seller who has registered the sale",
                                          "description": "Invert information starting from seller info.\n\nInstead of accessing to the seller information from the\n{@link IShoppingCustomer.member} -> {@link IShoppingMember.seller},\n`IShoppingSeller.IInvert` starts from the seller information\nand access to the customer, member and {@link IShoppingCitizen citizen}\ninformation inversely.\n\n------------------------------\n\nDescription of the current {@link IShoppingSeller.IInvert} type:\n\n> Invert information starting from seller info.\n> \n> Instead of accessing to the seller information from the\n> {@link IShoppingCustomer.member} -> {@link IShoppingMember.seller},\n> `IShoppingSeller.IInvert` starts from the seller information\n> and access to the customer, member and {@link IShoppingCitizen citizen}\n> information inversely.\n\n------------------------------\n\nDescription of the parent {@link IShoppingSeller} type:\n\n> Seller information.\n> \n> `IShoppingSeller` is an entity that embodies a person who registers\n> {@link IShoppingSale sales} to operate selling activities, with\n> {@link IShoppingMember membership} joining.\n> \n> For reference, unlike {@link IShoppingCustomer customers} which can\n> participate even without membership joining, seller must join membership\n> to operate sales. Also, seller must do the\n> {@link IShoppingCitizen real-name and mobile authentication}, too.",
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "title": "Discriminant for the type of customer",
                                              "description": "Discriminant for the type of customer.",
                                              "const": "seller"
                                            },
                                            "member": {
                                              "title": "Membership joining information",
                                              "description": "Invert information of member.\n\nThis invert member information has been designed to be used for another\ninvert information of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert}\n- {@link IShoppingAdministrator.IInvert}\n\n------------------------------\n\nDescription of the current {@link IShoppingMember.IInvert} type:\n\n> Invert information of member.\n> \n> This invert member information has been designed to be used for another\n> invert information of sellers and administrators like below.\n> \n> - {@link IShoppingSeller.IInvert}\n> - {@link IShoppingAdministrator.IInvert}\n\n------------------------------\n\nDescription of the parent {@link IShoppingMember} type:\n\n> Member Account.\n> \n> `IShoppingMember` is an entity that symbolizes the case when a\n> {@link IShoppingCustomer} signs up as a member of this shopping mall\n> system.\n> \n> If a `IShoppingMember` has seller or administrator property. it means that\n> the {@link IShoppingCustomer} has acting as a {@link IShoppingSeller seller}\n> or {@link IShoppingAdministrator administrator} at the same time.",
                                              "type": "object",
                                              "properties": {
                                                "id": {
                                                  "title": "Primary Key",
                                                  "description": "Primary Key.",
                                                  "type": "string",
                                                  "format": "uuid"
                                                },
                                                "nickname": {
                                                  "title": "Nickname that uniquely identifies the member",
                                                  "description": "Nickname that uniquely identifies the member.",
                                                  "type": "string"
                                                },
                                                "emails": {
                                                  "title": "List of emails",
                                                  "description": "List of emails.",
                                                  "type": "array",
                                                  "items": {
                                                    "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one.",
                                                    "type": "object",
                                                    "properties": {
                                                      "id": {
                                                        "title": "Primary Key",
                                                        "description": "Primary Key.",
                                                        "type": "string",
                                                        "format": "uuid"
                                                      },
                                                      "value": {
                                                        "title": "Email address value",
                                                        "description": "Email address value.",
                                                        "type": "string",
                                                        "format": "email"
                                                      },
                                                      "created_at": {
                                                        "title": "Creation time of record",
                                                        "description": "Creation time of record.",
                                                        "type": "string",
                                                        "format": "date-time"
                                                      }
                                                    },
                                                    "required": [
                                                      "id",
                                                      "value",
                                                      "created_at"
                                                    ]
                                                  }
                                                },
                                                "created_at": {
                                                  "title": "Creation time of record",
                                                  "description": "Creation time of record.\n\nAnother words, the time when the member has signed up.",
                                                  "type": "string",
                                                  "format": "date-time"
                                                }
                                              },
                                              "required": [
                                                "id",
                                                "nickname",
                                                "emails",
                                                "created_at"
                                              ]
                                            },
                                            "customer": {
                                              "title": "Customer, the connection information",
                                              "description": "Inverted customer informatino.\n\nThis inverted customer information has been designed to be used for\nanother invert information of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert}\n- {@link IShoppingAdministrator.IInvert}\n\n------------------------------\n\nDescription of the current {@link IShoppingCustomer.IInvert} type:\n\n> Inverted customer informatino.\n> \n> This inverted customer information has been designed to be used for\n> another invert information of sellers and administrators like below.\n> \n> - {@link IShoppingSeller.IInvert}\n> - {@link IShoppingAdministrator.IInvert}\n\n------------------------------\n\nDescription of the parent {@link IShoppingCustomer} type:\n\n> Customer information, but not a person but a connection basis.\n> \n> `IShoppingCustomer` is an entity that literally embodies the information of\n> those who participated in the market as customers. By the way, the\n> `IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\n> even if the same person connects to the shopping mall multiple, multiple\n> records are created in `IShoppingCustomer`.\n> \n> The first purpose of this is to track the customer's inflow path in detail,\n> and it is for cases where the same person enters as a non-member,\n> {@link IShoppingCartCommodity puts items in the shopping cart} in advance,\n> and only authenticates their {@link IShoppingCitizen real name} or\n> registers/logs in at the moment of {@link IShoppingOrderPublish payment}.\n> It is the second. Lastly, it is to accurately track the activities that\n> a person performs at the shopping mall in various ways like below.\n> \n> - Same person comes from an {@link IShoppingExternalUser external service}\n> - Same person creates multiple accounts\n> - Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n> - Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n> \n> Therefore, `IShoppingCustomer` can have multiple records with the same\n> {@link IShoppingCitizen}, {@link IShoppingMember}, and\n> {@link IShoppingExternalUser}. Additionally, if a customer signs up for\n> membership after verifying their real name or signs up for our service after\n> being a user of an external service, all related records are changed at once.\n> Therefore, identification and tracking of customers can be done very\n> systematically.",
                                              "type": "object",
                                              "properties": {
                                                "id": {
                                                  "title": "Primary Key",
                                                  "description": "Primary Key.",
                                                  "type": "string",
                                                  "format": "uuid"
                                                },
                                                "channel": {
                                                  "title": "Belonged channel",
                                                  "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future.",
                                                  "type": "object",
                                                  "properties": {
                                                    "id": {
                                                      "title": "Primary Key",
                                                      "description": "Primary Key.",
                                                      "type": "string",
                                                      "format": "uuid"
                                                    },
                                                    "created_at": {
                                                      "title": "Creation time of record",
                                                      "description": "Creation time of record.",
                                                      "type": "string",
                                                      "format": "date-time"
                                                    },
                                                    "code": {
                                                      "title": "Identifier code",
                                                      "description": "Identifier code.",
                                                      "type": "string"
                                                    },
                                                    "name": {
                                                      "title": "Name of the channel",
                                                      "description": "Name of the channel.",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "required": [
                                                    "id",
                                                    "created_at",
                                                    "code",
                                                    "name"
                                                  ]
                                                },
                                                "external_user": {
                                                  "title": "External user information",
                                                  "description": "External user information.\n\nWhen the customer has come frome an external service.",
                                                  "oneOf": [
                                                    {
                                                      "type": "null"
                                                    },
                                                    {
                                                      "type": "object",
                                                      "properties": {
                                                        "id": {
                                                          "title": "Primary Key",
                                                          "description": "Primary Key.",
                                                          "type": "string",
                                                          "format": "uuid"
                                                        },
                                                        "citizen": {
                                                          "title": "Citizen activation info",
                                                          "description": "Citizen activation info.",
                                                          "oneOf": [
                                                            {
                                                              "type": "null"
                                                            },
                                                            {
                                                              "type": "object",
                                                              "properties": {
                                                                "id": {
                                                                  "title": "Primary Key",
                                                                  "description": "Primary Key.",
                                                                  "type": "string",
                                                                  "format": "uuid"
                                                                },
                                                                "created_at": {
                                                                  "title": "Creation time of record",
                                                                  "description": "Creation time of record.",
                                                                  "type": "string",
                                                                  "format": "date-time"
                                                                },
                                                                "mobile": {
                                                                  "title": "Mobile number",
                                                                  "description": "Mobile number.",
                                                                  "x-wrtn-payment-order-mobile": true,
                                                                  "type": "string",
                                                                  "pattern": "^[0-9]*$"
                                                                },
                                                                "name": {
                                                                  "title": "Real name, or equivalent nickname",
                                                                  "description": "Real name, or equivalent nickname.",
                                                                  "x-wrtn-payment-order-citizen": true,
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "required": [
                                                                "id",
                                                                "created_at",
                                                                "mobile",
                                                                "name"
                                                              ],
                                                              "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile} input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                                                            }
                                                          ]
                                                        },
                                                        "created_at": {
                                                          "title": "Creation time of record",
                                                          "description": "Creation time of record.\n\nAnother word, first time when the external user connected.",
                                                          "type": "string",
                                                          "format": "date-time"
                                                        },
                                                        "uid": {
                                                          "title": "Identifier key of external user from the external system",
                                                          "description": "Identifier key of external user from the external system.",
                                                          "type": "string"
                                                        },
                                                        "application": {
                                                          "title": "Identifier code of the external service",
                                                          "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code} in common.",
                                                          "type": "string"
                                                        },
                                                        "nickname": {
                                                          "title": "Nickname of external user in the external system",
                                                          "description": "Nickname of external user in the external system.",
                                                          "type": "string"
                                                        },
                                                        "data": {
                                                          "description": "Additional information about external user from the external\nsystem."
                                                        }
                                                      },
                                                      "required": [
                                                        "id",
                                                        "citizen",
                                                        "created_at",
                                                        "uid",
                                                        "application",
                                                        "nickname",
                                                        "data"
                                                      ],
                                                      "description": "External user information.\n\n`IShoppingExternalUser` is an entity dsigned for when this system needs\nto connect with external services and welcome their users as\n{@link IShoppingCustomer customers} of this service.\n\nFor reference, customers who connect from an external service must have\nthis record, and the external service user is identified through the two\nattributes {@link application} and {@link uid}. If a customer connected\nfrom an external service completes\n{@link IShoppingCitizen real-name authentication} from this service, each\ntime the external service user reconnects to this service and issues a\nnew customer authentication token, real-name authentication begins with\ncompleted.\n\nAnd {@link password} is the password issued to the user by the external\nservice system (the so-called permanent user authentication token), and\nis never the actual user password. However, for customers who entered the\nsame application and uid as the current external system user, this is to\ndetermine whether to view this as a correct external system user or a\nviolation.\n\nIn addition, additional information received from external services can\nbe recorded in the data field in JSON format."
                                                    }
                                                  ]
                                                },
                                                "href": {
                                                  "title": "Connection address",
                                                  "description": "Connection address.\n\nSame with {@link window.location.href} of client.",
                                                  "type": "string",
                                                  "format": "uri"
                                                },
                                                "referrer": {
                                                  "title": "Referrer address",
                                                  "description": "Referrer address.\n\nSame with {@link window.document.referrer} of client.",
                                                  "oneOf": [
                                                    {
                                                      "type": "null"
                                                    },
                                                    {
                                                      "type": "string",
                                                      "format": "uri"
                                                    },
                                                    {
                                                      "type": "string",
                                                      "maxLength": 0
                                                    }
                                                  ]
                                                },
                                                "ip": {
                                                  "title": "Connection IP Address",
                                                  "description": "Connection IP Address.",
                                                  "oneOf": [
                                                    {
                                                      "type": "string",
                                                      "format": "ipv4"
                                                    },
                                                    {
                                                      "type": "string",
                                                      "format": "ipv6"
                                                    }
                                                  ]
                                                },
                                                "created_at": {
                                                  "title": "Creation time of the connection record",
                                                  "description": "Creation time of the connection record.",
                                                  "type": "string",
                                                  "format": "date-time"
                                                }
                                              },
                                              "required": [
                                                "id",
                                                "channel",
                                                "external_user",
                                                "href",
                                                "referrer",
                                                "ip",
                                                "created_at"
                                              ]
                                            },
                                            "citizen": {
                                              "title": "Real-name and mobile number authentication information",
                                              "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile} input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored.",
                                              "type": "object",
                                              "properties": {
                                                "id": {
                                                  "title": "Primary Key",
                                                  "description": "Primary Key.",
                                                  "type": "string",
                                                  "format": "uuid"
                                                },
                                                "created_at": {
                                                  "title": "Creation time of record",
                                                  "description": "Creation time of record.",
                                                  "type": "string",
                                                  "format": "date-time"
                                                },
                                                "mobile": {
                                                  "title": "Mobile number",
                                                  "description": "Mobile number.",
                                                  "x-wrtn-payment-order-mobile": true,
                                                  "type": "string",
                                                  "pattern": "^[0-9]*$"
                                                },
                                                "name": {
                                                  "title": "Real name, or equivalent nickname",
                                                  "description": "Real name, or equivalent nickname.",
                                                  "x-wrtn-payment-order-citizen": true,
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "id",
                                                "created_at",
                                                "mobile",
                                                "name"
                                              ]
                                            },
                                            "id": {
                                              "title": "Primary Key",
                                              "description": "Primary Key.",
                                              "type": "string",
                                              "format": "uuid"
                                            },
                                            "created_at": {
                                              "title": "Creation tmie of record",
                                              "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up.",
                                              "type": "string",
                                              "format": "date-time"
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "member",
                                            "customer",
                                            "citizen",
                                            "id",
                                            "created_at"
                                          ]
                                        },
                                        "price_range": {
                                          "title": "Price range of the unit",
                                          "type": "object",
                                          "properties": {
                                            "lowest": {
                                              "description": "Shopping price interface.",
                                              "type": "object",
                                              "properties": {
                                                "nominal": {
                                                  "title": "Nominal price",
                                                  "description": "Nominal price.\n\nThis is not {@link real real price} to pay, but just a nominal price to show.\nIf this value is greater than the {@link real real price}, it would be shown\nlike {@link IShoppingSeller seller} is giving a discount.",
                                                  "type": "number",
                                                  "minimum": 0
                                                },
                                                "real": {
                                                  "title": "Real price to pay",
                                                  "description": "Real price to pay.",
                                                  "type": "number",
                                                  "minimum": 0
                                                }
                                              },
                                              "required": [
                                                "nominal",
                                                "real"
                                              ]
                                            },
                                            "highest": {
                                              "description": "Shopping price interface.",
                                              "type": "object",
                                              "properties": {
                                                "nominal": {
                                                  "title": "Nominal price",
                                                  "description": "Nominal price.\n\nThis is not {@link real real price} to pay, but just a nominal price to show.\nIf this value is greater than the {@link real real price}, it would be shown\nlike {@link IShoppingSeller seller} is giving a discount.",
                                                  "type": "number",
                                                  "minimum": 0
                                                },
                                                "real": {
                                                  "title": "Real price to pay",
                                                  "description": "Real price to pay.",
                                                  "type": "number",
                                                  "minimum": 0
                                                }
                                              },
                                              "required": [
                                                "nominal",
                                                "real"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "lowest",
                                            "highest"
                                          ]
                                        },
                                        "id": {
                                          "title": "Primary Key of Sale",
                                          "description": "Primary Key of Sale.",
                                          "type": "string",
                                          "format": "uuid"
                                        },
                                        "snapshot_id": {
                                          "title": "Primary Key of Snapshot",
                                          "description": "Primary Key of Snapshot.",
                                          "type": "string",
                                          "format": "uuid"
                                        },
                                        "latest": {
                                          "title": "Whether the snapshot is the latest one or not",
                                          "description": "Whether the snapshot is the latest one or not.",
                                          "type": "boolean"
                                        },
                                        "content": {
                                          "title": "Description and image content describing the sale",
                                          "description": "Description of the current {@link IShoppingSaleContent} type:\n\n> Content information of sale snapshot.\n> \n> `IShoppingSaleContent` is an entity embodies the description contents\n> of {@link IShoppingSale}.",
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string",
                                              "format": "uuid"
                                            },
                                            "title": {
                                              "type": "string"
                                            },
                                            "thumbnails": {
                                              "type": "array",
                                              "items": {
                                                "description": "Attachment File.\n\nEvery attachment files that are managed in current system.\n\nFor reference, it is possible to omit one of file {@link name}\nor {@link extension} like `.gitignore` or `README` case, but not\npossible to omit both of them.",
                                                "type": "object",
                                                "properties": {
                                                  "id": {
                                                    "title": "Primary Key",
                                                    "description": "Primary Key.",
                                                    "type": "string",
                                                    "format": "uuid"
                                                  },
                                                  "created_at": {
                                                    "title": "Creation time of attachment file",
                                                    "description": "Creation time of attachment file.",
                                                    "type": "string",
                                                    "format": "date-time"
                                                  },
                                                  "name": {
                                                    "title": "File name, except extension",
                                                    "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string.",
                                                    "type": "string",
                                                    "maxLength": 255
                                                  },
                                                  "extension": {
                                                    "title": "Extension",
                                                    "description": "Extension.\n\nPossible to omit like `README` case.",
                                                    "oneOf": [
                                                      {
                                                        "type": "null"
                                                      },
                                                      {
                                                        "type": "string",
                                                        "minLength": 1,
                                                        "maxLength": 8
                                                      }
                                                    ]
                                                  },
                                                  "url": {
                                                    "title": "URL path of the real file",
                                                    "description": "URL path of the real file.",
                                                    "type": "string",
                                                    "format": "uri",
                                                    "contentMediaType": "image/*"
                                                  }
                                                },
                                                "required": [
                                                  "id",
                                                  "created_at",
                                                  "name",
                                                  "extension",
                                                  "url"
                                                ]
                                              }
                                            }
                                          },
                                          "required": [
                                            "id",
                                            "title",
                                            "thumbnails"
                                          ]
                                        },
                                        "channels": {
                                          "title": "List of channels and categories",
                                          "description": "List of channels and categories.\n\nWhich channels and categories the sale is registered to.",
                                          "type": "array",
                                          "items": {
                                            "description": "Target channel (and categories) of sale to sell.\n\n`IShoppingSaleChannel` is an entity that expresses through which\n{@link IShoppingChannel channel} a listing {@link IShoppingSale} is sold.\n\nAlso, if {@link IShoppingChannelCategory categories} are specified, it also\nmeans that the sale be sold. Otherwise, none of the categories of the channel\nbeing specified, it means that every categories of the channel is listing the\ntarget sale.",
                                            "type": "object",
                                            "properties": {
                                              "categories": {
                                                "title": "List of categories of the channel listing the sale",
                                                "description": "List of categories of the channel listing the sale.\n\nIf empty, it means all categories of the channel is listing the sale.",
                                                "type": "array",
                                                "items": {
                                                  "$ref": "#/$defs/IShoppingChannelCategory.IInvert"
                                                }
                                              },
                                              "id": {
                                                "title": "Primary Key",
                                                "description": "Primary Key.",
                                                "type": "string",
                                                "format": "uuid"
                                              },
                                              "created_at": {
                                                "title": "Creation time of record",
                                                "description": "Creation time of record.",
                                                "type": "string",
                                                "format": "date-time"
                                              },
                                              "code": {
                                                "title": "Identifier code",
                                                "description": "Identifier code.",
                                                "type": "string"
                                              },
                                              "name": {
                                                "title": "Name of the channel",
                                                "description": "Name of the channel.",
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "categories",
                                              "id",
                                              "created_at",
                                              "code",
                                              "name"
                                            ]
                                          },
                                          "minItems": 1
                                        },
                                        "tags": {
                                          "title": "List of search tags",
                                          "description": "List of search tags.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "units": {
                                          "title": "List of units",
                                          "description": "List of units.\n\nRecords about individual product composition information that are sold\nin the sale. Each {@link IShoppingSaleUnit unit} record has configurable\n{@link IShoppingSaleUnitOption options},\n{@link IShoppingSaleUnitOptionCandidate candidate} values for each\noption, and {@link IShoppingSaleUnitStock final stocks} determined by\nselecting every candidate values of each option.",
                                          "type": "array",
                                          "items": {
                                            "description": "Description of the current {@link IShoppingSaleUnit} type:\n\n> Product composition information handled in the sale.\n> \n> `IShoppingSaleUnit` is an entity that embodies the \"individual product\"\n> information handled in the {@link IShoppingSale sale}.\n> \n> For reference, the reason why `IShoppingSaleUnit` is separated from\n> {@link IShoppingSaleSnapshot} by an algebraic relationship of 1: N is because\n> there are some cases where multiple products are sold in one listing. This is\n> the case with so-called \"bundled products\".\n> \n> - Bundle from regular product (Mackbook Set)\n>   - Main Body\n>   - Keyboard\n>   - Mouse\n>   - Apple Care (Free A/S Voucher)\n> \n> And again, `IShoppingSaleUnit` does not in itself refer to the\n> {@link IShoppingSaleUnitStock final stock} that the\n> {@link IShoppingCustomer customer} will {@link IShoppingOrder purchase}.\n> The final stock can be found only after selecting all given\n> {@link IShoppingSaleUnitOption options} and their\n> {@link IShoppingSaleUnitOptionCandidate candidate values}.\n> \n> For example, even if you buy a Macbook, the final stocks are determined only\n> after selecting all the options (CPU / RAM / SSD), etc.",
                                            "type": "object",
                                            "properties": {
                                              "price_range": {
                                                "type": "object",
                                                "properties": {
                                                  "lowest": {
                                                    "description": "Shopping price interface.",
                                                    "type": "object",
                                                    "properties": {
                                                      "nominal": {
                                                        "title": "Nominal price",
                                                        "description": "Nominal price.\n\nThis is not {@link real real price} to pay, but just a nominal price to show.\nIf this value is greater than the {@link real real price}, it would be shown\nlike {@link IShoppingSeller seller} is giving a discount.",
                                                        "type": "number",
                                                        "minimum": 0
                                                      },
                                                      "real": {
                                                        "title": "Real price to pay",
                                                        "description": "Real price to pay.",
                                                        "type": "number",
                                                        "minimum": 0
                                                      }
                                                    },
                                                    "required": [
                                                      "nominal",
                                                      "real"
                                                    ]
                                                  },
                                                  "highest": {
                                                    "description": "Shopping price interface.",
                                                    "type": "object",
                                                    "properties": {
                                                      "nominal": {
                                                        "title": "Nominal price",
                                                        "description": "Nominal price.\n\nThis is not {@link real real price} to pay, but just a nominal price to show.\nIf this value is greater than the {@link real real price}, it would be shown\nlike {@link IShoppingSeller seller} is giving a discount.",
                                                        "type": "number",
                                                        "minimum": 0
                                                      },
                                                      "real": {
                                                        "title": "Real price to pay",
                                                        "description": "Real price to pay.",
                                                        "type": "number",
                                                        "minimum": 0
                                                      }
                                                    },
                                                    "required": [
                                                      "nominal",
                                                      "real"
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "lowest",
                                                  "highest"
                                                ]
                                              },
                                              "id": {
                                                "title": "Primary Key",
                                                "description": "Primary Key.",
                                                "type": "string",
                                                "format": "uuid"
                                              },
                                              "name": {
                                                "title": "Representative name of the unit",
                                                "description": "Representative name of the unit.",
                                                "type": "string"
                                              },
                                              "primary": {
                                                "title": "Whether the unit is primary or not",
                                                "description": "Whether the unit is primary or not.\n\nJust a labeling value.",
                                                "type": "boolean"
                                              },
                                              "required": {
                                                "title": "Whether the unit is required or not",
                                                "description": "Whether the unit is required or not.\n\nWhen the unit is required, the customer must select the unit. If do not\nselect, customer can't buy it.\n\nFor example, if there's a sale \"Macbook Set\" and one of the unit is the\n\"Main Body\", is it possible to buy the \"Macbook Set\" without the\n\"Main Body\" unit? This property is for that case.",
                                                "type": "boolean"
                                              }
                                            },
                                            "required": [
                                              "price_range",
                                              "id",
                                              "name",
                                              "primary",
                                              "required"
                                            ]
                                          },
                                          "minItems": 1
                                        },
                                        "created_at": {
                                          "title": "Creation time of the record",
                                          "description": "Creation time of the record.\n\nNote that, this property is different with {@link opened_at},\nwhich means the timepoint of the sale is opened.",
                                          "type": "string",
                                          "format": "date-time"
                                        },
                                        "updated_at": {
                                          "title": "Last updated time of the record",
                                          "description": "Last updated time of the record.\n\nIn another words, creation time of the last snapshot.",
                                          "type": "string",
                                          "format": "date-time"
                                        },
                                        "paused_at": {
                                          "title": "Paused time of the sale",
                                          "description": "Paused time of the sale.\n\nThe sale is paused by the seller, for some reason.\n\n{@link IShoppingCustomer Customers} can still see the sale on the\nboth list and detail pages, but the sale has a warning label\n\"The sale is paused by the seller\".",
                                          "oneOf": [
                                            {
                                              "type": "null"
                                            },
                                            {
                                              "type": "string",
                                              "format": "date-time"
                                            }
                                          ]
                                        },
                                        "suspended_at": {
                                          "title": "Suspended time of the sale",
                                          "description": "Suspended time of the sale.\n\nThe sale is suspended by the seller, for some reason.\n\n{@link IShoppingCustomer Customers} cannot see the sale on the\nboth list and detail pages. It is almost same with soft delettion,\nbut there's a little bit difference that the owner\n{@link IShoppingSeller seller} can still see the sale and resume it.\n\nOf course, the {@link IShoppingCustomer customers} who have\nalready purchased the sale can still see the sale on the\n{@link IShoppingOrder order} page.",
                                          "oneOf": [
                                            {
                                              "type": "null"
                                            },
                                            {
                                              "type": "string",
                                              "format": "date-time"
                                            }
                                          ]
                                        },
                                        "opened_at": {
                                          "title": "Opening time of the sale",
                                          "description": "Opening time of the sale.",
                                          "oneOf": [
                                            {
                                              "type": "null"
                                            },
                                            {
                                              "type": "string",
                                              "format": "date-time"
                                            }
                                          ]
                                        },
                                        "closed_at": {
                                          "title": "Closing time of the sale",
                                          "description": "Closing time of the sale.\n\nIf this value is `null`, the sale be continued forever.",
                                          "oneOf": [
                                            {
                                              "type": "null"
                                            },
                                            {
                                              "type": "string",
                                              "format": "date-time"
                                            }
                                          ]
                                        }
                                      },
                                      "required": [
                                        "section",
                                        "seller",
                                        "price_range",
                                        "id",
                                        "snapshot_id",
                                        "latest",
                                        "content",
                                        "channels",
                                        "tags",
                                        "units",
                                        "created_at",
                                        "updated_at",
                                        "paused_at",
                                        "suspended_at",
                                        "opened_at",
                                        "closed_at"
                                      ]
                                    },
                                    "minItems": 1
                                  },
                                  "type": {
                                    "title": "Descrimanator type",
                                    "description": "Descrimanator type.",
                                    "const": "sale"
                                  },
                                  "direction": {
                                    "title": "Direction of the criteria",
                                    "description": "Direction of the criteria.",
                                    "oneOf": [
                                      {
                                        "const": "include"
                                      },
                                      {
                                        "const": "exclude"
                                      }
                                    ]
                                  }
                                },
                                "required": [
                                  "sales",
                                  "type",
                                  "direction"
                                ],
                                "description": "Conditions for sales of discount coupons.\n\n`IShoppingCouponSaleCriteria` is a subtype entity of\n{@link IShoppingCouponCriteriaBase} and is used when setting conditions\nfor a specific {@link IShoppingSale sale}.\n\nIf the {@link direction} value is \"include\", the coupon can only be used\nfor the target {@link sales}. Conversely, if it is \"exclude\", the\ncoupon cannot be used."
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "funnels": {
                                    "title": "List of target funnels",
                                    "description": "List of target funnels.",
                                    "type": "array",
                                    "items": {
                                      "oneOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "kind": {
                                              "title": "Kind of funnel restriction",
                                              "description": "Kind of funnel restriction.",
                                              "oneOf": [
                                                {
                                                  "const": "url"
                                                },
                                                {
                                                  "const": "referrer"
                                                }
                                              ]
                                            },
                                            "value": {
                                              "title": "Target value",
                                              "description": "Target value.",
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "kind",
                                            "value"
                                          ],
                                          "description": "Kind of funnel restriction by a value.\n\n------------------------------\n\nDescription of the current {@link IShoppingCouponFunnelCriteria.IValueFunnel} type:\n\n> Kind of funnel restriction by a value.\n\n------------------------------\n\nDescription of the parent {@link IShoppingCouponFunnelCriteria} type:\n\n> Limit the funnel of discount coupons.\n> \n> `ishoppingcouponfunnelcriteria` is a subtype entity of\n> {@link IShoppingCouponCriteria}, and is used when you want to issue or\n> exclude discount coupons only to {@link IShoppingCustomer customers} who\n> came from a specific path.\n> \n> And funnel restrictions are possible in 3 ways: The first is\n> {@link IShoppingCustomer.referrer}, and by parsing\n> {@link IShoppingCustomer.href}, which records the customer's access\n> address, restrictions can be made in units of specific URLs or variables."
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "kind": {
                                              "title": "Kind of funnel restriction",
                                              "description": "Kind of funnel restriction.",
                                              "const": "variable"
                                            },
                                            "key": {
                                              "title": "Target variable's key",
                                              "description": "Target variable's key.",
                                              "type": "string"
                                            },
                                            "value": {
                                              "title": "Target variable's value",
                                              "description": "Target variable's value.",
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "kind",
                                            "key",
                                            "value"
                                          ],
                                          "description": "Kind of funnel restriction by a variable.\n\n------------------------------\n\nDescription of the current {@link IShoppingCouponFunnelCriteria.IVariableFunnel} type:\n\n> Kind of funnel restriction by a variable.\n\n------------------------------\n\nDescription of the parent {@link IShoppingCouponFunnelCriteria} type:\n\n> Limit the funnel of discount coupons.\n> \n> `ishoppingcouponfunnelcriteria` is a subtype entity of\n> {@link IShoppingCouponCriteria}, and is used when you want to issue or\n> exclude discount coupons only to {@link IShoppingCustomer customers} who\n> came from a specific path.\n> \n> And funnel restrictions are possible in 3 ways: The first is\n> {@link IShoppingCustomer.referrer}, and by parsing\n> {@link IShoppingCustomer.href}, which records the customer's access\n> address, restrictions can be made in units of specific URLs or variables."
                                        }
                                      ]
                                    },
                                    "minItems": 1
                                  },
                                  "type": {
                                    "title": "Descrimanator type",
                                    "description": "Descrimanator type.",
                                    "const": "funnel"
                                  },
                                  "direction": {
                                    "title": "Direction of the criteria",
                                    "description": "Direction of the criteria.",
                                    "oneOf": [
                                      {
                                        "const": "include"
                                      },
                                      {
                                        "const": "exclude"
                                      }
                                    ]
                                  }
                                },
                                "required": [
                                  "funnels",
                                  "type",
                                  "direction"
                                ],
                                "description": "Limit the funnel of discount coupons.\n\n`ishoppingcouponfunnelcriteria` is a subtype entity of\n{@link IShoppingCouponCriteria}, and is used when you want to issue or\nexclude discount coupons only to {@link IShoppingCustomer customers} who\ncame from a specific path.\n\nAnd funnel restrictions are possible in 3 ways: The first is\n{@link IShoppingCustomer.referrer}, and by parsing\n{@link IShoppingCustomer.href}, which records the customer's access\naddress, restrictions can be made in units of specific URLs or variables."
                              }
                            ]
                          }
                        },
                        "discount": {
                          "title": "Discount information",
                          "description": "Discount information.",
                          "oneOf": [
                            {
                              "type": "object",
                              "properties": {
                                "unit": {
                                  "title": "Discount unit as amount",
                                  "description": "Discount unit as amount.\n\nIt means the order price would be discounted by the amount value.",
                                  "const": "amount"
                                },
                                "value": {
                                  "title": "Discount value as amount",
                                  "description": "Discount value as amount.",
                                  "type": "number"
                                },
                                "threshold": {
                                  "title": "Minimum purchase amount for discount",
                                  "description": "Minimum purchase amount for discount.\n\nWhen setting this value, discount coupons cannot be applied to\norder totals that are less than this value.",
                                  "oneOf": [
                                    {
                                      "type": "null"
                                    },
                                    {
                                      "type": "number",
                                      "minimum": 0
                                    }
                                  ]
                                },
                                "limit": {
                                  "title": "Maximum amount available for discount",
                                  "description": "Maximum amount available for discount.\n\nWhen this value is set, no further discount will be given no\nmatter how much you order. This property would be meaningful\nonly when the {@link multiplicative} is `true`.",
                                  "oneOf": [
                                    {
                                      "type": "null"
                                    },
                                    {
                                      "type": "number",
                                      "exclusiveMinimum": true,
                                      "minimum": 0
                                    }
                                  ]
                                },
                                "multiplicative": {
                                  "title": "Multiplicative or not",
                                  "description": "Multiplicative or not.\n\nIf this property is `true`, the discount value would be multiplied\nto the {@link IShoppingCartCommodity.volume} or\n{@link IShoppingOrderGood.volume} value. Also, in that case,\nthe {@link limit} property would be meaningful.",
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "unit",
                                "value",
                                "threshold",
                                "limit",
                                "multiplicative"
                              ],
                              "description": "Discount information with amount unit.\n\n------------------------------\n\nDescription of the current {@link IShoppingCouponDiscount.IAmount} type:\n\n> Discount information with amount unit."
                            },
                            {
                              "type": "object",
                              "properties": {
                                "unit": {
                                  "title": "Discount unit as percent",
                                  "description": "Discount unit as percent.\n\nIt means the order price would be discounted by the percent value.",
                                  "const": "percent"
                                },
                                "value": {
                                  "title": "Discount value as percent",
                                  "description": "Discount value as percent.",
                                  "type": "number",
                                  "minimum": 0,
                                  "maximum": 100
                                },
                                "threshold": {
                                  "title": "Minimum purchase amount for discount",
                                  "description": "Minimum purchase amount for discount.\n\nWhen setting this value, discount coupons cannot be applied to\norder totals that are less than this value.",
                                  "oneOf": [
                                    {
                                      "type": "null"
                                    },
                                    {
                                      "type": "number",
                                      "minimum": 0
                                    }
                                  ]
                                },
                                "limit": {
                                  "title": "Maximum amount available for discount",
                                  "description": "Maximum amount available for discount.\n\nWhen this value is set, no further discount will be given no\nmatter how much you order.",
                                  "oneOf": [
                                    {
                                      "type": "null"
                                    },
                                    {
                                      "type": "number",
                                      "exclusiveMinimum": true,
                                      "minimum": 0
                                    }
                                  ]
                                }
                              },
                              "required": [
                                "unit",
                                "value",
                                "threshold",
                                "limit"
                              ],
                              "description": "Discount information with percent unit.\n\n------------------------------\n\nDescription of the current {@link IShoppingCouponDiscount.IPercent} type:\n\n> Discount information with percent unit."
                            }
                          ]
                        },
                        "restriction": {
                          "title": "Restriction information",
                          "description": "Restriction information of the coupon.",
                          "type": "object",
                          "properties": {
                            "access": {
                              "title": "Access level of coupon",
                              "description": "Access level of coupon.\n\n- public: possible to find from public API\n- private: unable to find from public API\n  - arbitrarily assigned by the seller or administrator\n  - issued from one-time link",
                              "oneOf": [
                                {
                                  "const": "public"
                                },
                                {
                                  "const": "private"
                                }
                              ]
                            },
                            "exclusive": {
                              "title": "Exclusivity or not",
                              "description": "Exclusivity or not.\n\nAn exclusive discount coupon refers to a discount coupon that has an\nexclusive relationship with other discount coupons and can only be\nused alone. That is, when an exclusive discount coupon is used, no\nother discount coupon can be used for the same\n{@link IShoppingOrder order} or {@link IShoppingOrderGood good}.\n\nPlease note that this exclusive attribute is a very different concept\nfrom multiplicative, which means whether the same coupon can be\nmultiplied and applied to multiple coupons of the same order, so\nplease do not confuse them.",
                              "type": "boolean"
                            },
                            "volume": {
                              "title": "Limited quantity issued",
                              "description": "Limited quantity issued.\n\nIf there is a limit to the quantity issued, it becomes impossible to issue tickets exceeding this value.\n\nIn other words, the concept of N coupons being issued on a first-come, first-served basis is created.",
                              "oneOf": [
                                {
                                  "type": "null"
                                },
                                {
                                  "type": "integer"
                                }
                              ]
                            },
                            "volume_per_citizen": {
                              "title": "Limited quantity issued per person",
                              "description": "Limited quantity issued per person.\n\nAs a limit to the total amount of issuance per person, it is common to assign 1 to limit duplicate issuance to the same citizen, or to use the NULL value to set no limit.\n\nOf course, by assigning a value of N, the total amount issued to the same citizen can be limited.",
                              "oneOf": [
                                {
                                  "type": "null"
                                },
                                {
                                  "type": "integer"
                                }
                              ]
                            },
                            "expired_in": {
                              "title": "Expiration day(s) value",
                              "description": "Expiration day(s) value.\n\nThe concept of expiring N days after a discount coupon ticket is issued.\n\nTherefore, customers must use the ticket within N days, if possible, from the time it is issued.",
                              "oneOf": [
                                {
                                  "type": "null"
                                },
                                {
                                  "type": "integer"
                                }
                              ]
                            },
                            "expired_at": {
                              "title": "Expiration date",
                              "description": "Expiration date.\n\nA concept that expires after YYYY-MM-DD after a discount coupon ticket is issued.\n\nDouble restrictions are possible with expired_in, of which the one with the shorter expiration date is used.",
                              "oneOf": [
                                {
                                  "type": "null"
                                },
                                {
                                  "type": "string",
                                  "format": "date-time"
                                }
                              ]
                            }
                          },
                          "required": [
                            "access",
                            "exclusive",
                            "volume",
                            "volume_per_citizen",
                            "expired_in",
                            "expired_at"
                          ]
                        },
                        "name": {
                          "title": "Representative name of the coupon",
                          "description": "Representative name of the coupon.",
                          "type": "string"
                        },
                        "opened_at": {
                          "title": "Opening time of the coupon",
                          "description": "Opening time of the coupon.",
                          "oneOf": [
                            {
                              "type": "null"
                            },
                            {
                              "type": "string",
                              "format": "date-time"
                            }
                          ]
                        },
                        "closed_at": {
                          "title": "Closing time of the coupon",
                          "description": "Closing time of the coupon.\n\nTickets cannot be issued after this time.\n\nHowever, previously issued tickets can still be used until their\nexpiration date.",
                          "oneOf": [
                            {
                              "type": "null"
                            },
                            {
                              "type": "string",
                              "format": "date-time"
                            }
                          ]
                        },
                        "created_at": {
                          "title": "Creation tie of the record",
                          "description": "Creation tie of the record.",
                          "type": "string",
                          "format": "date-time"
                        }
                      },
                      "required": [
                        "id",
                        "designer",
                        "inventory",
                        "criterias",
                        "discount",
                        "restriction",
                        "name",
                        "opened_at",
                        "closed_at",
                        "created_at"
                      ]
                    },
                    "created_at": {
                      "title": "Creation time of the record",
                      "description": "Creation time of the record.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "expired_at": {
                      "title": "Expiration time of the ticket",
                      "description": "Expiration time of the ticket.",
                      "oneOf": [
                        {
                          "type": "null"
                        },
                        {
                          "type": "string",
                          "format": "date-time"
                        }
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "customer",
                    "coupon",
                    "created_at",
                    "expired_at"
                  ]
                }
              },
              "entries": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "good_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "coupon_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "amount": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "good_id",
                    "coupon_id",
                    "amount"
                  ]
                }
              },
              "amount": {
                "type": "number"
              }
            },
            "required": [
              "coupons",
              "tickets",
              "entries",
              "amount"
            ]
          }
        }
      },
      "required": [
        "deposit",
        "mileage",
        "combinations"
      ]
    },
    "success": true,
    "arguments": {
      "type": {
        "host": "http://127.0.0.1:37001",
        "headers": {
          "Authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0YWJsZSI6InNob3BwaW5nX2N1c3RvbWVycyIsImlkIjoiMjVlYzg3ZjctODE1ZC00YjU3LTk1NzYtYzk1Mzk4NGJjMjhmIiwicmVhZG9ubHkiOmZhbHNlLCJleHBpcmVkX2F0IjoiMjAyNC0xMi0xM1QwOTo0MjoxMi41MzlaIiwicmVmcmVzaGFibGVfdW50aWwiOiIyMDI0LTEyLTI3VDA2OjQyOjEyLjUzOVoiLCJpYXQiOjE3MzQwNzIxMzJ9.zWZrU-d1bSW-MawmSo2RYRPk_73xtR_PxfFUrEpDJkc"
        }
      },
      "properties": "d81d15a2-911d-4049-a56d-8355844c0009",
      "additionalProperties": {
        "good_ids": null
      }
    },
    "value": {
      "deposit": 200000,
      "mileage": 3000,
      "combinations": [
        {
          "coupons": [
            {
              "id": "ff93beb2-51d2-4a42-9ddc-ceb671efdfba",
              "designer": {
                "id": "bd215cfc-2b1c-4a5b-a9f3-3076cdd9bed5",
                "created_at": "2024-12-13T06:42:11.239Z"
              },
              "inventory": {
                "volume": 10000,
                "volume_per_citizen": 5
              },
              "criterias": [
                {
                  "channels": [
                    {
                      "channel": {
                        "id": "2323f4bd-21ad-45b7-ae3b-cadd84dcc935",
                        "created_at": "2024-12-13T06:42:10.908Z",
                        "code": "samchon",
                        "name": "Samchon Shopping Mall"
                      },
                      "categories": null
                    }
                  ],
                  "type": "channel",
                  "direction": "include"
                }
              ],
              "discount": {
                "unit": "percent",
                "value": 10,
                "threshold": null,
                "limit": null
              },
              "restriction": {
                "access": "public",
                "exclusive": true,
                "volume": 10000,
                "volume_per_citizen": 5,
                "expired_in": 15,
                "expired_at": null
              },
              "name": "10% Discount for every sales",
              "opened_at": "2024-12-13T06:42:13.274Z",
              "closed_at": null,
              "created_at": "2024-12-13T06:42:13.279Z"
            }
          ],
          "tickets": [],
          "entries": [
            {
              "good_id": "cc465192-724b-4d96-a644-4a13b1730ab8",
              "coupon_id": "ff93beb2-51d2-4a42-9ddc-ceb671efdfba",
              "amount": 13600
            },
            {
              "good_id": "28f4795b-b5d3-4d9a-8aa2-fcfd92e8777a",
              "coupon_id": "ff93beb2-51d2-4a42-9ddc-ceb671efdfba",
              "amount": 318300
            },
            {
              "good_id": "f8f5797c-33b2-44d8-8cef-b96f4020f404",
              "coupon_id": "ff93beb2-51d2-4a42-9ddc-ceb671efdfba",
              "amount": 205800
            },
            {
              "good_id": "d852835d-fb2d-4ec3-8cdc-e81ddc72ec3f",
              "coupon_id": "ff93beb2-51d2-4a42-9ddc-ceb671efdfba",
              "amount": 1189800
            }
          ],
          "amount": 1727500
        }
      ]
    }
  },
  {
    "name": "shoppings_customers_orders_discount_putById",
    "method": "put",
    "path": "/shoppings/customers/orders/{id}/discount",
    "description": "Discount the order.\n\nDiscount total price of the {@link IShoppingOrder} by adjusting\n{@link IShoppingCoupon coupons}, {@link IShoppingDepositHistory deposits}\nand {@link IShoppingMileageHistory mileages}. If amount of discount\nfeatures are equal to the total price of the order, it is possible to\n{@link IShoppingOrderPublish publish} it without any cash.\n\nBy the way, the discounting features must be valid. If not, 428\nunprocessable entity error would be thrown. To know which features are\nadjustable or withdrawable, call the {@link discountable} function\nbefore.",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "description": " Target order's {@link IShoppingOrder.id }",
          "type": "string",
          "format": "uuid"
        },
        "body": {
          "description": "Description of the current {@link IShoppingOrderPrice} type:\n\n> Price infromation of the order including discounts.",
          "type": "object",
          "properties": {
            "deposit": {
              "type": "number"
            },
            "mileage": {
              "type": "number"
            },
            "coupon_ids": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          "required": [
            "deposit",
            "mileage",
            "coupon_ids"
          ]
        }
      },
      "additionalProperties": false,
      "required": [
        "id",
        "body"
      ],
      "$defs": {
        "IShoppingChannelCategory.IInvert": {
          "description": "Invert category information with parent category.",
          "type": "object",
          "properties": {
            "parent": {
              "title": "Parent category info with recursive structure",
              "description": "Parent category info with recursive structure.\n\nIf no parent exists, then be `null`.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "$ref": "#/$defs/IShoppingChannelCategory.IInvert"
                }
              ]
            },
            "id": {
              "title": "Primary Key",
              "description": "Primary Key.",
              "type": "string",
              "format": "uuid"
            },
            "code": {
              "title": "Identifier code of the category",
              "description": "Identifier code of the category.\n\nThe code must be unique in the channel.",
              "type": "string"
            },
            "parent_id": {
              "title": "Parent category's ID",
              "description": "Parent category's ID.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "name": {
              "title": "Representative name of the category",
              "description": "Representative name of the category.\n\nThe name must be unique within the parent category. If no parent exists,\nthen the name must be unique within the channel between no parent\ncategories.",
              "type": "string"
            },
            "created_at": {
              "title": "Creation time of record",
              "description": "Creation time of record.",
              "type": "string",
              "format": "date-time"
            }
          },
          "required": [
            "parent",
            "id",
            "code",
            "parent_id",
            "name",
            "created_at"
          ]
        }
      }
    },
    "output": {
      "description": "Price infromation of the order including discounts.",
      "type": "object",
      "properties": {
        "ticket_payments": {
          "title": "List of discount coupon ticket payments",
          "description": "List of discount coupon ticket payments.",
          "type": "array",
          "items": {
            "description": "Discount coupon ticket payment details.\n\n`IShoppingCouponTicketPayment` is an entity that embodies the payment\ninformation for the {@link IShoppingOrder order} of\n{@link IShoppingCouponTicket}, and is used when a consumer uses the\ndiscount coupon ticket he or she was issued to order and has the payment\namount deducted.\n\nAnd since {@link IShoppingOrder} itself is not an entity used in\nsituations where an order is completed, but rather an entity designed to\nexpress an order request, the creation of this\n`IShoppingCouponTicketPayment` record does not actually mean that the\nattached ticket disappears. Until the {@link IShoppingCustomer customer}\n{@link IShoppingOrderPublish.paid_at completes the payment} and confirms\nthe order, the ticket can be understood as a kind of deposit.\n\nAdditionally, this record can be deleted by the customer reversing the\npayment of the ticket, but it can also be deleted when the attribution\norder itself is cancelled.",
            "type": "object",
            "properties": {
              "id": {
                "title": "Primary Key",
                "description": "Primary Key.",
                "type": "string",
                "format": "uuid"
              },
              "ticket": {
                "title": "Target ticket",
                "description": "Discount coupon ticket issuance details.\n\n`IShoppingCouponTicket` is an entity that symbolizes\n{@link IShoppingCoupon discount coupon} tickets issued by\n{@link IShoppingCustomer customers}.\n\nAnd if the target discount coupon specification itself has an expiration\ndate, the expiration date is recorded in expired_at and is automatically\ndiscarded after that expiration date. Of course, it doesn't matter if you\nuse the discount coupon for your order within the deadline.",
                "type": "object",
                "properties": {
                  "id": {
                    "title": "Primary Key",
                    "description": "Primary Key.",
                    "type": "string",
                    "format": "uuid"
                  },
                  "customer": {
                    "title": "Customer who've taken the coupon ticket",
                    "description": "Customer information, but not a person but a connection basis.\n\n`IShoppingCustomer` is an entity that literally embodies the information of\nthose who participated in the market as customers. By the way, the\n`IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\neven if the same person connects to the shopping mall multiple, multiple\nrecords are created in `IShoppingCustomer`.\n\nThe first purpose of this is to track the customer's inflow path in detail,\nand it is for cases where the same person enters as a non-member,\n{@link IShoppingCartCommodity puts items in the shopping cart} in advance,\nand only authenticates their {@link IShoppingCitizen real name} or\nregisters/logs in at the moment of {@link IShoppingOrderPublish payment}.\nIt is the second. Lastly, it is to accurately track the activities that\na person performs at the shopping mall in various ways like below.\n\n- Same person comes from an {@link IShoppingExternalUser external service}\n- Same person creates multiple accounts\n- Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n- Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n\nTherefore, `IShoppingCustomer` can have multiple records with the same\n{@link IShoppingCitizen}, {@link IShoppingMember}, and\n{@link IShoppingExternalUser}. Additionally, if a customer signs up for\nmembership after verifying their real name or signs up for our service after\nbeing a user of an external service, all related records are changed at once.\nTherefore, identification and tracking of customers can be done very\nsystematically.",
                    "type": "object",
                    "properties": {
                      "type": {
                        "title": "Discriminant for the type of customer",
                        "description": "Discriminant for the type of customer.",
                        "const": "customer"
                      },
                      "member": {
                        "title": "Membership information",
                        "description": "Membership information.\n\nIf the customer has joined as a member.",
                        "oneOf": [
                          {
                            "type": "null"
                          },
                          {
                            "type": "object",
                            "properties": {
                              "citizen": {
                                "title": "Citizen information",
                                "description": "Citizen information.\n\nOnly when has verified as a citizen, with mobile number and real name.\n\nFor reference, if the member has signed up as a seller or administrator,\nthis citizen information must be.",
                                "oneOf": [
                                  {
                                    "type": "null"
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "title": "Primary Key",
                                        "description": "Primary Key.",
                                        "type": "string",
                                        "format": "uuid"
                                      },
                                      "created_at": {
                                        "title": "Creation time of record",
                                        "description": "Creation time of record.",
                                        "type": "string",
                                        "format": "date-time"
                                      },
                                      "mobile": {
                                        "title": "Mobile number",
                                        "description": "Mobile number.",
                                        "x-wrtn-payment-order-mobile": true,
                                        "type": "string",
                                        "pattern": "^[0-9]*$"
                                      },
                                      "name": {
                                        "title": "Real name, or equivalent nickname",
                                        "description": "Real name, or equivalent nickname.",
                                        "x-wrtn-payment-order-citizen": true,
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "created_at",
                                      "mobile",
                                      "name"
                                    ],
                                    "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile} input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                                  }
                                ]
                              },
                              "seller": {
                                "title": "Seller information",
                                "description": "Seller information.\n\nIf the member also signed up as a seller.",
                                "oneOf": [
                                  {
                                    "type": "null"
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "title": "Primary Key",
                                        "description": "Primary Key.",
                                        "type": "string",
                                        "format": "uuid"
                                      },
                                      "created_at": {
                                        "title": "Creation tmie of record",
                                        "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up.",
                                        "type": "string",
                                        "format": "date-time"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "created_at"
                                    ],
                                    "description": "Seller information.\n\n`IShoppingSeller` is an entity that embodies a person who registers\n{@link IShoppingSale sales} to operate selling activities, with\n{@link IShoppingMember membership} joining.\n\nFor reference, unlike {@link IShoppingCustomer customers} which can\nparticipate even without membership joining, seller must join membership\nto operate sales. Also, seller must do the\n{@link IShoppingCitizen real-name and mobile authentication}, too."
                                  }
                                ]
                              },
                              "administrator": {
                                "title": "Administrator information",
                                "description": "Administrator information.\n\nIf the member also signed up as an administrator.",
                                "oneOf": [
                                  {
                                    "type": "null"
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "title": "Primary Key",
                                        "description": "Primary Key.",
                                        "type": "string",
                                        "format": "uuid"
                                      },
                                      "created_at": {
                                        "title": "Creation time of record",
                                        "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up.",
                                        "type": "string",
                                        "format": "date-time"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "created_at"
                                    ],
                                    "description": "Administrator account.\n\n`IShoppingAdministrator` is an entity that embodies a person who manages\nthe shopping mall system, with {@link IShoppingMember membership} joining.\n\nFor reference, unlike {@link IShoppingCustomer customers} which can participate\neven without membership joining, administrator must join membership to operate\nmanagements. Also, administrator must perform the\n{@link IShoppingCitizen real-name and mobile authentication}, too."
                                  }
                                ]
                              },
                              "id": {
                                "title": "Primary Key",
                                "description": "Primary Key.",
                                "type": "string",
                                "format": "uuid"
                              },
                              "nickname": {
                                "title": "Nickname that uniquely identifies the member",
                                "description": "Nickname that uniquely identifies the member.",
                                "type": "string"
                              },
                              "emails": {
                                "title": "List of emails",
                                "description": "List of emails.",
                                "type": "array",
                                "items": {
                                  "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one.",
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "title": "Primary Key",
                                      "description": "Primary Key.",
                                      "type": "string",
                                      "format": "uuid"
                                    },
                                    "value": {
                                      "title": "Email address value",
                                      "description": "Email address value.",
                                      "type": "string",
                                      "format": "email"
                                    },
                                    "created_at": {
                                      "title": "Creation time of record",
                                      "description": "Creation time of record.",
                                      "type": "string",
                                      "format": "date-time"
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "value",
                                    "created_at"
                                  ]
                                }
                              },
                              "created_at": {
                                "title": "Creation time of record",
                                "description": "Creation time of record.\n\nAnother words, the time when the member has signed up.",
                                "type": "string",
                                "format": "date-time"
                              }
                            },
                            "required": [
                              "citizen",
                              "seller",
                              "administrator",
                              "id",
                              "nickname",
                              "emails",
                              "created_at"
                            ],
                            "description": "Member Account.\n\n`IShoppingMember` is an entity that symbolizes the case when a\n{@link IShoppingCustomer} signs up as a member of this shopping mall\nsystem.\n\nIf a `IShoppingMember` has seller or administrator property. it means that\nthe {@link IShoppingCustomer} has acting as a {@link IShoppingSeller seller}\nor {@link IShoppingAdministrator administrator} at the same time."
                          }
                        ]
                      },
                      "citizen": {
                        "title": "Citizen information",
                        "description": "Citizen information.\n\nIf the customer has verified his real name and mobile number.",
                        "oneOf": [
                          {
                            "type": "null"
                          },
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "title": "Primary Key",
                                "description": "Primary Key.",
                                "type": "string",
                                "format": "uuid"
                              },
                              "created_at": {
                                "title": "Creation time of record",
                                "description": "Creation time of record.",
                                "type": "string",
                                "format": "date-time"
                              },
                              "mobile": {
                                "title": "Mobile number",
                                "description": "Mobile number.",
                                "x-wrtn-payment-order-mobile": true,
                                "type": "string",
                                "pattern": "^[0-9]*$"
                              },
                              "name": {
                                "title": "Real name, or equivalent nickname",
                                "description": "Real name, or equivalent nickname.",
                                "x-wrtn-payment-order-citizen": true,
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "created_at",
                              "mobile",
                              "name"
                            ],
                            "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile} input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                          }
                        ]
                      },
                      "id": {
                        "title": "Primary Key",
                        "description": "Primary Key.",
                        "type": "string",
                        "format": "uuid"
                      },
                      "channel": {
                        "title": "Belonged channel",
                        "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "title": "Primary Key",
                            "description": "Primary Key.",
                            "type": "string",
                            "format": "uuid"
                          },
                          "created_at": {
                            "title": "Creation time of record",
                            "description": "Creation time of record.",
                            "type": "string",
                            "format": "date-time"
                          },
                          "code": {
                            "title": "Identifier code",
                            "description": "Identifier code.",
                            "type": "string"
                          },
                          "name": {
                            "title": "Name of the channel",
                            "description": "Name of the channel.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "created_at",
                          "code",
                          "name"
                        ]
                      },
                      "external_user": {
                        "title": "External user information",
                        "description": "External user information.\n\nWhen the customer has come frome an external service.",
                        "oneOf": [
                          {
                            "type": "null"
                          },
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "title": "Primary Key",
                                "description": "Primary Key.",
                                "type": "string",
                                "format": "uuid"
                              },
                              "citizen": {
                                "title": "Citizen activation info",
                                "description": "Citizen activation info.",
                                "oneOf": [
                                  {
                                    "type": "null"
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "title": "Primary Key",
                                        "description": "Primary Key.",
                                        "type": "string",
                                        "format": "uuid"
                                      },
                                      "created_at": {
                                        "title": "Creation time of record",
                                        "description": "Creation time of record.",
                                        "type": "string",
                                        "format": "date-time"
                                      },
                                      "mobile": {
                                        "title": "Mobile number",
                                        "description": "Mobile number.",
                                        "x-wrtn-payment-order-mobile": true,
                                        "type": "string",
                                        "pattern": "^[0-9]*$"
                                      },
                                      "name": {
                                        "title": "Real name, or equivalent nickname",
                                        "description": "Real name, or equivalent nickname.",
                                        "x-wrtn-payment-order-citizen": true,
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "created_at",
                                      "mobile",
                                      "name"
                                    ],
                                    "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile} input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                                  }
                                ]
                              },
                              "created_at": {
                                "title": "Creation time of record",
                                "description": "Creation time of record.\n\nAnother word, first time when the external user connected.",
                                "type": "string",
                                "format": "date-time"
                              },
                              "uid": {
                                "title": "Identifier key of external user from the external system",
                                "description": "Identifier key of external user from the external system.",
                                "type": "string"
                              },
                              "application": {
                                "title": "Identifier code of the external service",
                                "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code} in common.",
                                "type": "string"
                              },
                              "nickname": {
                                "title": "Nickname of external user in the external system",
                                "description": "Nickname of external user in the external system.",
                                "type": "string"
                              },
                              "data": {
                                "description": "Additional information about external user from the external\nsystem."
                              }
                            },
                            "required": [
                              "id",
                              "citizen",
                              "created_at",
                              "uid",
                              "application",
                              "nickname",
                              "data"
                            ],
                            "description": "External user information.\n\n`IShoppingExternalUser` is an entity dsigned for when this system needs\nto connect with external services and welcome their users as\n{@link IShoppingCustomer customers} of this service.\n\nFor reference, customers who connect from an external service must have\nthis record, and the external service user is identified through the two\nattributes {@link application} and {@link uid}. If a customer connected\nfrom an external service completes\n{@link IShoppingCitizen real-name authentication} from this service, each\ntime the external service user reconnects to this service and issues a\nnew customer authentication token, real-name authentication begins with\ncompleted.\n\nAnd {@link password} is the password issued to the user by the external\nservice system (the so-called permanent user authentication token), and\nis never the actual user password. However, for customers who entered the\nsame application and uid as the current external system user, this is to\ndetermine whether to view this as a correct external system user or a\nviolation.\n\nIn addition, additional information received from external services can\nbe recorded in the data field in JSON format."
                          }
                        ]
                      },
                      "href": {
                        "title": "Connection address",
                        "description": "Connection address.\n\nSame with {@link window.location.href} of client.",
                        "type": "string",
                        "format": "uri"
                      },
                      "referrer": {
                        "title": "Referrer address",
                        "description": "Referrer address.\n\nSame with {@link window.document.referrer} of client.",
                        "oneOf": [
                          {
                            "type": "null"
                          },
                          {
                            "type": "string",
                            "format": "uri"
                          },
                          {
                            "type": "string",
                            "maxLength": 0
                          }
                        ]
                      },
                      "ip": {
                        "title": "Connection IP Address",
                        "description": "Connection IP Address.",
                        "oneOf": [
                          {
                            "type": "string",
                            "format": "ipv4"
                          },
                          {
                            "type": "string",
                            "format": "ipv6"
                          }
                        ]
                      },
                      "created_at": {
                        "title": "Creation time of the connection record",
                        "description": "Creation time of the connection record.",
                        "type": "string",
                        "format": "date-time"
                      }
                    },
                    "required": [
                      "type",
                      "member",
                      "citizen",
                      "id",
                      "channel",
                      "external_user",
                      "href",
                      "referrer",
                      "ip",
                      "created_at"
                    ]
                  },
                  "coupon": {
                    "title": "Target coupon",
                    "description": "Discount coupon.\n\n`IShoppingCoupon` is an entity that symbolizes discount coupons at\na shopping mall.\n\nNote that, `IShoppingCoupon` only contains specification information\nabout discount coupons. Please keep in mind that this is a different\nconcept from {@link IShoppingCouponTicket}, which refers to the issuance\nof a discount coupon, or {@link IShoppingCouponTicketPayment}, which\nrefers to its payment.\n\nAdditionally, discount coupons are applied on an order-by-order basis,\nbut each has its own unique restrictions. For example, a coupon with\n{@link IShoppingCouponSellerCriteria} may or may not be used only for\n{@link IShoppingSale} of listings registered by the {@link IShoppingSeller}.\nAlso, there are restrictions such as\n{@link IShoppingCouponDiscount.threshold minimum amount restrictions} for\nusing discount coupons and\n{@link IShoppingCouponDiscount.limit maximum discount amount limits}.\n\nIn addition, you can set whether to issue discount coupons publicly or\ngive them only to people who know the specific issuing code. In addition,\nthere are restrictions such as issued discount coupons having an\n{@link IShoppingCouponRestriction.expired_at expiration date} or being\nissued only to customers who came in through a\n{@link IShoppingCouponFunnelCriteria specific funnel}.\n\nFor more information, please refer to the properties below and the\nsubsidiary entities described later.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "title": "Primary Key",
                        "description": "Primary Key.",
                        "type": "string",
                        "format": "uuid"
                      },
                      "designer": {
                        "title": "Designer who've made the coupon",
                        "description": "Designer who've made the coupon.",
                        "oneOf": [
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "title": "Primary Key",
                                "description": "Primary Key.",
                                "type": "string",
                                "format": "uuid"
                              },
                              "created_at": {
                                "title": "Creation time of record",
                                "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up.",
                                "type": "string",
                                "format": "date-time"
                              }
                            },
                            "required": [
                              "id",
                              "created_at"
                            ],
                            "description": "Administrator account.\n\n`IShoppingAdministrator` is an entity that embodies a person who manages\nthe shopping mall system, with {@link IShoppingMember membership} joining.\n\nFor reference, unlike {@link IShoppingCustomer customers} which can participate\neven without membership joining, administrator must join membership to operate\nmanagements. Also, administrator must perform the\n{@link IShoppingCitizen real-name and mobile authentication}, too."
                          },
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "title": "Primary Key",
                                "description": "Primary Key.",
                                "type": "string",
                                "format": "uuid"
                              },
                              "created_at": {
                                "title": "Creation tmie of record",
                                "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up.",
                                "type": "string",
                                "format": "date-time"
                              }
                            },
                            "required": [
                              "id",
                              "created_at"
                            ],
                            "description": "Seller information.\n\n`IShoppingSeller` is an entity that embodies a person who registers\n{@link IShoppingSale sales} to operate selling activities, with\n{@link IShoppingMember membership} joining.\n\nFor reference, unlike {@link IShoppingCustomer customers} which can\nparticipate even without membership joining, seller must join membership\nto operate sales. Also, seller must do the\n{@link IShoppingCitizen real-name and mobile authentication}, too."
                          }
                        ]
                      },
                      "inventory": {
                        "title": "Inventory information",
                        "description": "Inventory information of the coupon.\n\nIf a {@link IShoppingCoupon coupon} has been designed with limited\ninventory, this `IShoppingCouponInventory` structure represents the\nremaining inventory information.",
                        "type": "object",
                        "properties": {
                          "volume": {
                            "title": "Remaining volume for everyone",
                            "description": "Remaining volume for everyone.\n\nIf there is a limit to the quantity issued, it becomes impossible to\nissue tickets exceeding this value.\n\nIn other words, the concept of N coupons being issued on a first-come,\nfirst-served basis is created.",
                            "oneOf": [
                              {
                                "type": "null"
                              },
                              {
                                "type": "integer"
                              }
                            ]
                          },
                          "volume_per_citizen": {
                            "title": "Remaining volume per citizen",
                            "description": "Remaining volume per citizen.\n\nAs a limit to the total amount of issuance per person, it is common to\nassign 1 to limit duplicate issuance to the same citizen, or to use the\n`nul`` value to set no limit.\n\nOf course, by assigning a value of N, the total amount issued to the\nsame citizen can be limited.",
                            "oneOf": [
                              {
                                "type": "null"
                              },
                              {
                                "type": "integer"
                              }
                            ]
                          }
                        },
                        "required": [
                          "volume",
                          "volume_per_citizen"
                        ]
                      },
                      "criterias": {
                        "title": "List of criteria information",
                        "description": "List of criteria information.",
                        "type": "array",
                        "items": {
                          "oneOf": [
                            {
                              "type": "object",
                              "properties": {
                                "channels": {
                                  "title": "List of target channels and categories",
                                  "description": "List of target channels and categories.",
                                  "type": "array",
                                  "items": {
                                    "description": "Description of the current {@link IShoppingCouponChannelCriteria} type:\n\n> Conditions for channels of discount coupons.\n> \n> `ishoppingcouponchannelcriteria` is a subtype entity of\n> {@link IShoppingCouponCriteriaBase} and is used when setting conditions on\n> a specific {@link IShoppingChannel channel} or\n> {@link IShoppingChannelCategory category} of that channel.\n> \n> If the {@link direction} value is \"include\", the coupon can only be used\n> for the target channels (or categories). Conversely, if it is \"exclude\",\n> it is a coupon that cannot be used.",
                                    "type": "object",
                                    "properties": {
                                      "channel": {
                                        "title": "Target channel",
                                        "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future.",
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "title": "Primary Key",
                                            "description": "Primary Key.",
                                            "type": "string",
                                            "format": "uuid"
                                          },
                                          "created_at": {
                                            "title": "Creation time of record",
                                            "description": "Creation time of record.",
                                            "type": "string",
                                            "format": "date-time"
                                          },
                                          "code": {
                                            "title": "Identifier code",
                                            "description": "Identifier code.",
                                            "type": "string"
                                          },
                                          "name": {
                                            "title": "Name of the channel",
                                            "description": "Name of the channel.",
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "created_at",
                                          "code",
                                          "name"
                                        ]
                                      },
                                      "categories": {
                                        "title": "List of target categories",
                                        "description": "List of target categories.",
                                        "oneOf": [
                                          {
                                            "type": "null"
                                          },
                                          {
                                            "type": "array",
                                            "items": {
                                              "$ref": "#/$defs/IShoppingChannelCategory.IInvert"
                                            },
                                            "minItems": 1
                                          }
                                        ]
                                      }
                                    },
                                    "required": [
                                      "channel",
                                      "categories"
                                    ]
                                  },
                                  "minItems": 1
                                },
                                "type": {
                                  "title": "Descrimanator type",
                                  "description": "Descrimanator type.",
                                  "const": "channel"
                                },
                                "direction": {
                                  "title": "Direction of the criteria",
                                  "description": "Direction of the criteria.",
                                  "oneOf": [
                                    {
                                      "const": "include"
                                    },
                                    {
                                      "const": "exclude"
                                    }
                                  ]
                                }
                              },
                              "required": [
                                "channels",
                                "type",
                                "direction"
                              ],
                              "description": "Conditions for channels of discount coupons.\n\n`ishoppingcouponchannelcriteria` is a subtype entity of\n{@link IShoppingCouponCriteriaBase} and is used when setting conditions on\na specific {@link IShoppingChannel channel} or\n{@link IShoppingChannelCategory category} of that channel.\n\nIf the {@link direction} value is \"include\", the coupon can only be used\nfor the target channels (or categories). Conversely, if it is \"exclude\",\nit is a coupon that cannot be used."
                            },
                            {
                              "type": "object",
                              "properties": {
                                "sections": {
                                  "title": "Target sections to include or exclude",
                                  "description": "Target sections to include or exclude.",
                                  "type": "array",
                                  "items": {
                                    "description": "Section information.\n\n`IShoppingSection` is a concept that refers to the spatial information of\nthe market.\n\nIf we compare the section mentioned here to the offline market, it means a\nspatially separated area within the store, such as the \"fruit corner\" or\n\"butcher corner\". Therefore, in the {@link IShoppingSale sale} entity, it is\nnot possible to classify multiple sections simultaneously, but only one section\ncan be classified.\n\nBy the way, if your shopping mall system requires only one section, then just\nuse only one. This concept is designed to be expandable in the future.",
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "title": "Primary Key",
                                        "description": "Primary Key.",
                                        "type": "string",
                                        "format": "uuid"
                                      },
                                      "code": {
                                        "title": "Identifier code",
                                        "description": "Identifier code.",
                                        "type": "string"
                                      },
                                      "name": {
                                        "title": "Representative name of the section",
                                        "description": "Representative name of the section.",
                                        "type": "string"
                                      },
                                      "created_at": {
                                        "title": "Creation time of record",
                                        "description": "Creation time of record.",
                                        "type": "string",
                                        "format": "date-time"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "code",
                                      "name",
                                      "created_at"
                                    ]
                                  },
                                  "minItems": 1
                                },
                                "type": {
                                  "title": "Descrimanator type",
                                  "description": "Descrimanator type.",
                                  "const": "section"
                                },
                                "direction": {
                                  "title": "Direction of the criteria",
                                  "description": "Direction of the criteria.",
                                  "oneOf": [
                                    {
                                      "const": "include"
                                    },
                                    {
                                      "const": "exclude"
                                    }
                                  ]
                                }
                              },
                              "required": [
                                "sections",
                                "type",
                                "direction"
                              ],
                              "description": "Conditions for sections of discount coupons.\n\n`IShoppingCouponSectionCriteria` is a subtype entity of\n{@link IShoppingCouponCriteriaBase} and is used when setting conditions\nfor a specific {@link IShoppingSection section}.\n\nIf the {@link direction} value is \"include\", the coupon can only be used\nfor the target {@link sections}. Conversely, if it is \"exclude\", the\ncoupon cannot be used."
                            },
                            {
                              "type": "object",
                              "properties": {
                                "sellers": {
                                  "title": "Target sellers to include or exclude",
                                  "description": "Target sellers to include or exclude.",
                                  "type": "array",
                                  "items": {
                                    "description": "Seller information.\n\n`IShoppingSeller` is an entity that embodies a person who registers\n{@link IShoppingSale sales} to operate selling activities, with\n{@link IShoppingMember membership} joining.\n\nFor reference, unlike {@link IShoppingCustomer customers} which can\nparticipate even without membership joining, seller must join membership\nto operate sales. Also, seller must do the\n{@link IShoppingCitizen real-name and mobile authentication}, too.",
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "title": "Primary Key",
                                        "description": "Primary Key.",
                                        "type": "string",
                                        "format": "uuid"
                                      },
                                      "created_at": {
                                        "title": "Creation tmie of record",
                                        "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up.",
                                        "type": "string",
                                        "format": "date-time"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "created_at"
                                    ]
                                  },
                                  "minItems": 1
                                },
                                "type": {
                                  "title": "Descrimanator type",
                                  "description": "Descrimanator type.",
                                  "const": "seller"
                                },
                                "direction": {
                                  "title": "Direction of the criteria",
                                  "description": "Direction of the criteria.",
                                  "oneOf": [
                                    {
                                      "const": "include"
                                    },
                                    {
                                      "const": "exclude"
                                    }
                                  ]
                                }
                              },
                              "required": [
                                "sellers",
                                "type",
                                "direction"
                              ],
                              "description": "Conditions for sellers of discount coupons.\n\n`IShoppingCouponSellerCriteria` is a subtype entity of\n{@link IShoppingCouponCriteriaBase} and is used when setting conditions\nfor a specific {@link IShoppingSeller seller}.\n\nIf the {@link direction} value is \"include\", the coupon can only be used\nfor the target {@link sellers}. Conversely, if it is \"exclude\", the\ncoupon cannot be used."
                            },
                            {
                              "type": "object",
                              "properties": {
                                "sales": {
                                  "title": "Target sales to include or exclude",
                                  "description": "Target sales to include or exclude.",
                                  "type": "array",
                                  "items": {
                                    "description": "Summarized information of sale.\n\nThis summarized information being used for pagination.\n\n------------------------------\n\nDescription of the current {@link IShoppingSale.ISummary} type:\n\n> Summarized information of sale.\n> \n> This summarized information being used for pagination.\n\n------------------------------\n\nDescription of the parent {@link IShoppingSale} type:\n\n> Seller sales products.\n> \n> `IShoppingSale` is an entity that embodies \"product sales\" (sales)\n> information registered by the {@link ISoppingSeller seller}. And the main\n> information of the sale is recorded in the sub {@link IShoppingSaleSnapshot},\n> not in the main `IShoppingSale`. When a seller changes a previously registered\n> item, the existing `IShoppingSale` record is not changed, but a new\n> {@link IShoppingSaleSnapshot snapshot} record be created.\n> \n> This is to preserve the {@link IShoppingCustomer customer}'s\n> {@link IShoppingOrder purchase history} flawlessly after the customer\n> purchases a specific item, even if the seller changes the components or\n> price of the item. It is also intended to support sellers in so-called A/B\n> testing, which involves changing components or prices and measuring the\n> performance in each case.",
                                    "type": "object",
                                    "properties": {
                                      "section": {
                                        "title": "Belonged section",
                                        "description": "Section information.\n\n`IShoppingSection` is a concept that refers to the spatial information of\nthe market.\n\nIf we compare the section mentioned here to the offline market, it means a\nspatially separated area within the store, such as the \"fruit corner\" or\n\"butcher corner\". Therefore, in the {@link IShoppingSale sale} entity, it is\nnot possible to classify multiple sections simultaneously, but only one section\ncan be classified.\n\nBy the way, if your shopping mall system requires only one section, then just\nuse only one. This concept is designed to be expandable in the future.",
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "title": "Primary Key",
                                            "description": "Primary Key.",
                                            "type": "string",
                                            "format": "uuid"
                                          },
                                          "code": {
                                            "title": "Identifier code",
                                            "description": "Identifier code.",
                                            "type": "string"
                                          },
                                          "name": {
                                            "title": "Representative name of the section",
                                            "description": "Representative name of the section.",
                                            "type": "string"
                                          },
                                          "created_at": {
                                            "title": "Creation time of record",
                                            "description": "Creation time of record.",
                                            "type": "string",
                                            "format": "date-time"
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "code",
                                          "name",
                                          "created_at"
                                        ]
                                      },
                                      "seller": {
                                        "title": "Seller who has registered the sale",
                                        "description": "Invert information starting from seller info.\n\nInstead of accessing to the seller information from the\n{@link IShoppingCustomer.member} -> {@link IShoppingMember.seller},\n`IShoppingSeller.IInvert` starts from the seller information\nand access to the customer, member and {@link IShoppingCitizen citizen}\ninformation inversely.\n\n------------------------------\n\nDescription of the current {@link IShoppingSeller.IInvert} type:\n\n> Invert information starting from seller info.\n> \n> Instead of accessing to the seller information from the\n> {@link IShoppingCustomer.member} -> {@link IShoppingMember.seller},\n> `IShoppingSeller.IInvert` starts from the seller information\n> and access to the customer, member and {@link IShoppingCitizen citizen}\n> information inversely.\n\n------------------------------\n\nDescription of the parent {@link IShoppingSeller} type:\n\n> Seller information.\n> \n> `IShoppingSeller` is an entity that embodies a person who registers\n> {@link IShoppingSale sales} to operate selling activities, with\n> {@link IShoppingMember membership} joining.\n> \n> For reference, unlike {@link IShoppingCustomer customers} which can\n> participate even without membership joining, seller must join membership\n> to operate sales. Also, seller must do the\n> {@link IShoppingCitizen real-name and mobile authentication}, too.",
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "title": "Discriminant for the type of customer",
                                            "description": "Discriminant for the type of customer.",
                                            "const": "seller"
                                          },
                                          "member": {
                                            "title": "Membership joining information",
                                            "description": "Invert information of member.\n\nThis invert member information has been designed to be used for another\ninvert information of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert}\n- {@link IShoppingAdministrator.IInvert}\n\n------------------------------\n\nDescription of the current {@link IShoppingMember.IInvert} type:\n\n> Invert information of member.\n> \n> This invert member information has been designed to be used for another\n> invert information of sellers and administrators like below.\n> \n> - {@link IShoppingSeller.IInvert}\n> - {@link IShoppingAdministrator.IInvert}\n\n------------------------------\n\nDescription of the parent {@link IShoppingMember} type:\n\n> Member Account.\n> \n> `IShoppingMember` is an entity that symbolizes the case when a\n> {@link IShoppingCustomer} signs up as a member of this shopping mall\n> system.\n> \n> If a `IShoppingMember` has seller or administrator property. it means that\n> the {@link IShoppingCustomer} has acting as a {@link IShoppingSeller seller}\n> or {@link IShoppingAdministrator administrator} at the same time.",
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "title": "Primary Key",
                                                "description": "Primary Key.",
                                                "type": "string",
                                                "format": "uuid"
                                              },
                                              "nickname": {
                                                "title": "Nickname that uniquely identifies the member",
                                                "description": "Nickname that uniquely identifies the member.",
                                                "type": "string"
                                              },
                                              "emails": {
                                                "title": "List of emails",
                                                "description": "List of emails.",
                                                "type": "array",
                                                "items": {
                                                  "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one.",
                                                  "type": "object",
                                                  "properties": {
                                                    "id": {
                                                      "title": "Primary Key",
                                                      "description": "Primary Key.",
                                                      "type": "string",
                                                      "format": "uuid"
                                                    },
                                                    "value": {
                                                      "title": "Email address value",
                                                      "description": "Email address value.",
                                                      "type": "string",
                                                      "format": "email"
                                                    },
                                                    "created_at": {
                                                      "title": "Creation time of record",
                                                      "description": "Creation time of record.",
                                                      "type": "string",
                                                      "format": "date-time"
                                                    }
                                                  },
                                                  "required": [
                                                    "id",
                                                    "value",
                                                    "created_at"
                                                  ]
                                                }
                                              },
                                              "created_at": {
                                                "title": "Creation time of record",
                                                "description": "Creation time of record.\n\nAnother words, the time when the member has signed up.",
                                                "type": "string",
                                                "format": "date-time"
                                              }
                                            },
                                            "required": [
                                              "id",
                                              "nickname",
                                              "emails",
                                              "created_at"
                                            ]
                                          },
                                          "customer": {
                                            "title": "Customer, the connection information",
                                            "description": "Inverted customer informatino.\n\nThis inverted customer information has been designed to be used for\nanother invert information of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert}\n- {@link IShoppingAdministrator.IInvert}\n\n------------------------------\n\nDescription of the current {@link IShoppingCustomer.IInvert} type:\n\n> Inverted customer informatino.\n> \n> This inverted customer information has been designed to be used for\n> another invert information of sellers and administrators like below.\n> \n> - {@link IShoppingSeller.IInvert}\n> - {@link IShoppingAdministrator.IInvert}\n\n------------------------------\n\nDescription of the parent {@link IShoppingCustomer} type:\n\n> Customer information, but not a person but a connection basis.\n> \n> `IShoppingCustomer` is an entity that literally embodies the information of\n> those who participated in the market as customers. By the way, the\n> `IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\n> even if the same person connects to the shopping mall multiple, multiple\n> records are created in `IShoppingCustomer`.\n> \n> The first purpose of this is to track the customer's inflow path in detail,\n> and it is for cases where the same person enters as a non-member,\n> {@link IShoppingCartCommodity puts items in the shopping cart} in advance,\n> and only authenticates their {@link IShoppingCitizen real name} or\n> registers/logs in at the moment of {@link IShoppingOrderPublish payment}.\n> It is the second. Lastly, it is to accurately track the activities that\n> a person performs at the shopping mall in various ways like below.\n> \n> - Same person comes from an {@link IShoppingExternalUser external service}\n> - Same person creates multiple accounts\n> - Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n> - Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n> \n> Therefore, `IShoppingCustomer` can have multiple records with the same\n> {@link IShoppingCitizen}, {@link IShoppingMember}, and\n> {@link IShoppingExternalUser}. Additionally, if a customer signs up for\n> membership after verifying their real name or signs up for our service after\n> being a user of an external service, all related records are changed at once.\n> Therefore, identification and tracking of customers can be done very\n> systematically.",
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "title": "Primary Key",
                                                "description": "Primary Key.",
                                                "type": "string",
                                                "format": "uuid"
                                              },
                                              "channel": {
                                                "title": "Belonged channel",
                                                "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future.",
                                                "type": "object",
                                                "properties": {
                                                  "id": {
                                                    "title": "Primary Key",
                                                    "description": "Primary Key.",
                                                    "type": "string",
                                                    "format": "uuid"
                                                  },
                                                  "created_at": {
                                                    "title": "Creation time of record",
                                                    "description": "Creation time of record.",
                                                    "type": "string",
                                                    "format": "date-time"
                                                  },
                                                  "code": {
                                                    "title": "Identifier code",
                                                    "description": "Identifier code.",
                                                    "type": "string"
                                                  },
                                                  "name": {
                                                    "title": "Name of the channel",
                                                    "description": "Name of the channel.",
                                                    "type": "string"
                                                  }
                                                },
                                                "required": [
                                                  "id",
                                                  "created_at",
                                                  "code",
                                                  "name"
                                                ]
                                              },
                                              "external_user": {
                                                "title": "External user information",
                                                "description": "External user information.\n\nWhen the customer has come frome an external service.",
                                                "oneOf": [
                                                  {
                                                    "type": "null"
                                                  },
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "id": {
                                                        "title": "Primary Key",
                                                        "description": "Primary Key.",
                                                        "type": "string",
                                                        "format": "uuid"
                                                      },
                                                      "citizen": {
                                                        "title": "Citizen activation info",
                                                        "description": "Citizen activation info.",
                                                        "oneOf": [
                                                          {
                                                            "type": "null"
                                                          },
                                                          {
                                                            "type": "object",
                                                            "properties": {
                                                              "id": {
                                                                "title": "Primary Key",
                                                                "description": "Primary Key.",
                                                                "type": "string",
                                                                "format": "uuid"
                                                              },
                                                              "created_at": {
                                                                "title": "Creation time of record",
                                                                "description": "Creation time of record.",
                                                                "type": "string",
                                                                "format": "date-time"
                                                              },
                                                              "mobile": {
                                                                "title": "Mobile number",
                                                                "description": "Mobile number.",
                                                                "x-wrtn-payment-order-mobile": true,
                                                                "type": "string",
                                                                "pattern": "^[0-9]*$"
                                                              },
                                                              "name": {
                                                                "title": "Real name, or equivalent nickname",
                                                                "description": "Real name, or equivalent nickname.",
                                                                "x-wrtn-payment-order-citizen": true,
                                                                "type": "string"
                                                              }
                                                            },
                                                            "required": [
                                                              "id",
                                                              "created_at",
                                                              "mobile",
                                                              "name"
                                                            ],
                                                            "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile} input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                                                          }
                                                        ]
                                                      },
                                                      "created_at": {
                                                        "title": "Creation time of record",
                                                        "description": "Creation time of record.\n\nAnother word, first time when the external user connected.",
                                                        "type": "string",
                                                        "format": "date-time"
                                                      },
                                                      "uid": {
                                                        "title": "Identifier key of external user from the external system",
                                                        "description": "Identifier key of external user from the external system.",
                                                        "type": "string"
                                                      },
                                                      "application": {
                                                        "title": "Identifier code of the external service",
                                                        "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code} in common.",
                                                        "type": "string"
                                                      },
                                                      "nickname": {
                                                        "title": "Nickname of external user in the external system",
                                                        "description": "Nickname of external user in the external system.",
                                                        "type": "string"
                                                      },
                                                      "data": {
                                                        "description": "Additional information about external user from the external\nsystem."
                                                      }
                                                    },
                                                    "required": [
                                                      "id",
                                                      "citizen",
                                                      "created_at",
                                                      "uid",
                                                      "application",
                                                      "nickname",
                                                      "data"
                                                    ],
                                                    "description": "External user information.\n\n`IShoppingExternalUser` is an entity dsigned for when this system needs\nto connect with external services and welcome their users as\n{@link IShoppingCustomer customers} of this service.\n\nFor reference, customers who connect from an external service must have\nthis record, and the external service user is identified through the two\nattributes {@link application} and {@link uid}. If a customer connected\nfrom an external service completes\n{@link IShoppingCitizen real-name authentication} from this service, each\ntime the external service user reconnects to this service and issues a\nnew customer authentication token, real-name authentication begins with\ncompleted.\n\nAnd {@link password} is the password issued to the user by the external\nservice system (the so-called permanent user authentication token), and\nis never the actual user password. However, for customers who entered the\nsame application and uid as the current external system user, this is to\ndetermine whether to view this as a correct external system user or a\nviolation.\n\nIn addition, additional information received from external services can\nbe recorded in the data field in JSON format."
                                                  }
                                                ]
                                              },
                                              "href": {
                                                "title": "Connection address",
                                                "description": "Connection address.\n\nSame with {@link window.location.href} of client.",
                                                "type": "string",
                                                "format": "uri"
                                              },
                                              "referrer": {
                                                "title": "Referrer address",
                                                "description": "Referrer address.\n\nSame with {@link window.document.referrer} of client.",
                                                "oneOf": [
                                                  {
                                                    "type": "null"
                                                  },
                                                  {
                                                    "type": "string",
                                                    "format": "uri"
                                                  },
                                                  {
                                                    "type": "string",
                                                    "maxLength": 0
                                                  }
                                                ]
                                              },
                                              "ip": {
                                                "title": "Connection IP Address",
                                                "description": "Connection IP Address.",
                                                "oneOf": [
                                                  {
                                                    "type": "string",
                                                    "format": "ipv4"
                                                  },
                                                  {
                                                    "type": "string",
                                                    "format": "ipv6"
                                                  }
                                                ]
                                              },
                                              "created_at": {
                                                "title": "Creation time of the connection record",
                                                "description": "Creation time of the connection record.",
                                                "type": "string",
                                                "format": "date-time"
                                              }
                                            },
                                            "required": [
                                              "id",
                                              "channel",
                                              "external_user",
                                              "href",
                                              "referrer",
                                              "ip",
                                              "created_at"
                                            ]
                                          },
                                          "citizen": {
                                            "title": "Real-name and mobile number authentication information",
                                            "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile} input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored.",
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "title": "Primary Key",
                                                "description": "Primary Key.",
                                                "type": "string",
                                                "format": "uuid"
                                              },
                                              "created_at": {
                                                "title": "Creation time of record",
                                                "description": "Creation time of record.",
                                                "type": "string",
                                                "format": "date-time"
                                              },
                                              "mobile": {
                                                "title": "Mobile number",
                                                "description": "Mobile number.",
                                                "x-wrtn-payment-order-mobile": true,
                                                "type": "string",
                                                "pattern": "^[0-9]*$"
                                              },
                                              "name": {
                                                "title": "Real name, or equivalent nickname",
                                                "description": "Real name, or equivalent nickname.",
                                                "x-wrtn-payment-order-citizen": true,
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "id",
                                              "created_at",
                                              "mobile",
                                              "name"
                                            ]
                                          },
                                          "id": {
                                            "title": "Primary Key",
                                            "description": "Primary Key.",
                                            "type": "string",
                                            "format": "uuid"
                                          },
                                          "created_at": {
                                            "title": "Creation tmie of record",
                                            "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up.",
                                            "type": "string",
                                            "format": "date-time"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "member",
                                          "customer",
                                          "citizen",
                                          "id",
                                          "created_at"
                                        ]
                                      },
                                      "price_range": {
                                        "title": "Price range of the unit",
                                        "type": "object",
                                        "properties": {
                                          "lowest": {
                                            "description": "Shopping price interface.",
                                            "type": "object",
                                            "properties": {
                                              "nominal": {
                                                "title": "Nominal price",
                                                "description": "Nominal price.\n\nThis is not {@link real real price} to pay, but just a nominal price to show.\nIf this value is greater than the {@link real real price}, it would be shown\nlike {@link IShoppingSeller seller} is giving a discount.",
                                                "type": "number",
                                                "minimum": 0
                                              },
                                              "real": {
                                                "title": "Real price to pay",
                                                "description": "Real price to pay.",
                                                "type": "number",
                                                "minimum": 0
                                              }
                                            },
                                            "required": [
                                              "nominal",
                                              "real"
                                            ]
                                          },
                                          "highest": {
                                            "description": "Shopping price interface.",
                                            "type": "object",
                                            "properties": {
                                              "nominal": {
                                                "title": "Nominal price",
                                                "description": "Nominal price.\n\nThis is not {@link real real price} to pay, but just a nominal price to show.\nIf this value is greater than the {@link real real price}, it would be shown\nlike {@link IShoppingSeller seller} is giving a discount.",
                                                "type": "number",
                                                "minimum": 0
                                              },
                                              "real": {
                                                "title": "Real price to pay",
                                                "description": "Real price to pay.",
                                                "type": "number",
                                                "minimum": 0
                                              }
                                            },
                                            "required": [
                                              "nominal",
                                              "real"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "lowest",
                                          "highest"
                                        ]
                                      },
                                      "id": {
                                        "title": "Primary Key of Sale",
                                        "description": "Primary Key of Sale.",
                                        "type": "string",
                                        "format": "uuid"
                                      },
                                      "snapshot_id": {
                                        "title": "Primary Key of Snapshot",
                                        "description": "Primary Key of Snapshot.",
                                        "type": "string",
                                        "format": "uuid"
                                      },
                                      "latest": {
                                        "title": "Whether the snapshot is the latest one or not",
                                        "description": "Whether the snapshot is the latest one or not.",
                                        "type": "boolean"
                                      },
                                      "content": {
                                        "title": "Description and image content describing the sale",
                                        "description": "Description of the current {@link IShoppingSaleContent} type:\n\n> Content information of sale snapshot.\n> \n> `IShoppingSaleContent` is an entity embodies the description contents\n> of {@link IShoppingSale}.",
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          },
                                          "title": {
                                            "type": "string"
                                          },
                                          "thumbnails": {
                                            "type": "array",
                                            "items": {
                                              "description": "Attachment File.\n\nEvery attachment files that are managed in current system.\n\nFor reference, it is possible to omit one of file {@link name}\nor {@link extension} like `.gitignore` or `README` case, but not\npossible to omit both of them.",
                                              "type": "object",
                                              "properties": {
                                                "id": {
                                                  "title": "Primary Key",
                                                  "description": "Primary Key.",
                                                  "type": "string",
                                                  "format": "uuid"
                                                },
                                                "created_at": {
                                                  "title": "Creation time of attachment file",
                                                  "description": "Creation time of attachment file.",
                                                  "type": "string",
                                                  "format": "date-time"
                                                },
                                                "name": {
                                                  "title": "File name, except extension",
                                                  "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string.",
                                                  "type": "string",
                                                  "maxLength": 255
                                                },
                                                "extension": {
                                                  "title": "Extension",
                                                  "description": "Extension.\n\nPossible to omit like `README` case.",
                                                  "oneOf": [
                                                    {
                                                      "type": "null"
                                                    },
                                                    {
                                                      "type": "string",
                                                      "minLength": 1,
                                                      "maxLength": 8
                                                    }
                                                  ]
                                                },
                                                "url": {
                                                  "title": "URL path of the real file",
                                                  "description": "URL path of the real file.",
                                                  "type": "string",
                                                  "format": "uri",
                                                  "contentMediaType": "image/*"
                                                }
                                              },
                                              "required": [
                                                "id",
                                                "created_at",
                                                "name",
                                                "extension",
                                                "url"
                                              ]
                                            }
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "title",
                                          "thumbnails"
                                        ]
                                      },
                                      "channels": {
                                        "title": "List of channels and categories",
                                        "description": "List of channels and categories.\n\nWhich channels and categories the sale is registered to.",
                                        "type": "array",
                                        "items": {
                                          "description": "Target channel (and categories) of sale to sell.\n\n`IShoppingSaleChannel` is an entity that expresses through which\n{@link IShoppingChannel channel} a listing {@link IShoppingSale} is sold.\n\nAlso, if {@link IShoppingChannelCategory categories} are specified, it also\nmeans that the sale be sold. Otherwise, none of the categories of the channel\nbeing specified, it means that every categories of the channel is listing the\ntarget sale.",
                                          "type": "object",
                                          "properties": {
                                            "categories": {
                                              "title": "List of categories of the channel listing the sale",
                                              "description": "List of categories of the channel listing the sale.\n\nIf empty, it means all categories of the channel is listing the sale.",
                                              "type": "array",
                                              "items": {
                                                "$ref": "#/$defs/IShoppingChannelCategory.IInvert"
                                              }
                                            },
                                            "id": {
                                              "title": "Primary Key",
                                              "description": "Primary Key.",
                                              "type": "string",
                                              "format": "uuid"
                                            },
                                            "created_at": {
                                              "title": "Creation time of record",
                                              "description": "Creation time of record.",
                                              "type": "string",
                                              "format": "date-time"
                                            },
                                            "code": {
                                              "title": "Identifier code",
                                              "description": "Identifier code.",
                                              "type": "string"
                                            },
                                            "name": {
                                              "title": "Name of the channel",
                                              "description": "Name of the channel.",
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "categories",
                                            "id",
                                            "created_at",
                                            "code",
                                            "name"
                                          ]
                                        },
                                        "minItems": 1
                                      },
                                      "tags": {
                                        "title": "List of search tags",
                                        "description": "List of search tags.",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "units": {
                                        "title": "List of units",
                                        "description": "List of units.\n\nRecords about individual product composition information that are sold\nin the sale. Each {@link IShoppingSaleUnit unit} record has configurable\n{@link IShoppingSaleUnitOption options},\n{@link IShoppingSaleUnitOptionCandidate candidate} values for each\noption, and {@link IShoppingSaleUnitStock final stocks} determined by\nselecting every candidate values of each option.",
                                        "type": "array",
                                        "items": {
                                          "description": "Description of the current {@link IShoppingSaleUnit} type:\n\n> Product composition information handled in the sale.\n> \n> `IShoppingSaleUnit` is an entity that embodies the \"individual product\"\n> information handled in the {@link IShoppingSale sale}.\n> \n> For reference, the reason why `IShoppingSaleUnit` is separated from\n> {@link IShoppingSaleSnapshot} by an algebraic relationship of 1: N is because\n> there are some cases where multiple products are sold in one listing. This is\n> the case with so-called \"bundled products\".\n> \n> - Bundle from regular product (Mackbook Set)\n>   - Main Body\n>   - Keyboard\n>   - Mouse\n>   - Apple Care (Free A/S Voucher)\n> \n> And again, `IShoppingSaleUnit` does not in itself refer to the\n> {@link IShoppingSaleUnitStock final stock} that the\n> {@link IShoppingCustomer customer} will {@link IShoppingOrder purchase}.\n> The final stock can be found only after selecting all given\n> {@link IShoppingSaleUnitOption options} and their\n> {@link IShoppingSaleUnitOptionCandidate candidate values}.\n> \n> For example, even if you buy a Macbook, the final stocks are determined only\n> after selecting all the options (CPU / RAM / SSD), etc.",
                                          "type": "object",
                                          "properties": {
                                            "price_range": {
                                              "type": "object",
                                              "properties": {
                                                "lowest": {
                                                  "description": "Shopping price interface.",
                                                  "type": "object",
                                                  "properties": {
                                                    "nominal": {
                                                      "title": "Nominal price",
                                                      "description": "Nominal price.\n\nThis is not {@link real real price} to pay, but just a nominal price to show.\nIf this value is greater than the {@link real real price}, it would be shown\nlike {@link IShoppingSeller seller} is giving a discount.",
                                                      "type": "number",
                                                      "minimum": 0
                                                    },
                                                    "real": {
                                                      "title": "Real price to pay",
                                                      "description": "Real price to pay.",
                                                      "type": "number",
                                                      "minimum": 0
                                                    }
                                                  },
                                                  "required": [
                                                    "nominal",
                                                    "real"
                                                  ]
                                                },
                                                "highest": {
                                                  "description": "Shopping price interface.",
                                                  "type": "object",
                                                  "properties": {
                                                    "nominal": {
                                                      "title": "Nominal price",
                                                      "description": "Nominal price.\n\nThis is not {@link real real price} to pay, but just a nominal price to show.\nIf this value is greater than the {@link real real price}, it would be shown\nlike {@link IShoppingSeller seller} is giving a discount.",
                                                      "type": "number",
                                                      "minimum": 0
                                                    },
                                                    "real": {
                                                      "title": "Real price to pay",
                                                      "description": "Real price to pay.",
                                                      "type": "number",
                                                      "minimum": 0
                                                    }
                                                  },
                                                  "required": [
                                                    "nominal",
                                                    "real"
                                                  ]
                                                }
                                              },
                                              "required": [
                                                "lowest",
                                                "highest"
                                              ]
                                            },
                                            "id": {
                                              "title": "Primary Key",
                                              "description": "Primary Key.",
                                              "type": "string",
                                              "format": "uuid"
                                            },
                                            "name": {
                                              "title": "Representative name of the unit",
                                              "description": "Representative name of the unit.",
                                              "type": "string"
                                            },
                                            "primary": {
                                              "title": "Whether the unit is primary or not",
                                              "description": "Whether the unit is primary or not.\n\nJust a labeling value.",
                                              "type": "boolean"
                                            },
                                            "required": {
                                              "title": "Whether the unit is required or not",
                                              "description": "Whether the unit is required or not.\n\nWhen the unit is required, the customer must select the unit. If do not\nselect, customer can't buy it.\n\nFor example, if there's a sale \"Macbook Set\" and one of the unit is the\n\"Main Body\", is it possible to buy the \"Macbook Set\" without the\n\"Main Body\" unit? This property is for that case.",
                                              "type": "boolean"
                                            }
                                          },
                                          "required": [
                                            "price_range",
                                            "id",
                                            "name",
                                            "primary",
                                            "required"
                                          ]
                                        },
                                        "minItems": 1
                                      },
                                      "created_at": {
                                        "title": "Creation time of the record",
                                        "description": "Creation time of the record.\n\nNote that, this property is different with {@link opened_at},\nwhich means the timepoint of the sale is opened.",
                                        "type": "string",
                                        "format": "date-time"
                                      },
                                      "updated_at": {
                                        "title": "Last updated time of the record",
                                        "description": "Last updated time of the record.\n\nIn another words, creation time of the last snapshot.",
                                        "type": "string",
                                        "format": "date-time"
                                      },
                                      "paused_at": {
                                        "title": "Paused time of the sale",
                                        "description": "Paused time of the sale.\n\nThe sale is paused by the seller, for some reason.\n\n{@link IShoppingCustomer Customers} can still see the sale on the\nboth list and detail pages, but the sale has a warning label\n\"The sale is paused by the seller\".",
                                        "oneOf": [
                                          {
                                            "type": "null"
                                          },
                                          {
                                            "type": "string",
                                            "format": "date-time"
                                          }
                                        ]
                                      },
                                      "suspended_at": {
                                        "title": "Suspended time of the sale",
                                        "description": "Suspended time of the sale.\n\nThe sale is suspended by the seller, for some reason.\n\n{@link IShoppingCustomer Customers} cannot see the sale on the\nboth list and detail pages. It is almost same with soft delettion,\nbut there's a little bit difference that the owner\n{@link IShoppingSeller seller} can still see the sale and resume it.\n\nOf course, the {@link IShoppingCustomer customers} who have\nalready purchased the sale can still see the sale on the\n{@link IShoppingOrder order} page.",
                                        "oneOf": [
                                          {
                                            "type": "null"
                                          },
                                          {
                                            "type": "string",
                                            "format": "date-time"
                                          }
                                        ]
                                      },
                                      "opened_at": {
                                        "title": "Opening time of the sale",
                                        "description": "Opening time of the sale.",
                                        "oneOf": [
                                          {
                                            "type": "null"
                                          },
                                          {
                                            "type": "string",
                                            "format": "date-time"
                                          }
                                        ]
                                      },
                                      "closed_at": {
                                        "title": "Closing time of the sale",
                                        "description": "Closing time of the sale.\n\nIf this value is `null`, the sale be continued forever.",
                                        "oneOf": [
                                          {
                                            "type": "null"
                                          },
                                          {
                                            "type": "string",
                                            "format": "date-time"
                                          }
                                        ]
                                      }
                                    },
                                    "required": [
                                      "section",
                                      "seller",
                                      "price_range",
                                      "id",
                                      "snapshot_id",
                                      "latest",
                                      "content",
                                      "channels",
                                      "tags",
                                      "units",
                                      "created_at",
                                      "updated_at",
                                      "paused_at",
                                      "suspended_at",
                                      "opened_at",
                                      "closed_at"
                                    ]
                                  },
                                  "minItems": 1
                                },
                                "type": {
                                  "title": "Descrimanator type",
                                  "description": "Descrimanator type.",
                                  "const": "sale"
                                },
                                "direction": {
                                  "title": "Direction of the criteria",
                                  "description": "Direction of the criteria.",
                                  "oneOf": [
                                    {
                                      "const": "include"
                                    },
                                    {
                                      "const": "exclude"
                                    }
                                  ]
                                }
                              },
                              "required": [
                                "sales",
                                "type",
                                "direction"
                              ],
                              "description": "Conditions for sales of discount coupons.\n\n`IShoppingCouponSaleCriteria` is a subtype entity of\n{@link IShoppingCouponCriteriaBase} and is used when setting conditions\nfor a specific {@link IShoppingSale sale}.\n\nIf the {@link direction} value is \"include\", the coupon can only be used\nfor the target {@link sales}. Conversely, if it is \"exclude\", the\ncoupon cannot be used."
                            },
                            {
                              "type": "object",
                              "properties": {
                                "funnels": {
                                  "title": "List of target funnels",
                                  "description": "List of target funnels.",
                                  "type": "array",
                                  "items": {
                                    "oneOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "kind": {
                                            "title": "Kind of funnel restriction",
                                            "description": "Kind of funnel restriction.",
                                            "oneOf": [
                                              {
                                                "const": "url"
                                              },
                                              {
                                                "const": "referrer"
                                              }
                                            ]
                                          },
                                          "value": {
                                            "title": "Target value",
                                            "description": "Target value.",
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "kind",
                                          "value"
                                        ],
                                        "description": "Kind of funnel restriction by a value.\n\n------------------------------\n\nDescription of the current {@link IShoppingCouponFunnelCriteria.IValueFunnel} type:\n\n> Kind of funnel restriction by a value.\n\n------------------------------\n\nDescription of the parent {@link IShoppingCouponFunnelCriteria} type:\n\n> Limit the funnel of discount coupons.\n> \n> `ishoppingcouponfunnelcriteria` is a subtype entity of\n> {@link IShoppingCouponCriteria}, and is used when you want to issue or\n> exclude discount coupons only to {@link IShoppingCustomer customers} who\n> came from a specific path.\n> \n> And funnel restrictions are possible in 3 ways: The first is\n> {@link IShoppingCustomer.referrer}, and by parsing\n> {@link IShoppingCustomer.href}, which records the customer's access\n> address, restrictions can be made in units of specific URLs or variables."
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "kind": {
                                            "title": "Kind of funnel restriction",
                                            "description": "Kind of funnel restriction.",
                                            "const": "variable"
                                          },
                                          "key": {
                                            "title": "Target variable's key",
                                            "description": "Target variable's key.",
                                            "type": "string"
                                          },
                                          "value": {
                                            "title": "Target variable's value",
                                            "description": "Target variable's value.",
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "kind",
                                          "key",
                                          "value"
                                        ],
                                        "description": "Kind of funnel restriction by a variable.\n\n------------------------------\n\nDescription of the current {@link IShoppingCouponFunnelCriteria.IVariableFunnel} type:\n\n> Kind of funnel restriction by a variable.\n\n------------------------------\n\nDescription of the parent {@link IShoppingCouponFunnelCriteria} type:\n\n> Limit the funnel of discount coupons.\n> \n> `ishoppingcouponfunnelcriteria` is a subtype entity of\n> {@link IShoppingCouponCriteria}, and is used when you want to issue or\n> exclude discount coupons only to {@link IShoppingCustomer customers} who\n> came from a specific path.\n> \n> And funnel restrictions are possible in 3 ways: The first is\n> {@link IShoppingCustomer.referrer}, and by parsing\n> {@link IShoppingCustomer.href}, which records the customer's access\n> address, restrictions can be made in units of specific URLs or variables."
                                      }
                                    ]
                                  },
                                  "minItems": 1
                                },
                                "type": {
                                  "title": "Descrimanator type",
                                  "description": "Descrimanator type.",
                                  "const": "funnel"
                                },
                                "direction": {
                                  "title": "Direction of the criteria",
                                  "description": "Direction of the criteria.",
                                  "oneOf": [
                                    {
                                      "const": "include"
                                    },
                                    {
                                      "const": "exclude"
                                    }
                                  ]
                                }
                              },
                              "required": [
                                "funnels",
                                "type",
                                "direction"
                              ],
                              "description": "Limit the funnel of discount coupons.\n\n`ishoppingcouponfunnelcriteria` is a subtype entity of\n{@link IShoppingCouponCriteria}, and is used when you want to issue or\nexclude discount coupons only to {@link IShoppingCustomer customers} who\ncame from a specific path.\n\nAnd funnel restrictions are possible in 3 ways: The first is\n{@link IShoppingCustomer.referrer}, and by parsing\n{@link IShoppingCustomer.href}, which records the customer's access\naddress, restrictions can be made in units of specific URLs or variables."
                            }
                          ]
                        }
                      },
                      "discount": {
                        "title": "Discount information",
                        "description": "Discount information.",
                        "oneOf": [
                          {
                            "type": "object",
                            "properties": {
                              "unit": {
                                "title": "Discount unit as amount",
                                "description": "Discount unit as amount.\n\nIt means the order price would be discounted by the amount value.",
                                "const": "amount"
                              },
                              "value": {
                                "title": "Discount value as amount",
                                "description": "Discount value as amount.",
                                "type": "number"
                              },
                              "threshold": {
                                "title": "Minimum purchase amount for discount",
                                "description": "Minimum purchase amount for discount.\n\nWhen setting this value, discount coupons cannot be applied to\norder totals that are less than this value.",
                                "oneOf": [
                                  {
                                    "type": "null"
                                  },
                                  {
                                    "type": "number",
                                    "minimum": 0
                                  }
                                ]
                              },
                              "limit": {
                                "title": "Maximum amount available for discount",
                                "description": "Maximum amount available for discount.\n\nWhen this value is set, no further discount will be given no\nmatter how much you order. This property would be meaningful\nonly when the {@link multiplicative} is `true`.",
                                "oneOf": [
                                  {
                                    "type": "null"
                                  },
                                  {
                                    "type": "number",
                                    "exclusiveMinimum": true,
                                    "minimum": 0
                                  }
                                ]
                              },
                              "multiplicative": {
                                "title": "Multiplicative or not",
                                "description": "Multiplicative or not.\n\nIf this property is `true`, the discount value would be multiplied\nto the {@link IShoppingCartCommodity.volume} or\n{@link IShoppingOrderGood.volume} value. Also, in that case,\nthe {@link limit} property would be meaningful.",
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "unit",
                              "value",
                              "threshold",
                              "limit",
                              "multiplicative"
                            ],
                            "description": "Discount information with amount unit.\n\n------------------------------\n\nDescription of the current {@link IShoppingCouponDiscount.IAmount} type:\n\n> Discount information with amount unit."
                          },
                          {
                            "type": "object",
                            "properties": {
                              "unit": {
                                "title": "Discount unit as percent",
                                "description": "Discount unit as percent.\n\nIt means the order price would be discounted by the percent value.",
                                "const": "percent"
                              },
                              "value": {
                                "title": "Discount value as percent",
                                "description": "Discount value as percent.",
                                "type": "number",
                                "minimum": 0,
                                "maximum": 100
                              },
                              "threshold": {
                                "title": "Minimum purchase amount for discount",
                                "description": "Minimum purchase amount for discount.\n\nWhen setting this value, discount coupons cannot be applied to\norder totals that are less than this value.",
                                "oneOf": [
                                  {
                                    "type": "null"
                                  },
                                  {
                                    "type": "number",
                                    "minimum": 0
                                  }
                                ]
                              },
                              "limit": {
                                "title": "Maximum amount available for discount",
                                "description": "Maximum amount available for discount.\n\nWhen this value is set, no further discount will be given no\nmatter how much you order.",
                                "oneOf": [
                                  {
                                    "type": "null"
                                  },
                                  {
                                    "type": "number",
                                    "exclusiveMinimum": true,
                                    "minimum": 0
                                  }
                                ]
                              }
                            },
                            "required": [
                              "unit",
                              "value",
                              "threshold",
                              "limit"
                            ],
                            "description": "Discount information with percent unit.\n\n------------------------------\n\nDescription of the current {@link IShoppingCouponDiscount.IPercent} type:\n\n> Discount information with percent unit."
                          }
                        ]
                      },
                      "restriction": {
                        "title": "Restriction information",
                        "description": "Restriction information of the coupon.",
                        "type": "object",
                        "properties": {
                          "access": {
                            "title": "Access level of coupon",
                            "description": "Access level of coupon.\n\n- public: possible to find from public API\n- private: unable to find from public API\n  - arbitrarily assigned by the seller or administrator\n  - issued from one-time link",
                            "oneOf": [
                              {
                                "const": "public"
                              },
                              {
                                "const": "private"
                              }
                            ]
                          },
                          "exclusive": {
                            "title": "Exclusivity or not",
                            "description": "Exclusivity or not.\n\nAn exclusive discount coupon refers to a discount coupon that has an\nexclusive relationship with other discount coupons and can only be\nused alone. That is, when an exclusive discount coupon is used, no\nother discount coupon can be used for the same\n{@link IShoppingOrder order} or {@link IShoppingOrderGood good}.\n\nPlease note that this exclusive attribute is a very different concept\nfrom multiplicative, which means whether the same coupon can be\nmultiplied and applied to multiple coupons of the same order, so\nplease do not confuse them.",
                            "type": "boolean"
                          },
                          "volume": {
                            "title": "Limited quantity issued",
                            "description": "Limited quantity issued.\n\nIf there is a limit to the quantity issued, it becomes impossible to issue tickets exceeding this value.\n\nIn other words, the concept of N coupons being issued on a first-come, first-served basis is created.",
                            "oneOf": [
                              {
                                "type": "null"
                              },
                              {
                                "type": "integer"
                              }
                            ]
                          },
                          "volume_per_citizen": {
                            "title": "Limited quantity issued per person",
                            "description": "Limited quantity issued per person.\n\nAs a limit to the total amount of issuance per person, it is common to assign 1 to limit duplicate issuance to the same citizen, or to use the NULL value to set no limit.\n\nOf course, by assigning a value of N, the total amount issued to the same citizen can be limited.",
                            "oneOf": [
                              {
                                "type": "null"
                              },
                              {
                                "type": "integer"
                              }
                            ]
                          },
                          "expired_in": {
                            "title": "Expiration day(s) value",
                            "description": "Expiration day(s) value.\n\nThe concept of expiring N days after a discount coupon ticket is issued.\n\nTherefore, customers must use the ticket within N days, if possible, from the time it is issued.",
                            "oneOf": [
                              {
                                "type": "null"
                              },
                              {
                                "type": "integer"
                              }
                            ]
                          },
                          "expired_at": {
                            "title": "Expiration date",
                            "description": "Expiration date.\n\nA concept that expires after YYYY-MM-DD after a discount coupon ticket is issued.\n\nDouble restrictions are possible with expired_in, of which the one with the shorter expiration date is used.",
                            "oneOf": [
                              {
                                "type": "null"
                              },
                              {
                                "type": "string",
                                "format": "date-time"
                              }
                            ]
                          }
                        },
                        "required": [
                          "access",
                          "exclusive",
                          "volume",
                          "volume_per_citizen",
                          "expired_in",
                          "expired_at"
                        ]
                      },
                      "name": {
                        "title": "Representative name of the coupon",
                        "description": "Representative name of the coupon.",
                        "type": "string"
                      },
                      "opened_at": {
                        "title": "Opening time of the coupon",
                        "description": "Opening time of the coupon.",
                        "oneOf": [
                          {
                            "type": "null"
                          },
                          {
                            "type": "string",
                            "format": "date-time"
                          }
                        ]
                      },
                      "closed_at": {
                        "title": "Closing time of the coupon",
                        "description": "Closing time of the coupon.\n\nTickets cannot be issued after this time.\n\nHowever, previously issued tickets can still be used until their\nexpiration date.",
                        "oneOf": [
                          {
                            "type": "null"
                          },
                          {
                            "type": "string",
                            "format": "date-time"
                          }
                        ]
                      },
                      "created_at": {
                        "title": "Creation tie of the record",
                        "description": "Creation tie of the record.",
                        "type": "string",
                        "format": "date-time"
                      }
                    },
                    "required": [
                      "id",
                      "designer",
                      "inventory",
                      "criterias",
                      "discount",
                      "restriction",
                      "name",
                      "opened_at",
                      "closed_at",
                      "created_at"
                    ]
                  },
                  "created_at": {
                    "title": "Creation time of the record",
                    "description": "Creation time of the record.",
                    "type": "string",
                    "format": "date-time"
                  },
                  "expired_at": {
                    "title": "Expiration time of the ticket",
                    "description": "Expiration time of the ticket.",
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "type": "string",
                        "format": "date-time"
                      }
                    ]
                  }
                },
                "required": [
                  "id",
                  "customer",
                  "coupon",
                  "created_at",
                  "expired_at"
                ]
              },
              "created_at": {
                "title": "Creation time of the record",
                "description": "Creation time of the record.",
                "type": "string",
                "format": "date-time"
              }
            },
            "required": [
              "id",
              "ticket",
              "created_at"
            ]
          }
        },
        "cash": {
          "title": "Amount of the cash payment",
          "description": "Amount of the cash payment.",
          "x-wrtn-payment-price": true,
          "type": "number",
          "minimum": 0
        },
        "deposit": {
          "title": "Amount of the deposit payment",
          "description": "Amount of the deposit payment.",
          "type": "number",
          "minimum": 0
        },
        "mileage": {
          "title": "Amount of the mileage payment",
          "description": "Amount of the mileage payment.",
          "type": "number",
          "minimum": 0
        },
        "ticket": {
          "title": "Amount of the discount coupon ticket payment",
          "description": "Amount of the discount coupon ticket payment.",
          "type": "number",
          "minimum": 0
        },
        "nominal": {
          "title": "Nominal price",
          "description": "Nominal price.\n\nThis is not {@link real real price} to pay, but just a nominal price to show.\nIf this value is greater than the {@link real real price}, it would be shown\nlike {@link IShoppingSeller seller} is giving a discount.",
          "type": "number",
          "minimum": 0
        },
        "real": {
          "title": "Real price to pay",
          "description": "Real price to pay.",
          "type": "number",
          "minimum": 0
        }
      },
      "required": [
        "ticket_payments",
        "cash",
        "deposit",
        "mileage",
        "ticket",
        "nominal",
        "real"
      ]
    },
    "success": true,
    "arguments": {
      "type": {
        "host": "http://127.0.0.1:37001",
        "headers": {
          "Authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0YWJsZSI6InNob3BwaW5nX2N1c3RvbWVycyIsImlkIjoiMjVlYzg3ZjctODE1ZC00YjU3LTk1NzYtYzk1Mzk4NGJjMjhmIiwicmVhZG9ubHkiOmZhbHNlLCJleHBpcmVkX2F0IjoiMjAyNC0xMi0xM1QwOTo0MjoxMi41MzlaIiwicmVmcmVzaGFibGVfdW50aWwiOiIyMDI0LTEyLTI3VDA2OjQyOjEyLjUzOVoiLCJpYXQiOjE3MzQwNzIxMzJ9.zWZrU-d1bSW-MawmSo2RYRPk_73xtR_PxfFUrEpDJkc"
        }
      },
      "properties": "d81d15a2-911d-4049-a56d-8355844c0009",
      "additionalProperties": {
        "deposit": 200000,
        "mileage": 3000,
        "coupon_ids": [
          "ff93beb2-51d2-4a42-9ddc-ceb671efdfba"
        ]
      }
    },
    "value": {
      "ticket_payments": [
        {
          "id": "e283bb5c-4593-47e0-bcc0-4721aab6d81c",
          "ticket": {
            "id": "b72165b0-00f3-4bf1-92ba-d4b5a77f565e",
            "customer": {
              "type": "customer",
              "member": {
                "citizen": {
                  "id": "552ac832-7852-48ae-9919-95e07bb53c4a",
                  "created_at": "2024-12-13T06:42:12.562Z",
                  "mobile": "01011387079",
                  "name": "agijp mgqjxv"
                },
                "seller": null,
                "administrator": null,
                "id": "91711abe-14a6-4b3e-8a09-b86f1eaef7a5",
                "nickname": "yequwvg czzid",
                "emails": [
                  {
                    "id": "65eeceda-1a74-424c-96c0-713855c89cb2",
                    "value": "5fiouhttyq7e170v@nestia.io",
                    "created_at": "2024-12-13T06:42:12.624Z"
                  }
                ],
                "created_at": "2024-12-13T06:42:12.624Z"
              },
              "citizen": {
                "id": "552ac832-7852-48ae-9919-95e07bb53c4a",
                "created_at": "2024-12-13T06:42:12.562Z",
                "mobile": "01011387079",
                "name": "agijp mgqjxv"
              },
              "id": "25ec87f7-815d-4b57-9576-c953984bc28f",
              "channel": {
                "id": "2323f4bd-21ad-45b7-ae3b-cadd84dcc935",
                "created_at": "2024-12-13T06:42:10.908Z",
                "code": "samchon",
                "name": "Samchon Shopping Mall"
              },
              "external_user": null,
              "href": "http://127.0.0.1/TestAutomation",
              "referrer": "http://127.0.0.1/NodeJS",
              "ip": "127.0.0.1",
              "created_at": "2024-12-13T06:42:12.535Z"
            },
            "coupon": {
              "id": "ff93beb2-51d2-4a42-9ddc-ceb671efdfba",
              "designer": {
                "id": "bd215cfc-2b1c-4a5b-a9f3-3076cdd9bed5",
                "created_at": "2024-12-13T06:42:11.239Z"
              },
              "inventory": {
                "volume": 9999,
                "volume_per_citizen": 4
              },
              "criterias": [
                {
                  "channels": [
                    {
                      "channel": {
                        "id": "2323f4bd-21ad-45b7-ae3b-cadd84dcc935",
                        "created_at": "2024-12-13T06:42:10.908Z",
                        "code": "samchon",
                        "name": "Samchon Shopping Mall"
                      },
                      "categories": null
                    }
                  ],
                  "type": "channel",
                  "direction": "include"
                }
              ],
              "discount": {
                "unit": "percent",
                "value": 10,
                "threshold": null,
                "limit": null
              },
              "restriction": {
                "access": "public",
                "exclusive": true,
                "volume": 10000,
                "volume_per_citizen": 5,
                "expired_in": 15,
                "expired_at": null
              },
              "name": "10% Discount for every sales",
              "opened_at": "2024-12-13T06:42:13.274Z",
              "closed_at": null,
              "created_at": "2024-12-13T06:42:13.279Z"
            },
            "created_at": "2024-12-13T06:42:13.419Z",
            "expired_at": "2024-12-28T06:42:13.419Z"
          },
          "created_at": "2024-12-13T06:42:13.419Z"
        }
      ],
      "cash": 15344500,
      "deposit": 200000,
      "mileage": 3000,
      "ticket": 1727500,
      "nominal": 18400000,
      "real": 17275000
    }
  },
  {
    "name": "shoppings_customers_orders_publish_postByOrderid",
    "method": "post",
    "path": "/shoppings/customers/orders/{orderId}/publish",
    "description": "Publish an order.\n\n{@link IShoppingOrderPublish Publish} an {@link IShoppingOrder order} that\nhas been applied by the {@link IShoppingCustomer} with\n{@link IShoppingAddress address} to delivery and payment information gotten\nfrom the payment vendor system.\n\nIf the order has been discounted for entire order price, then no need\nto send payment vendor info. Instead, only address info is required.\n\nAlso, the payment time can be different with the publish time. For example,\nif the payment method is manual bank account transfer, then the payment\nwould be delayed until the customer actually transfer the money. In that\ncase, {@link IShoppingOrderPublish.paid_at} would be `null` value, so\nthat you have to check it after calling this publish function.",
    "parameters": {
      "type": "object",
      "properties": {
        "orderId": {
          "description": " Target order's {@link IShoppingOrder.id }",
          "type": "string",
          "format": "uuid"
        },
        "body": {
          "description": "Creation info of the publish.\n\n------------------------------\n\nDescription of the current {@link IShoppingOrderPublish.ICreate} type:\n\n> Creation info of the publish.\n\n------------------------------\n\nDescription of the parent {@link IShoppingOrderPublish} type:\n\n> Order completion and payment information.\n> \n> `IShoppingOrderPublish` is an entity that embodies the series of processes\n> in which a {@link IShoppingCustomer customer} pays for his or her\n> {@link IShoppingOrder order}, thereby completing the order. And only after\n> the order is {@link paid_at completed}, can the {@link IShoppingSeller seller}\n> recognize that the customer has purchased his product.\n> \n> By the way, please note that just because the `IShoppingOrderPublish` record\n> exists, it does not mean that the payment has been completed. Of course, with\n> \"credit cards\" and \"Google Pay\", payment application and payment occur at the\n> same time. However, there are some cases where payment is made after the\n> payment application, such as \"bank transfer\" or \"virtual account payment\".\n> Therefore, to see the completion of payment, be sure to check the\n> {@link paid_at} property.\n> \n> In addition, even after payment has been made, there may be cases where it is\n> suddenly cancelled, so please be aware of this as well.",
          "type": "object",
          "properties": {
            "address": {
              "title": "Address to receive",
              "description": "Description of the current {@link IShoppingAddress} type:\n\n> The address information.",
              "type": "object",
              "properties": {
                "mobile": {
                  "title": "Mobile number to contact",
                  "description": "Mobile number to contact.",
                  "type": "string",
                  "pattern": "^[0-9]*$"
                },
                "name": {
                  "title": "Representative name of the address",
                  "description": "Representative name of the address.\n\nSometimes be receiver's name, and sometimes be place name.",
                  "type": "string"
                },
                "country": {
                  "title": "Country name",
                  "description": "Country name.",
                  "type": "string"
                },
                "province": {
                  "title": "Province name",
                  "description": "Province name.",
                  "type": "string"
                },
                "city": {
                  "title": "City name",
                  "description": "City name.",
                  "type": "string"
                },
                "department": {
                  "title": "Department name",
                  "description": "Department name.",
                  "type": "string"
                },
                "possession": {
                  "title": "Detailed address containing street name, building number, and room number",
                  "description": "Detailed address containing street name, building number, and room number.",
                  "type": "string"
                },
                "zip_code": {
                  "title": "Zip code, or postal code",
                  "description": "Zip code, or postal code.",
                  "type": "string"
                },
                "special_note": {
                  "title": "Special description if required",
                  "description": "Special description if required.",
                  "oneOf": [
                    {
                      "type": "null"
                    },
                    {
                      "type": "string"
                    }
                  ]
                }
              },
              "required": [
                "mobile",
                "name",
                "country",
                "province",
                "city",
                "department",
                "possession",
                "zip_code",
                "special_note"
              ]
            },
            "vendor": {
              "title": "Payment identifier from the payment vendor service",
              "description": "Payment identifier from the payment vendor service.\n\nIf the order has been discounted for entire order price, then no need\nto send payment vendor info. Instead, you just configure the `null`\nvalue to this property.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "object",
                  "properties": {
                    "code": {
                      "title": "The vendor code who will receive the payment",
                      "description": "The vendor code who will receive the payment.",
                      "x-wrtn-payment-vendor": true,
                      "type": "string"
                    },
                    "uid": {
                      "title": "The payment uid",
                      "description": "The payment uid.",
                      "x-wrtn-payment-uid": true,
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "uid"
                  ],
                  "description": "Payment identifier from the payment vendor service.\n\n------------------------------\n\nDescription of the current {@link IShoppingOrderPublish.IPaymentIdentifier} type:\n\n> Payment identifier from the payment vendor service.\n\n------------------------------\n\nDescription of the parent {@link IShoppingOrderPublish} type:\n\n> Order completion and payment information.\n> \n> `IShoppingOrderPublish` is an entity that embodies the series of processes\n> in which a {@link IShoppingCustomer customer} pays for his or her\n> {@link IShoppingOrder order}, thereby completing the order. And only after\n> the order is {@link paid_at completed}, can the {@link IShoppingSeller seller}\n> recognize that the customer has purchased his product.\n> \n> By the way, please note that just because the `IShoppingOrderPublish` record\n> exists, it does not mean that the payment has been completed. Of course, with\n> \"credit cards\" and \"Google Pay\", payment application and payment occur at the\n> same time. However, there are some cases where payment is made after the\n> payment application, such as \"bank transfer\" or \"virtual account payment\".\n> Therefore, to see the completion of payment, be sure to check the\n> {@link paid_at} property.\n> \n> In addition, even after payment has been made, there may be cases where it is\n> suddenly cancelled, so please be aware of this as well."
                }
              ]
            }
          },
          "required": [
            "address",
            "vendor"
          ]
        }
      },
      "additionalProperties": false,
      "required": [
        "orderId",
        "body"
      ]
    },
    "output": {
      "description": "Order completion and payment information.\n\n`IShoppingOrderPublish` is an entity that embodies the series of processes\nin which a {@link IShoppingCustomer customer} pays for his or her\n{@link IShoppingOrder order}, thereby completing the order. And only after\nthe order is {@link paid_at completed}, can the {@link IShoppingSeller seller}\nrecognize that the customer has purchased his product.\n\nBy the way, please note that just because the `IShoppingOrderPublish` record\nexists, it does not mean that the payment has been completed. Of course, with\n\"credit cards\" and \"Google Pay\", payment application and payment occur at the\nsame time. However, there are some cases where payment is made after the\npayment application, such as \"bank transfer\" or \"virtual account payment\".\nTherefore, to see the completion of payment, be sure to check the\n{@link paid_at} property.\n\nIn addition, even after payment has been made, there may be cases where it is\nsuddenly cancelled, so please be aware of this as well.",
      "type": "object",
      "properties": {
        "deliveries": {
          "title": "List of deliveries",
          "description": "List of deliveries.\n\nAn {@link IShoppingOrder order} can be delivered in multiple times.\nOf course, the opposite case is also possible, that a\n{@link IShoppingDelivery delivery} can be composed of multiple orders.",
          "type": "array",
          "items": {
            "description": "Delivery information.\n\nWhen delivering {@link IShoppingOrderGood goods} to\n{@link IShoppingCustomer customer}, {@link IShoppingSeller seller} can deliver\nmultiple {@link IShoppingSaleUnitStock stocks}, goods at once. Also, it is\npossible to deliver a stock or good in multiple times due to physical restriction\nlike volume or weight problem.\n\nAs you can see from above, the relationship between delivery with\n{@link IShoppingOrder order} (or {@link IShoppingOrderGood good}) is not 1: 1 or\nN: 1, but M: N. Entity `IShoppingDelivery` has been designed to represent such\nrelationship, by referencing target stocks or goods through subsidiary entity\n{@link IShoppingDeliveryPiece}.\n\nAlso, delivery does not end with only one step. It has multiple processes like\nmanufacturing, planning, shipping and delivering. Those steps are represented by\nanother subsidiary entity {@link IShoppingDeliveryJourney}.",
            "type": "object",
            "properties": {
              "id": {
                "title": "Primary Key",
                "description": "Primary Key.",
                "type": "string",
                "format": "uuid"
              },
              "seller": {
                "title": "Seller who've delivered the goods",
                "description": "Seller information.\n\n`IShoppingSeller` is an entity that embodies a person who registers\n{@link IShoppingSale sales} to operate selling activities, with\n{@link IShoppingMember membership} joining.\n\nFor reference, unlike {@link IShoppingCustomer customers} which can\nparticipate even without membership joining, seller must join membership\nto operate sales. Also, seller must do the\n{@link IShoppingCitizen real-name and mobile authentication}, too.",
                "type": "object",
                "properties": {
                  "id": {
                    "title": "Primary Key",
                    "description": "Primary Key.",
                    "type": "string",
                    "format": "uuid"
                  },
                  "created_at": {
                    "title": "Creation tmie of record",
                    "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up.",
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "required": [
                  "id",
                  "created_at"
                ]
              },
              "journeys": {
                "title": "List of journeys of the delivery",
                "description": "List of journeys of the delivery.",
                "type": "array",
                "items": {
                  "description": "Journey of delivery.\n\n`IShoppingDeliveryJourney` is a subsidiary entity of {@link IShoppingDelivery},\ndescribing each journey of the delivery. For reference, the word journey\nmeans each step of the delivery process, such as preparing, shipping, and\ndelivering {@link IShoppingOrderGood goods} to the\n{@link IShoppingCustomer customer}.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "Primary Key",
                      "description": "Primary Key.",
                      "type": "string",
                      "format": "uuid"
                    },
                    "created_at": {
                      "title": "Creation time of the record",
                      "description": "Creation time of the record.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "deleted_at": {
                      "title": "Deletion time of the record",
                      "description": "Deletion time of the record.",
                      "oneOf": [
                        {
                          "type": "null"
                        },
                        {
                          "type": "string",
                          "format": "date-time"
                        }
                      ]
                    },
                    "type": {
                      "title": "Type of journey",
                      "description": "Type of journey.\n\n- preparing\n- manufacturing\n- shipping\n- delivering",
                      "oneOf": [
                        {
                          "const": "preparing"
                        },
                        {
                          "const": "manufacturing"
                        },
                        {
                          "const": "shipping"
                        },
                        {
                          "const": "delivering"
                        }
                      ]
                    },
                    "title": {
                      "title": "Title of journey",
                      "description": "Title of journey.",
                      "oneOf": [
                        {
                          "type": "null"
                        },
                        {
                          "type": "string"
                        }
                      ]
                    },
                    "description": {
                      "title": "Description of journey",
                      "description": "Description of journey.",
                      "oneOf": [
                        {
                          "type": "null"
                        },
                        {
                          "type": "string"
                        }
                      ]
                    },
                    "started_at": {
                      "title": "Start time of the journey",
                      "description": "Start time of the journey.",
                      "oneOf": [
                        {
                          "type": "null"
                        },
                        {
                          "type": "string",
                          "format": "date-time"
                        }
                      ]
                    },
                    "completed_at": {
                      "title": "Completion time of the journey",
                      "description": "Completion time of the journey.",
                      "oneOf": [
                        {
                          "type": "null"
                        },
                        {
                          "type": "string",
                          "format": "date-time"
                        }
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "created_at",
                    "deleted_at",
                    "type",
                    "title",
                    "description",
                    "started_at",
                    "completed_at"
                  ]
                }
              },
              "pieces": {
                "title": "List of pieces of the delivery",
                "description": "List of pieces of the delivery.",
                "type": "array",
                "items": {
                  "description": "Which stocks are delivered.\n\n`IShoppingDeliveryPiece` is a subsidiary entity of {@link IShoppingDelivery},\ndescribing how much quantity is delivered for each\n{@link IShoppingSaleUnitStock stock} in {@link IShoppingOrder}.\n\nFor reference, as an order can be delivered in multiple times due to volume\nor weight problem, it is possible to have multiple `IShoppingDeliveryPiece`\nrecords for a single stock.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "Primary Key",
                      "description": "Primary Key.",
                      "type": "string",
                      "format": "uuid"
                    },
                    "publish_id": {
                      "title": "Target order's {@link IShoppingOrderPublish.id}",
                      "description": "Target order's {@link IShoppingOrderPublish.id}.",
                      "type": "string",
                      "format": "uuid"
                    },
                    "good_id": {
                      "title": "Target good's {@link IShoppingOrderGood.id}",
                      "description": "Target good's {@link IShoppingOrderGood.id}.",
                      "type": "string",
                      "format": "uuid"
                    },
                    "stock_id": {
                      "title": "Target stock's {@link IShoppingSaleUnitStock.id}",
                      "description": "Target stock's {@link IShoppingSaleUnitStock.id}.",
                      "type": "string",
                      "format": "uuid"
                    },
                    "quantity": {
                      "title": "Quantity of the stock",
                      "description": "Quantity of the stock.\n\nIt can be precision value to express split shipping.",
                      "type": "number",
                      "minimum": 0
                    }
                  },
                  "required": [
                    "id",
                    "publish_id",
                    "good_id",
                    "stock_id",
                    "quantity"
                  ]
                },
                "minItems": 1
              },
              "shippers": {
                "title": "List of shippers of the delivery",
                "description": "List of shippers of the delivery.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "company": {
                      "oneOf": [
                        {
                          "type": "null"
                        },
                        {
                          "type": "string"
                        }
                      ]
                    },
                    "name": {
                      "type": "string"
                    },
                    "mobile": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "created_at",
                    "company",
                    "name",
                    "mobile"
                  ]
                }
              },
              "state": {
                "title": "State of the delivery",
                "description": "State of the delivery.",
                "oneOf": [
                  {
                    "const": "none"
                  },
                  {
                    "const": "underway"
                  },
                  {
                    "const": "preparing"
                  },
                  {
                    "const": "manufacturing"
                  },
                  {
                    "const": "shipping"
                  },
                  {
                    "const": "delivering"
                  },
                  {
                    "const": "arrived"
                  }
                ]
              },
              "created_at": {
                "title": "Creation time of the record",
                "description": "Creation time of the record.",
                "type": "string",
                "format": "date-time"
              }
            },
            "required": [
              "id",
              "seller",
              "journeys",
              "pieces",
              "shippers",
              "state",
              "created_at"
            ]
          }
        },
        "state": {
          "title": "State of the order, about the deliveries",
          "description": "State of the order, about the deliveries.",
          "oneOf": [
            {
              "const": "none"
            },
            {
              "const": "underway"
            },
            {
              "const": "preparing"
            },
            {
              "const": "manufacturing"
            },
            {
              "const": "shipping"
            },
            {
              "const": "delivering"
            },
            {
              "const": "arrived"
            }
          ]
        },
        "id": {
          "title": "Primary Key",
          "description": "Primary Key.",
          "type": "string",
          "format": "uuid"
        },
        "created_at": {
          "title": "Creation time of the record",
          "description": "Creation time of the record.",
          "type": "string",
          "format": "date-time"
        },
        "paid_at": {
          "title": "Time when the order was paid",
          "description": "Time when the order was paid.",
          "oneOf": [
            {
              "type": "null"
            },
            {
              "type": "string",
              "format": "date-time"
            }
          ]
        },
        "cancelled_at": {
          "title": "Time when the payment was cancelled",
          "description": "Time when the payment was cancelled.",
          "oneOf": [
            {
              "type": "null"
            },
            {
              "type": "string",
              "format": "date-time"
            }
          ]
        },
        "address": {
          "title": "Address where the {@link IShoppingOrderGood goods} to be delivered",
          "description": "The address information.",
          "type": "object",
          "properties": {
            "id": {
              "title": "Primary Key",
              "description": "Primary Key.",
              "type": "string",
              "format": "uuid"
            },
            "created_at": {
              "title": "Creation time of record",
              "description": "Creation time of record.",
              "type": "string",
              "format": "date-time"
            },
            "mobile": {
              "title": "Mobile number to contact",
              "description": "Mobile number to contact.",
              "type": "string",
              "pattern": "^[0-9]*$"
            },
            "name": {
              "title": "Representative name of the address",
              "description": "Representative name of the address.\n\nSometimes be receiver's name, and sometimes be place name.",
              "type": "string"
            },
            "country": {
              "title": "Country name",
              "description": "Country name.",
              "type": "string"
            },
            "province": {
              "title": "Province name",
              "description": "Province name.",
              "type": "string"
            },
            "city": {
              "title": "City name",
              "description": "City name.",
              "type": "string"
            },
            "department": {
              "title": "Department name",
              "description": "Department name.",
              "type": "string"
            },
            "possession": {
              "title": "Detailed address containing street name, building number, and room number",
              "description": "Detailed address containing street name, building number, and room number.",
              "type": "string"
            },
            "zip_code": {
              "title": "Zip code, or postal code",
              "description": "Zip code, or postal code.",
              "type": "string"
            },
            "special_note": {
              "title": "Special description if required",
              "description": "Special description if required.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string"
                }
              ]
            }
          },
          "required": [
            "id",
            "created_at",
            "mobile",
            "name",
            "country",
            "province",
            "city",
            "department",
            "possession",
            "zip_code",
            "special_note"
          ]
        }
      },
      "required": [
        "deliveries",
        "state",
        "id",
        "created_at",
        "paid_at",
        "cancelled_at",
        "address"
      ]
    },
    "success": true,
    "arguments": {
      "type": {
        "host": "http://127.0.0.1:37001",
        "headers": {
          "Authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0YWJsZSI6InNob3BwaW5nX2N1c3RvbWVycyIsImlkIjoiMjVlYzg3ZjctODE1ZC00YjU3LTk1NzYtYzk1Mzk4NGJjMjhmIiwicmVhZG9ubHkiOmZhbHNlLCJleHBpcmVkX2F0IjoiMjAyNC0xMi0xM1QwOTo0MjoxMi41MzlaIiwicmVmcmVzaGFibGVfdW50aWwiOiIyMDI0LTEyLTI3VDA2OjQyOjEyLjUzOVoiLCJpYXQiOjE3MzQwNzIxMzJ9.zWZrU-d1bSW-MawmSo2RYRPk_73xtR_PxfFUrEpDJkc"
        }
      },
      "properties": "d81d15a2-911d-4049-a56d-8355844c0009",
      "additionalProperties": {
        "vendor": {
          "code": "Shinhan Bank",
          "uid": "fd7fe6db-ca6f-4e14-9825-455483da6554"
        },
        "address": {
          "mobile": "01011387079",
          "name": "agijp mgqjxv",
          "country": "Korea",
          "province": "Seoul",
          "city": "Seoul",
          "department": "Seocho-gu Seocho-dong X-Apartment",
          "possession": "1-101",
          "zip_code": "12345",
          "special_note": null
        }
      }
    },
    "value": {
      "deliveries": [],
      "state": "none",
      "id": "afc3dbcd-3d9e-4dde-b3fb-a36235b8aa61",
      "created_at": "2024-12-13T06:42:13.469Z",
      "paid_at": "2024-12-13T06:42:13.469Z",
      "cancelled_at": null,
      "address": {
        "id": "c51db9e5-d070-42cf-9ae4-0c5a697e261b",
        "created_at": "2024-12-13T06:42:13.469Z",
        "mobile": "01011387079",
        "name": "agijp mgqjxv",
        "country": "Korea",
        "province": "Seoul",
        "city": "Seoul",
        "department": "Seocho-gu Seocho-dong X-Apartment",
        "possession": "1-101",
        "zip_code": "12345",
        "special_note": null
      }
    }
  },
  {
    "name": "shoppings_sellers_deliveries_post",
    "method": "post",
    "path": "/shoppings/sellers/deliveries",
    "description": "Create a delivery.\n\nCreate a {@link IShoppingDelivery delivery} record targeting\n{@link IShoppingOrder orders}, their {@link IShoppingOrderGood goods} and\n{@link IShoppingSaleUnitStock stocks} ({@link IShoppingDeliveryPiece}) with\n{@link IShoppingDeliveryJourney journeys} and\n{@link IShoppingDeliveryShipper shippers} info.\n\nNote that, composition of the {@link IShoppingDeliveryPiece} must not over\nthe required. To identify which pieces are required, recommend to call\nthe {@link incompletes} function with target orders'\n{@link IShoppingOrderPublish.id}s before calling this one.",
    "parameters": {
      "type": "object",
      "properties": {
        "body": {
          "description": "Creation information of the delivery.\n\n------------------------------\n\nDescription of the current {@link IShoppingDelivery.ICreate} type:\n\n> Creation information of the delivery.\n\n------------------------------\n\nDescription of the parent {@link IShoppingDelivery} type:\n\n> Delivery information.\n> \n> When delivering {@link IShoppingOrderGood goods} to\n> {@link IShoppingCustomer customer}, {@link IShoppingSeller seller} can deliver\n> multiple {@link IShoppingSaleUnitStock stocks}, goods at once. Also, it is\n> possible to deliver a stock or good in multiple times due to physical restriction\n> like volume or weight problem.\n> \n> As you can see from above, the relationship between delivery with\n> {@link IShoppingOrder order} (or {@link IShoppingOrderGood good}) is not 1: 1 or\n> N: 1, but M: N. Entity `IShoppingDelivery` has been designed to represent such\n> relationship, by referencing target stocks or goods through subsidiary entity\n> {@link IShoppingDeliveryPiece}.\n> \n> Also, delivery does not end with only one step. It has multiple processes like\n> manufacturing, planning, shipping and delivering. Those steps are represented by\n> another subsidiary entity {@link IShoppingDeliveryJourney}.",
          "type": "object",
          "properties": {
            "pieces": {
              "title": "List of pieces of the delivery",
              "description": "List of pieces of the delivery.",
              "type": "array",
              "items": {
                "description": "Creation information of the delivery piece.\n\n------------------------------\n\nDescription of the current {@link IShoppingDeliveryPiece.ICreate} type:\n\n> Creation information of the delivery piece.\n\n------------------------------\n\nDescription of the parent {@link IShoppingDeliveryPiece} type:\n\n> Which stocks are delivered.\n> \n> `IShoppingDeliveryPiece` is a subsidiary entity of {@link IShoppingDelivery},\n> describing how much quantity is delivered for each\n> {@link IShoppingSaleUnitStock stock} in {@link IShoppingOrder}.\n> \n> For reference, as an order can be delivered in multiple times due to volume\n> or weight problem, it is possible to have multiple `IShoppingDeliveryPiece`\n> records for a single stock.",
                "type": "object",
                "properties": {
                  "publish_id": {
                    "title": "Target order's {@link IShoppingOrderPublish.id}",
                    "description": "Target order's {@link IShoppingOrderPublish.id}.",
                    "type": "string",
                    "format": "uuid"
                  },
                  "good_id": {
                    "title": "Target good's {@link IShoppingOrderGood.id}",
                    "description": "Target good's {@link IShoppingOrderGood.id}.",
                    "type": "string",
                    "format": "uuid"
                  },
                  "stock_id": {
                    "title": "Target stock's {@link IShoppingSaleUnitStock.id}",
                    "description": "Target stock's {@link IShoppingSaleUnitStock.id}.",
                    "type": "string",
                    "format": "uuid"
                  },
                  "quantity": {
                    "title": "Quantity of the stock",
                    "description": "Quantity of the stock.\n\nIt can be precision value to express split shipping.",
                    "type": "number",
                    "minimum": 0
                  }
                },
                "required": [
                  "publish_id",
                  "good_id",
                  "stock_id",
                  "quantity"
                ]
              },
              "minItems": 1
            },
            "journeys": {
              "title": "List of journeys of the delivery",
              "description": "List of journeys of the delivery.\n\nThis is initial data, and it is also possible to accumulate journey data\nafter the delivery creation.",
              "type": "array",
              "items": {
                "description": "Creation information of the delivery journey.\n\n------------------------------\n\nDescription of the current {@link IShoppingDeliveryJourney.ICreate} type:\n\n> Creation information of the delivery journey.\n\n------------------------------\n\nDescription of the parent {@link IShoppingDeliveryJourney} type:\n\n> Journey of delivery.\n> \n> `IShoppingDeliveryJourney` is a subsidiary entity of {@link IShoppingDelivery},\n> describing each journey of the delivery. For reference, the word journey\n> means each step of the delivery process, such as preparing, shipping, and\n> delivering {@link IShoppingOrderGood goods} to the\n> {@link IShoppingCustomer customer}.",
                "type": "object",
                "properties": {
                  "type": {
                    "title": "Type of journey",
                    "description": "Type of journey.\n\n- preparing\n- manufacturing\n- shipping\n- delivering",
                    "oneOf": [
                      {
                        "const": "preparing"
                      },
                      {
                        "const": "manufacturing"
                      },
                      {
                        "const": "shipping"
                      },
                      {
                        "const": "delivering"
                      }
                    ]
                  },
                  "title": {
                    "title": "Title of journey",
                    "description": "Title of journey.",
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "type": "string"
                      }
                    ]
                  },
                  "description": {
                    "title": "Description of journey",
                    "description": "Description of journey.",
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "type": "string"
                      }
                    ]
                  },
                  "started_at": {
                    "title": "Start time of the journey",
                    "description": "Start time of the journey.",
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "type": "string",
                        "format": "date-time"
                      }
                    ]
                  },
                  "completed_at": {
                    "title": "Completion time of the journey",
                    "description": "Completion time of the journey.",
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "type": "string",
                        "format": "date-time"
                      }
                    ]
                  }
                },
                "required": [
                  "type",
                  "title",
                  "description",
                  "started_at",
                  "completed_at"
                ]
              }
            },
            "shippers": {
              "title": "List of shippers of the delivery",
              "description": "List of shippers of the delivery.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "company": {
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "type": "string"
                      }
                    ]
                  },
                  "name": {
                    "type": "string"
                  },
                  "mobile": {
                    "type": "string"
                  }
                },
                "required": [
                  "company",
                  "name",
                  "mobile"
                ]
              }
            }
          },
          "required": [
            "pieces",
            "journeys",
            "shippers"
          ]
        }
      },
      "additionalProperties": false,
      "required": [
        "body"
      ]
    },
    "output": {
      "description": "Delivery information.\n\nWhen delivering {@link IShoppingOrderGood goods} to\n{@link IShoppingCustomer customer}, {@link IShoppingSeller seller} can deliver\nmultiple {@link IShoppingSaleUnitStock stocks}, goods at once. Also, it is\npossible to deliver a stock or good in multiple times due to physical restriction\nlike volume or weight problem.\n\nAs you can see from above, the relationship between delivery with\n{@link IShoppingOrder order} (or {@link IShoppingOrderGood good}) is not 1: 1 or\nN: 1, but M: N. Entity `IShoppingDelivery` has been designed to represent such\nrelationship, by referencing target stocks or goods through subsidiary entity\n{@link IShoppingDeliveryPiece}.\n\nAlso, delivery does not end with only one step. It has multiple processes like\nmanufacturing, planning, shipping and delivering. Those steps are represented by\nanother subsidiary entity {@link IShoppingDeliveryJourney}.",
      "type": "object",
      "properties": {
        "id": {
          "title": "Primary Key",
          "description": "Primary Key.",
          "type": "string",
          "format": "uuid"
        },
        "seller": {
          "title": "Seller who've delivered the goods",
          "description": "Seller information.\n\n`IShoppingSeller` is an entity that embodies a person who registers\n{@link IShoppingSale sales} to operate selling activities, with\n{@link IShoppingMember membership} joining.\n\nFor reference, unlike {@link IShoppingCustomer customers} which can\nparticipate even without membership joining, seller must join membership\nto operate sales. Also, seller must do the\n{@link IShoppingCitizen real-name and mobile authentication}, too.",
          "type": "object",
          "properties": {
            "id": {
              "title": "Primary Key",
              "description": "Primary Key.",
              "type": "string",
              "format": "uuid"
            },
            "created_at": {
              "title": "Creation tmie of record",
              "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up.",
              "type": "string",
              "format": "date-time"
            }
          },
          "required": [
            "id",
            "created_at"
          ]
        },
        "journeys": {
          "title": "List of journeys of the delivery",
          "description": "List of journeys of the delivery.",
          "type": "array",
          "items": {
            "description": "Journey of delivery.\n\n`IShoppingDeliveryJourney` is a subsidiary entity of {@link IShoppingDelivery},\ndescribing each journey of the delivery. For reference, the word journey\nmeans each step of the delivery process, such as preparing, shipping, and\ndelivering {@link IShoppingOrderGood goods} to the\n{@link IShoppingCustomer customer}.",
            "type": "object",
            "properties": {
              "id": {
                "title": "Primary Key",
                "description": "Primary Key.",
                "type": "string",
                "format": "uuid"
              },
              "created_at": {
                "title": "Creation time of the record",
                "description": "Creation time of the record.",
                "type": "string",
                "format": "date-time"
              },
              "deleted_at": {
                "title": "Deletion time of the record",
                "description": "Deletion time of the record.",
                "oneOf": [
                  {
                    "type": "null"
                  },
                  {
                    "type": "string",
                    "format": "date-time"
                  }
                ]
              },
              "type": {
                "title": "Type of journey",
                "description": "Type of journey.\n\n- preparing\n- manufacturing\n- shipping\n- delivering",
                "oneOf": [
                  {
                    "const": "preparing"
                  },
                  {
                    "const": "manufacturing"
                  },
                  {
                    "const": "shipping"
                  },
                  {
                    "const": "delivering"
                  }
                ]
              },
              "title": {
                "title": "Title of journey",
                "description": "Title of journey.",
                "oneOf": [
                  {
                    "type": "null"
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "description": {
                "title": "Description of journey",
                "description": "Description of journey.",
                "oneOf": [
                  {
                    "type": "null"
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "started_at": {
                "title": "Start time of the journey",
                "description": "Start time of the journey.",
                "oneOf": [
                  {
                    "type": "null"
                  },
                  {
                    "type": "string",
                    "format": "date-time"
                  }
                ]
              },
              "completed_at": {
                "title": "Completion time of the journey",
                "description": "Completion time of the journey.",
                "oneOf": [
                  {
                    "type": "null"
                  },
                  {
                    "type": "string",
                    "format": "date-time"
                  }
                ]
              }
            },
            "required": [
              "id",
              "created_at",
              "deleted_at",
              "type",
              "title",
              "description",
              "started_at",
              "completed_at"
            ]
          }
        },
        "pieces": {
          "title": "List of pieces of the delivery",
          "description": "List of pieces of the delivery.",
          "type": "array",
          "items": {
            "description": "Which stocks are delivered.\n\n`IShoppingDeliveryPiece` is a subsidiary entity of {@link IShoppingDelivery},\ndescribing how much quantity is delivered for each\n{@link IShoppingSaleUnitStock stock} in {@link IShoppingOrder}.\n\nFor reference, as an order can be delivered in multiple times due to volume\nor weight problem, it is possible to have multiple `IShoppingDeliveryPiece`\nrecords for a single stock.",
            "type": "object",
            "properties": {
              "id": {
                "title": "Primary Key",
                "description": "Primary Key.",
                "type": "string",
                "format": "uuid"
              },
              "publish_id": {
                "title": "Target order's {@link IShoppingOrderPublish.id}",
                "description": "Target order's {@link IShoppingOrderPublish.id}.",
                "type": "string",
                "format": "uuid"
              },
              "good_id": {
                "title": "Target good's {@link IShoppingOrderGood.id}",
                "description": "Target good's {@link IShoppingOrderGood.id}.",
                "type": "string",
                "format": "uuid"
              },
              "stock_id": {
                "title": "Target stock's {@link IShoppingSaleUnitStock.id}",
                "description": "Target stock's {@link IShoppingSaleUnitStock.id}.",
                "type": "string",
                "format": "uuid"
              },
              "quantity": {
                "title": "Quantity of the stock",
                "description": "Quantity of the stock.\n\nIt can be precision value to express split shipping.",
                "type": "number",
                "minimum": 0
              }
            },
            "required": [
              "id",
              "publish_id",
              "good_id",
              "stock_id",
              "quantity"
            ]
          },
          "minItems": 1
        },
        "shippers": {
          "title": "List of shippers of the delivery",
          "description": "List of shippers of the delivery.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid"
              },
              "created_at": {
                "type": "string",
                "format": "date-time"
              },
              "company": {
                "oneOf": [
                  {
                    "type": "null"
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "name": {
                "type": "string"
              },
              "mobile": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "created_at",
              "company",
              "name",
              "mobile"
            ]
          }
        },
        "state": {
          "title": "State of the delivery",
          "description": "State of the delivery.",
          "oneOf": [
            {
              "const": "none"
            },
            {
              "const": "underway"
            },
            {
              "const": "preparing"
            },
            {
              "const": "manufacturing"
            },
            {
              "const": "shipping"
            },
            {
              "const": "delivering"
            },
            {
              "const": "arrived"
            }
          ]
        },
        "created_at": {
          "title": "Creation time of the record",
          "description": "Creation time of the record.",
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "seller",
        "journeys",
        "pieces",
        "shippers",
        "state",
        "created_at"
      ]
    },
    "success": true,
    "arguments": {
      "type": {
        "host": "http://127.0.0.1:37001",
        "headers": {
          "Authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0YWJsZSI6InNob3BwaW5nX2N1c3RvbWVycyIsImlkIjoiYzY1ZjY1NmMtMzRjYS00NThlLWE0YWUtNWRkOWVjMDdhMjVkIiwicmVhZG9ubHkiOmZhbHNlLCJleHBpcmVkX2F0IjoiMjAyNC0xMi0xM1QwOTo0MjoxMi43MjlaIiwicmVmcmVzaGFibGVfdW50aWwiOiIyMDI0LTEyLTI3VDA2OjQyOjEyLjcyOVoiLCJpYXQiOjE3MzQwNzIxMzJ9.OwsQLxyqYdz4WpLGGJKX09WFWm3KmZPrjqVEhHqMplM"
        }
      },
      "properties": {
        "shippers": [
          {
            "company": "Korea Post",
            "name": "Kildong Hong",
            "mobile": "0106424552"
          }
        ],
        "pieces": [
          {
            "publish_id": "afc3dbcd-3d9e-4dde-b3fb-a36235b8aa61",
            "good_id": "cc465192-724b-4d96-a644-4a13b1730ab8",
            "stock_id": "c42c4acb-d77f-4b4c-8d5c-3d78532271f7",
            "quantity": 1
          },
          {
            "publish_id": "afc3dbcd-3d9e-4dde-b3fb-a36235b8aa61",
            "good_id": "cc465192-724b-4d96-a644-4a13b1730ab8",
            "stock_id": "9810c724-f965-4e06-87cd-971a5f4788c3",
            "quantity": 1
          },
          {
            "publish_id": "afc3dbcd-3d9e-4dde-b3fb-a36235b8aa61",
            "good_id": "cc465192-724b-4d96-a644-4a13b1730ab8",
            "stock_id": "6711956d-8aec-488f-b5ce-bfb060c262b3",
            "quantity": 1
          },
          {
            "publish_id": "afc3dbcd-3d9e-4dde-b3fb-a36235b8aa61",
            "good_id": "28f4795b-b5d3-4d9a-8aa2-fcfd92e8777a",
            "stock_id": "6aa2fef3-d488-4f8c-8989-8b479f22bb74",
            "quantity": 1
          },
          {
            "publish_id": "afc3dbcd-3d9e-4dde-b3fb-a36235b8aa61",
            "good_id": "28f4795b-b5d3-4d9a-8aa2-fcfd92e8777a",
            "stock_id": "fc7552bb-2a74-44fe-891a-e5af66444694",
            "quantity": 1
          },
          {
            "publish_id": "afc3dbcd-3d9e-4dde-b3fb-a36235b8aa61",
            "good_id": "28f4795b-b5d3-4d9a-8aa2-fcfd92e8777a",
            "stock_id": "6be68e95-2439-46a5-88f9-c1c9a11e0e1b",
            "quantity": 1
          },
          {
            "publish_id": "afc3dbcd-3d9e-4dde-b3fb-a36235b8aa61",
            "good_id": "f8f5797c-33b2-44d8-8cef-b96f4020f404",
            "stock_id": "f2548de0-2168-46b1-985d-a2b56c9e878e",
            "quantity": 1
          },
          {
            "publish_id": "afc3dbcd-3d9e-4dde-b3fb-a36235b8aa61",
            "good_id": "f8f5797c-33b2-44d8-8cef-b96f4020f404",
            "stock_id": "149fbf9b-f6fa-403a-8438-3a2d7ce8c0ca",
            "quantity": 1
          },
          {
            "publish_id": "afc3dbcd-3d9e-4dde-b3fb-a36235b8aa61",
            "good_id": "f8f5797c-33b2-44d8-8cef-b96f4020f404",
            "stock_id": "b516162c-3a58-4997-8ebf-9054ff3b1397",
            "quantity": 1
          },
          {
            "publish_id": "afc3dbcd-3d9e-4dde-b3fb-a36235b8aa61",
            "good_id": "d852835d-fb2d-4ec3-8cdc-e81ddc72ec3f",
            "stock_id": "fde6c137-5aa1-4817-8e33-b68ae5404ec4",
            "quantity": 1
          },
          {
            "publish_id": "afc3dbcd-3d9e-4dde-b3fb-a36235b8aa61",
            "good_id": "d852835d-fb2d-4ec3-8cdc-e81ddc72ec3f",
            "stock_id": "f1f8f95b-4b18-44c0-90b2-786900e3c29f",
            "quantity": 1
          }
        ],
        "journeys": [
          {
            "type": "preparing",
            "title": null,
            "description": null,
            "started_at": "2024-12-13T06:42:13.507Z",
            "completed_at": null
          },
          {
            "type": "manufacturing",
            "title": null,
            "description": null,
            "started_at": "2024-12-13T06:42:13.507Z",
            "completed_at": null
          },
          {
            "type": "delivering",
            "title": null,
            "description": null,
            "started_at": "2024-12-13T06:42:13.507Z",
            "completed_at": null
          }
        ]
      }
    },
    "value": {
      "id": "1cf2f7da-6e72-4b33-8b74-960c6b9522a6",
      "seller": {
        "id": "addccb32-ac48-460e-9624-d9809da19d99",
        "created_at": "2024-12-13T06:42:11.241Z"
      },
      "journeys": [
        {
          "id": "7fdd6e1c-2321-4e43-ac08-7b875206a0e3",
          "created_at": "2024-12-13T06:42:13.515Z",
          "deleted_at": null,
          "type": "preparing",
          "title": null,
          "description": null,
          "started_at": "2024-12-13T06:42:13.507Z",
          "completed_at": null
        },
        {
          "id": "d0b4b3c6-40f7-43dd-a251-43345b95f0f8",
          "created_at": "2024-12-13T06:42:13.515Z",
          "deleted_at": null,
          "type": "manufacturing",
          "title": null,
          "description": null,
          "started_at": "2024-12-13T06:42:13.507Z",
          "completed_at": null
        },
        {
          "id": "bdc9f9fb-c046-4f4e-af8b-bf67bbe64996",
          "created_at": "2024-12-13T06:42:13.515Z",
          "deleted_at": null,
          "type": "delivering",
          "title": null,
          "description": null,
          "started_at": "2024-12-13T06:42:13.507Z",
          "completed_at": null
        }
      ],
      "pieces": [
        {
          "id": "f9f1b93b-4a25-4bbe-8974-014b0bffb367",
          "publish_id": "afc3dbcd-3d9e-4dde-b3fb-a36235b8aa61",
          "good_id": "cc465192-724b-4d96-a644-4a13b1730ab8",
          "stock_id": "c42c4acb-d77f-4b4c-8d5c-3d78532271f7",
          "quantity": 1
        },
        {
          "id": "a242cd47-1cba-4b29-b2e1-694f9a9be882",
          "publish_id": "afc3dbcd-3d9e-4dde-b3fb-a36235b8aa61",
          "good_id": "cc465192-724b-4d96-a644-4a13b1730ab8",
          "stock_id": "9810c724-f965-4e06-87cd-971a5f4788c3",
          "quantity": 1
        },
        {
          "id": "c66b0f43-ee3e-4242-b286-8398473ae703",
          "publish_id": "afc3dbcd-3d9e-4dde-b3fb-a36235b8aa61",
          "good_id": "cc465192-724b-4d96-a644-4a13b1730ab8",
          "stock_id": "6711956d-8aec-488f-b5ce-bfb060c262b3",
          "quantity": 1
        },
        {
          "id": "fe8a771f-ee05-4161-bba6-30444dc62ef4",
          "publish_id": "afc3dbcd-3d9e-4dde-b3fb-a36235b8aa61",
          "good_id": "28f4795b-b5d3-4d9a-8aa2-fcfd92e8777a",
          "stock_id": "6aa2fef3-d488-4f8c-8989-8b479f22bb74",
          "quantity": 1
        },
        {
          "id": "fdadbbf2-47fa-40e1-bd43-2ac96aa3a798",
          "publish_id": "afc3dbcd-3d9e-4dde-b3fb-a36235b8aa61",
          "good_id": "28f4795b-b5d3-4d9a-8aa2-fcfd92e8777a",
          "stock_id": "fc7552bb-2a74-44fe-891a-e5af66444694",
          "quantity": 1
        },
        {
          "id": "48455683-d648-416c-bb0f-2d14fb249e26",
          "publish_id": "afc3dbcd-3d9e-4dde-b3fb-a36235b8aa61",
          "good_id": "28f4795b-b5d3-4d9a-8aa2-fcfd92e8777a",
          "stock_id": "6be68e95-2439-46a5-88f9-c1c9a11e0e1b",
          "quantity": 1
        },
        {
          "id": "eb4fac2e-ca94-4575-bd2e-146583b3594b",
          "publish_id": "afc3dbcd-3d9e-4dde-b3fb-a36235b8aa61",
          "good_id": "f8f5797c-33b2-44d8-8cef-b96f4020f404",
          "stock_id": "f2548de0-2168-46b1-985d-a2b56c9e878e",
          "quantity": 1
        },
        {
          "id": "faaa13d0-a466-45ac-8831-19728210e44d",
          "publish_id": "afc3dbcd-3d9e-4dde-b3fb-a36235b8aa61",
          "good_id": "f8f5797c-33b2-44d8-8cef-b96f4020f404",
          "stock_id": "149fbf9b-f6fa-403a-8438-3a2d7ce8c0ca",
          "quantity": 1
        },
        {
          "id": "7875384e-7579-4927-8860-fe405f07a5b4",
          "publish_id": "afc3dbcd-3d9e-4dde-b3fb-a36235b8aa61",
          "good_id": "f8f5797c-33b2-44d8-8cef-b96f4020f404",
          "stock_id": "b516162c-3a58-4997-8ebf-9054ff3b1397",
          "quantity": 1
        },
        {
          "id": "f5662441-3080-482f-9810-9ddda2cefb76",
          "publish_id": "afc3dbcd-3d9e-4dde-b3fb-a36235b8aa61",
          "good_id": "d852835d-fb2d-4ec3-8cdc-e81ddc72ec3f",
          "stock_id": "fde6c137-5aa1-4817-8e33-b68ae5404ec4",
          "quantity": 1
        },
        {
          "id": "0bb046cd-2903-49a3-b50c-4c9dd57a90d7",
          "publish_id": "afc3dbcd-3d9e-4dde-b3fb-a36235b8aa61",
          "good_id": "d852835d-fb2d-4ec3-8cdc-e81ddc72ec3f",
          "stock_id": "f1f8f95b-4b18-44c0-90b2-786900e3c29f",
          "quantity": 1
        }
      ],
      "shippers": [],
      "state": "delivering",
      "created_at": "2024-12-13T06:42:13.515Z"
    }
  },
  {
    "name": "shoppings_customers_orders_getById",
    "method": "get",
    "path": "/shoppings/customers/orders/{id}",
    "description": "Get an order info.\n\nGet a detailed {@link IShoppingOrder order} information.\n\nIf you are not a {@link IShoppingCustomer customer}, then you can't\naccess to the order which has not been\n{@link IShoppingOrderPublish.paid_at paid} yet. In that case,\n404 not found error would be thrown.",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "description": " Target order's {@link IShoppingOrder.id }",
          "type": "string",
          "format": "uuid"
        }
      },
      "additionalProperties": false,
      "required": [
        "id"
      ],
      "$defs": {
        "IShoppingChannelCategory.IInvert": {
          "description": "Invert category information with parent category.",
          "type": "object",
          "properties": {
            "parent": {
              "title": "Parent category info with recursive structure",
              "description": "Parent category info with recursive structure.\n\nIf no parent exists, then be `null`.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "$ref": "#/$defs/IShoppingChannelCategory.IInvert"
                }
              ]
            },
            "id": {
              "title": "Primary Key",
              "description": "Primary Key.",
              "type": "string",
              "format": "uuid"
            },
            "code": {
              "title": "Identifier code of the category",
              "description": "Identifier code of the category.\n\nThe code must be unique in the channel.",
              "type": "string"
            },
            "parent_id": {
              "title": "Parent category's ID",
              "description": "Parent category's ID.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "name": {
              "title": "Representative name of the category",
              "description": "Representative name of the category.\n\nThe name must be unique within the parent category. If no parent exists,\nthen the name must be unique within the channel between no parent\ncategories.",
              "type": "string"
            },
            "created_at": {
              "title": "Creation time of record",
              "description": "Creation time of record.",
              "type": "string",
              "format": "date-time"
            }
          },
          "required": [
            "parent",
            "id",
            "code",
            "parent_id",
            "name",
            "created_at"
          ]
        }
      }
    },
    "output": {
      "description": "Order application information.\n\n`IShoppingOrder` is an entity that embodies {@link IShoppingCustomer customer}'s\norder application information. However, please note that at this time, you are\nstill at the \"order application\" stage and not the \"order confirmation\" stage.\n\nAnd as soon as a customer applies for an order, all\n{@link IShoppingCartCommodity commodities} in the target shopping cart are\npromoted to {@link IShoppingOrderGood goods}, and those good records are created\nunder this `IShoppingOrder`.\n\nOf course, not all commodities in the target shopping cart become\n{@link IShoppingOrderGood}, but only those selected by the customer become the\n{@link IShoppingOrderGood}.",
      "type": "object",
      "properties": {
        "id": {
          "title": "Primary Key",
          "description": "Primary Key.",
          "x-wrtn-payment-order-id": true,
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "title": "Representative name of the order",
          "description": "Representative name of the order.",
          "x-wrtn-payment-order-name": true,
          "type": "string"
        },
        "customer": {
          "title": "Customer who've applied for the order",
          "description": "Customer information, but not a person but a connection basis.\n\n`IShoppingCustomer` is an entity that literally embodies the information of\nthose who participated in the market as customers. By the way, the\n`IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\neven if the same person connects to the shopping mall multiple, multiple\nrecords are created in `IShoppingCustomer`.\n\nThe first purpose of this is to track the customer's inflow path in detail,\nand it is for cases where the same person enters as a non-member,\n{@link IShoppingCartCommodity puts items in the shopping cart} in advance,\nand only authenticates their {@link IShoppingCitizen real name} or\nregisters/logs in at the moment of {@link IShoppingOrderPublish payment}.\nIt is the second. Lastly, it is to accurately track the activities that\na person performs at the shopping mall in various ways like below.\n\n- Same person comes from an {@link IShoppingExternalUser external service}\n- Same person creates multiple accounts\n- Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n- Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n\nTherefore, `IShoppingCustomer` can have multiple records with the same\n{@link IShoppingCitizen}, {@link IShoppingMember}, and\n{@link IShoppingExternalUser}. Additionally, if a customer signs up for\nmembership after verifying their real name or signs up for our service after\nbeing a user of an external service, all related records are changed at once.\nTherefore, identification and tracking of customers can be done very\nsystematically.",
          "type": "object",
          "properties": {
            "type": {
              "title": "Discriminant for the type of customer",
              "description": "Discriminant for the type of customer.",
              "const": "customer"
            },
            "member": {
              "title": "Membership information",
              "description": "Membership information.\n\nIf the customer has joined as a member.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "object",
                  "properties": {
                    "citizen": {
                      "title": "Citizen information",
                      "description": "Citizen information.\n\nOnly when has verified as a citizen, with mobile number and real name.\n\nFor reference, if the member has signed up as a seller or administrator,\nthis citizen information must be.",
                      "oneOf": [
                        {
                          "type": "null"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "title": "Primary Key",
                              "description": "Primary Key.",
                              "type": "string",
                              "format": "uuid"
                            },
                            "created_at": {
                              "title": "Creation time of record",
                              "description": "Creation time of record.",
                              "type": "string",
                              "format": "date-time"
                            },
                            "mobile": {
                              "title": "Mobile number",
                              "description": "Mobile number.",
                              "x-wrtn-payment-order-mobile": true,
                              "type": "string",
                              "pattern": "^[0-9]*$"
                            },
                            "name": {
                              "title": "Real name, or equivalent nickname",
                              "description": "Real name, or equivalent nickname.",
                              "x-wrtn-payment-order-citizen": true,
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "created_at",
                            "mobile",
                            "name"
                          ],
                          "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile} input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                        }
                      ]
                    },
                    "seller": {
                      "title": "Seller information",
                      "description": "Seller information.\n\nIf the member also signed up as a seller.",
                      "oneOf": [
                        {
                          "type": "null"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "title": "Primary Key",
                              "description": "Primary Key.",
                              "type": "string",
                              "format": "uuid"
                            },
                            "created_at": {
                              "title": "Creation tmie of record",
                              "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up.",
                              "type": "string",
                              "format": "date-time"
                            }
                          },
                          "required": [
                            "id",
                            "created_at"
                          ],
                          "description": "Seller information.\n\n`IShoppingSeller` is an entity that embodies a person who registers\n{@link IShoppingSale sales} to operate selling activities, with\n{@link IShoppingMember membership} joining.\n\nFor reference, unlike {@link IShoppingCustomer customers} which can\nparticipate even without membership joining, seller must join membership\nto operate sales. Also, seller must do the\n{@link IShoppingCitizen real-name and mobile authentication}, too."
                        }
                      ]
                    },
                    "administrator": {
                      "title": "Administrator information",
                      "description": "Administrator information.\n\nIf the member also signed up as an administrator.",
                      "oneOf": [
                        {
                          "type": "null"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "title": "Primary Key",
                              "description": "Primary Key.",
                              "type": "string",
                              "format": "uuid"
                            },
                            "created_at": {
                              "title": "Creation time of record",
                              "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up.",
                              "type": "string",
                              "format": "date-time"
                            }
                          },
                          "required": [
                            "id",
                            "created_at"
                          ],
                          "description": "Administrator account.\n\n`IShoppingAdministrator` is an entity that embodies a person who manages\nthe shopping mall system, with {@link IShoppingMember membership} joining.\n\nFor reference, unlike {@link IShoppingCustomer customers} which can participate\neven without membership joining, administrator must join membership to operate\nmanagements. Also, administrator must perform the\n{@link IShoppingCitizen real-name and mobile authentication}, too."
                        }
                      ]
                    },
                    "id": {
                      "title": "Primary Key",
                      "description": "Primary Key.",
                      "type": "string",
                      "format": "uuid"
                    },
                    "nickname": {
                      "title": "Nickname that uniquely identifies the member",
                      "description": "Nickname that uniquely identifies the member.",
                      "type": "string"
                    },
                    "emails": {
                      "title": "List of emails",
                      "description": "List of emails.",
                      "type": "array",
                      "items": {
                        "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "title": "Primary Key",
                            "description": "Primary Key.",
                            "type": "string",
                            "format": "uuid"
                          },
                          "value": {
                            "title": "Email address value",
                            "description": "Email address value.",
                            "type": "string",
                            "format": "email"
                          },
                          "created_at": {
                            "title": "Creation time of record",
                            "description": "Creation time of record.",
                            "type": "string",
                            "format": "date-time"
                          }
                        },
                        "required": [
                          "id",
                          "value",
                          "created_at"
                        ]
                      }
                    },
                    "created_at": {
                      "title": "Creation time of record",
                      "description": "Creation time of record.\n\nAnother words, the time when the member has signed up.",
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "required": [
                    "citizen",
                    "seller",
                    "administrator",
                    "id",
                    "nickname",
                    "emails",
                    "created_at"
                  ],
                  "description": "Member Account.\n\n`IShoppingMember` is an entity that symbolizes the case when a\n{@link IShoppingCustomer} signs up as a member of this shopping mall\nsystem.\n\nIf a `IShoppingMember` has seller or administrator property. it means that\nthe {@link IShoppingCustomer} has acting as a {@link IShoppingSeller seller}\nor {@link IShoppingAdministrator administrator} at the same time."
                }
              ]
            },
            "citizen": {
              "title": "Citizen information",
              "description": "Citizen information.\n\nIf the customer has verified his real name and mobile number.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "Primary Key",
                      "description": "Primary Key.",
                      "type": "string",
                      "format": "uuid"
                    },
                    "created_at": {
                      "title": "Creation time of record",
                      "description": "Creation time of record.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "mobile": {
                      "title": "Mobile number",
                      "description": "Mobile number.",
                      "x-wrtn-payment-order-mobile": true,
                      "type": "string",
                      "pattern": "^[0-9]*$"
                    },
                    "name": {
                      "title": "Real name, or equivalent nickname",
                      "description": "Real name, or equivalent nickname.",
                      "x-wrtn-payment-order-citizen": true,
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "created_at",
                    "mobile",
                    "name"
                  ],
                  "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile} input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                }
              ]
            },
            "id": {
              "title": "Primary Key",
              "description": "Primary Key.",
              "type": "string",
              "format": "uuid"
            },
            "channel": {
              "title": "Belonged channel",
              "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future.",
              "type": "object",
              "properties": {
                "id": {
                  "title": "Primary Key",
                  "description": "Primary Key.",
                  "type": "string",
                  "format": "uuid"
                },
                "created_at": {
                  "title": "Creation time of record",
                  "description": "Creation time of record.",
                  "type": "string",
                  "format": "date-time"
                },
                "code": {
                  "title": "Identifier code",
                  "description": "Identifier code.",
                  "type": "string"
                },
                "name": {
                  "title": "Name of the channel",
                  "description": "Name of the channel.",
                  "type": "string"
                }
              },
              "required": [
                "id",
                "created_at",
                "code",
                "name"
              ]
            },
            "external_user": {
              "title": "External user information",
              "description": "External user information.\n\nWhen the customer has come frome an external service.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "Primary Key",
                      "description": "Primary Key.",
                      "type": "string",
                      "format": "uuid"
                    },
                    "citizen": {
                      "title": "Citizen activation info",
                      "description": "Citizen activation info.",
                      "oneOf": [
                        {
                          "type": "null"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "title": "Primary Key",
                              "description": "Primary Key.",
                              "type": "string",
                              "format": "uuid"
                            },
                            "created_at": {
                              "title": "Creation time of record",
                              "description": "Creation time of record.",
                              "type": "string",
                              "format": "date-time"
                            },
                            "mobile": {
                              "title": "Mobile number",
                              "description": "Mobile number.",
                              "x-wrtn-payment-order-mobile": true,
                              "type": "string",
                              "pattern": "^[0-9]*$"
                            },
                            "name": {
                              "title": "Real name, or equivalent nickname",
                              "description": "Real name, or equivalent nickname.",
                              "x-wrtn-payment-order-citizen": true,
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "created_at",
                            "mobile",
                            "name"
                          ],
                          "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile} input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                        }
                      ]
                    },
                    "created_at": {
                      "title": "Creation time of record",
                      "description": "Creation time of record.\n\nAnother word, first time when the external user connected.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "uid": {
                      "title": "Identifier key of external user from the external system",
                      "description": "Identifier key of external user from the external system.",
                      "type": "string"
                    },
                    "application": {
                      "title": "Identifier code of the external service",
                      "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code} in common.",
                      "type": "string"
                    },
                    "nickname": {
                      "title": "Nickname of external user in the external system",
                      "description": "Nickname of external user in the external system.",
                      "type": "string"
                    },
                    "data": {
                      "description": "Additional information about external user from the external\nsystem."
                    }
                  },
                  "required": [
                    "id",
                    "citizen",
                    "created_at",
                    "uid",
                    "application",
                    "nickname",
                    "data"
                  ],
                  "description": "External user information.\n\n`IShoppingExternalUser` is an entity dsigned for when this system needs\nto connect with external services and welcome their users as\n{@link IShoppingCustomer customers} of this service.\n\nFor reference, customers who connect from an external service must have\nthis record, and the external service user is identified through the two\nattributes {@link application} and {@link uid}. If a customer connected\nfrom an external service completes\n{@link IShoppingCitizen real-name authentication} from this service, each\ntime the external service user reconnects to this service and issues a\nnew customer authentication token, real-name authentication begins with\ncompleted.\n\nAnd {@link password} is the password issued to the user by the external\nservice system (the so-called permanent user authentication token), and\nis never the actual user password. However, for customers who entered the\nsame application and uid as the current external system user, this is to\ndetermine whether to view this as a correct external system user or a\nviolation.\n\nIn addition, additional information received from external services can\nbe recorded in the data field in JSON format."
                }
              ]
            },
            "href": {
              "title": "Connection address",
              "description": "Connection address.\n\nSame with {@link window.location.href} of client.",
              "type": "string",
              "format": "uri"
            },
            "referrer": {
              "title": "Referrer address",
              "description": "Referrer address.\n\nSame with {@link window.document.referrer} of client.",
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "uri"
                },
                {
                  "type": "string",
                  "maxLength": 0
                }
              ]
            },
            "ip": {
              "title": "Connection IP Address",
              "description": "Connection IP Address.",
              "oneOf": [
                {
                  "type": "string",
                  "format": "ipv4"
                },
                {
                  "type": "string",
                  "format": "ipv6"
                }
              ]
            },
            "created_at": {
              "title": "Creation time of the connection record",
              "description": "Creation time of the connection record.",
              "type": "string",
              "format": "date-time"
            }
          },
          "required": [
            "type",
            "member",
            "citizen",
            "id",
            "channel",
            "external_user",
            "href",
            "referrer",
            "ip",
            "created_at"
          ]
        },
        "goods": {
          "title": "List of goods in the order",
          "description": "List of goods in the order.",
          "type": "array",
          "items": {
            "description": "Information about the individual goods that make up your order.\n\n`IShoppingOrderGood` is an entity that represents each good ordered by a\n{@link IShoppingCustomer customer}, and the record is created in the process\nof upgrading the product {@link IShoppingCartCommodity commodity} in the\nshopping cart to a good due to the customer's {@link IShoppingOrder order}\nrequest.\n\nAnd `IShoppingOrderGood`, like {@link IShoppingCartCommodity}, is a concept\nthat corresponds to the listing {@link IShoppingSaleSnapshot sale snapshot}.\n\nFor reference, `IShoppingOrderGood` also contains {@link volume} information\nseparately from the belonging {@link IShoppingCartCommodity.volume}. This is\nbecause there are some cases where you put 3 books in your shopping cart and\nthen change them to 4 during the actual order application process. This is to\nincrease the reusability of the shopping cart by changing the volume attribute\nof the current entity rather than directly changing the commodity information.\n\nIn addition, `IShoppingOrderGood` becomes the most basic unit for the post-order\nprocess, that is, after service (A/S). For example, after receiving a\ncustomer's product, confirming the order is recorded in the {@link confirmed_at}\nattribute. Additionally, `IShoppingOrderGood` is the unit in which customers\nissues or request exchanges or refunds for ordered products.",
            "type": "object",
            "properties": {
              "id": {
                "title": "Primary Key",
                "description": "Primary Key.",
                "type": "string",
                "format": "uuid"
              },
              "commodity": {
                "title": "Commodity that is the basis of the good",
                "description": "Item in a shopping cart.\n\n`IShoppingCartCommodity` is an entity that represents a\n{@link IShoppingSaleSnapshot snapshot} of the items that\n{@link IShoppingCustomer customer} has placed into his shopping cart with a\n{@link IShoppingOrder purchase} in mind. And if the customer continues this\ninto an actual order in the future, `IShoppingCartCommodity` be changed to\n{@link IShoppingOrderGood}.\n\nAnd while adding a sale snapshot to the shopping cart, the customer inevitably\nselects specific {@link IShoppingSaleUnit units} and\n{@link IShoppingSaleUnitStock final stocks} within the listing snapshot.\nInformation about these units and stocks is recorded in the subsidiary entity\n{@link IShoppingCartCommodityStock}. Also, there is an attribute {@link volume}\nthat indicates how many sets of snapshots of the target commodity will be\npurchased. This \"volume\" is a value that will be multiplied by\n{@link IShoppingSaleUnitStock.IInvert.quantity}, the quantity for each\ncomponent.",
                "type": "object",
                "properties": {
                  "id": {
                    "title": "Primary Key",
                    "description": "Primary Key.",
                    "type": "string",
                    "format": "uuid"
                  },
                  "sale": {
                    "title": "Invert information of the sale (snapshot), in the perspective of commodity",
                    "description": "Invert information of the sale snapshot, in the perspective of commodity.\n\n`IShoppingSaleSnapshot.IInvert` is a structure used to represent a\nsnapshot in the perspective of a {@link IShoppingCommodity}, corresponding\nto an {@link IShoppingCartCommodityStock} entity.\n\nTherefore, `IShoppingSaleSnapshot.IInvert` does not contain every\n{@link IShoppingSaleUnit units} and {@link IShoppingSaleUnitStock stocks}\nof the snapshot records, but only some of the records which are put\ninto the {@link IShoppingCartCommodity shopping cart}.\n\n------------------------------\n\nDescription of the current {@link IShoppingSaleSnapshot.IInvert} type:\n\n> Invert information of the sale snapshot, in the perspective of commodity.\n> \n> `IShoppingSaleSnapshot.IInvert` is a structure used to represent a\n> snapshot in the perspective of a {@link IShoppingCommodity}, corresponding\n> to an {@link IShoppingCartCommodityStock} entity.\n> \n> Therefore, `IShoppingSaleSnapshot.IInvert` does not contain every\n> {@link IShoppingSaleUnit units} and {@link IShoppingSaleUnitStock stocks}\n> of the snapshot records, but only some of the records which are put\n> into the {@link IShoppingCartCommodity shopping cart}.\n\n------------------------------\n\nDescription of the parent {@link IShoppingSaleSnapshot} type:\n\n> Snapshot record of sale.\n> \n> `IShoppingSaleSnapshot` is an entity that embodies a snapshot of a sale,\n> and the ERD (Entity Relationship Diagram) describes the role of the\n> `shopping_sale_snapshots` table as follows:\n> \n> > {@link IShoppingSale shopping_sales} is an entity that embodies\n> > \"product sales\" (sales) information registered by the\n> > {@link IShoppingSeller seller}. And the main information of the sale is\n> > recorded in the sub `shopping_sale_snapshots`, not in the main\n> > {@link IShoppingSale shopping_sales}. When a seller changes a previously\n> > registered item, the existing {@link IShoppingSale shopping_sales} record\n> > is not changed, but a new snapshot record is created.\n> >\n> > This is to preserve the {@link IShoppingCustomer customer}'s\n> > {@link IShoppingOrder purchase history} flawlessly after the customer\n> > purchases a specific item, even if the seller changes the components or price\n> > of the item. It is also intended to support sellers in so-called A/B testing,\n> > which involves changing components or prices and measuring the performance\n> > in each case.\n> \n> By the way, DTO (Data Transfer Object) level used by the front-end developer,\n> it does not distinguish {@link IShoppingSale} and `IShoppingSaleSnapshot`\n> strictly, and generally handles {@link IShoppingSale} and snapshot together.\n> \n> But even though the DTO level does not strictly distinguish them, the word and\n> concept of \"snapshot\" is still important, so it is recommended to understand\n> the concept of \"snapshot\" properly.",
                    "type": "object",
                    "properties": {
                      "section": {
                        "title": "Belonged section's information",
                        "description": "Section information.\n\n`IShoppingSection` is a concept that refers to the spatial information of\nthe market.\n\nIf we compare the section mentioned here to the offline market, it means a\nspatially separated area within the store, such as the \"fruit corner\" or\n\"butcher corner\". Therefore, in the {@link IShoppingSale sale} entity, it is\nnot possible to classify multiple sections simultaneously, but only one section\ncan be classified.\n\nBy the way, if your shopping mall system requires only one section, then just\nuse only one. This concept is designed to be expandable in the future.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "title": "Primary Key",
                            "description": "Primary Key.",
                            "type": "string",
                            "format": "uuid"
                          },
                          "code": {
                            "title": "Identifier code",
                            "description": "Identifier code.",
                            "type": "string"
                          },
                          "name": {
                            "title": "Representative name of the section",
                            "description": "Representative name of the section.",
                            "type": "string"
                          },
                          "created_at": {
                            "title": "Creation time of record",
                            "description": "Creation time of record.",
                            "type": "string",
                            "format": "date-time"
                          }
                        },
                        "required": [
                          "id",
                          "code",
                          "name",
                          "created_at"
                        ]
                      },
                      "seller": {
                        "title": "Seller who've registered the sale",
                        "description": "Invert information starting from seller info.\n\nInstead of accessing to the seller information from the\n{@link IShoppingCustomer.member} -> {@link IShoppingMember.seller},\n`IShoppingSeller.IInvert` starts from the seller information\nand access to the customer, member and {@link IShoppingCitizen citizen}\ninformation inversely.\n\n------------------------------\n\nDescription of the current {@link IShoppingSeller.IInvert} type:\n\n> Invert information starting from seller info.\n> \n> Instead of accessing to the seller information from the\n> {@link IShoppingCustomer.member} -> {@link IShoppingMember.seller},\n> `IShoppingSeller.IInvert` starts from the seller information\n> and access to the customer, member and {@link IShoppingCitizen citizen}\n> information inversely.\n\n------------------------------\n\nDescription of the parent {@link IShoppingSeller} type:\n\n> Seller information.\n> \n> `IShoppingSeller` is an entity that embodies a person who registers\n> {@link IShoppingSale sales} to operate selling activities, with\n> {@link IShoppingMember membership} joining.\n> \n> For reference, unlike {@link IShoppingCustomer customers} which can\n> participate even without membership joining, seller must join membership\n> to operate sales. Also, seller must do the\n> {@link IShoppingCitizen real-name and mobile authentication}, too.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "title": "Discriminant for the type of customer",
                            "description": "Discriminant for the type of customer.",
                            "const": "seller"
                          },
                          "member": {
                            "title": "Membership joining information",
                            "description": "Invert information of member.\n\nThis invert member information has been designed to be used for another\ninvert information of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert}\n- {@link IShoppingAdministrator.IInvert}\n\n------------------------------\n\nDescription of the current {@link IShoppingMember.IInvert} type:\n\n> Invert information of member.\n> \n> This invert member information has been designed to be used for another\n> invert information of sellers and administrators like below.\n> \n> - {@link IShoppingSeller.IInvert}\n> - {@link IShoppingAdministrator.IInvert}\n\n------------------------------\n\nDescription of the parent {@link IShoppingMember} type:\n\n> Member Account.\n> \n> `IShoppingMember` is an entity that symbolizes the case when a\n> {@link IShoppingCustomer} signs up as a member of this shopping mall\n> system.\n> \n> If a `IShoppingMember` has seller or administrator property. it means that\n> the {@link IShoppingCustomer} has acting as a {@link IShoppingSeller seller}\n> or {@link IShoppingAdministrator administrator} at the same time.",
                            "type": "object",
                            "properties": {
                              "id": {
                                "title": "Primary Key",
                                "description": "Primary Key.",
                                "type": "string",
                                "format": "uuid"
                              },
                              "nickname": {
                                "title": "Nickname that uniquely identifies the member",
                                "description": "Nickname that uniquely identifies the member.",
                                "type": "string"
                              },
                              "emails": {
                                "title": "List of emails",
                                "description": "List of emails.",
                                "type": "array",
                                "items": {
                                  "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one.",
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "title": "Primary Key",
                                      "description": "Primary Key.",
                                      "type": "string",
                                      "format": "uuid"
                                    },
                                    "value": {
                                      "title": "Email address value",
                                      "description": "Email address value.",
                                      "type": "string",
                                      "format": "email"
                                    },
                                    "created_at": {
                                      "title": "Creation time of record",
                                      "description": "Creation time of record.",
                                      "type": "string",
                                      "format": "date-time"
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "value",
                                    "created_at"
                                  ]
                                }
                              },
                              "created_at": {
                                "title": "Creation time of record",
                                "description": "Creation time of record.\n\nAnother words, the time when the member has signed up.",
                                "type": "string",
                                "format": "date-time"
                              }
                            },
                            "required": [
                              "id",
                              "nickname",
                              "emails",
                              "created_at"
                            ]
                          },
                          "customer": {
                            "title": "Customer, the connection information",
                            "description": "Inverted customer informatino.\n\nThis inverted customer information has been designed to be used for\nanother invert information of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert}\n- {@link IShoppingAdministrator.IInvert}\n\n------------------------------\n\nDescription of the current {@link IShoppingCustomer.IInvert} type:\n\n> Inverted customer informatino.\n> \n> This inverted customer information has been designed to be used for\n> another invert information of sellers and administrators like below.\n> \n> - {@link IShoppingSeller.IInvert}\n> - {@link IShoppingAdministrator.IInvert}\n\n------------------------------\n\nDescription of the parent {@link IShoppingCustomer} type:\n\n> Customer information, but not a person but a connection basis.\n> \n> `IShoppingCustomer` is an entity that literally embodies the information of\n> those who participated in the market as customers. By the way, the\n> `IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\n> even if the same person connects to the shopping mall multiple, multiple\n> records are created in `IShoppingCustomer`.\n> \n> The first purpose of this is to track the customer's inflow path in detail,\n> and it is for cases where the same person enters as a non-member,\n> {@link IShoppingCartCommodity puts items in the shopping cart} in advance,\n> and only authenticates their {@link IShoppingCitizen real name} or\n> registers/logs in at the moment of {@link IShoppingOrderPublish payment}.\n> It is the second. Lastly, it is to accurately track the activities that\n> a person performs at the shopping mall in various ways like below.\n> \n> - Same person comes from an {@link IShoppingExternalUser external service}\n> - Same person creates multiple accounts\n> - Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n> - Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n> \n> Therefore, `IShoppingCustomer` can have multiple records with the same\n> {@link IShoppingCitizen}, {@link IShoppingMember}, and\n> {@link IShoppingExternalUser}. Additionally, if a customer signs up for\n> membership after verifying their real name or signs up for our service after\n> being a user of an external service, all related records are changed at once.\n> Therefore, identification and tracking of customers can be done very\n> systematically.",
                            "type": "object",
                            "properties": {
                              "id": {
                                "title": "Primary Key",
                                "description": "Primary Key.",
                                "type": "string",
                                "format": "uuid"
                              },
                              "channel": {
                                "title": "Belonged channel",
                                "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "title": "Primary Key",
                                    "description": "Primary Key.",
                                    "type": "string",
                                    "format": "uuid"
                                  },
                                  "created_at": {
                                    "title": "Creation time of record",
                                    "description": "Creation time of record.",
                                    "type": "string",
                                    "format": "date-time"
                                  },
                                  "code": {
                                    "title": "Identifier code",
                                    "description": "Identifier code.",
                                    "type": "string"
                                  },
                                  "name": {
                                    "title": "Name of the channel",
                                    "description": "Name of the channel.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "id",
                                  "created_at",
                                  "code",
                                  "name"
                                ]
                              },
                              "external_user": {
                                "title": "External user information",
                                "description": "External user information.\n\nWhen the customer has come frome an external service.",
                                "oneOf": [
                                  {
                                    "type": "null"
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "title": "Primary Key",
                                        "description": "Primary Key.",
                                        "type": "string",
                                        "format": "uuid"
                                      },
                                      "citizen": {
                                        "title": "Citizen activation info",
                                        "description": "Citizen activation info.",
                                        "oneOf": [
                                          {
                                            "type": "null"
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "title": "Primary Key",
                                                "description": "Primary Key.",
                                                "type": "string",
                                                "format": "uuid"
                                              },
                                              "created_at": {
                                                "title": "Creation time of record",
                                                "description": "Creation time of record.",
                                                "type": "string",
                                                "format": "date-time"
                                              },
                                              "mobile": {
                                                "title": "Mobile number",
                                                "description": "Mobile number.",
                                                "x-wrtn-payment-order-mobile": true,
                                                "type": "string",
                                                "pattern": "^[0-9]*$"
                                              },
                                              "name": {
                                                "title": "Real name, or equivalent nickname",
                                                "description": "Real name, or equivalent nickname.",
                                                "x-wrtn-payment-order-citizen": true,
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "id",
                                              "created_at",
                                              "mobile",
                                              "name"
                                            ],
                                            "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile} input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                                          }
                                        ]
                                      },
                                      "created_at": {
                                        "title": "Creation time of record",
                                        "description": "Creation time of record.\n\nAnother word, first time when the external user connected.",
                                        "type": "string",
                                        "format": "date-time"
                                      },
                                      "uid": {
                                        "title": "Identifier key of external user from the external system",
                                        "description": "Identifier key of external user from the external system.",
                                        "type": "string"
                                      },
                                      "application": {
                                        "title": "Identifier code of the external service",
                                        "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code} in common.",
                                        "type": "string"
                                      },
                                      "nickname": {
                                        "title": "Nickname of external user in the external system",
                                        "description": "Nickname of external user in the external system.",
                                        "type": "string"
                                      },
                                      "data": {
                                        "description": "Additional information about external user from the external\nsystem."
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "citizen",
                                      "created_at",
                                      "uid",
                                      "application",
                                      "nickname",
                                      "data"
                                    ],
                                    "description": "External user information.\n\n`IShoppingExternalUser` is an entity dsigned for when this system needs\nto connect with external services and welcome their users as\n{@link IShoppingCustomer customers} of this service.\n\nFor reference, customers who connect from an external service must have\nthis record, and the external service user is identified through the two\nattributes {@link application} and {@link uid}. If a customer connected\nfrom an external service completes\n{@link IShoppingCitizen real-name authentication} from this service, each\ntime the external service user reconnects to this service and issues a\nnew customer authentication token, real-name authentication begins with\ncompleted.\n\nAnd {@link password} is the password issued to the user by the external\nservice system (the so-called permanent user authentication token), and\nis never the actual user password. However, for customers who entered the\nsame application and uid as the current external system user, this is to\ndetermine whether to view this as a correct external system user or a\nviolation.\n\nIn addition, additional information received from external services can\nbe recorded in the data field in JSON format."
                                  }
                                ]
                              },
                              "href": {
                                "title": "Connection address",
                                "description": "Connection address.\n\nSame with {@link window.location.href} of client.",
                                "type": "string",
                                "format": "uri"
                              },
                              "referrer": {
                                "title": "Referrer address",
                                "description": "Referrer address.\n\nSame with {@link window.document.referrer} of client.",
                                "oneOf": [
                                  {
                                    "type": "null"
                                  },
                                  {
                                    "type": "string",
                                    "format": "uri"
                                  },
                                  {
                                    "type": "string",
                                    "maxLength": 0
                                  }
                                ]
                              },
                              "ip": {
                                "title": "Connection IP Address",
                                "description": "Connection IP Address.",
                                "oneOf": [
                                  {
                                    "type": "string",
                                    "format": "ipv4"
                                  },
                                  {
                                    "type": "string",
                                    "format": "ipv6"
                                  }
                                ]
                              },
                              "created_at": {
                                "title": "Creation time of the connection record",
                                "description": "Creation time of the connection record.",
                                "type": "string",
                                "format": "date-time"
                              }
                            },
                            "required": [
                              "id",
                              "channel",
                              "external_user",
                              "href",
                              "referrer",
                              "ip",
                              "created_at"
                            ]
                          },
                          "citizen": {
                            "title": "Real-name and mobile number authentication information",
                            "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile} input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored.",
                            "type": "object",
                            "properties": {
                              "id": {
                                "title": "Primary Key",
                                "description": "Primary Key.",
                                "type": "string",
                                "format": "uuid"
                              },
                              "created_at": {
                                "title": "Creation time of record",
                                "description": "Creation time of record.",
                                "type": "string",
                                "format": "date-time"
                              },
                              "mobile": {
                                "title": "Mobile number",
                                "description": "Mobile number.",
                                "x-wrtn-payment-order-mobile": true,
                                "type": "string",
                                "pattern": "^[0-9]*$"
                              },
                              "name": {
                                "title": "Real name, or equivalent nickname",
                                "description": "Real name, or equivalent nickname.",
                                "x-wrtn-payment-order-citizen": true,
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "created_at",
                              "mobile",
                              "name"
                            ]
                          },
                          "id": {
                            "title": "Primary Key",
                            "description": "Primary Key.",
                            "type": "string",
                            "format": "uuid"
                          },
                          "created_at": {
                            "title": "Creation tmie of record",
                            "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up.",
                            "type": "string",
                            "format": "date-time"
                          }
                        },
                        "required": [
                          "type",
                          "member",
                          "customer",
                          "citizen",
                          "id",
                          "created_at"
                        ]
                      },
                      "id": {
                        "title": "Primary Key of Sale",
                        "description": "Primary Key of Sale.",
                        "type": "string",
                        "format": "uuid"
                      },
                      "snapshot_id": {
                        "title": "Primary Key of Snapshot",
                        "description": "Primary Key of Snapshot.",
                        "type": "string",
                        "format": "uuid"
                      },
                      "latest": {
                        "title": "Whether the snapshot is the latest one or not",
                        "description": "Whether the snapshot is the latest one or not.",
                        "type": "boolean"
                      },
                      "content": {
                        "title": "Description and image content describing the sale",
                        "description": "Description of the current {@link IShoppingSaleContent} type:\n\n> Content information of sale snapshot.\n> \n> `IShoppingSaleContent` is an entity embodies the description contents\n> of {@link IShoppingSale}.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "title": {
                            "type": "string"
                          },
                          "thumbnails": {
                            "type": "array",
                            "items": {
                              "description": "Attachment File.\n\nEvery attachment files that are managed in current system.\n\nFor reference, it is possible to omit one of file {@link name}\nor {@link extension} like `.gitignore` or `README` case, but not\npossible to omit both of them.",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "title": "Primary Key",
                                  "description": "Primary Key.",
                                  "type": "string",
                                  "format": "uuid"
                                },
                                "created_at": {
                                  "title": "Creation time of attachment file",
                                  "description": "Creation time of attachment file.",
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "name": {
                                  "title": "File name, except extension",
                                  "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string.",
                                  "type": "string",
                                  "maxLength": 255
                                },
                                "extension": {
                                  "title": "Extension",
                                  "description": "Extension.\n\nPossible to omit like `README` case.",
                                  "oneOf": [
                                    {
                                      "type": "null"
                                    },
                                    {
                                      "type": "string",
                                      "minLength": 1,
                                      "maxLength": 8
                                    }
                                  ]
                                },
                                "url": {
                                  "title": "URL path of the real file",
                                  "description": "URL path of the real file.",
                                  "type": "string",
                                  "format": "uri",
                                  "contentMediaType": "image/*"
                                }
                              },
                              "required": [
                                "id",
                                "created_at",
                                "name",
                                "extension",
                                "url"
                              ]
                            }
                          }
                        },
                        "required": [
                          "id",
                          "title",
                          "thumbnails"
                        ]
                      },
                      "channels": {
                        "title": "List of channels and categories",
                        "description": "List of channels and categories.\n\nWhich channels and categories the sale is registered to.",
                        "type": "array",
                        "items": {
                          "description": "Target channel (and categories) of sale to sell.\n\n`IShoppingSaleChannel` is an entity that expresses through which\n{@link IShoppingChannel channel} a listing {@link IShoppingSale} is sold.\n\nAlso, if {@link IShoppingChannelCategory categories} are specified, it also\nmeans that the sale be sold. Otherwise, none of the categories of the channel\nbeing specified, it means that every categories of the channel is listing the\ntarget sale.",
                          "type": "object",
                          "properties": {
                            "categories": {
                              "title": "List of categories of the channel listing the sale",
                              "description": "List of categories of the channel listing the sale.\n\nIf empty, it means all categories of the channel is listing the sale.",
                              "type": "array",
                              "items": {
                                "$ref": "#/$defs/IShoppingChannelCategory.IInvert"
                              }
                            },
                            "id": {
                              "title": "Primary Key",
                              "description": "Primary Key.",
                              "type": "string",
                              "format": "uuid"
                            },
                            "created_at": {
                              "title": "Creation time of record",
                              "description": "Creation time of record.",
                              "type": "string",
                              "format": "date-time"
                            },
                            "code": {
                              "title": "Identifier code",
                              "description": "Identifier code.",
                              "type": "string"
                            },
                            "name": {
                              "title": "Name of the channel",
                              "description": "Name of the channel.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "categories",
                            "id",
                            "created_at",
                            "code",
                            "name"
                          ]
                        },
                        "minItems": 1
                      },
                      "tags": {
                        "title": "List of search tags",
                        "description": "List of search tags.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "units": {
                        "title": "List of units",
                        "description": "List of units.\n\nRecords about individual product composition information that are sold\nin the sale. Each {@link IShoppingSaleUnit unit} record has configurable\n{@link IShoppingSaleUnitOption options},\n{@link IShoppingSaleUnitOptionCandidate candidate} values for each\noption, and {@link IShoppingSaleUnitStock final stocks} determined by\nselecting every candidate values of each option.",
                        "type": "array",
                        "items": {
                          "description": "Description of the current {@link IShoppingSaleUnit} type:\n\n> Product composition information handled in the sale.\n> \n> `IShoppingSaleUnit` is an entity that embodies the \"individual product\"\n> information handled in the {@link IShoppingSale sale}.\n> \n> For reference, the reason why `IShoppingSaleUnit` is separated from\n> {@link IShoppingSaleSnapshot} by an algebraic relationship of 1: N is because\n> there are some cases where multiple products are sold in one listing. This is\n> the case with so-called \"bundled products\".\n> \n> - Bundle from regular product (Mackbook Set)\n>   - Main Body\n>   - Keyboard\n>   - Mouse\n>   - Apple Care (Free A/S Voucher)\n> \n> And again, `IShoppingSaleUnit` does not in itself refer to the\n> {@link IShoppingSaleUnitStock final stock} that the\n> {@link IShoppingCustomer customer} will {@link IShoppingOrder purchase}.\n> The final stock can be found only after selecting all given\n> {@link IShoppingSaleUnitOption options} and their\n> {@link IShoppingSaleUnitOptionCandidate candidate values}.\n> \n> For example, even if you buy a Macbook, the final stocks are determined only\n> after selecting all the options (CPU / RAM / SSD), etc.",
                          "type": "object",
                          "properties": {
                            "stocks": {
                              "title": "List of final stocks",
                              "description": "List of final stocks.",
                              "type": "array",
                              "items": {
                                "description": "Invert information from the cart.\n\n------------------------------\n\nDescription of the current {@link IShoppingSaleUnitStock.IInvert} type:\n\n> Invert information from the cart.\n\n------------------------------\n\nDescription of the parent {@link IShoppingSaleUnitStock} type:\n\n> Final component information on units for sale.\n> \n> `IShoppingSaleUnitStock` is a subsidiary entity of {@link IShoppingSaleUnit}\n> that represents a product catalog for sale, and is a kind of final stock that is\n> constructed by selecting all {@link IShoppingSaleUnitSelectableOption options}\n> (variable \"select\" type) and their\n> {@link IShoppingSaleUnitOptionCandidate candidate} values in the belonging unit.\n> It is the \"good\" itself that customers actually purchase.\n> \n> - Product Name) MacBook\n>   - Options\n>     - CPU: { i3, i5, i7, i9 }\n>     - RAM: { 8GB, 16GB, 32GB, 64GB, 96GB }\n>     - SSD: { 256GB, 512GB, 1TB }\n>   - Number of final stocks: 4 * 5 * 3 = 60\n> \n> For reference, the total number of `IShoppingSaleUnitStock` records in an\n> attribution unit can be obtained using Cartesian Product. In other words, the\n> value obtained by multiplying all the candidate values that each\n> (variable \"select\" type) option can have by the number of cases is the total\n> number of final stocks in the unit.\n> \n> Of course, without a single variable \"select\" type option, the final stocks\n> count in the unit is only 1.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "title": "Primary Key",
                                    "description": "Primary Key.",
                                    "type": "string",
                                    "format": "uuid"
                                  },
                                  "name": {
                                    "title": "Representative name of the stock",
                                    "description": "Representative name of the stock.",
                                    "type": "string"
                                  },
                                  "price": {
                                    "title": "Price of the stock",
                                    "description": "Shopping price interface.",
                                    "type": "object",
                                    "properties": {
                                      "nominal": {
                                        "title": "Nominal price",
                                        "description": "Nominal price.\n\nThis is not {@link real real price} to pay, but just a nominal price to show.\nIf this value is greater than the {@link real real price}, it would be shown\nlike {@link IShoppingSeller seller} is giving a discount.",
                                        "type": "number",
                                        "minimum": 0
                                      },
                                      "real": {
                                        "title": "Real price to pay",
                                        "description": "Real price to pay.",
                                        "type": "number",
                                        "minimum": 0
                                      }
                                    },
                                    "required": [
                                      "nominal",
                                      "real"
                                    ]
                                  },
                                  "quantity": {
                                    "title": "Quantity of the stock in the cart",
                                    "description": "Quantity of the stock in the cart.",
                                    "type": "integer",
                                    "minimum": 1
                                  },
                                  "inventory": {
                                    "title": "Current inventory status of the stock",
                                    "description": "Inventory information of a final stock.",
                                    "type": "object",
                                    "properties": {
                                      "income": {
                                        "title": "Total income quantity",
                                        "description": "Total income quantity.",
                                        "type": "integer"
                                      },
                                      "outcome": {
                                        "title": "Total outcome quantity",
                                        "description": "Total outcome quantity.",
                                        "type": "integer"
                                      }
                                    },
                                    "required": [
                                      "income",
                                      "outcome"
                                    ]
                                  },
                                  "choices": {
                                    "title": "List of choices",
                                    "description": "List of choices.\n\nWhich values being written for each option.",
                                    "type": "array",
                                    "items": {
                                      "description": "Invert information from the cart.\n\n------------------------------\n\nDescription of the current {@link IShoppingSaleUnitStockChoice.IInvert} type:\n\n> Invert information from the cart.\n\n------------------------------\n\nDescription of the parent {@link IShoppingSaleUnitStockChoice} type:\n\n> Selection information of final stock.\n> \n> `IShoppingSaleUnitStockChoice` is an entity that represents which\n> {@link IShoppingSaleUnitSelectableOption option} of each variable \"select\"\n> type was selected for each {@link IShoppingSaleUnitStock stock} and which\n> {@link IShoppingSaleUnitOptionCandidate candidate value} was selected within\n> it.\n> \n> Of course, if the bound {@link IShoppingSaleUnit unit} does not have any\n> options, this entity can also be ignored.",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "title": "Primary Key",
                                          "description": "Primary Key.",
                                          "type": "string",
                                          "format": "uuid"
                                        },
                                        "option": {
                                          "title": "Target option",
                                          "description": "Target option.",
                                          "oneOf": [
                                            {
                                              "type": "object",
                                              "properties": {
                                                "id": {
                                                  "title": "Primary Key",
                                                  "description": "Primary Key.",
                                                  "type": "string",
                                                  "format": "uuid"
                                                },
                                                "type": {
                                                  "title": "Discriminant for the type of selectable option",
                                                  "description": "Discriminant for the type of selectable option.",
                                                  "const": "select"
                                                },
                                                "name": {
                                                  "title": "Represents the name of the option",
                                                  "description": "Represents the name of the option.",
                                                  "type": "string"
                                                },
                                                "variable": {
                                                  "title": "Whether the option is variable or not",
                                                  "description": "Whether the option is variable or not.\n\nWhen type of current option is \"select\", this attribute means whether\nselecting different candidate value affects the final stock or not.",
                                                  "type": "boolean"
                                                }
                                              },
                                              "required": [
                                                "id",
                                                "type",
                                                "name",
                                                "variable"
                                              ],
                                              "description": "Description of the current {@link IShoppingSaleUnitSelectableOption} type:\n\n> Individual option information on units for sale.\n> \n> `IShoppingSaleUnitSelectableOption` is a subsidiary entity of\n> {@link IShoppingSaleUnit} that represents individual products in the\n> {@link IShoppingSale sale}, and is an entity designed to represent individual\n> selectable option information for the unit.\n> \n> - Examples of Options\n>   - selectable options\n>     - Computer: CPU, RAM, SSD, etc.\n>     - Clothes: size, color, style, etc.\n>   - descriptive options\n>     - Engrave\n>     - Simple question\n> \n> If the {@link variable} property value is `true`, the final stock that the\n> {@link IShoppingCustomer customer} will purchase changes depending on the\n> selection of the {@link IShoppingSaleUnitOptionCandidate candidate value}.\n> \n> Conversely, if it is a type other than \"select\", or if the {@link variable}\n> property value is \"false\", , this is an option that has no meaning beyond\n> simple information transfer. Therefore, no matter what value the customer\n> chooses when purchasing it, the option in this case does not affect the\n> {@link IShoppingSaleUnitStock final stock}."
                                            },
                                            {
                                              "type": "object",
                                              "properties": {
                                                "id": {
                                                  "title": "Primary Key",
                                                  "description": "Primary Key.",
                                                  "type": "string",
                                                  "format": "uuid"
                                                },
                                                "type": {
                                                  "title": "Type of descriptive option",
                                                  "description": "Type of descriptive option.\n\nWhich typed value should be written when purchasing.",
                                                  "oneOf": [
                                                    {
                                                      "const": "string"
                                                    },
                                                    {
                                                      "const": "number"
                                                    },
                                                    {
                                                      "const": "boolean"
                                                    }
                                                  ]
                                                },
                                                "name": {
                                                  "title": "Readable name of the option",
                                                  "description": "Readable name of the option.",
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "id",
                                                "type",
                                                "name"
                                              ],
                                              "description": "Descriptive option.\n\nWhen type of the option not `\"select\"`, it means the option is descriptive\nthat requiring {@link IShoppingCustomer customers} to write some value to\n{@link IShoppingOrder purchase}. Also, whatever customer writes about the\noption, it does not affect the {@link IShoppingSaleUnitStock final stock}.\n\nAnother words, the descriptive option is just for information transfer."
                                            }
                                          ]
                                        },
                                        "candidate": {
                                          "title": "Selected candidate value",
                                          "description": "Selected candidate value.",
                                          "oneOf": [
                                            {
                                              "type": "null"
                                            },
                                            {
                                              "type": "object",
                                              "properties": {
                                                "id": {
                                                  "title": "Primary Key",
                                                  "description": "Primary Key.",
                                                  "type": "string",
                                                  "format": "uuid"
                                                },
                                                "name": {
                                                  "title": "Represents the name of the candidate value",
                                                  "description": "Represents the name of the candidate value.",
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "id",
                                                "name"
                                              ],
                                              "description": "Selectable candidate values within an option.\n\n`IShoppingSaleUnitOptionCandidate` is an entity that represents individual\ncandidate values that can be selected from\n{@link IShoppingSaleUnitSelectableOption options of the \"select\" type}.\n\n- Example\n  - RAM: 8GB, 16GB, 32GB\n  - GPU: RTX 3060, RTX 4080, TESLA\n  - License: Private, Commercial, Educatiion\n\nBy the way, if belonged option is not \"select\" type, this entity never\nbeing used."
                                            }
                                          ]
                                        },
                                        "value": {
                                          "title": "Written value",
                                          "description": "Written value.",
                                          "oneOf": [
                                            {
                                              "type": "null"
                                            },
                                            {
                                              "type": "string"
                                            },
                                            {
                                              "type": "number"
                                            },
                                            {
                                              "type": "boolean"
                                            }
                                          ]
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "option",
                                        "candidate",
                                        "value"
                                      ]
                                    }
                                  }
                                },
                                "required": [
                                  "id",
                                  "name",
                                  "price",
                                  "quantity",
                                  "inventory",
                                  "choices"
                                ]
                              },
                              "minItems": 1
                            },
                            "id": {
                              "title": "Primary Key",
                              "description": "Primary Key.",
                              "type": "string",
                              "format": "uuid"
                            },
                            "name": {
                              "title": "Representative name of the unit",
                              "description": "Representative name of the unit.",
                              "type": "string"
                            },
                            "primary": {
                              "title": "Whether the unit is primary or not",
                              "description": "Whether the unit is primary or not.\n\nJust a labeling value.",
                              "type": "boolean"
                            },
                            "required": {
                              "title": "Whether the unit is required or not",
                              "description": "Whether the unit is required or not.\n\nWhen the unit is required, the customer must select the unit. If do not\nselect, customer can't buy it.\n\nFor example, if there's a sale \"Macbook Set\" and one of the unit is the\n\"Main Body\", is it possible to buy the \"Macbook Set\" without the\n\"Main Body\" unit? This property is for that case.",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "stocks",
                            "id",
                            "name",
                            "primary",
                            "required"
                          ]
                        },
                        "minItems": 1
                      },
                      "created_at": {
                        "title": "Creation time of the record",
                        "description": "Creation time of the record.\n\nNote that, this property is different with {@link opened_at},\nwhich means the timepoint of the sale is opened.",
                        "type": "string",
                        "format": "date-time"
                      },
                      "updated_at": {
                        "title": "Last updated time of the record",
                        "description": "Last updated time of the record.\n\nIn another words, creation time of the last snapshot.",
                        "type": "string",
                        "format": "date-time"
                      },
                      "paused_at": {
                        "title": "Paused time of the sale",
                        "description": "Paused time of the sale.\n\nThe sale is paused by the seller, for some reason.\n\n{@link IShoppingCustomer Customers} can still see the sale on the\nboth list and detail pages, but the sale has a warning label\n\"The sale is paused by the seller\".",
                        "oneOf": [
                          {
                            "type": "null"
                          },
                          {
                            "type": "string",
                            "format": "date-time"
                          }
                        ]
                      },
                      "suspended_at": {
                        "title": "Suspended time of the sale",
                        "description": "Suspended time of the sale.\n\nThe sale is suspended by the seller, for some reason.\n\n{@link IShoppingCustomer Customers} cannot see the sale on the\nboth list and detail pages. It is almost same with soft delettion,\nbut there's a little bit difference that the owner\n{@link IShoppingSeller seller} can still see the sale and resume it.\n\nOf course, the {@link IShoppingCustomer customers} who have\nalready purchased the sale can still see the sale on the\n{@link IShoppingOrder order} page.",
                        "oneOf": [
                          {
                            "type": "null"
                          },
                          {
                            "type": "string",
                            "format": "date-time"
                          }
                        ]
                      },
                      "opened_at": {
                        "title": "Opening time of the sale",
                        "description": "Opening time of the sale.",
                        "oneOf": [
                          {
                            "type": "null"
                          },
                          {
                            "type": "string",
                            "format": "date-time"
                          }
                        ]
                      },
                      "closed_at": {
                        "title": "Closing time of the sale",
                        "description": "Closing time of the sale.\n\nIf this value is `null`, the sale be continued forever.",
                        "oneOf": [
                          {
                            "type": "null"
                          },
                          {
                            "type": "string",
                            "format": "date-time"
                          }
                        ]
                      }
                    },
                    "required": [
                      "section",
                      "seller",
                      "id",
                      "snapshot_id",
                      "latest",
                      "content",
                      "channels",
                      "tags",
                      "units",
                      "created_at",
                      "updated_at",
                      "paused_at",
                      "suspended_at",
                      "opened_at",
                      "closed_at"
                    ]
                  },
                  "orderable": {
                    "title": "Whether current commodity is orderable or not",
                    "description": "Whether current commodity is orderable or not.\n\nIf this attribute is `false`, then the commodity is not orderable, because\nit has already been ordered.",
                    "type": "boolean"
                  },
                  "pseudo": {
                    "title": "Whether current commodity is pseudo or not",
                    "description": "Whether current commodity is pseudo or not.\n\nWhen this attribute is `true`, then the commodity is not the real one,\nbut just fake information only for calculating the discount effect by\n{@link IShoppingCoupon coupons}.",
                    "type": "boolean"
                  },
                  "volume": {
                    "title": "Volume of the commodity to purchase",
                    "description": "Volume of the commodity to purchase.\n\nA value indicating how many sets would be multiplied to the children\n{@link IShoppingSaleUnitStock.IInvert.quantity} values.",
                    "type": "integer",
                    "minimum": 1
                  },
                  "price": {
                    "title": "Price of the commodity",
                    "description": "Shopping price interface.",
                    "type": "object",
                    "properties": {
                      "nominal": {
                        "title": "Nominal price",
                        "description": "Nominal price.\n\nThis is not {@link real real price} to pay, but just a nominal price to show.\nIf this value is greater than the {@link real real price}, it would be shown\nlike {@link IShoppingSeller seller} is giving a discount.",
                        "type": "number",
                        "minimum": 0
                      },
                      "real": {
                        "title": "Real price to pay",
                        "description": "Real price to pay.",
                        "type": "number",
                        "minimum": 0
                      }
                    },
                    "required": [
                      "nominal",
                      "real"
                    ]
                  },
                  "created_at": {
                    "title": "Creation time of the record",
                    "description": "Creation time of the record.",
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "required": [
                  "id",
                  "sale",
                  "orderable",
                  "pseudo",
                  "volume",
                  "price",
                  "created_at"
                ]
              },
              "volume": {
                "title": "Volume of the good",
                "description": "Volume of the good.\n\nThe value multiplied to {@link IShoppingCartCommodityStock.quantity}.\nIt's purpose is exactly same with {@link IShoppingCartCommodity.volume},\nbut rewritten because the {@link IShoppingCartCommodity} records are reusable\nuntil payment.",
                "type": "integer"
              },
              "price": {
                "title": "Price information including discounts and multipled volume",
                "description": "Summarized information of the order price.\n\n------------------------------\n\nDescription of the current {@link IShoppingOrderPrice.ISummary} type:\n\n> Summarized information of the order price.\n\n------------------------------\n\nDescription of the parent {@link IShoppingOrderPrice} type:\n\n> Price infromation of the order including discounts.",
                "type": "object",
                "properties": {
                  "cash": {
                    "title": "Amount of the cash payment",
                    "description": "Amount of the cash payment.",
                    "x-wrtn-payment-price": true,
                    "type": "number",
                    "minimum": 0
                  },
                  "deposit": {
                    "title": "Amount of the deposit payment",
                    "description": "Amount of the deposit payment.",
                    "type": "number",
                    "minimum": 0
                  },
                  "mileage": {
                    "title": "Amount of the mileage payment",
                    "description": "Amount of the mileage payment.",
                    "type": "number",
                    "minimum": 0
                  },
                  "ticket": {
                    "title": "Amount of the discount coupon ticket payment",
                    "description": "Amount of the discount coupon ticket payment.",
                    "type": "number",
                    "minimum": 0
                  },
                  "nominal": {
                    "title": "Nominal price",
                    "description": "Nominal price.\n\nThis is not {@link real real price} to pay, but just a nominal price to show.\nIf this value is greater than the {@link real real price}, it would be shown\nlike {@link IShoppingSeller seller} is giving a discount.",
                    "type": "number",
                    "minimum": 0
                  },
                  "real": {
                    "title": "Real price to pay",
                    "description": "Real price to pay.",
                    "type": "number",
                    "minimum": 0
                  }
                },
                "required": [
                  "cash",
                  "deposit",
                  "mileage",
                  "ticket",
                  "nominal",
                  "real"
                ]
              },
              "state": {
                "title": "State of delivery about the good",
                "description": "State of delivery about the good.",
                "oneOf": [
                  {
                    "type": "null"
                  },
                  {
                    "const": "none"
                  },
                  {
                    "const": "underway"
                  },
                  {
                    "const": "preparing"
                  },
                  {
                    "const": "manufacturing"
                  },
                  {
                    "const": "shipping"
                  },
                  {
                    "const": "delivering"
                  },
                  {
                    "const": "arrived"
                  }
                ]
              },
              "confirmed_at": {
                "title": "Confirmation time of order good",
                "description": "Confirmation time of order good.\n\nWhen be confirmed, customer can't request refund or exchange.\n\nThe confirmation be accomplished by following cases.\n\n- Customer does it directly.\n- 14 days after the delivery.",
                "oneOf": [
                  {
                    "type": "null"
                  },
                  {
                    "type": "string",
                    "format": "date-time"
                  }
                ]
              }
            },
            "required": [
              "id",
              "commodity",
              "volume",
              "price",
              "state",
              "confirmed_at"
            ]
          },
          "minItems": 1
        },
        "price": {
          "title": "Price information including discounts",
          "description": "Price infromation of the order including discounts.",
          "type": "object",
          "properties": {
            "ticket_payments": {
              "title": "List of discount coupon ticket payments",
              "description": "List of discount coupon ticket payments.",
              "type": "array",
              "items": {
                "description": "Discount coupon ticket payment details.\n\n`IShoppingCouponTicketPayment` is an entity that embodies the payment\ninformation for the {@link IShoppingOrder order} of\n{@link IShoppingCouponTicket}, and is used when a consumer uses the\ndiscount coupon ticket he or she was issued to order and has the payment\namount deducted.\n\nAnd since {@link IShoppingOrder} itself is not an entity used in\nsituations where an order is completed, but rather an entity designed to\nexpress an order request, the creation of this\n`IShoppingCouponTicketPayment` record does not actually mean that the\nattached ticket disappears. Until the {@link IShoppingCustomer customer}\n{@link IShoppingOrderPublish.paid_at completes the payment} and confirms\nthe order, the ticket can be understood as a kind of deposit.\n\nAdditionally, this record can be deleted by the customer reversing the\npayment of the ticket, but it can also be deleted when the attribution\norder itself is cancelled.",
                "type": "object",
                "properties": {
                  "id": {
                    "title": "Primary Key",
                    "description": "Primary Key.",
                    "type": "string",
                    "format": "uuid"
                  },
                  "ticket": {
                    "title": "Target ticket",
                    "description": "Discount coupon ticket issuance details.\n\n`IShoppingCouponTicket` is an entity that symbolizes\n{@link IShoppingCoupon discount coupon} tickets issued by\n{@link IShoppingCustomer customers}.\n\nAnd if the target discount coupon specification itself has an expiration\ndate, the expiration date is recorded in expired_at and is automatically\ndiscarded after that expiration date. Of course, it doesn't matter if you\nuse the discount coupon for your order within the deadline.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "title": "Primary Key",
                        "description": "Primary Key.",
                        "type": "string",
                        "format": "uuid"
                      },
                      "customer": {
                        "title": "Customer who've taken the coupon ticket",
                        "description": "Customer information, but not a person but a connection basis.\n\n`IShoppingCustomer` is an entity that literally embodies the information of\nthose who participated in the market as customers. By the way, the\n`IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\neven if the same person connects to the shopping mall multiple, multiple\nrecords are created in `IShoppingCustomer`.\n\nThe first purpose of this is to track the customer's inflow path in detail,\nand it is for cases where the same person enters as a non-member,\n{@link IShoppingCartCommodity puts items in the shopping cart} in advance,\nand only authenticates their {@link IShoppingCitizen real name} or\nregisters/logs in at the moment of {@link IShoppingOrderPublish payment}.\nIt is the second. Lastly, it is to accurately track the activities that\na person performs at the shopping mall in various ways like below.\n\n- Same person comes from an {@link IShoppingExternalUser external service}\n- Same person creates multiple accounts\n- Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n- Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n\nTherefore, `IShoppingCustomer` can have multiple records with the same\n{@link IShoppingCitizen}, {@link IShoppingMember}, and\n{@link IShoppingExternalUser}. Additionally, if a customer signs up for\nmembership after verifying their real name or signs up for our service after\nbeing a user of an external service, all related records are changed at once.\nTherefore, identification and tracking of customers can be done very\nsystematically.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "title": "Discriminant for the type of customer",
                            "description": "Discriminant for the type of customer.",
                            "const": "customer"
                          },
                          "member": {
                            "title": "Membership information",
                            "description": "Membership information.\n\nIf the customer has joined as a member.",
                            "oneOf": [
                              {
                                "type": "null"
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "citizen": {
                                    "title": "Citizen information",
                                    "description": "Citizen information.\n\nOnly when has verified as a citizen, with mobile number and real name.\n\nFor reference, if the member has signed up as a seller or administrator,\nthis citizen information must be.",
                                    "oneOf": [
                                      {
                                        "type": "null"
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "title": "Primary Key",
                                            "description": "Primary Key.",
                                            "type": "string",
                                            "format": "uuid"
                                          },
                                          "created_at": {
                                            "title": "Creation time of record",
                                            "description": "Creation time of record.",
                                            "type": "string",
                                            "format": "date-time"
                                          },
                                          "mobile": {
                                            "title": "Mobile number",
                                            "description": "Mobile number.",
                                            "x-wrtn-payment-order-mobile": true,
                                            "type": "string",
                                            "pattern": "^[0-9]*$"
                                          },
                                          "name": {
                                            "title": "Real name, or equivalent nickname",
                                            "description": "Real name, or equivalent nickname.",
                                            "x-wrtn-payment-order-citizen": true,
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "created_at",
                                          "mobile",
                                          "name"
                                        ],
                                        "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile} input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                                      }
                                    ]
                                  },
                                  "seller": {
                                    "title": "Seller information",
                                    "description": "Seller information.\n\nIf the member also signed up as a seller.",
                                    "oneOf": [
                                      {
                                        "type": "null"
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "title": "Primary Key",
                                            "description": "Primary Key.",
                                            "type": "string",
                                            "format": "uuid"
                                          },
                                          "created_at": {
                                            "title": "Creation tmie of record",
                                            "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up.",
                                            "type": "string",
                                            "format": "date-time"
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "created_at"
                                        ],
                                        "description": "Seller information.\n\n`IShoppingSeller` is an entity that embodies a person who registers\n{@link IShoppingSale sales} to operate selling activities, with\n{@link IShoppingMember membership} joining.\n\nFor reference, unlike {@link IShoppingCustomer customers} which can\nparticipate even without membership joining, seller must join membership\nto operate sales. Also, seller must do the\n{@link IShoppingCitizen real-name and mobile authentication}, too."
                                      }
                                    ]
                                  },
                                  "administrator": {
                                    "title": "Administrator information",
                                    "description": "Administrator information.\n\nIf the member also signed up as an administrator.",
                                    "oneOf": [
                                      {
                                        "type": "null"
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "title": "Primary Key",
                                            "description": "Primary Key.",
                                            "type": "string",
                                            "format": "uuid"
                                          },
                                          "created_at": {
                                            "title": "Creation time of record",
                                            "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up.",
                                            "type": "string",
                                            "format": "date-time"
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "created_at"
                                        ],
                                        "description": "Administrator account.\n\n`IShoppingAdministrator` is an entity that embodies a person who manages\nthe shopping mall system, with {@link IShoppingMember membership} joining.\n\nFor reference, unlike {@link IShoppingCustomer customers} which can participate\neven without membership joining, administrator must join membership to operate\nmanagements. Also, administrator must perform the\n{@link IShoppingCitizen real-name and mobile authentication}, too."
                                      }
                                    ]
                                  },
                                  "id": {
                                    "title": "Primary Key",
                                    "description": "Primary Key.",
                                    "type": "string",
                                    "format": "uuid"
                                  },
                                  "nickname": {
                                    "title": "Nickname that uniquely identifies the member",
                                    "description": "Nickname that uniquely identifies the member.",
                                    "type": "string"
                                  },
                                  "emails": {
                                    "title": "List of emails",
                                    "description": "List of emails.",
                                    "type": "array",
                                    "items": {
                                      "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one.",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "title": "Primary Key",
                                          "description": "Primary Key.",
                                          "type": "string",
                                          "format": "uuid"
                                        },
                                        "value": {
                                          "title": "Email address value",
                                          "description": "Email address value.",
                                          "type": "string",
                                          "format": "email"
                                        },
                                        "created_at": {
                                          "title": "Creation time of record",
                                          "description": "Creation time of record.",
                                          "type": "string",
                                          "format": "date-time"
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "value",
                                        "created_at"
                                      ]
                                    }
                                  },
                                  "created_at": {
                                    "title": "Creation time of record",
                                    "description": "Creation time of record.\n\nAnother words, the time when the member has signed up.",
                                    "type": "string",
                                    "format": "date-time"
                                  }
                                },
                                "required": [
                                  "citizen",
                                  "seller",
                                  "administrator",
                                  "id",
                                  "nickname",
                                  "emails",
                                  "created_at"
                                ],
                                "description": "Member Account.\n\n`IShoppingMember` is an entity that symbolizes the case when a\n{@link IShoppingCustomer} signs up as a member of this shopping mall\nsystem.\n\nIf a `IShoppingMember` has seller or administrator property. it means that\nthe {@link IShoppingCustomer} has acting as a {@link IShoppingSeller seller}\nor {@link IShoppingAdministrator administrator} at the same time."
                              }
                            ]
                          },
                          "citizen": {
                            "title": "Citizen information",
                            "description": "Citizen information.\n\nIf the customer has verified his real name and mobile number.",
                            "oneOf": [
                              {
                                "type": "null"
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "title": "Primary Key",
                                    "description": "Primary Key.",
                                    "type": "string",
                                    "format": "uuid"
                                  },
                                  "created_at": {
                                    "title": "Creation time of record",
                                    "description": "Creation time of record.",
                                    "type": "string",
                                    "format": "date-time"
                                  },
                                  "mobile": {
                                    "title": "Mobile number",
                                    "description": "Mobile number.",
                                    "x-wrtn-payment-order-mobile": true,
                                    "type": "string",
                                    "pattern": "^[0-9]*$"
                                  },
                                  "name": {
                                    "title": "Real name, or equivalent nickname",
                                    "description": "Real name, or equivalent nickname.",
                                    "x-wrtn-payment-order-citizen": true,
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "id",
                                  "created_at",
                                  "mobile",
                                  "name"
                                ],
                                "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile} input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                              }
                            ]
                          },
                          "id": {
                            "title": "Primary Key",
                            "description": "Primary Key.",
                            "type": "string",
                            "format": "uuid"
                          },
                          "channel": {
                            "title": "Belonged channel",
                            "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future.",
                            "type": "object",
                            "properties": {
                              "id": {
                                "title": "Primary Key",
                                "description": "Primary Key.",
                                "type": "string",
                                "format": "uuid"
                              },
                              "created_at": {
                                "title": "Creation time of record",
                                "description": "Creation time of record.",
                                "type": "string",
                                "format": "date-time"
                              },
                              "code": {
                                "title": "Identifier code",
                                "description": "Identifier code.",
                                "type": "string"
                              },
                              "name": {
                                "title": "Name of the channel",
                                "description": "Name of the channel.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "created_at",
                              "code",
                              "name"
                            ]
                          },
                          "external_user": {
                            "title": "External user information",
                            "description": "External user information.\n\nWhen the customer has come frome an external service.",
                            "oneOf": [
                              {
                                "type": "null"
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "title": "Primary Key",
                                    "description": "Primary Key.",
                                    "type": "string",
                                    "format": "uuid"
                                  },
                                  "citizen": {
                                    "title": "Citizen activation info",
                                    "description": "Citizen activation info.",
                                    "oneOf": [
                                      {
                                        "type": "null"
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "title": "Primary Key",
                                            "description": "Primary Key.",
                                            "type": "string",
                                            "format": "uuid"
                                          },
                                          "created_at": {
                                            "title": "Creation time of record",
                                            "description": "Creation time of record.",
                                            "type": "string",
                                            "format": "date-time"
                                          },
                                          "mobile": {
                                            "title": "Mobile number",
                                            "description": "Mobile number.",
                                            "x-wrtn-payment-order-mobile": true,
                                            "type": "string",
                                            "pattern": "^[0-9]*$"
                                          },
                                          "name": {
                                            "title": "Real name, or equivalent nickname",
                                            "description": "Real name, or equivalent nickname.",
                                            "x-wrtn-payment-order-citizen": true,
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "created_at",
                                          "mobile",
                                          "name"
                                        ],
                                        "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile} input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                                      }
                                    ]
                                  },
                                  "created_at": {
                                    "title": "Creation time of record",
                                    "description": "Creation time of record.\n\nAnother word, first time when the external user connected.",
                                    "type": "string",
                                    "format": "date-time"
                                  },
                                  "uid": {
                                    "title": "Identifier key of external user from the external system",
                                    "description": "Identifier key of external user from the external system.",
                                    "type": "string"
                                  },
                                  "application": {
                                    "title": "Identifier code of the external service",
                                    "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code} in common.",
                                    "type": "string"
                                  },
                                  "nickname": {
                                    "title": "Nickname of external user in the external system",
                                    "description": "Nickname of external user in the external system.",
                                    "type": "string"
                                  },
                                  "data": {
                                    "description": "Additional information about external user from the external\nsystem."
                                  }
                                },
                                "required": [
                                  "id",
                                  "citizen",
                                  "created_at",
                                  "uid",
                                  "application",
                                  "nickname",
                                  "data"
                                ],
                                "description": "External user information.\n\n`IShoppingExternalUser` is an entity dsigned for when this system needs\nto connect with external services and welcome their users as\n{@link IShoppingCustomer customers} of this service.\n\nFor reference, customers who connect from an external service must have\nthis record, and the external service user is identified through the two\nattributes {@link application} and {@link uid}. If a customer connected\nfrom an external service completes\n{@link IShoppingCitizen real-name authentication} from this service, each\ntime the external service user reconnects to this service and issues a\nnew customer authentication token, real-name authentication begins with\ncompleted.\n\nAnd {@link password} is the password issued to the user by the external\nservice system (the so-called permanent user authentication token), and\nis never the actual user password. However, for customers who entered the\nsame application and uid as the current external system user, this is to\ndetermine whether to view this as a correct external system user or a\nviolation.\n\nIn addition, additional information received from external services can\nbe recorded in the data field in JSON format."
                              }
                            ]
                          },
                          "href": {
                            "title": "Connection address",
                            "description": "Connection address.\n\nSame with {@link window.location.href} of client.",
                            "type": "string",
                            "format": "uri"
                          },
                          "referrer": {
                            "title": "Referrer address",
                            "description": "Referrer address.\n\nSame with {@link window.document.referrer} of client.",
                            "oneOf": [
                              {
                                "type": "null"
                              },
                              {
                                "type": "string",
                                "format": "uri"
                              },
                              {
                                "type": "string",
                                "maxLength": 0
                              }
                            ]
                          },
                          "ip": {
                            "title": "Connection IP Address",
                            "description": "Connection IP Address.",
                            "oneOf": [
                              {
                                "type": "string",
                                "format": "ipv4"
                              },
                              {
                                "type": "string",
                                "format": "ipv6"
                              }
                            ]
                          },
                          "created_at": {
                            "title": "Creation time of the connection record",
                            "description": "Creation time of the connection record.",
                            "type": "string",
                            "format": "date-time"
                          }
                        },
                        "required": [
                          "type",
                          "member",
                          "citizen",
                          "id",
                          "channel",
                          "external_user",
                          "href",
                          "referrer",
                          "ip",
                          "created_at"
                        ]
                      },
                      "coupon": {
                        "title": "Target coupon",
                        "description": "Discount coupon.\n\n`IShoppingCoupon` is an entity that symbolizes discount coupons at\na shopping mall.\n\nNote that, `IShoppingCoupon` only contains specification information\nabout discount coupons. Please keep in mind that this is a different\nconcept from {@link IShoppingCouponTicket}, which refers to the issuance\nof a discount coupon, or {@link IShoppingCouponTicketPayment}, which\nrefers to its payment.\n\nAdditionally, discount coupons are applied on an order-by-order basis,\nbut each has its own unique restrictions. For example, a coupon with\n{@link IShoppingCouponSellerCriteria} may or may not be used only for\n{@link IShoppingSale} of listings registered by the {@link IShoppingSeller}.\nAlso, there are restrictions such as\n{@link IShoppingCouponDiscount.threshold minimum amount restrictions} for\nusing discount coupons and\n{@link IShoppingCouponDiscount.limit maximum discount amount limits}.\n\nIn addition, you can set whether to issue discount coupons publicly or\ngive them only to people who know the specific issuing code. In addition,\nthere are restrictions such as issued discount coupons having an\n{@link IShoppingCouponRestriction.expired_at expiration date} or being\nissued only to customers who came in through a\n{@link IShoppingCouponFunnelCriteria specific funnel}.\n\nFor more information, please refer to the properties below and the\nsubsidiary entities described later.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "title": "Primary Key",
                            "description": "Primary Key.",
                            "type": "string",
                            "format": "uuid"
                          },
                          "designer": {
                            "title": "Designer who've made the coupon",
                            "description": "Designer who've made the coupon.",
                            "oneOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "title": "Primary Key",
                                    "description": "Primary Key.",
                                    "type": "string",
                                    "format": "uuid"
                                  },
                                  "created_at": {
                                    "title": "Creation time of record",
                                    "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up.",
                                    "type": "string",
                                    "format": "date-time"
                                  }
                                },
                                "required": [
                                  "id",
                                  "created_at"
                                ],
                                "description": "Administrator account.\n\n`IShoppingAdministrator` is an entity that embodies a person who manages\nthe shopping mall system, with {@link IShoppingMember membership} joining.\n\nFor reference, unlike {@link IShoppingCustomer customers} which can participate\neven without membership joining, administrator must join membership to operate\nmanagements. Also, administrator must perform the\n{@link IShoppingCitizen real-name and mobile authentication}, too."
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "title": "Primary Key",
                                    "description": "Primary Key.",
                                    "type": "string",
                                    "format": "uuid"
                                  },
                                  "created_at": {
                                    "title": "Creation tmie of record",
                                    "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up.",
                                    "type": "string",
                                    "format": "date-time"
                                  }
                                },
                                "required": [
                                  "id",
                                  "created_at"
                                ],
                                "description": "Seller information.\n\n`IShoppingSeller` is an entity that embodies a person who registers\n{@link IShoppingSale sales} to operate selling activities, with\n{@link IShoppingMember membership} joining.\n\nFor reference, unlike {@link IShoppingCustomer customers} which can\nparticipate even without membership joining, seller must join membership\nto operate sales. Also, seller must do the\n{@link IShoppingCitizen real-name and mobile authentication}, too."
                              }
                            ]
                          },
                          "inventory": {
                            "title": "Inventory information",
                            "description": "Inventory information of the coupon.\n\nIf a {@link IShoppingCoupon coupon} has been designed with limited\ninventory, this `IShoppingCouponInventory` structure represents the\nremaining inventory information.",
                            "type": "object",
                            "properties": {
                              "volume": {
                                "title": "Remaining volume for everyone",
                                "description": "Remaining volume for everyone.\n\nIf there is a limit to the quantity issued, it becomes impossible to\nissue tickets exceeding this value.\n\nIn other words, the concept of N coupons being issued on a first-come,\nfirst-served basis is created.",
                                "oneOf": [
                                  {
                                    "type": "null"
                                  },
                                  {
                                    "type": "integer"
                                  }
                                ]
                              },
                              "volume_per_citizen": {
                                "title": "Remaining volume per citizen",
                                "description": "Remaining volume per citizen.\n\nAs a limit to the total amount of issuance per person, it is common to\nassign 1 to limit duplicate issuance to the same citizen, or to use the\n`nul`` value to set no limit.\n\nOf course, by assigning a value of N, the total amount issued to the\nsame citizen can be limited.",
                                "oneOf": [
                                  {
                                    "type": "null"
                                  },
                                  {
                                    "type": "integer"
                                  }
                                ]
                              }
                            },
                            "required": [
                              "volume",
                              "volume_per_citizen"
                            ]
                          },
                          "criterias": {
                            "title": "List of criteria information",
                            "description": "List of criteria information.",
                            "type": "array",
                            "items": {
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "channels": {
                                      "title": "List of target channels and categories",
                                      "description": "List of target channels and categories.",
                                      "type": "array",
                                      "items": {
                                        "description": "Description of the current {@link IShoppingCouponChannelCriteria} type:\n\n> Conditions for channels of discount coupons.\n> \n> `ishoppingcouponchannelcriteria` is a subtype entity of\n> {@link IShoppingCouponCriteriaBase} and is used when setting conditions on\n> a specific {@link IShoppingChannel channel} or\n> {@link IShoppingChannelCategory category} of that channel.\n> \n> If the {@link direction} value is \"include\", the coupon can only be used\n> for the target channels (or categories). Conversely, if it is \"exclude\",\n> it is a coupon that cannot be used.",
                                        "type": "object",
                                        "properties": {
                                          "channel": {
                                            "title": "Target channel",
                                            "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future.",
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "title": "Primary Key",
                                                "description": "Primary Key.",
                                                "type": "string",
                                                "format": "uuid"
                                              },
                                              "created_at": {
                                                "title": "Creation time of record",
                                                "description": "Creation time of record.",
                                                "type": "string",
                                                "format": "date-time"
                                              },
                                              "code": {
                                                "title": "Identifier code",
                                                "description": "Identifier code.",
                                                "type": "string"
                                              },
                                              "name": {
                                                "title": "Name of the channel",
                                                "description": "Name of the channel.",
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "id",
                                              "created_at",
                                              "code",
                                              "name"
                                            ]
                                          },
                                          "categories": {
                                            "title": "List of target categories",
                                            "description": "List of target categories.",
                                            "oneOf": [
                                              {
                                                "type": "null"
                                              },
                                              {
                                                "type": "array",
                                                "items": {
                                                  "$ref": "#/$defs/IShoppingChannelCategory.IInvert"
                                                },
                                                "minItems": 1
                                              }
                                            ]
                                          }
                                        },
                                        "required": [
                                          "channel",
                                          "categories"
                                        ]
                                      },
                                      "minItems": 1
                                    },
                                    "type": {
                                      "title": "Descrimanator type",
                                      "description": "Descrimanator type.",
                                      "const": "channel"
                                    },
                                    "direction": {
                                      "title": "Direction of the criteria",
                                      "description": "Direction of the criteria.",
                                      "oneOf": [
                                        {
                                          "const": "include"
                                        },
                                        {
                                          "const": "exclude"
                                        }
                                      ]
                                    }
                                  },
                                  "required": [
                                    "channels",
                                    "type",
                                    "direction"
                                  ],
                                  "description": "Conditions for channels of discount coupons.\n\n`ishoppingcouponchannelcriteria` is a subtype entity of\n{@link IShoppingCouponCriteriaBase} and is used when setting conditions on\na specific {@link IShoppingChannel channel} or\n{@link IShoppingChannelCategory category} of that channel.\n\nIf the {@link direction} value is \"include\", the coupon can only be used\nfor the target channels (or categories). Conversely, if it is \"exclude\",\nit is a coupon that cannot be used."
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "sections": {
                                      "title": "Target sections to include or exclude",
                                      "description": "Target sections to include or exclude.",
                                      "type": "array",
                                      "items": {
                                        "description": "Section information.\n\n`IShoppingSection` is a concept that refers to the spatial information of\nthe market.\n\nIf we compare the section mentioned here to the offline market, it means a\nspatially separated area within the store, such as the \"fruit corner\" or\n\"butcher corner\". Therefore, in the {@link IShoppingSale sale} entity, it is\nnot possible to classify multiple sections simultaneously, but only one section\ncan be classified.\n\nBy the way, if your shopping mall system requires only one section, then just\nuse only one. This concept is designed to be expandable in the future.",
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "title": "Primary Key",
                                            "description": "Primary Key.",
                                            "type": "string",
                                            "format": "uuid"
                                          },
                                          "code": {
                                            "title": "Identifier code",
                                            "description": "Identifier code.",
                                            "type": "string"
                                          },
                                          "name": {
                                            "title": "Representative name of the section",
                                            "description": "Representative name of the section.",
                                            "type": "string"
                                          },
                                          "created_at": {
                                            "title": "Creation time of record",
                                            "description": "Creation time of record.",
                                            "type": "string",
                                            "format": "date-time"
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "code",
                                          "name",
                                          "created_at"
                                        ]
                                      },
                                      "minItems": 1
                                    },
                                    "type": {
                                      "title": "Descrimanator type",
                                      "description": "Descrimanator type.",
                                      "const": "section"
                                    },
                                    "direction": {
                                      "title": "Direction of the criteria",
                                      "description": "Direction of the criteria.",
                                      "oneOf": [
                                        {
                                          "const": "include"
                                        },
                                        {
                                          "const": "exclude"
                                        }
                                      ]
                                    }
                                  },
                                  "required": [
                                    "sections",
                                    "type",
                                    "direction"
                                  ],
                                  "description": "Conditions for sections of discount coupons.\n\n`IShoppingCouponSectionCriteria` is a subtype entity of\n{@link IShoppingCouponCriteriaBase} and is used when setting conditions\nfor a specific {@link IShoppingSection section}.\n\nIf the {@link direction} value is \"include\", the coupon can only be used\nfor the target {@link sections}. Conversely, if it is \"exclude\", the\ncoupon cannot be used."
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "sellers": {
                                      "title": "Target sellers to include or exclude",
                                      "description": "Target sellers to include or exclude.",
                                      "type": "array",
                                      "items": {
                                        "description": "Seller information.\n\n`IShoppingSeller` is an entity that embodies a person who registers\n{@link IShoppingSale sales} to operate selling activities, with\n{@link IShoppingMember membership} joining.\n\nFor reference, unlike {@link IShoppingCustomer customers} which can\nparticipate even without membership joining, seller must join membership\nto operate sales. Also, seller must do the\n{@link IShoppingCitizen real-name and mobile authentication}, too.",
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "title": "Primary Key",
                                            "description": "Primary Key.",
                                            "type": "string",
                                            "format": "uuid"
                                          },
                                          "created_at": {
                                            "title": "Creation tmie of record",
                                            "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up.",
                                            "type": "string",
                                            "format": "date-time"
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "created_at"
                                        ]
                                      },
                                      "minItems": 1
                                    },
                                    "type": {
                                      "title": "Descrimanator type",
                                      "description": "Descrimanator type.",
                                      "const": "seller"
                                    },
                                    "direction": {
                                      "title": "Direction of the criteria",
                                      "description": "Direction of the criteria.",
                                      "oneOf": [
                                        {
                                          "const": "include"
                                        },
                                        {
                                          "const": "exclude"
                                        }
                                      ]
                                    }
                                  },
                                  "required": [
                                    "sellers",
                                    "type",
                                    "direction"
                                  ],
                                  "description": "Conditions for sellers of discount coupons.\n\n`IShoppingCouponSellerCriteria` is a subtype entity of\n{@link IShoppingCouponCriteriaBase} and is used when setting conditions\nfor a specific {@link IShoppingSeller seller}.\n\nIf the {@link direction} value is \"include\", the coupon can only be used\nfor the target {@link sellers}. Conversely, if it is \"exclude\", the\ncoupon cannot be used."
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "sales": {
                                      "title": "Target sales to include or exclude",
                                      "description": "Target sales to include or exclude.",
                                      "type": "array",
                                      "items": {
                                        "description": "Summarized information of sale.\n\nThis summarized information being used for pagination.\n\n------------------------------\n\nDescription of the current {@link IShoppingSale.ISummary} type:\n\n> Summarized information of sale.\n> \n> This summarized information being used for pagination.\n\n------------------------------\n\nDescription of the parent {@link IShoppingSale} type:\n\n> Seller sales products.\n> \n> `IShoppingSale` is an entity that embodies \"product sales\" (sales)\n> information registered by the {@link ISoppingSeller seller}. And the main\n> information of the sale is recorded in the sub {@link IShoppingSaleSnapshot},\n> not in the main `IShoppingSale`. When a seller changes a previously registered\n> item, the existing `IShoppingSale` record is not changed, but a new\n> {@link IShoppingSaleSnapshot snapshot} record be created.\n> \n> This is to preserve the {@link IShoppingCustomer customer}'s\n> {@link IShoppingOrder purchase history} flawlessly after the customer\n> purchases a specific item, even if the seller changes the components or\n> price of the item. It is also intended to support sellers in so-called A/B\n> testing, which involves changing components or prices and measuring the\n> performance in each case.",
                                        "type": "object",
                                        "properties": {
                                          "section": {
                                            "title": "Belonged section",
                                            "description": "Section information.\n\n`IShoppingSection` is a concept that refers to the spatial information of\nthe market.\n\nIf we compare the section mentioned here to the offline market, it means a\nspatially separated area within the store, such as the \"fruit corner\" or\n\"butcher corner\". Therefore, in the {@link IShoppingSale sale} entity, it is\nnot possible to classify multiple sections simultaneously, but only one section\ncan be classified.\n\nBy the way, if your shopping mall system requires only one section, then just\nuse only one. This concept is designed to be expandable in the future.",
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "title": "Primary Key",
                                                "description": "Primary Key.",
                                                "type": "string",
                                                "format": "uuid"
                                              },
                                              "code": {
                                                "title": "Identifier code",
                                                "description": "Identifier code.",
                                                "type": "string"
                                              },
                                              "name": {
                                                "title": "Representative name of the section",
                                                "description": "Representative name of the section.",
                                                "type": "string"
                                              },
                                              "created_at": {
                                                "title": "Creation time of record",
                                                "description": "Creation time of record.",
                                                "type": "string",
                                                "format": "date-time"
                                              }
                                            },
                                            "required": [
                                              "id",
                                              "code",
                                              "name",
                                              "created_at"
                                            ]
                                          },
                                          "seller": {
                                            "title": "Seller who has registered the sale",
                                            "description": "Invert information starting from seller info.\n\nInstead of accessing to the seller information from the\n{@link IShoppingCustomer.member} -> {@link IShoppingMember.seller},\n`IShoppingSeller.IInvert` starts from the seller information\nand access to the customer, member and {@link IShoppingCitizen citizen}\ninformation inversely.\n\n------------------------------\n\nDescription of the current {@link IShoppingSeller.IInvert} type:\n\n> Invert information starting from seller info.\n> \n> Instead of accessing to the seller information from the\n> {@link IShoppingCustomer.member} -> {@link IShoppingMember.seller},\n> `IShoppingSeller.IInvert` starts from the seller information\n> and access to the customer, member and {@link IShoppingCitizen citizen}\n> information inversely.\n\n------------------------------\n\nDescription of the parent {@link IShoppingSeller} type:\n\n> Seller information.\n> \n> `IShoppingSeller` is an entity that embodies a person who registers\n> {@link IShoppingSale sales} to operate selling activities, with\n> {@link IShoppingMember membership} joining.\n> \n> For reference, unlike {@link IShoppingCustomer customers} which can\n> participate even without membership joining, seller must join membership\n> to operate sales. Also, seller must do the\n> {@link IShoppingCitizen real-name and mobile authentication}, too.",
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "title": "Discriminant for the type of customer",
                                                "description": "Discriminant for the type of customer.",
                                                "const": "seller"
                                              },
                                              "member": {
                                                "title": "Membership joining information",
                                                "description": "Invert information of member.\n\nThis invert member information has been designed to be used for another\ninvert information of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert}\n- {@link IShoppingAdministrator.IInvert}\n\n------------------------------\n\nDescription of the current {@link IShoppingMember.IInvert} type:\n\n> Invert information of member.\n> \n> This invert member information has been designed to be used for another\n> invert information of sellers and administrators like below.\n> \n> - {@link IShoppingSeller.IInvert}\n> - {@link IShoppingAdministrator.IInvert}\n\n------------------------------\n\nDescription of the parent {@link IShoppingMember} type:\n\n> Member Account.\n> \n> `IShoppingMember` is an entity that symbolizes the case when a\n> {@link IShoppingCustomer} signs up as a member of this shopping mall\n> system.\n> \n> If a `IShoppingMember` has seller or administrator property. it means that\n> the {@link IShoppingCustomer} has acting as a {@link IShoppingSeller seller}\n> or {@link IShoppingAdministrator administrator} at the same time.",
                                                "type": "object",
                                                "properties": {
                                                  "id": {
                                                    "title": "Primary Key",
                                                    "description": "Primary Key.",
                                                    "type": "string",
                                                    "format": "uuid"
                                                  },
                                                  "nickname": {
                                                    "title": "Nickname that uniquely identifies the member",
                                                    "description": "Nickname that uniquely identifies the member.",
                                                    "type": "string"
                                                  },
                                                  "emails": {
                                                    "title": "List of emails",
                                                    "description": "List of emails.",
                                                    "type": "array",
                                                    "items": {
                                                      "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one.",
                                                      "type": "object",
                                                      "properties": {
                                                        "id": {
                                                          "title": "Primary Key",
                                                          "description": "Primary Key.",
                                                          "type": "string",
                                                          "format": "uuid"
                                                        },
                                                        "value": {
                                                          "title": "Email address value",
                                                          "description": "Email address value.",
                                                          "type": "string",
                                                          "format": "email"
                                                        },
                                                        "created_at": {
                                                          "title": "Creation time of record",
                                                          "description": "Creation time of record.",
                                                          "type": "string",
                                                          "format": "date-time"
                                                        }
                                                      },
                                                      "required": [
                                                        "id",
                                                        "value",
                                                        "created_at"
                                                      ]
                                                    }
                                                  },
                                                  "created_at": {
                                                    "title": "Creation time of record",
                                                    "description": "Creation time of record.\n\nAnother words, the time when the member has signed up.",
                                                    "type": "string",
                                                    "format": "date-time"
                                                  }
                                                },
                                                "required": [
                                                  "id",
                                                  "nickname",
                                                  "emails",
                                                  "created_at"
                                                ]
                                              },
                                              "customer": {
                                                "title": "Customer, the connection information",
                                                "description": "Inverted customer informatino.\n\nThis inverted customer information has been designed to be used for\nanother invert information of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert}\n- {@link IShoppingAdministrator.IInvert}\n\n------------------------------\n\nDescription of the current {@link IShoppingCustomer.IInvert} type:\n\n> Inverted customer informatino.\n> \n> This inverted customer information has been designed to be used for\n> another invert information of sellers and administrators like below.\n> \n> - {@link IShoppingSeller.IInvert}\n> - {@link IShoppingAdministrator.IInvert}\n\n------------------------------\n\nDescription of the parent {@link IShoppingCustomer} type:\n\n> Customer information, but not a person but a connection basis.\n> \n> `IShoppingCustomer` is an entity that literally embodies the information of\n> those who participated in the market as customers. By the way, the\n> `IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\n> even if the same person connects to the shopping mall multiple, multiple\n> records are created in `IShoppingCustomer`.\n> \n> The first purpose of this is to track the customer's inflow path in detail,\n> and it is for cases where the same person enters as a non-member,\n> {@link IShoppingCartCommodity puts items in the shopping cart} in advance,\n> and only authenticates their {@link IShoppingCitizen real name} or\n> registers/logs in at the moment of {@link IShoppingOrderPublish payment}.\n> It is the second. Lastly, it is to accurately track the activities that\n> a person performs at the shopping mall in various ways like below.\n> \n> - Same person comes from an {@link IShoppingExternalUser external service}\n> - Same person creates multiple accounts\n> - Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n> - Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n> \n> Therefore, `IShoppingCustomer` can have multiple records with the same\n> {@link IShoppingCitizen}, {@link IShoppingMember}, and\n> {@link IShoppingExternalUser}. Additionally, if a customer signs up for\n> membership after verifying their real name or signs up for our service after\n> being a user of an external service, all related records are changed at once.\n> Therefore, identification and tracking of customers can be done very\n> systematically.",
                                                "type": "object",
                                                "properties": {
                                                  "id": {
                                                    "title": "Primary Key",
                                                    "description": "Primary Key.",
                                                    "type": "string",
                                                    "format": "uuid"
                                                  },
                                                  "channel": {
                                                    "title": "Belonged channel",
                                                    "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future.",
                                                    "type": "object",
                                                    "properties": {
                                                      "id": {
                                                        "title": "Primary Key",
                                                        "description": "Primary Key.",
                                                        "type": "string",
                                                        "format": "uuid"
                                                      },
                                                      "created_at": {
                                                        "title": "Creation time of record",
                                                        "description": "Creation time of record.",
                                                        "type": "string",
                                                        "format": "date-time"
                                                      },
                                                      "code": {
                                                        "title": "Identifier code",
                                                        "description": "Identifier code.",
                                                        "type": "string"
                                                      },
                                                      "name": {
                                                        "title": "Name of the channel",
                                                        "description": "Name of the channel.",
                                                        "type": "string"
                                                      }
                                                    },
                                                    "required": [
                                                      "id",
                                                      "created_at",
                                                      "code",
                                                      "name"
                                                    ]
                                                  },
                                                  "external_user": {
                                                    "title": "External user information",
                                                    "description": "External user information.\n\nWhen the customer has come frome an external service.",
                                                    "oneOf": [
                                                      {
                                                        "type": "null"
                                                      },
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "id": {
                                                            "title": "Primary Key",
                                                            "description": "Primary Key.",
                                                            "type": "string",
                                                            "format": "uuid"
                                                          },
                                                          "citizen": {
                                                            "title": "Citizen activation info",
                                                            "description": "Citizen activation info.",
                                                            "oneOf": [
                                                              {
                                                                "type": "null"
                                                              },
                                                              {
                                                                "type": "object",
                                                                "properties": {
                                                                  "id": {
                                                                    "title": "Primary Key",
                                                                    "description": "Primary Key.",
                                                                    "type": "string",
                                                                    "format": "uuid"
                                                                  },
                                                                  "created_at": {
                                                                    "title": "Creation time of record",
                                                                    "description": "Creation time of record.",
                                                                    "type": "string",
                                                                    "format": "date-time"
                                                                  },
                                                                  "mobile": {
                                                                    "title": "Mobile number",
                                                                    "description": "Mobile number.",
                                                                    "x-wrtn-payment-order-mobile": true,
                                                                    "type": "string",
                                                                    "pattern": "^[0-9]*$"
                                                                  },
                                                                  "name": {
                                                                    "title": "Real name, or equivalent nickname",
                                                                    "description": "Real name, or equivalent nickname.",
                                                                    "x-wrtn-payment-order-citizen": true,
                                                                    "type": "string"
                                                                  }
                                                                },
                                                                "required": [
                                                                  "id",
                                                                  "created_at",
                                                                  "mobile",
                                                                  "name"
                                                                ],
                                                                "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile} input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                                                              }
                                                            ]
                                                          },
                                                          "created_at": {
                                                            "title": "Creation time of record",
                                                            "description": "Creation time of record.\n\nAnother word, first time when the external user connected.",
                                                            "type": "string",
                                                            "format": "date-time"
                                                          },
                                                          "uid": {
                                                            "title": "Identifier key of external user from the external system",
                                                            "description": "Identifier key of external user from the external system.",
                                                            "type": "string"
                                                          },
                                                          "application": {
                                                            "title": "Identifier code of the external service",
                                                            "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code} in common.",
                                                            "type": "string"
                                                          },
                                                          "nickname": {
                                                            "title": "Nickname of external user in the external system",
                                                            "description": "Nickname of external user in the external system.",
                                                            "type": "string"
                                                          },
                                                          "data": {
                                                            "description": "Additional information about external user from the external\nsystem."
                                                          }
                                                        },
                                                        "required": [
                                                          "id",
                                                          "citizen",
                                                          "created_at",
                                                          "uid",
                                                          "application",
                                                          "nickname",
                                                          "data"
                                                        ],
                                                        "description": "External user information.\n\n`IShoppingExternalUser` is an entity dsigned for when this system needs\nto connect with external services and welcome their users as\n{@link IShoppingCustomer customers} of this service.\n\nFor reference, customers who connect from an external service must have\nthis record, and the external service user is identified through the two\nattributes {@link application} and {@link uid}. If a customer connected\nfrom an external service completes\n{@link IShoppingCitizen real-name authentication} from this service, each\ntime the external service user reconnects to this service and issues a\nnew customer authentication token, real-name authentication begins with\ncompleted.\n\nAnd {@link password} is the password issued to the user by the external\nservice system (the so-called permanent user authentication token), and\nis never the actual user password. However, for customers who entered the\nsame application and uid as the current external system user, this is to\ndetermine whether to view this as a correct external system user or a\nviolation.\n\nIn addition, additional information received from external services can\nbe recorded in the data field in JSON format."
                                                      }
                                                    ]
                                                  },
                                                  "href": {
                                                    "title": "Connection address",
                                                    "description": "Connection address.\n\nSame with {@link window.location.href} of client.",
                                                    "type": "string",
                                                    "format": "uri"
                                                  },
                                                  "referrer": {
                                                    "title": "Referrer address",
                                                    "description": "Referrer address.\n\nSame with {@link window.document.referrer} of client.",
                                                    "oneOf": [
                                                      {
                                                        "type": "null"
                                                      },
                                                      {
                                                        "type": "string",
                                                        "format": "uri"
                                                      },
                                                      {
                                                        "type": "string",
                                                        "maxLength": 0
                                                      }
                                                    ]
                                                  },
                                                  "ip": {
                                                    "title": "Connection IP Address",
                                                    "description": "Connection IP Address.",
                                                    "oneOf": [
                                                      {
                                                        "type": "string",
                                                        "format": "ipv4"
                                                      },
                                                      {
                                                        "type": "string",
                                                        "format": "ipv6"
                                                      }
                                                    ]
                                                  },
                                                  "created_at": {
                                                    "title": "Creation time of the connection record",
                                                    "description": "Creation time of the connection record.",
                                                    "type": "string",
                                                    "format": "date-time"
                                                  }
                                                },
                                                "required": [
                                                  "id",
                                                  "channel",
                                                  "external_user",
                                                  "href",
                                                  "referrer",
                                                  "ip",
                                                  "created_at"
                                                ]
                                              },
                                              "citizen": {
                                                "title": "Real-name and mobile number authentication information",
                                                "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile} input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored.",
                                                "type": "object",
                                                "properties": {
                                                  "id": {
                                                    "title": "Primary Key",
                                                    "description": "Primary Key.",
                                                    "type": "string",
                                                    "format": "uuid"
                                                  },
                                                  "created_at": {
                                                    "title": "Creation time of record",
                                                    "description": "Creation time of record.",
                                                    "type": "string",
                                                    "format": "date-time"
                                                  },
                                                  "mobile": {
                                                    "title": "Mobile number",
                                                    "description": "Mobile number.",
                                                    "x-wrtn-payment-order-mobile": true,
                                                    "type": "string",
                                                    "pattern": "^[0-9]*$"
                                                  },
                                                  "name": {
                                                    "title": "Real name, or equivalent nickname",
                                                    "description": "Real name, or equivalent nickname.",
                                                    "x-wrtn-payment-order-citizen": true,
                                                    "type": "string"
                                                  }
                                                },
                                                "required": [
                                                  "id",
                                                  "created_at",
                                                  "mobile",
                                                  "name"
                                                ]
                                              },
                                              "id": {
                                                "title": "Primary Key",
                                                "description": "Primary Key.",
                                                "type": "string",
                                                "format": "uuid"
                                              },
                                              "created_at": {
                                                "title": "Creation tmie of record",
                                                "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up.",
                                                "type": "string",
                                                "format": "date-time"
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "member",
                                              "customer",
                                              "citizen",
                                              "id",
                                              "created_at"
                                            ]
                                          },
                                          "price_range": {
                                            "title": "Price range of the unit",
                                            "type": "object",
                                            "properties": {
                                              "lowest": {
                                                "description": "Shopping price interface.",
                                                "type": "object",
                                                "properties": {
                                                  "nominal": {
                                                    "title": "Nominal price",
                                                    "description": "Nominal price.\n\nThis is not {@link real real price} to pay, but just a nominal price to show.\nIf this value is greater than the {@link real real price}, it would be shown\nlike {@link IShoppingSeller seller} is giving a discount.",
                                                    "type": "number",
                                                    "minimum": 0
                                                  },
                                                  "real": {
                                                    "title": "Real price to pay",
                                                    "description": "Real price to pay.",
                                                    "type": "number",
                                                    "minimum": 0
                                                  }
                                                },
                                                "required": [
                                                  "nominal",
                                                  "real"
                                                ]
                                              },
                                              "highest": {
                                                "description": "Shopping price interface.",
                                                "type": "object",
                                                "properties": {
                                                  "nominal": {
                                                    "title": "Nominal price",
                                                    "description": "Nominal price.\n\nThis is not {@link real real price} to pay, but just a nominal price to show.\nIf this value is greater than the {@link real real price}, it would be shown\nlike {@link IShoppingSeller seller} is giving a discount.",
                                                    "type": "number",
                                                    "minimum": 0
                                                  },
                                                  "real": {
                                                    "title": "Real price to pay",
                                                    "description": "Real price to pay.",
                                                    "type": "number",
                                                    "minimum": 0
                                                  }
                                                },
                                                "required": [
                                                  "nominal",
                                                  "real"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "lowest",
                                              "highest"
                                            ]
                                          },
                                          "id": {
                                            "title": "Primary Key of Sale",
                                            "description": "Primary Key of Sale.",
                                            "type": "string",
                                            "format": "uuid"
                                          },
                                          "snapshot_id": {
                                            "title": "Primary Key of Snapshot",
                                            "description": "Primary Key of Snapshot.",
                                            "type": "string",
                                            "format": "uuid"
                                          },
                                          "latest": {
                                            "title": "Whether the snapshot is the latest one or not",
                                            "description": "Whether the snapshot is the latest one or not.",
                                            "type": "boolean"
                                          },
                                          "content": {
                                            "title": "Description and image content describing the sale",
                                            "description": "Description of the current {@link IShoppingSaleContent} type:\n\n> Content information of sale snapshot.\n> \n> `IShoppingSaleContent` is an entity embodies the description contents\n> of {@link IShoppingSale}.",
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "type": "string",
                                                "format": "uuid"
                                              },
                                              "title": {
                                                "type": "string"
                                              },
                                              "thumbnails": {
                                                "type": "array",
                                                "items": {
                                                  "description": "Attachment File.\n\nEvery attachment files that are managed in current system.\n\nFor reference, it is possible to omit one of file {@link name}\nor {@link extension} like `.gitignore` or `README` case, but not\npossible to omit both of them.",
                                                  "type": "object",
                                                  "properties": {
                                                    "id": {
                                                      "title": "Primary Key",
                                                      "description": "Primary Key.",
                                                      "type": "string",
                                                      "format": "uuid"
                                                    },
                                                    "created_at": {
                                                      "title": "Creation time of attachment file",
                                                      "description": "Creation time of attachment file.",
                                                      "type": "string",
                                                      "format": "date-time"
                                                    },
                                                    "name": {
                                                      "title": "File name, except extension",
                                                      "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string.",
                                                      "type": "string",
                                                      "maxLength": 255
                                                    },
                                                    "extension": {
                                                      "title": "Extension",
                                                      "description": "Extension.\n\nPossible to omit like `README` case.",
                                                      "oneOf": [
                                                        {
                                                          "type": "null"
                                                        },
                                                        {
                                                          "type": "string",
                                                          "minLength": 1,
                                                          "maxLength": 8
                                                        }
                                                      ]
                                                    },
                                                    "url": {
                                                      "title": "URL path of the real file",
                                                      "description": "URL path of the real file.",
                                                      "type": "string",
                                                      "format": "uri",
                                                      "contentMediaType": "image/*"
                                                    }
                                                  },
                                                  "required": [
                                                    "id",
                                                    "created_at",
                                                    "name",
                                                    "extension",
                                                    "url"
                                                  ]
                                                }
                                              }
                                            },
                                            "required": [
                                              "id",
                                              "title",
                                              "thumbnails"
                                            ]
                                          },
                                          "channels": {
                                            "title": "List of channels and categories",
                                            "description": "List of channels and categories.\n\nWhich channels and categories the sale is registered to.",
                                            "type": "array",
                                            "items": {
                                              "description": "Target channel (and categories) of sale to sell.\n\n`IShoppingSaleChannel` is an entity that expresses through which\n{@link IShoppingChannel channel} a listing {@link IShoppingSale} is sold.\n\nAlso, if {@link IShoppingChannelCategory categories} are specified, it also\nmeans that the sale be sold. Otherwise, none of the categories of the channel\nbeing specified, it means that every categories of the channel is listing the\ntarget sale.",
                                              "type": "object",
                                              "properties": {
                                                "categories": {
                                                  "title": "List of categories of the channel listing the sale",
                                                  "description": "List of categories of the channel listing the sale.\n\nIf empty, it means all categories of the channel is listing the sale.",
                                                  "type": "array",
                                                  "items": {
                                                    "$ref": "#/$defs/IShoppingChannelCategory.IInvert"
                                                  }
                                                },
                                                "id": {
                                                  "title": "Primary Key",
                                                  "description": "Primary Key.",
                                                  "type": "string",
                                                  "format": "uuid"
                                                },
                                                "created_at": {
                                                  "title": "Creation time of record",
                                                  "description": "Creation time of record.",
                                                  "type": "string",
                                                  "format": "date-time"
                                                },
                                                "code": {
                                                  "title": "Identifier code",
                                                  "description": "Identifier code.",
                                                  "type": "string"
                                                },
                                                "name": {
                                                  "title": "Name of the channel",
                                                  "description": "Name of the channel.",
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "categories",
                                                "id",
                                                "created_at",
                                                "code",
                                                "name"
                                              ]
                                            },
                                            "minItems": 1
                                          },
                                          "tags": {
                                            "title": "List of search tags",
                                            "description": "List of search tags.",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "units": {
                                            "title": "List of units",
                                            "description": "List of units.\n\nRecords about individual product composition information that are sold\nin the sale. Each {@link IShoppingSaleUnit unit} record has configurable\n{@link IShoppingSaleUnitOption options},\n{@link IShoppingSaleUnitOptionCandidate candidate} values for each\noption, and {@link IShoppingSaleUnitStock final stocks} determined by\nselecting every candidate values of each option.",
                                            "type": "array",
                                            "items": {
                                              "description": "Description of the current {@link IShoppingSaleUnit} type:\n\n> Product composition information handled in the sale.\n> \n> `IShoppingSaleUnit` is an entity that embodies the \"individual product\"\n> information handled in the {@link IShoppingSale sale}.\n> \n> For reference, the reason why `IShoppingSaleUnit` is separated from\n> {@link IShoppingSaleSnapshot} by an algebraic relationship of 1: N is because\n> there are some cases where multiple products are sold in one listing. This is\n> the case with so-called \"bundled products\".\n> \n> - Bundle from regular product (Mackbook Set)\n>   - Main Body\n>   - Keyboard\n>   - Mouse\n>   - Apple Care (Free A/S Voucher)\n> \n> And again, `IShoppingSaleUnit` does not in itself refer to the\n> {@link IShoppingSaleUnitStock final stock} that the\n> {@link IShoppingCustomer customer} will {@link IShoppingOrder purchase}.\n> The final stock can be found only after selecting all given\n> {@link IShoppingSaleUnitOption options} and their\n> {@link IShoppingSaleUnitOptionCandidate candidate values}.\n> \n> For example, even if you buy a Macbook, the final stocks are determined only\n> after selecting all the options (CPU / RAM / SSD), etc.",
                                              "type": "object",
                                              "properties": {
                                                "price_range": {
                                                  "type": "object",
                                                  "properties": {
                                                    "lowest": {
                                                      "description": "Shopping price interface.",
                                                      "type": "object",
                                                      "properties": {
                                                        "nominal": {
                                                          "title": "Nominal price",
                                                          "description": "Nominal price.\n\nThis is not {@link real real price} to pay, but just a nominal price to show.\nIf this value is greater than the {@link real real price}, it would be shown\nlike {@link IShoppingSeller seller} is giving a discount.",
                                                          "type": "number",
                                                          "minimum": 0
                                                        },
                                                        "real": {
                                                          "title": "Real price to pay",
                                                          "description": "Real price to pay.",
                                                          "type": "number",
                                                          "minimum": 0
                                                        }
                                                      },
                                                      "required": [
                                                        "nominal",
                                                        "real"
                                                      ]
                                                    },
                                                    "highest": {
                                                      "description": "Shopping price interface.",
                                                      "type": "object",
                                                      "properties": {
                                                        "nominal": {
                                                          "title": "Nominal price",
                                                          "description": "Nominal price.\n\nThis is not {@link real real price} to pay, but just a nominal price to show.\nIf this value is greater than the {@link real real price}, it would be shown\nlike {@link IShoppingSeller seller} is giving a discount.",
                                                          "type": "number",
                                                          "minimum": 0
                                                        },
                                                        "real": {
                                                          "title": "Real price to pay",
                                                          "description": "Real price to pay.",
                                                          "type": "number",
                                                          "minimum": 0
                                                        }
                                                      },
                                                      "required": [
                                                        "nominal",
                                                        "real"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "lowest",
                                                    "highest"
                                                  ]
                                                },
                                                "id": {
                                                  "title": "Primary Key",
                                                  "description": "Primary Key.",
                                                  "type": "string",
                                                  "format": "uuid"
                                                },
                                                "name": {
                                                  "title": "Representative name of the unit",
                                                  "description": "Representative name of the unit.",
                                                  "type": "string"
                                                },
                                                "primary": {
                                                  "title": "Whether the unit is primary or not",
                                                  "description": "Whether the unit is primary or not.\n\nJust a labeling value.",
                                                  "type": "boolean"
                                                },
                                                "required": {
                                                  "title": "Whether the unit is required or not",
                                                  "description": "Whether the unit is required or not.\n\nWhen the unit is required, the customer must select the unit. If do not\nselect, customer can't buy it.\n\nFor example, if there's a sale \"Macbook Set\" and one of the unit is the\n\"Main Body\", is it possible to buy the \"Macbook Set\" without the\n\"Main Body\" unit? This property is for that case.",
                                                  "type": "boolean"
                                                }
                                              },
                                              "required": [
                                                "price_range",
                                                "id",
                                                "name",
                                                "primary",
                                                "required"
                                              ]
                                            },
                                            "minItems": 1
                                          },
                                          "created_at": {
                                            "title": "Creation time of the record",
                                            "description": "Creation time of the record.\n\nNote that, this property is different with {@link opened_at},\nwhich means the timepoint of the sale is opened.",
                                            "type": "string",
                                            "format": "date-time"
                                          },
                                          "updated_at": {
                                            "title": "Last updated time of the record",
                                            "description": "Last updated time of the record.\n\nIn another words, creation time of the last snapshot.",
                                            "type": "string",
                                            "format": "date-time"
                                          },
                                          "paused_at": {
                                            "title": "Paused time of the sale",
                                            "description": "Paused time of the sale.\n\nThe sale is paused by the seller, for some reason.\n\n{@link IShoppingCustomer Customers} can still see the sale on the\nboth list and detail pages, but the sale has a warning label\n\"The sale is paused by the seller\".",
                                            "oneOf": [
                                              {
                                                "type": "null"
                                              },
                                              {
                                                "type": "string",
                                                "format": "date-time"
                                              }
                                            ]
                                          },
                                          "suspended_at": {
                                            "title": "Suspended time of the sale",
                                            "description": "Suspended time of the sale.\n\nThe sale is suspended by the seller, for some reason.\n\n{@link IShoppingCustomer Customers} cannot see the sale on the\nboth list and detail pages. It is almost same with soft delettion,\nbut there's a little bit difference that the owner\n{@link IShoppingSeller seller} can still see the sale and resume it.\n\nOf course, the {@link IShoppingCustomer customers} who have\nalready purchased the sale can still see the sale on the\n{@link IShoppingOrder order} page.",
                                            "oneOf": [
                                              {
                                                "type": "null"
                                              },
                                              {
                                                "type": "string",
                                                "format": "date-time"
                                              }
                                            ]
                                          },
                                          "opened_at": {
                                            "title": "Opening time of the sale",
                                            "description": "Opening time of the sale.",
                                            "oneOf": [
                                              {
                                                "type": "null"
                                              },
                                              {
                                                "type": "string",
                                                "format": "date-time"
                                              }
                                            ]
                                          },
                                          "closed_at": {
                                            "title": "Closing time of the sale",
                                            "description": "Closing time of the sale.\n\nIf this value is `null`, the sale be continued forever.",
                                            "oneOf": [
                                              {
                                                "type": "null"
                                              },
                                              {
                                                "type": "string",
                                                "format": "date-time"
                                              }
                                            ]
                                          }
                                        },
                                        "required": [
                                          "section",
                                          "seller",
                                          "price_range",
                                          "id",
                                          "snapshot_id",
                                          "latest",
                                          "content",
                                          "channels",
                                          "tags",
                                          "units",
                                          "created_at",
                                          "updated_at",
                                          "paused_at",
                                          "suspended_at",
                                          "opened_at",
                                          "closed_at"
                                        ]
                                      },
                                      "minItems": 1
                                    },
                                    "type": {
                                      "title": "Descrimanator type",
                                      "description": "Descrimanator type.",
                                      "const": "sale"
                                    },
                                    "direction": {
                                      "title": "Direction of the criteria",
                                      "description": "Direction of the criteria.",
                                      "oneOf": [
                                        {
                                          "const": "include"
                                        },
                                        {
                                          "const": "exclude"
                                        }
                                      ]
                                    }
                                  },
                                  "required": [
                                    "sales",
                                    "type",
                                    "direction"
                                  ],
                                  "description": "Conditions for sales of discount coupons.\n\n`IShoppingCouponSaleCriteria` is a subtype entity of\n{@link IShoppingCouponCriteriaBase} and is used when setting conditions\nfor a specific {@link IShoppingSale sale}.\n\nIf the {@link direction} value is \"include\", the coupon can only be used\nfor the target {@link sales}. Conversely, if it is \"exclude\", the\ncoupon cannot be used."
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "funnels": {
                                      "title": "List of target funnels",
                                      "description": "List of target funnels.",
                                      "type": "array",
                                      "items": {
                                        "oneOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "kind": {
                                                "title": "Kind of funnel restriction",
                                                "description": "Kind of funnel restriction.",
                                                "oneOf": [
                                                  {
                                                    "const": "url"
                                                  },
                                                  {
                                                    "const": "referrer"
                                                  }
                                                ]
                                              },
                                              "value": {
                                                "title": "Target value",
                                                "description": "Target value.",
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "kind",
                                              "value"
                                            ],
                                            "description": "Kind of funnel restriction by a value.\n\n------------------------------\n\nDescription of the current {@link IShoppingCouponFunnelCriteria.IValueFunnel} type:\n\n> Kind of funnel restriction by a value.\n\n------------------------------\n\nDescription of the parent {@link IShoppingCouponFunnelCriteria} type:\n\n> Limit the funnel of discount coupons.\n> \n> `ishoppingcouponfunnelcriteria` is a subtype entity of\n> {@link IShoppingCouponCriteria}, and is used when you want to issue or\n> exclude discount coupons only to {@link IShoppingCustomer customers} who\n> came from a specific path.\n> \n> And funnel restrictions are possible in 3 ways: The first is\n> {@link IShoppingCustomer.referrer}, and by parsing\n> {@link IShoppingCustomer.href}, which records the customer's access\n> address, restrictions can be made in units of specific URLs or variables."
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "kind": {
                                                "title": "Kind of funnel restriction",
                                                "description": "Kind of funnel restriction.",
                                                "const": "variable"
                                              },
                                              "key": {
                                                "title": "Target variable's key",
                                                "description": "Target variable's key.",
                                                "type": "string"
                                              },
                                              "value": {
                                                "title": "Target variable's value",
                                                "description": "Target variable's value.",
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "kind",
                                              "key",
                                              "value"
                                            ],
                                            "description": "Kind of funnel restriction by a variable.\n\n------------------------------\n\nDescription of the current {@link IShoppingCouponFunnelCriteria.IVariableFunnel} type:\n\n> Kind of funnel restriction by a variable.\n\n------------------------------\n\nDescription of the parent {@link IShoppingCouponFunnelCriteria} type:\n\n> Limit the funnel of discount coupons.\n> \n> `ishoppingcouponfunnelcriteria` is a subtype entity of\n> {@link IShoppingCouponCriteria}, and is used when you want to issue or\n> exclude discount coupons only to {@link IShoppingCustomer customers} who\n> came from a specific path.\n> \n> And funnel restrictions are possible in 3 ways: The first is\n> {@link IShoppingCustomer.referrer}, and by parsing\n> {@link IShoppingCustomer.href}, which records the customer's access\n> address, restrictions can be made in units of specific URLs or variables."
                                          }
                                        ]
                                      },
                                      "minItems": 1
                                    },
                                    "type": {
                                      "title": "Descrimanator type",
                                      "description": "Descrimanator type.",
                                      "const": "funnel"
                                    },
                                    "direction": {
                                      "title": "Direction of the criteria",
                                      "description": "Direction of the criteria.",
                                      "oneOf": [
                                        {
                                          "const": "include"
                                        },
                                        {
                                          "const": "exclude"
                                        }
                                      ]
                                    }
                                  },
                                  "required": [
                                    "funnels",
                                    "type",
                                    "direction"
                                  ],
                                  "description": "Limit the funnel of discount coupons.\n\n`ishoppingcouponfunnelcriteria` is a subtype entity of\n{@link IShoppingCouponCriteria}, and is used when you want to issue or\nexclude discount coupons only to {@link IShoppingCustomer customers} who\ncame from a specific path.\n\nAnd funnel restrictions are possible in 3 ways: The first is\n{@link IShoppingCustomer.referrer}, and by parsing\n{@link IShoppingCustomer.href}, which records the customer's access\naddress, restrictions can be made in units of specific URLs or variables."
                                }
                              ]
                            }
                          },
                          "discount": {
                            "title": "Discount information",
                            "description": "Discount information.",
                            "oneOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "unit": {
                                    "title": "Discount unit as amount",
                                    "description": "Discount unit as amount.\n\nIt means the order price would be discounted by the amount value.",
                                    "const": "amount"
                                  },
                                  "value": {
                                    "title": "Discount value as amount",
                                    "description": "Discount value as amount.",
                                    "type": "number"
                                  },
                                  "threshold": {
                                    "title": "Minimum purchase amount for discount",
                                    "description": "Minimum purchase amount for discount.\n\nWhen setting this value, discount coupons cannot be applied to\norder totals that are less than this value.",
                                    "oneOf": [
                                      {
                                        "type": "null"
                                      },
                                      {
                                        "type": "number",
                                        "minimum": 0
                                      }
                                    ]
                                  },
                                  "limit": {
                                    "title": "Maximum amount available for discount",
                                    "description": "Maximum amount available for discount.\n\nWhen this value is set, no further discount will be given no\nmatter how much you order. This property would be meaningful\nonly when the {@link multiplicative} is `true`.",
                                    "oneOf": [
                                      {
                                        "type": "null"
                                      },
                                      {
                                        "type": "number",
                                        "exclusiveMinimum": true,
                                        "minimum": 0
                                      }
                                    ]
                                  },
                                  "multiplicative": {
                                    "title": "Multiplicative or not",
                                    "description": "Multiplicative or not.\n\nIf this property is `true`, the discount value would be multiplied\nto the {@link IShoppingCartCommodity.volume} or\n{@link IShoppingOrderGood.volume} value. Also, in that case,\nthe {@link limit} property would be meaningful.",
                                    "type": "boolean"
                                  }
                                },
                                "required": [
                                  "unit",
                                  "value",
                                  "threshold",
                                  "limit",
                                  "multiplicative"
                                ],
                                "description": "Discount information with amount unit.\n\n------------------------------\n\nDescription of the current {@link IShoppingCouponDiscount.IAmount} type:\n\n> Discount information with amount unit."
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "unit": {
                                    "title": "Discount unit as percent",
                                    "description": "Discount unit as percent.\n\nIt means the order price would be discounted by the percent value.",
                                    "const": "percent"
                                  },
                                  "value": {
                                    "title": "Discount value as percent",
                                    "description": "Discount value as percent.",
                                    "type": "number",
                                    "minimum": 0,
                                    "maximum": 100
                                  },
                                  "threshold": {
                                    "title": "Minimum purchase amount for discount",
                                    "description": "Minimum purchase amount for discount.\n\nWhen setting this value, discount coupons cannot be applied to\norder totals that are less than this value.",
                                    "oneOf": [
                                      {
                                        "type": "null"
                                      },
                                      {
                                        "type": "number",
                                        "minimum": 0
                                      }
                                    ]
                                  },
                                  "limit": {
                                    "title": "Maximum amount available for discount",
                                    "description": "Maximum amount available for discount.\n\nWhen this value is set, no further discount will be given no\nmatter how much you order.",
                                    "oneOf": [
                                      {
                                        "type": "null"
                                      },
                                      {
                                        "type": "number",
                                        "exclusiveMinimum": true,
                                        "minimum": 0
                                      }
                                    ]
                                  }
                                },
                                "required": [
                                  "unit",
                                  "value",
                                  "threshold",
                                  "limit"
                                ],
                                "description": "Discount information with percent unit.\n\n------------------------------\n\nDescription of the current {@link IShoppingCouponDiscount.IPercent} type:\n\n> Discount information with percent unit."
                              }
                            ]
                          },
                          "restriction": {
                            "title": "Restriction information",
                            "description": "Restriction information of the coupon.",
                            "type": "object",
                            "properties": {
                              "access": {
                                "title": "Access level of coupon",
                                "description": "Access level of coupon.\n\n- public: possible to find from public API\n- private: unable to find from public API\n  - arbitrarily assigned by the seller or administrator\n  - issued from one-time link",
                                "oneOf": [
                                  {
                                    "const": "public"
                                  },
                                  {
                                    "const": "private"
                                  }
                                ]
                              },
                              "exclusive": {
                                "title": "Exclusivity or not",
                                "description": "Exclusivity or not.\n\nAn exclusive discount coupon refers to a discount coupon that has an\nexclusive relationship with other discount coupons and can only be\nused alone. That is, when an exclusive discount coupon is used, no\nother discount coupon can be used for the same\n{@link IShoppingOrder order} or {@link IShoppingOrderGood good}.\n\nPlease note that this exclusive attribute is a very different concept\nfrom multiplicative, which means whether the same coupon can be\nmultiplied and applied to multiple coupons of the same order, so\nplease do not confuse them.",
                                "type": "boolean"
                              },
                              "volume": {
                                "title": "Limited quantity issued",
                                "description": "Limited quantity issued.\n\nIf there is a limit to the quantity issued, it becomes impossible to issue tickets exceeding this value.\n\nIn other words, the concept of N coupons being issued on a first-come, first-served basis is created.",
                                "oneOf": [
                                  {
                                    "type": "null"
                                  },
                                  {
                                    "type": "integer"
                                  }
                                ]
                              },
                              "volume_per_citizen": {
                                "title": "Limited quantity issued per person",
                                "description": "Limited quantity issued per person.\n\nAs a limit to the total amount of issuance per person, it is common to assign 1 to limit duplicate issuance to the same citizen, or to use the NULL value to set no limit.\n\nOf course, by assigning a value of N, the total amount issued to the same citizen can be limited.",
                                "oneOf": [
                                  {
                                    "type": "null"
                                  },
                                  {
                                    "type": "integer"
                                  }
                                ]
                              },
                              "expired_in": {
                                "title": "Expiration day(s) value",
                                "description": "Expiration day(s) value.\n\nThe concept of expiring N days after a discount coupon ticket is issued.\n\nTherefore, customers must use the ticket within N days, if possible, from the time it is issued.",
                                "oneOf": [
                                  {
                                    "type": "null"
                                  },
                                  {
                                    "type": "integer"
                                  }
                                ]
                              },
                              "expired_at": {
                                "title": "Expiration date",
                                "description": "Expiration date.\n\nA concept that expires after YYYY-MM-DD after a discount coupon ticket is issued.\n\nDouble restrictions are possible with expired_in, of which the one with the shorter expiration date is used.",
                                "oneOf": [
                                  {
                                    "type": "null"
                                  },
                                  {
                                    "type": "string",
                                    "format": "date-time"
                                  }
                                ]
                              }
                            },
                            "required": [
                              "access",
                              "exclusive",
                              "volume",
                              "volume_per_citizen",
                              "expired_in",
                              "expired_at"
                            ]
                          },
                          "name": {
                            "title": "Representative name of the coupon",
                            "description": "Representative name of the coupon.",
                            "type": "string"
                          },
                          "opened_at": {
                            "title": "Opening time of the coupon",
                            "description": "Opening time of the coupon.",
                            "oneOf": [
                              {
                                "type": "null"
                              },
                              {
                                "type": "string",
                                "format": "date-time"
                              }
                            ]
                          },
                          "closed_at": {
                            "title": "Closing time of the coupon",
                            "description": "Closing time of the coupon.\n\nTickets cannot be issued after this time.\n\nHowever, previously issued tickets can still be used until their\nexpiration date.",
                            "oneOf": [
                              {
                                "type": "null"
                              },
                              {
                                "type": "string",
                                "format": "date-time"
                              }
                            ]
                          },
                          "created_at": {
                            "title": "Creation tie of the record",
                            "description": "Creation tie of the record.",
                            "type": "string",
                            "format": "date-time"
                          }
                        },
                        "required": [
                          "id",
                          "designer",
                          "inventory",
                          "criterias",
                          "discount",
                          "restriction",
                          "name",
                          "opened_at",
                          "closed_at",
                          "created_at"
                        ]
                      },
                      "created_at": {
                        "title": "Creation time of the record",
                        "description": "Creation time of the record.",
                        "type": "string",
                        "format": "date-time"
                      },
                      "expired_at": {
                        "title": "Expiration time of the ticket",
                        "description": "Expiration time of the ticket.",
                        "oneOf": [
                          {
                            "type": "null"
                          },
                          {
                            "type": "string",
                            "format": "date-time"
                          }
                        ]
                      }
                    },
                    "required": [
                      "id",
                      "customer",
                      "coupon",
                      "created_at",
                      "expired_at"
                    ]
                  },
                  "created_at": {
                    "title": "Creation time of the record",
                    "description": "Creation time of the record.",
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "required": [
                  "id",
                  "ticket",
                  "created_at"
                ]
              }
            },
            "cash": {
              "title": "Amount of the cash payment",
              "description": "Amount of the cash payment.",
              "x-wrtn-payment-price": true,
              "type": "number",
              "minimum": 0
            },
            "deposit": {
              "title": "Amount of the deposit payment",
              "description": "Amount of the deposit payment.",
              "type": "number",
              "minimum": 0
            },
            "mileage": {
              "title": "Amount of the mileage payment",
              "description": "Amount of the mileage payment.",
              "type": "number",
              "minimum": 0
            },
            "ticket": {
              "title": "Amount of the discount coupon ticket payment",
              "description": "Amount of the discount coupon ticket payment.",
              "type": "number",
              "minimum": 0
            },
            "nominal": {
              "title": "Nominal price",
              "description": "Nominal price.\n\nThis is not {@link real real price} to pay, but just a nominal price to show.\nIf this value is greater than the {@link real real price}, it would be shown\nlike {@link IShoppingSeller seller} is giving a discount.",
              "type": "number",
              "minimum": 0
            },
            "real": {
              "title": "Real price to pay",
              "description": "Real price to pay.",
              "type": "number",
              "minimum": 0
            }
          },
          "required": [
            "ticket_payments",
            "cash",
            "deposit",
            "mileage",
            "ticket",
            "nominal",
            "real"
          ]
        },
        "publish": {
          "title": "Order completion and payment information",
          "description": "Order completion and payment information.",
          "oneOf": [
            {
              "type": "null"
            },
            {
              "type": "object",
              "properties": {
                "deliveries": {
                  "title": "List of deliveries",
                  "description": "List of deliveries.\n\nAn {@link IShoppingOrder order} can be delivered in multiple times.\nOf course, the opposite case is also possible, that a\n{@link IShoppingDelivery delivery} can be composed of multiple orders.",
                  "type": "array",
                  "items": {
                    "description": "Delivery information.\n\nWhen delivering {@link IShoppingOrderGood goods} to\n{@link IShoppingCustomer customer}, {@link IShoppingSeller seller} can deliver\nmultiple {@link IShoppingSaleUnitStock stocks}, goods at once. Also, it is\npossible to deliver a stock or good in multiple times due to physical restriction\nlike volume or weight problem.\n\nAs you can see from above, the relationship between delivery with\n{@link IShoppingOrder order} (or {@link IShoppingOrderGood good}) is not 1: 1 or\nN: 1, but M: N. Entity `IShoppingDelivery` has been designed to represent such\nrelationship, by referencing target stocks or goods through subsidiary entity\n{@link IShoppingDeliveryPiece}.\n\nAlso, delivery does not end with only one step. It has multiple processes like\nmanufacturing, planning, shipping and delivering. Those steps are represented by\nanother subsidiary entity {@link IShoppingDeliveryJourney}.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "title": "Primary Key",
                        "description": "Primary Key.",
                        "type": "string",
                        "format": "uuid"
                      },
                      "seller": {
                        "title": "Seller who've delivered the goods",
                        "description": "Seller information.\n\n`IShoppingSeller` is an entity that embodies a person who registers\n{@link IShoppingSale sales} to operate selling activities, with\n{@link IShoppingMember membership} joining.\n\nFor reference, unlike {@link IShoppingCustomer customers} which can\nparticipate even without membership joining, seller must join membership\nto operate sales. Also, seller must do the\n{@link IShoppingCitizen real-name and mobile authentication}, too.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "title": "Primary Key",
                            "description": "Primary Key.",
                            "type": "string",
                            "format": "uuid"
                          },
                          "created_at": {
                            "title": "Creation tmie of record",
                            "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up.",
                            "type": "string",
                            "format": "date-time"
                          }
                        },
                        "required": [
                          "id",
                          "created_at"
                        ]
                      },
                      "journeys": {
                        "title": "List of journeys of the delivery",
                        "description": "List of journeys of the delivery.",
                        "type": "array",
                        "items": {
                          "description": "Journey of delivery.\n\n`IShoppingDeliveryJourney` is a subsidiary entity of {@link IShoppingDelivery},\ndescribing each journey of the delivery. For reference, the word journey\nmeans each step of the delivery process, such as preparing, shipping, and\ndelivering {@link IShoppingOrderGood goods} to the\n{@link IShoppingCustomer customer}.",
                          "type": "object",
                          "properties": {
                            "id": {
                              "title": "Primary Key",
                              "description": "Primary Key.",
                              "type": "string",
                              "format": "uuid"
                            },
                            "created_at": {
                              "title": "Creation time of the record",
                              "description": "Creation time of the record.",
                              "type": "string",
                              "format": "date-time"
                            },
                            "deleted_at": {
                              "title": "Deletion time of the record",
                              "description": "Deletion time of the record.",
                              "oneOf": [
                                {
                                  "type": "null"
                                },
                                {
                                  "type": "string",
                                  "format": "date-time"
                                }
                              ]
                            },
                            "type": {
                              "title": "Type of journey",
                              "description": "Type of journey.\n\n- preparing\n- manufacturing\n- shipping\n- delivering",
                              "oneOf": [
                                {
                                  "const": "preparing"
                                },
                                {
                                  "const": "manufacturing"
                                },
                                {
                                  "const": "shipping"
                                },
                                {
                                  "const": "delivering"
                                }
                              ]
                            },
                            "title": {
                              "title": "Title of journey",
                              "description": "Title of journey.",
                              "oneOf": [
                                {
                                  "type": "null"
                                },
                                {
                                  "type": "string"
                                }
                              ]
                            },
                            "description": {
                              "title": "Description of journey",
                              "description": "Description of journey.",
                              "oneOf": [
                                {
                                  "type": "null"
                                },
                                {
                                  "type": "string"
                                }
                              ]
                            },
                            "started_at": {
                              "title": "Start time of the journey",
                              "description": "Start time of the journey.",
                              "oneOf": [
                                {
                                  "type": "null"
                                },
                                {
                                  "type": "string",
                                  "format": "date-time"
                                }
                              ]
                            },
                            "completed_at": {
                              "title": "Completion time of the journey",
                              "description": "Completion time of the journey.",
                              "oneOf": [
                                {
                                  "type": "null"
                                },
                                {
                                  "type": "string",
                                  "format": "date-time"
                                }
                              ]
                            }
                          },
                          "required": [
                            "id",
                            "created_at",
                            "deleted_at",
                            "type",
                            "title",
                            "description",
                            "started_at",
                            "completed_at"
                          ]
                        }
                      },
                      "pieces": {
                        "title": "List of pieces of the delivery",
                        "description": "List of pieces of the delivery.",
                        "type": "array",
                        "items": {
                          "description": "Which stocks are delivered.\n\n`IShoppingDeliveryPiece` is a subsidiary entity of {@link IShoppingDelivery},\ndescribing how much quantity is delivered for each\n{@link IShoppingSaleUnitStock stock} in {@link IShoppingOrder}.\n\nFor reference, as an order can be delivered in multiple times due to volume\nor weight problem, it is possible to have multiple `IShoppingDeliveryPiece`\nrecords for a single stock.",
                          "type": "object",
                          "properties": {
                            "id": {
                              "title": "Primary Key",
                              "description": "Primary Key.",
                              "type": "string",
                              "format": "uuid"
                            },
                            "publish_id": {
                              "title": "Target order's {@link IShoppingOrderPublish.id}",
                              "description": "Target order's {@link IShoppingOrderPublish.id}.",
                              "type": "string",
                              "format": "uuid"
                            },
                            "good_id": {
                              "title": "Target good's {@link IShoppingOrderGood.id}",
                              "description": "Target good's {@link IShoppingOrderGood.id}.",
                              "type": "string",
                              "format": "uuid"
                            },
                            "stock_id": {
                              "title": "Target stock's {@link IShoppingSaleUnitStock.id}",
                              "description": "Target stock's {@link IShoppingSaleUnitStock.id}.",
                              "type": "string",
                              "format": "uuid"
                            },
                            "quantity": {
                              "title": "Quantity of the stock",
                              "description": "Quantity of the stock.\n\nIt can be precision value to express split shipping.",
                              "type": "number",
                              "minimum": 0
                            }
                          },
                          "required": [
                            "id",
                            "publish_id",
                            "good_id",
                            "stock_id",
                            "quantity"
                          ]
                        },
                        "minItems": 1
                      },
                      "shippers": {
                        "title": "List of shippers of the delivery",
                        "description": "List of shippers of the delivery.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid"
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "company": {
                              "oneOf": [
                                {
                                  "type": "null"
                                },
                                {
                                  "type": "string"
                                }
                              ]
                            },
                            "name": {
                              "type": "string"
                            },
                            "mobile": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "created_at",
                            "company",
                            "name",
                            "mobile"
                          ]
                        }
                      },
                      "state": {
                        "title": "State of the delivery",
                        "description": "State of the delivery.",
                        "oneOf": [
                          {
                            "const": "none"
                          },
                          {
                            "const": "underway"
                          },
                          {
                            "const": "preparing"
                          },
                          {
                            "const": "manufacturing"
                          },
                          {
                            "const": "shipping"
                          },
                          {
                            "const": "delivering"
                          },
                          {
                            "const": "arrived"
                          }
                        ]
                      },
                      "created_at": {
                        "title": "Creation time of the record",
                        "description": "Creation time of the record.",
                        "type": "string",
                        "format": "date-time"
                      }
                    },
                    "required": [
                      "id",
                      "seller",
                      "journeys",
                      "pieces",
                      "shippers",
                      "state",
                      "created_at"
                    ]
                  }
                },
                "state": {
                  "title": "State of the order, about the deliveries",
                  "description": "State of the order, about the deliveries.",
                  "oneOf": [
                    {
                      "const": "none"
                    },
                    {
                      "const": "underway"
                    },
                    {
                      "const": "preparing"
                    },
                    {
                      "const": "manufacturing"
                    },
                    {
                      "const": "shipping"
                    },
                    {
                      "const": "delivering"
                    },
                    {
                      "const": "arrived"
                    }
                  ]
                },
                "id": {
                  "title": "Primary Key",
                  "description": "Primary Key.",
                  "type": "string",
                  "format": "uuid"
                },
                "created_at": {
                  "title": "Creation time of the record",
                  "description": "Creation time of the record.",
                  "type": "string",
                  "format": "date-time"
                },
                "paid_at": {
                  "title": "Time when the order was paid",
                  "description": "Time when the order was paid.",
                  "oneOf": [
                    {
                      "type": "null"
                    },
                    {
                      "type": "string",
                      "format": "date-time"
                    }
                  ]
                },
                "cancelled_at": {
                  "title": "Time when the payment was cancelled",
                  "description": "Time when the payment was cancelled.",
                  "oneOf": [
                    {
                      "type": "null"
                    },
                    {
                      "type": "string",
                      "format": "date-time"
                    }
                  ]
                },
                "address": {
                  "title": "Address where the {@link IShoppingOrderGood goods} to be delivered",
                  "description": "The address information.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "Primary Key",
                      "description": "Primary Key.",
                      "type": "string",
                      "format": "uuid"
                    },
                    "created_at": {
                      "title": "Creation time of record",
                      "description": "Creation time of record.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "mobile": {
                      "title": "Mobile number to contact",
                      "description": "Mobile number to contact.",
                      "type": "string",
                      "pattern": "^[0-9]*$"
                    },
                    "name": {
                      "title": "Representative name of the address",
                      "description": "Representative name of the address.\n\nSometimes be receiver's name, and sometimes be place name.",
                      "type": "string"
                    },
                    "country": {
                      "title": "Country name",
                      "description": "Country name.",
                      "type": "string"
                    },
                    "province": {
                      "title": "Province name",
                      "description": "Province name.",
                      "type": "string"
                    },
                    "city": {
                      "title": "City name",
                      "description": "City name.",
                      "type": "string"
                    },
                    "department": {
                      "title": "Department name",
                      "description": "Department name.",
                      "type": "string"
                    },
                    "possession": {
                      "title": "Detailed address containing street name, building number, and room number",
                      "description": "Detailed address containing street name, building number, and room number.",
                      "type": "string"
                    },
                    "zip_code": {
                      "title": "Zip code, or postal code",
                      "description": "Zip code, or postal code.",
                      "type": "string"
                    },
                    "special_note": {
                      "title": "Special description if required",
                      "description": "Special description if required.",
                      "oneOf": [
                        {
                          "type": "null"
                        },
                        {
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "created_at",
                    "mobile",
                    "name",
                    "country",
                    "province",
                    "city",
                    "department",
                    "possession",
                    "zip_code",
                    "special_note"
                  ]
                }
              },
              "required": [
                "deliveries",
                "state",
                "id",
                "created_at",
                "paid_at",
                "cancelled_at",
                "address"
              ],
              "description": "Order completion and payment information.\n\n`IShoppingOrderPublish` is an entity that embodies the series of processes\nin which a {@link IShoppingCustomer customer} pays for his or her\n{@link IShoppingOrder order}, thereby completing the order. And only after\nthe order is {@link paid_at completed}, can the {@link IShoppingSeller seller}\nrecognize that the customer has purchased his product.\n\nBy the way, please note that just because the `IShoppingOrderPublish` record\nexists, it does not mean that the payment has been completed. Of course, with\n\"credit cards\" and \"Google Pay\", payment application and payment occur at the\nsame time. However, there are some cases where payment is made after the\npayment application, such as \"bank transfer\" or \"virtual account payment\".\nTherefore, to see the completion of payment, be sure to check the\n{@link paid_at} property.\n\nIn addition, even after payment has been made, there may be cases where it is\nsuddenly cancelled, so please be aware of this as well."
            }
          ]
        },
        "created_at": {
          "title": "Creation time of the record",
          "description": "Creation time of the record.",
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "name",
        "customer",
        "goods",
        "price",
        "publish",
        "created_at"
      ]
    },
    "success": true,
    "arguments": {
      "type": {
        "host": "http://127.0.0.1:37001",
        "headers": {
          "Authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0YWJsZSI6InNob3BwaW5nX2N1c3RvbWVycyIsImlkIjoiMjVlYzg3ZjctODE1ZC00YjU3LTk1NzYtYzk1Mzk4NGJjMjhmIiwicmVhZG9ubHkiOmZhbHNlLCJleHBpcmVkX2F0IjoiMjAyNC0xMi0xM1QwOTo0MjoxMi41MzlaIiwicmVmcmVzaGFibGVfdW50aWwiOiIyMDI0LTEyLTI3VDA2OjQyOjEyLjUzOVoiLCJpYXQiOjE3MzQwNzIxMzJ9.zWZrU-d1bSW-MawmSo2RYRPk_73xtR_PxfFUrEpDJkc"
        }
      },
      "properties": "d81d15a2-911d-4049-a56d-8355844c0009"
    },
    "value": {
      "id": "d81d15a2-911d-4049-a56d-8355844c0009",
      "name": "Stanley Tumbler Collection and 3 more goods",
      "customer": {
        "type": "customer",
        "member": {
          "citizen": {
            "id": "552ac832-7852-48ae-9919-95e07bb53c4a",
            "created_at": "2024-12-13T06:42:12.562Z",
            "mobile": "01011387079",
            "name": "agijp mgqjxv"
          },
          "seller": null,
          "administrator": null,
          "id": "91711abe-14a6-4b3e-8a09-b86f1eaef7a5",
          "nickname": "yequwvg czzid",
          "emails": [
            {
              "id": "65eeceda-1a74-424c-96c0-713855c89cb2",
              "value": "5fiouhttyq7e170v@nestia.io",
              "created_at": "2024-12-13T06:42:12.624Z"
            }
          ],
          "created_at": "2024-12-13T06:42:12.624Z"
        },
        "citizen": {
          "id": "552ac832-7852-48ae-9919-95e07bb53c4a",
          "created_at": "2024-12-13T06:42:12.562Z",
          "mobile": "01011387079",
          "name": "agijp mgqjxv"
        },
        "id": "25ec87f7-815d-4b57-9576-c953984bc28f",
        "channel": {
          "id": "2323f4bd-21ad-45b7-ae3b-cadd84dcc935",
          "created_at": "2024-12-13T06:42:10.908Z",
          "code": "samchon",
          "name": "Samchon Shopping Mall"
        },
        "external_user": null,
        "href": "http://127.0.0.1/TestAutomation",
        "referrer": "http://127.0.0.1/NodeJS",
        "ip": "127.0.0.1",
        "created_at": "2024-12-13T06:42:12.535Z"
      },
      "goods": [
        {
          "id": "cc465192-724b-4d96-a644-4a13b1730ab8",
          "commodity": {
            "id": "9f77d5b5-aa22-4820-8123-30c579cd3ff0",
            "sale": {
              "section": {
                "id": "a01c572c-3199-4929-ac67-ba7c31b2c808",
                "code": "general",
                "name": "General",
                "created_at": "2024-12-13T06:42:11.124Z"
              },
              "seller": {
                "type": "seller",
                "member": {
                  "id": "a853492c-70b4-487f-9648-0f6109a0ad69",
                  "nickname": "Robot",
                  "emails": [
                    {
                      "id": "81ea73c4-b41e-4022-9384-d51d3215797e",
                      "value": "robot@nestia.io",
                      "created_at": "2024-12-13T06:42:11.227Z"
                    }
                  ],
                  "created_at": "2024-12-13T06:42:11.227Z"
                },
                "customer": {
                  "id": "aeb8583b-8bd9-4d29-adea-78779b405046",
                  "channel": {
                    "id": "2323f4bd-21ad-45b7-ae3b-cadd84dcc935",
                    "created_at": "2024-12-13T06:42:10.908Z",
                    "code": "samchon",
                    "name": "Samchon Shopping Mall"
                  },
                  "external_user": null,
                  "href": "http://127.0.0.1/TestAutomation",
                  "referrer": "http://127.0.0.1/NodeJS",
                  "ip": "127.0.0.1",
                  "created_at": "2024-12-13T06:42:11.258Z"
                },
                "citizen": {
                  "id": "43aedfea-6b2c-4c18-9f69-60373c9580dd",
                  "created_at": "2024-12-13T06:42:11.157Z",
                  "mobile": "01012345678",
                  "name": "Robot"
                },
                "id": "addccb32-ac48-460e-9624-d9809da19d99",
                "created_at": "2024-12-13T06:42:11.241Z"
              },
              "id": "ef43459e-edb6-4b2c-bce5-c74cc815a4f4",
              "snapshot_id": "e13727ff-a31b-4460-ab6f-72e1dd3e1e2c",
              "latest": true,
              "content": {
                "id": "f2a6a47e-f72c-44b6-88ac-27ebbfa1eed0",
                "title": "Stanley Tumbler Collection",
                "thumbnails": [
                  {
                    "id": "c47319f2-bd60-49f5-8703-773a593e0775",
                    "created_at": "2024-12-13T06:42:12.111Z",
                    "name": "stanley-tumbler-collection-thumbnail",
                    "extension": "jpeg",
                    "url": "https://serpapi.com/searches/673d71322c566d56d9c20ceb/images/ce9a07f2aa831dbec8bb1c287299706e24a52a8e0c119fa162041805038957a7.jpeg"
                  }
                ]
              },
              "channels": [
                {
                  "categories": [
                    {
                      "parent": null,
                      "id": "19f9099e-3a2f-4894-a2c7-36d8c2d7d9d7",
                      "code": "accessories",
                      "parent_id": null,
                      "name": "Accessories",
                      "created_at": "2024-12-13T06:42:11.060Z"
                    },
                    {
                      "parent": null,
                      "id": "e82fb84b-d443-441b-a140-9f45bd73e0ca",
                      "code": "others",
                      "parent_id": null,
                      "name": "Others",
                      "created_at": "2024-12-13T06:42:11.116Z"
                    }
                  ],
                  "id": "2323f4bd-21ad-45b7-ae3b-cadd84dcc935",
                  "created_at": "2024-12-13T06:42:10.908Z",
                  "code": "samchon",
                  "name": "Samchon Shopping Mall"
                }
              ],
              "tags": [
                "Stanley",
                "Tumbler",
                "Drinkware",
                "Eco-Friendly"
              ],
              "units": [
                {
                  "stocks": [
                    {
                      "id": "6711956d-8aec-488f-b5ce-bfb060c262b3",
                      "name": "Classic Tumbler - 24 oz Polar White",
                      "price": {
                        "nominal": 60000,
                        "real": 54000
                      },
                      "quantity": 1,
                      "inventory": {
                        "income": 2000,
                        "outcome": 1
                      },
                      "choices": [
                        {
                          "id": "403b57c0-1b4d-46a5-b5a1-2de2073dd2ce",
                          "option": {
                            "id": "ecc25b78-a2e7-456a-a9e9-a0628855d2ff",
                            "type": "select",
                            "name": "Capacity",
                            "variable": true
                          },
                          "candidate": {
                            "id": "2242ef1f-aff2-432a-8ff3-2de6e155f039",
                            "name": "24 oz"
                          },
                          "value": null
                        },
                        {
                          "id": "956bac55-940e-4a31-9bc5-3a56a5d53ba3",
                          "option": {
                            "id": "377c03e7-3da2-4082-a3a3-db735247ef58",
                            "type": "select",
                            "name": "Color",
                            "variable": true
                          },
                          "candidate": {
                            "id": "34d16f7d-c322-42a4-b3fd-053aa28ea199",
                            "name": "Polar White"
                          },
                          "value": null
                        }
                      ]
                    }
                  ],
                  "id": "496ed199-3bf8-4de6-a38e-faf9267de621",
                  "name": "Classic Tumbler",
                  "primary": true,
                  "required": true
                },
                {
                  "stocks": [
                    {
                      "id": "9810c724-f965-4e06-87cd-971a5f4788c3",
                      "name": "Adventure Quencher Tumbler",
                      "price": {
                        "nominal": 70000,
                        "real": 64000
                      },
                      "quantity": 1,
                      "inventory": {
                        "income": 5000,
                        "outcome": 1
                      },
                      "choices": []
                    }
                  ],
                  "id": "36a2127c-9ed2-4adb-a116-1de93f7fb1ce",
                  "name": "Adventure Quencher Tumbler",
                  "primary": false,
                  "required": false
                },
                {
                  "stocks": [
                    {
                      "id": "c42c4acb-d77f-4b4c-8d5c-3d78532271f7",
                      "name": "Accessories Set",
                      "price": {
                        "nominal": 20000,
                        "real": 18000
                      },
                      "quantity": 1,
                      "inventory": {
                        "income": 10000,
                        "outcome": 1
                      },
                      "choices": []
                    }
                  ],
                  "id": "6aa653da-6ec2-4c9f-83a1-3e63958ef0d8",
                  "name": "Accessories Set",
                  "primary": false,
                  "required": false
                }
              ],
              "created_at": "2024-12-13T06:42:12.111Z",
              "updated_at": "2024-12-13T06:42:12.111Z",
              "paused_at": null,
              "suspended_at": null,
              "opened_at": "2024-12-13T06:42:12.108Z",
              "closed_at": null
            },
            "orderable": false,
            "pseudo": false,
            "volume": 1,
            "price": {
              "nominal": 150000,
              "real": 136000
            },
            "created_at": "2024-12-13T06:42:13.156Z"
          },
          "volume": 1,
          "price": {
            "cash": 120801.8523878437,
            "deposit": 1574.529667149059,
            "mileage": 23.61794500723589,
            "ticket": 13600,
            "nominal": 150000,
            "real": 136000
          },
          "state": "delivering",
          "confirmed_at": null
        },
        {
          "id": "28f4795b-b5d3-4d9a-8aa2-fcfd92e8777a",
          "commodity": {
            "id": "dc2835cf-f179-4294-8246-0f43a70e6a12",
            "sale": {
              "section": {
                "id": "a01c572c-3199-4929-ac67-ba7c31b2c808",
                "code": "general",
                "name": "General",
                "created_at": "2024-12-13T06:42:11.124Z"
              },
              "seller": {
                "type": "seller",
                "member": {
                  "id": "a853492c-70b4-487f-9648-0f6109a0ad69",
                  "nickname": "Robot",
                  "emails": [
                    {
                      "id": "81ea73c4-b41e-4022-9384-d51d3215797e",
                      "value": "robot@nestia.io",
                      "created_at": "2024-12-13T06:42:11.227Z"
                    }
                  ],
                  "created_at": "2024-12-13T06:42:11.227Z"
                },
                "customer": {
                  "id": "aeb8583b-8bd9-4d29-adea-78779b405046",
                  "channel": {
                    "id": "2323f4bd-21ad-45b7-ae3b-cadd84dcc935",
                    "created_at": "2024-12-13T06:42:10.908Z",
                    "code": "samchon",
                    "name": "Samchon Shopping Mall"
                  },
                  "external_user": null,
                  "href": "http://127.0.0.1/TestAutomation",
                  "referrer": "http://127.0.0.1/NodeJS",
                  "ip": "127.0.0.1",
                  "created_at": "2024-12-13T06:42:11.258Z"
                },
                "citizen": {
                  "id": "43aedfea-6b2c-4c18-9f69-60373c9580dd",
                  "created_at": "2024-12-13T06:42:11.157Z",
                  "mobile": "01012345678",
                  "name": "Robot"
                },
                "id": "addccb32-ac48-460e-9624-d9809da19d99",
                "created_at": "2024-12-13T06:42:11.241Z"
              },
              "id": "2338cfa2-6e52-46e9-9d0c-a706425962e9",
              "snapshot_id": "bab8605c-d6a6-41e5-b3c8-0e7caf4b3fe0",
              "latest": true,
              "content": {
                "id": "32765e09-6001-4cdb-9db2-af3a9c018a17",
                "title": "Apple MacBook Pro",
                "thumbnails": [
                  {
                    "id": "fb222d61-315f-45c7-a276-ca7524452863",
                    "created_at": "2024-12-13T06:42:11.345Z",
                    "name": "apple-iphone-thumbnail",
                    "extension": "jpeg",
                    "url": "https://store.storeimages.cdn-apple.com/8756/as-images.apple.com/is/mbp14-spaceblack-gallery1-202410?wid=4000&hei=3074&fmt=jpeg&qlt=90&.v=1729264981617"
                  }
                ]
              },
              "channels": [
                {
                  "categories": [
                    {
                      "parent": null,
                      "id": "9b9b36f4-4e50-48ff-ac05-ee8588be0dbe",
                      "code": "electronics",
                      "parent_id": null,
                      "name": "Electronics",
                      "created_at": "2024-12-13T06:42:10.919Z"
                    },
                    {
                      "parent": {
                        "parent": null,
                        "id": "9b9b36f4-4e50-48ff-ac05-ee8588be0dbe",
                        "code": "electronics",
                        "parent_id": null,
                        "name": "Electronics",
                        "created_at": "2024-12-13T06:42:10.919Z"
                      },
                      "id": "ab794f96-49c0-4318-9ac8-91318b188e6c",
                      "code": "laptops",
                      "parent_id": "9b9b36f4-4e50-48ff-ac05-ee8588be0dbe",
                      "name": "Laptops",
                      "created_at": "2024-12-13T06:42:10.940Z"
                    },
                    {
                      "parent": {
                        "parent": {
                          "parent": null,
                          "id": "9b9b36f4-4e50-48ff-ac05-ee8588be0dbe",
                          "code": "electronics",
                          "parent_id": null,
                          "name": "Electronics",
                          "created_at": "2024-12-13T06:42:10.919Z"
                        },
                        "id": "ab794f96-49c0-4318-9ac8-91318b188e6c",
                        "code": "laptops",
                        "parent_id": "9b9b36f4-4e50-48ff-ac05-ee8588be0dbe",
                        "name": "Laptops",
                        "created_at": "2024-12-13T06:42:10.940Z"
                      },
                      "id": "183f6097-70dd-4333-8dc4-f0c0cf43fa69",
                      "code": "macbooks",
                      "parent_id": "ab794f96-49c0-4318-9ac8-91318b188e6c",
                      "name": "MacBooks",
                      "created_at": "2024-12-13T06:42:10.948Z"
                    }
                  ],
                  "id": "2323f4bd-21ad-45b7-ae3b-cadd84dcc935",
                  "created_at": "2024-12-13T06:42:10.908Z",
                  "code": "samchon",
                  "name": "Samchon Shopping Mall"
                }
              ],
              "tags": [
                "macbook",
                "apple",
                "laptop",
                "electronics",
                "professional"
              ],
              "units": [
                {
                  "stocks": [
                    {
                      "id": "6be68e95-2439-46a5-88f9-c1c9a11e0e1b",
                      "name": "MacBook Pro - Space Gray, 64GB, 512GB, English",
                      "price": {
                        "nominal": 3250000,
                        "real": 2925000
                      },
                      "quantity": 1,
                      "inventory": {
                        "income": 500,
                        "outcome": 1
                      },
                      "choices": [
                        {
                          "id": "d148e162-b71d-424f-a951-edb3bc261cca",
                          "option": {
                            "id": "75cb1035-c68b-4f02-8398-c6449cabd358",
                            "type": "select",
                            "name": "Color",
                            "variable": true
                          },
                          "candidate": {
                            "id": "3ff5a928-126d-417a-88da-d7130f4cef66",
                            "name": "Space Gray"
                          },
                          "value": null
                        },
                        {
                          "id": "3cb4a4b1-4808-4e77-a6fe-f90bf55ffbd6",
                          "option": {
                            "id": "41a6ae10-aad9-4099-8f4f-cd47e9184ccc",
                            "type": "select",
                            "name": "RAM",
                            "variable": true
                          },
                          "candidate": {
                            "id": "1b4a3a48-17a6-4b42-808e-536323841c42",
                            "name": "64GB"
                          },
                          "value": null
                        },
                        {
                          "id": "245b3c2f-3973-465d-a7c4-27472b6358f9",
                          "option": {
                            "id": "9335f715-05ce-499c-8720-f770de65a934",
                            "type": "select",
                            "name": "SSD",
                            "variable": true
                          },
                          "candidate": {
                            "id": "b2276623-d8b6-4380-841c-48785b11a8a4",
                            "name": "512GB"
                          },
                          "value": null
                        },
                        {
                          "id": "cc8cbbc0-468a-4c63-bb49-d7a84e2a832b",
                          "option": {
                            "id": "642f45f4-2604-4ee6-aab5-ffce81831688",
                            "type": "select",
                            "name": "Keyboard Language",
                            "variable": true
                          },
                          "candidate": {
                            "id": "761726dc-0fc3-412f-a115-10e9f08fd6c5",
                            "name": "English"
                          },
                          "value": null
                        }
                      ]
                    }
                  ],
                  "id": "f6825138-1e94-42ef-90b2-f27d1ea5581c",
                  "name": "MacBook M3 Pro 14inch Entity",
                  "primary": true,
                  "required": true
                },
                {
                  "stocks": [
                    {
                      "id": "fc7552bb-2a74-44fe-891a-e5af66444694",
                      "name": "Warranty Program",
                      "price": {
                        "nominal": 100000,
                        "real": 89000
                      },
                      "quantity": 1,
                      "inventory": {
                        "income": 10000,
                        "outcome": 1
                      },
                      "choices": []
                    }
                  ],
                  "id": "461232cc-bd5b-48b8-a693-f2888ebb9266",
                  "name": "Warranty Program",
                  "primary": false,
                  "required": false
                },
                {
                  "stocks": [
                    {
                      "id": "6aa2fef3-d488-4f8c-8989-8b479f22bb74",
                      "name": "Magnetic Keyboard",
                      "price": {
                        "nominal": 200000,
                        "real": 169000
                      },
                      "quantity": 1,
                      "inventory": {
                        "income": 8000,
                        "outcome": 1
                      },
                      "choices": []
                    }
                  ],
                  "id": "f6ea807d-484f-4a37-be51-92cbb9fdc119",
                  "name": "Magnetic Keyboard",
                  "primary": false,
                  "required": false
                }
              ],
              "created_at": "2024-12-13T06:42:11.347Z",
              "updated_at": "2024-12-13T06:42:11.346Z",
              "paused_at": null,
              "suspended_at": null,
              "opened_at": "2024-12-13T06:42:11.340Z",
              "closed_at": null
            },
            "orderable": false,
            "pseudo": false,
            "volume": 1,
            "price": {
              "nominal": 3550000,
              "real": 3183000
            },
            "created_at": "2024-12-13T06:42:13.112Z"
          },
          "volume": 1,
          "price": {
            "cash": 2827296.295224313,
            "deposit": 36850.94066570188,
            "mileage": 552.7641099855282,
            "ticket": 318300,
            "nominal": 3550000,
            "real": 3183000
          },
          "state": "delivering",
          "confirmed_at": null
        },
        {
          "id": "f8f5797c-33b2-44d8-8cef-b96f4020f404",
          "commodity": {
            "id": "c276d7b6-91ec-4db8-a8c3-4687626efaf5",
            "sale": {
              "section": {
                "id": "a01c572c-3199-4929-ac67-ba7c31b2c808",
                "code": "general",
                "name": "General",
                "created_at": "2024-12-13T06:42:11.124Z"
              },
              "seller": {
                "type": "seller",
                "member": {
                  "id": "a853492c-70b4-487f-9648-0f6109a0ad69",
                  "nickname": "Robot",
                  "emails": [
                    {
                      "id": "81ea73c4-b41e-4022-9384-d51d3215797e",
                      "value": "robot@nestia.io",
                      "created_at": "2024-12-13T06:42:11.227Z"
                    }
                  ],
                  "created_at": "2024-12-13T06:42:11.227Z"
                },
                "customer": {
                  "id": "aeb8583b-8bd9-4d29-adea-78779b405046",
                  "channel": {
                    "id": "2323f4bd-21ad-45b7-ae3b-cadd84dcc935",
                    "created_at": "2024-12-13T06:42:10.908Z",
                    "code": "samchon",
                    "name": "Samchon Shopping Mall"
                  },
                  "external_user": null,
                  "href": "http://127.0.0.1/TestAutomation",
                  "referrer": "http://127.0.0.1/NodeJS",
                  "ip": "127.0.0.1",
                  "created_at": "2024-12-13T06:42:11.258Z"
                },
                "citizen": {
                  "id": "43aedfea-6b2c-4c18-9f69-60373c9580dd",
                  "created_at": "2024-12-13T06:42:11.157Z",
                  "mobile": "01012345678",
                  "name": "Robot"
                },
                "id": "addccb32-ac48-460e-9624-d9809da19d99",
                "created_at": "2024-12-13T06:42:11.241Z"
              },
              "id": "6b0c6399-17f6-420e-a693-c453c8fd155d",
              "snapshot_id": "fae10058-fb6b-4a87-bbc9-4e1cf1746a5d",
              "latest": true,
              "content": {
                "id": "5cb7834c-6867-4553-bdea-072d986a9435",
                "title": "Apple MacBook Pro",
                "thumbnails": [
                  {
                    "id": "cbb4e2a3-19bc-47d9-941e-5394fe49540a",
                    "created_at": "2024-12-13T06:42:11.584Z",
                    "name": "apple-macbook-pro-thumbnail",
                    "extension": "png",
                    "url": "https://store.storeimages.cdn-apple.com/8756/as-images.apple.com/is/mbp14-spaceblack-gallery1-202410?wid=4000&hei=3074&fmt=jpeg&qlt=90&.v=1729264981617"
                  }
                ]
              },
              "channels": [
                {
                  "categories": [
                    {
                      "parent": null,
                      "id": "9b9b36f4-4e50-48ff-ac05-ee8588be0dbe",
                      "code": "electronics",
                      "parent_id": null,
                      "name": "Electronics",
                      "created_at": "2024-12-13T06:42:10.919Z"
                    },
                    {
                      "parent": {
                        "parent": {
                          "parent": null,
                          "id": "9b9b36f4-4e50-48ff-ac05-ee8588be0dbe",
                          "code": "electronics",
                          "parent_id": null,
                          "name": "Electronics",
                          "created_at": "2024-12-13T06:42:10.919Z"
                        },
                        "id": "ab794f96-49c0-4318-9ac8-91318b188e6c",
                        "code": "laptops",
                        "parent_id": "9b9b36f4-4e50-48ff-ac05-ee8588be0dbe",
                        "name": "Laptops",
                        "created_at": "2024-12-13T06:42:10.940Z"
                      },
                      "id": "183f6097-70dd-4333-8dc4-f0c0cf43fa69",
                      "code": "macbooks",
                      "parent_id": "ab794f96-49c0-4318-9ac8-91318b188e6c",
                      "name": "MacBooks",
                      "created_at": "2024-12-13T06:42:10.948Z"
                    }
                  ],
                  "id": "2323f4bd-21ad-45b7-ae3b-cadd84dcc935",
                  "created_at": "2024-12-13T06:42:10.908Z",
                  "code": "samchon",
                  "name": "Samchon Shopping Mall"
                }
              ],
              "tags": [],
              "units": [
                {
                  "stocks": [
                    {
                      "id": "b516162c-3a58-4997-8ebf-9054ff3b1397",
                      "name": "MacBook Pro (Silver, 16GB, 512GB, Korean)",
                      "price": {
                        "nominal": 2000000,
                        "real": 1800000
                      },
                      "quantity": 1,
                      "inventory": {
                        "income": 10000,
                        "outcome": 1
                      },
                      "choices": [
                        {
                          "id": "e9d063f3-d6e2-4871-a58a-b5b86d44518b",
                          "option": {
                            "id": "2a67e9ec-aed5-4d7e-a316-fa73602c6d41",
                            "type": "select",
                            "name": "Color",
                            "variable": true
                          },
                          "candidate": {
                            "id": "e70b406e-9bc6-41a4-bb1c-d92e69ce4b0b",
                            "name": "Silver"
                          },
                          "value": null
                        },
                        {
                          "id": "f7067a64-195f-4c60-be2c-0c0038b09e63",
                          "option": {
                            "id": "7433b627-940f-403f-bd4a-6a9107792c81",
                            "type": "select",
                            "name": "RAM",
                            "variable": true
                          },
                          "candidate": {
                            "id": "ec823002-ff99-4419-bdd4-6e880d7082eb",
                            "name": "16GB"
                          },
                          "value": null
                        },
                        {
                          "id": "f0a90d96-4994-42f4-8c5e-36c24635eb1d",
                          "option": {
                            "id": "487827f7-9e48-4c00-a24e-75c90b457953",
                            "type": "select",
                            "name": "SSD",
                            "variable": true
                          },
                          "candidate": {
                            "id": "cfc02936-1db5-4d3c-a43b-0825d394d4e2",
                            "name": "512GB"
                          },
                          "value": null
                        },
                        {
                          "id": "99c4b677-f44c-49be-99fa-dcea0d6f7f13",
                          "option": {
                            "id": "d5dcafea-3953-4ad5-b471-b45dcee2103b",
                            "type": "select",
                            "name": "Keyboard Language",
                            "variable": true
                          },
                          "candidate": {
                            "id": "6ad47447-c28e-4e98-9f44-d86f37b4222c",
                            "name": "Korean"
                          },
                          "value": null
                        }
                      ]
                    }
                  ],
                  "id": "bf0794e6-1c99-4a7d-be11-5e6a5bf690b0",
                  "name": "MacBook M3 Pro 14inch Entity",
                  "primary": false,
                  "required": true
                },
                {
                  "stocks": [
                    {
                      "id": "149fbf9b-f6fa-403a-8438-3a2d7ce8c0ca",
                      "name": "Warranty Program",
                      "price": {
                        "nominal": 100000,
                        "real": 89000
                      },
                      "quantity": 1,
                      "inventory": {
                        "income": 10000,
                        "outcome": 1
                      },
                      "choices": []
                    }
                  ],
                  "id": "aeb2a291-ec9e-4527-b3cd-d6d686676a58",
                  "name": "Warranty Program",
                  "primary": false,
                  "required": false
                },
                {
                  "stocks": [
                    {
                      "id": "f2548de0-2168-46b1-985d-a2b56c9e878e",
                      "name": "Magnetic Keyboard",
                      "price": {
                        "nominal": 200000,
                        "real": 169000
                      },
                      "quantity": 1,
                      "inventory": {
                        "income": 8000,
                        "outcome": 1
                      },
                      "choices": []
                    }
                  ],
                  "id": "54eb903a-eb2e-4d60-9ddc-786a47999dda",
                  "name": "Magnetic Keyboard",
                  "primary": false,
                  "required": false
                }
              ],
              "created_at": "2024-12-13T06:42:11.585Z",
              "updated_at": "2024-12-13T06:42:11.585Z",
              "paused_at": null,
              "suspended_at": null,
              "opened_at": "2024-12-13T06:42:11.580Z",
              "closed_at": null
            },
            "orderable": false,
            "pseudo": false,
            "volume": 1,
            "price": {
              "nominal": 2300000,
              "real": 2058000
            },
            "created_at": "2024-12-13T06:42:13.069Z"
          },
          "volume": 1,
          "price": {
            "cash": 1828016.266280753,
            "deposit": 23826.33863965268,
            "mileage": 357.3950795947902,
            "ticket": 205800,
            "nominal": 2300000,
            "real": 2058000
          },
          "state": "delivering",
          "confirmed_at": null
        },
        {
          "id": "d852835d-fb2d-4ec3-8cdc-e81ddc72ec3f",
          "commodity": {
            "id": "eb8b8bd3-0ccb-409f-b85a-d6314b76e3fd",
            "sale": {
              "section": {
                "id": "a01c572c-3199-4929-ac67-ba7c31b2c808",
                "code": "general",
                "name": "General",
                "created_at": "2024-12-13T06:42:11.124Z"
              },
              "seller": {
                "type": "seller",
                "member": {
                  "id": "a853492c-70b4-487f-9648-0f6109a0ad69",
                  "nickname": "Robot",
                  "emails": [
                    {
                      "id": "81ea73c4-b41e-4022-9384-d51d3215797e",
                      "value": "robot@nestia.io",
                      "created_at": "2024-12-13T06:42:11.227Z"
                    }
                  ],
                  "created_at": "2024-12-13T06:42:11.227Z"
                },
                "customer": {
                  "id": "aeb8583b-8bd9-4d29-adea-78779b405046",
                  "channel": {
                    "id": "2323f4bd-21ad-45b7-ae3b-cadd84dcc935",
                    "created_at": "2024-12-13T06:42:10.908Z",
                    "code": "samchon",
                    "name": "Samchon Shopping Mall"
                  },
                  "external_user": null,
                  "href": "http://127.0.0.1/TestAutomation",
                  "referrer": "http://127.0.0.1/NodeJS",
                  "ip": "127.0.0.1",
                  "created_at": "2024-12-13T06:42:11.258Z"
                },
                "citizen": {
                  "id": "43aedfea-6b2c-4c18-9f69-60373c9580dd",
                  "created_at": "2024-12-13T06:42:11.157Z",
                  "mobile": "01012345678",
                  "name": "Robot"
                },
                "id": "addccb32-ac48-460e-9624-d9809da19d99",
                "created_at": "2024-12-13T06:42:11.241Z"
              },
              "id": "601228f3-1314-4fbe-b460-918250e9ffa1",
              "snapshot_id": "fe375776-9933-4d97-a0c8-8d46aca01bd1",
              "latest": true,
              "content": {
                "id": "c4566bf9-2544-492d-88d7-0e769e9614f2",
                "title": "Leica M6 (2022 Reissue): The Return of a Legend",
                "thumbnails": [
                  {
                    "id": "62203ee2-c174-430c-aa79-a936d752a3ca",
                    "created_at": "2024-12-13T06:42:12.008Z",
                    "name": "leica-m6-thumbnail-2",
                    "extension": "webp",
                    "url": "https://leica-camera.com/sites/default/files/styles/r_media_fullscreen/public/2022-09/leica_m6_packaging_ambient_3840x2160.jpg.webp?itok=lig4kkiB"
                  },
                  {
                    "id": "ae058b66-9388-442d-bdc8-934aae2f0686",
                    "created_at": "2024-12-13T06:42:12.008Z",
                    "name": "leica-m6-thumbnail-1",
                    "extension": "png",
                    "url": "https://leica-camera.com/sites/default/files/styles/r_media_medium_desktop_4_3/public/pm-84724-10557_leica_m6_black_front_1.png?itok=SpVHc0cq"
                  }
                ]
              },
              "channels": [
                {
                  "categories": [
                    {
                      "parent": {
                        "parent": null,
                        "id": "9b9b36f4-4e50-48ff-ac05-ee8588be0dbe",
                        "code": "electronics",
                        "parent_id": null,
                        "name": "Electronics",
                        "created_at": "2024-12-13T06:42:10.919Z"
                      },
                      "id": "c2c9da5a-7d89-40f6-9021-0255073b87eb",
                      "code": "cameras",
                      "parent_id": "9b9b36f4-4e50-48ff-ac05-ee8588be0dbe",
                      "name": "Cameras",
                      "created_at": "2024-12-13T06:42:11.008Z"
                    }
                  ],
                  "id": "2323f4bd-21ad-45b7-ae3b-cadd84dcc935",
                  "created_at": "2024-12-13T06:42:10.908Z",
                  "code": "samchon",
                  "name": "Samchon Shopping Mall"
                }
              ],
              "tags": [
                "Leica M6",
                "Film Camera",
                "Photography",
                "Analog",
                "Camera Reissue",
                "Classic Design",
                "Collector's Item",
                "Camera Lens"
              ],
              "units": [
                {
                  "stocks": [
                    {
                      "id": "f1f8f95b-4b18-44c0-90b2-786900e3c29f",
                      "name": "Leica M6 Body (Black Paint Finish)",
                      "price": {
                        "nominal": 7200000,
                        "real": 6899000
                      },
                      "quantity": 1,
                      "inventory": {
                        "income": 500,
                        "outcome": 1
                      },
                      "choices": [
                        {
                          "id": "cefa06cb-6f19-46b5-a11e-9bb849f89a00",
                          "option": {
                            "id": "5b9e6404-6a29-4ed2-afe1-76951c0f6383",
                            "type": "select",
                            "name": "Finish",
                            "variable": true
                          },
                          "candidate": {
                            "id": "b95602d5-804c-450f-ae98-ab1f5446f056",
                            "name": "Black Paint Finish"
                          },
                          "value": null
                        }
                      ]
                    }
                  ],
                  "id": "2e54e102-92d8-4f15-8f35-5ab43b0217e1",
                  "name": "Leica M6 Body (2022 Reissue)",
                  "primary": true,
                  "required": true
                },
                {
                  "stocks": [
                    {
                      "id": "fde6c137-5aa1-4817-8e33-b68ae5404ec4",
                      "name": "50mm Summilux Lens",
                      "price": {
                        "nominal": 5200000,
                        "real": 4999000
                      },
                      "quantity": 1,
                      "inventory": {
                        "income": 1000,
                        "outcome": 1
                      },
                      "choices": []
                    }
                  ],
                  "id": "b46d4dd3-162c-4eb2-9968-dffa70910631",
                  "name": "50mm Summilux Lens",
                  "primary": false,
                  "required": false
                }
              ],
              "created_at": "2024-12-13T06:42:12.008Z",
              "updated_at": "2024-12-13T06:42:12.008Z",
              "paused_at": null,
              "suspended_at": null,
              "opened_at": "2024-12-13T06:42:12.005Z",
              "closed_at": null
            },
            "orderable": false,
            "pseudo": false,
            "volume": 1,
            "price": {
              "nominal": 12400000,
              "real": 11898000
            },
            "created_at": "2024-12-13T06:42:13.028Z"
          },
          "volume": 1,
          "price": {
            "cash": 10568385.58610709,
            "deposit": 137748.1910274964,
            "mileage": 2066.222865412446,
            "ticket": 1189800,
            "nominal": 12400000,
            "real": 11898000
          },
          "state": "delivering",
          "confirmed_at": null
        }
      ],
      "price": {
        "ticket_payments": [],
        "cash": 15344500,
        "deposit": 200000,
        "mileage": 3000,
        "ticket": 1727500,
        "nominal": 18400000,
        "real": 17275000
      },
      "publish": {
        "deliveries": [
          {
            "id": "1cf2f7da-6e72-4b33-8b74-960c6b9522a6",
            "seller": {
              "id": "addccb32-ac48-460e-9624-d9809da19d99",
              "created_at": "2024-12-13T06:42:11.241Z"
            },
            "journeys": [
              {
                "id": "7fdd6e1c-2321-4e43-ac08-7b875206a0e3",
                "created_at": "2024-12-13T06:42:13.515Z",
                "deleted_at": null,
                "type": "preparing",
                "title": null,
                "description": null,
                "started_at": "2024-12-13T06:42:13.507Z",
                "completed_at": null
              },
              {
                "id": "d0b4b3c6-40f7-43dd-a251-43345b95f0f8",
                "created_at": "2024-12-13T06:42:13.515Z",
                "deleted_at": null,
                "type": "manufacturing",
                "title": null,
                "description": null,
                "started_at": "2024-12-13T06:42:13.507Z",
                "completed_at": null
              },
              {
                "id": "bdc9f9fb-c046-4f4e-af8b-bf67bbe64996",
                "created_at": "2024-12-13T06:42:13.515Z",
                "deleted_at": null,
                "type": "delivering",
                "title": null,
                "description": null,
                "started_at": "2024-12-13T06:42:13.507Z",
                "completed_at": null
              }
            ],
            "pieces": [
              {
                "id": "0bb046cd-2903-49a3-b50c-4c9dd57a90d7",
                "publish_id": "afc3dbcd-3d9e-4dde-b3fb-a36235b8aa61",
                "good_id": "d852835d-fb2d-4ec3-8cdc-e81ddc72ec3f",
                "stock_id": "f1f8f95b-4b18-44c0-90b2-786900e3c29f",
                "quantity": 1
              },
              {
                "id": "f5662441-3080-482f-9810-9ddda2cefb76",
                "publish_id": "afc3dbcd-3d9e-4dde-b3fb-a36235b8aa61",
                "good_id": "d852835d-fb2d-4ec3-8cdc-e81ddc72ec3f",
                "stock_id": "fde6c137-5aa1-4817-8e33-b68ae5404ec4",
                "quantity": 1
              },
              {
                "id": "7875384e-7579-4927-8860-fe405f07a5b4",
                "publish_id": "afc3dbcd-3d9e-4dde-b3fb-a36235b8aa61",
                "good_id": "f8f5797c-33b2-44d8-8cef-b96f4020f404",
                "stock_id": "b516162c-3a58-4997-8ebf-9054ff3b1397",
                "quantity": 1
              },
              {
                "id": "faaa13d0-a466-45ac-8831-19728210e44d",
                "publish_id": "afc3dbcd-3d9e-4dde-b3fb-a36235b8aa61",
                "good_id": "f8f5797c-33b2-44d8-8cef-b96f4020f404",
                "stock_id": "149fbf9b-f6fa-403a-8438-3a2d7ce8c0ca",
                "quantity": 1
              },
              {
                "id": "eb4fac2e-ca94-4575-bd2e-146583b3594b",
                "publish_id": "afc3dbcd-3d9e-4dde-b3fb-a36235b8aa61",
                "good_id": "f8f5797c-33b2-44d8-8cef-b96f4020f404",
                "stock_id": "f2548de0-2168-46b1-985d-a2b56c9e878e",
                "quantity": 1
              },
              {
                "id": "48455683-d648-416c-bb0f-2d14fb249e26",
                "publish_id": "afc3dbcd-3d9e-4dde-b3fb-a36235b8aa61",
                "good_id": "28f4795b-b5d3-4d9a-8aa2-fcfd92e8777a",
                "stock_id": "6be68e95-2439-46a5-88f9-c1c9a11e0e1b",
                "quantity": 1
              },
              {
                "id": "fdadbbf2-47fa-40e1-bd43-2ac96aa3a798",
                "publish_id": "afc3dbcd-3d9e-4dde-b3fb-a36235b8aa61",
                "good_id": "28f4795b-b5d3-4d9a-8aa2-fcfd92e8777a",
                "stock_id": "fc7552bb-2a74-44fe-891a-e5af66444694",
                "quantity": 1
              },
              {
                "id": "fe8a771f-ee05-4161-bba6-30444dc62ef4",
                "publish_id": "afc3dbcd-3d9e-4dde-b3fb-a36235b8aa61",
                "good_id": "28f4795b-b5d3-4d9a-8aa2-fcfd92e8777a",
                "stock_id": "6aa2fef3-d488-4f8c-8989-8b479f22bb74",
                "quantity": 1
              },
              {
                "id": "c66b0f43-ee3e-4242-b286-8398473ae703",
                "publish_id": "afc3dbcd-3d9e-4dde-b3fb-a36235b8aa61",
                "good_id": "cc465192-724b-4d96-a644-4a13b1730ab8",
                "stock_id": "6711956d-8aec-488f-b5ce-bfb060c262b3",
                "quantity": 1
              },
              {
                "id": "a242cd47-1cba-4b29-b2e1-694f9a9be882",
                "publish_id": "afc3dbcd-3d9e-4dde-b3fb-a36235b8aa61",
                "good_id": "cc465192-724b-4d96-a644-4a13b1730ab8",
                "stock_id": "9810c724-f965-4e06-87cd-971a5f4788c3",
                "quantity": 1
              },
              {
                "id": "f9f1b93b-4a25-4bbe-8974-014b0bffb367",
                "publish_id": "afc3dbcd-3d9e-4dde-b3fb-a36235b8aa61",
                "good_id": "cc465192-724b-4d96-a644-4a13b1730ab8",
                "stock_id": "c42c4acb-d77f-4b4c-8d5c-3d78532271f7",
                "quantity": 1
              }
            ],
            "shippers": [],
            "state": "delivering",
            "created_at": "2024-12-13T06:42:13.515Z"
          }
        ],
        "state": "delivering",
        "id": "afc3dbcd-3d9e-4dde-b3fb-a36235b8aa61",
        "created_at": "2024-12-13T06:42:13.469Z",
        "paid_at": "2024-12-13T06:42:13.469Z",
        "cancelled_at": null,
        "address": {
          "id": "c51db9e5-d070-42cf-9ae4-0c5a697e261b",
          "created_at": "2024-12-13T06:42:13.469Z",
          "mobile": "01011387079",
          "name": "agijp mgqjxv",
          "country": "Korea",
          "province": "Seoul",
          "city": "Seoul",
          "department": "Seocho-gu Seocho-dong X-Apartment",
          "possession": "1-101",
          "zip_code": "12345",
          "special_note": null
        }
      },
      "created_at": "2024-12-13T06:42:13.227Z"
    }
  }
]